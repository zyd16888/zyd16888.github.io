{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/README.md","path":"README.md","modified":0,"renderable":0},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/404.html","path":"404.html","modified":0,"renderable":0},{"_id":"themes/next6.4/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/favicon-16x16-next.ico","path":"images/favicon-16x16-next.ico","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/head.png","path":"images/head.png","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/favicon-48x48-next.ico","path":"images/favicon-48x48-next.ico","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/favicon-32x32-next.ico","path":"images/favicon-32x32-next.ico","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/apple-touch-icon-next.ico","path":"images/apple-touch-icon-next.ico","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/bookmark/LICENSE","path":"lib/bookmark/LICENSE","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/bookmark/README.md","path":"lib/bookmark/README.md","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/bookmark/package.json","path":"lib/bookmark/package.json","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/bookmark/bookmark.min.js","path":"lib/bookmark/bookmark.min.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/bookmark/index.js","path":"lib/bookmark/index.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/canvas-nest/LICENSE","path":"lib/canvas-nest/LICENSE","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/LICENSE","path":"lib/fancybox/LICENSE","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/README.md","path":"lib/fancybox/README.md","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/canvas-nest/README.md","path":"lib/canvas-nest/README.md","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/LICENSE","path":"lib/pace/LICENSE","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/README.md","path":"lib/pace/README.md","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/reading_progress/LICENSE","path":"lib/reading_progress/LICENSE","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/reading_progress/README.md","path":"lib/reading_progress/README.md","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/reading_progress/package.json","path":"lib/reading_progress/package.json","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/reading_progress/reading_progress.min.js","path":"lib/reading_progress/reading_progress.min.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/reading_progress/reading_progress.js","path":"lib/reading_progress/reading_progress.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pangu/LICENSE","path":"lib/pangu/LICENSE","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pangu/README.md","path":"lib/pangu/README.md","modified":0,"renderable":1},{"_id":"themes/next6.4/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/js/src/clicklove.js","path":"js/src/clicklove.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/background1.jpg","path":"images/background1.jpg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/js/src/Valine.min.js","path":"js/src/Valine.min.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pangu/dist/pangu.js.map","path":"lib/pangu/dist/pangu.js.map","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pangu/dist/pangu.js","path":"lib/pangu/dist/pangu.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pangu/dist/pangu.min.js","path":"lib/pangu/dist/pangu.min.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/background2.jpg","path":"images/background2.jpg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/js/src/av-min.js","path":"js/src/av-min.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/background6.jpg","path":"images/background6.jpg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/pangu/dist/pangu.min.js.map","path":"lib/pangu/dist/pangu.min.js.map","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/background5.jpg","path":"images/background5.jpg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/background4.jpg","path":"images/background4.jpg","modified":0,"renderable":1},{"_id":"themes/next6.4/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next6.4/source/images/background3.jpg","path":"images/background3.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/README.md","hash":"6ed35df17d59a83196bba7e60c4fedd307cbd137","modified":1582178819354},{"_id":"source/CNAME","hash":"e9d2af314350bd5792abe8ab16cb76e636595ec4","modified":1582178819353},{"_id":"source/404.html","hash":"9eb955271b03c72a4bb23a06b60e4ecb4070a880","modified":1582178819352},{"_id":"themes/next6.4/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1533635112771},{"_id":"themes/next6.4/.gitignore","hash":"0378adb9c2dc4855b3198184df4863cb30e4059c","modified":1533635112783},{"_id":"themes/next6.4/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1533635112769},{"_id":"themes/next6.4/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1533635112768},{"_id":"themes/next6.4/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1533635112784},{"_id":"themes/next6.4/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1533635112770},{"_id":"themes/next6.4/.travis.yml","hash":"fb9ac54e875f6ea16d5c83db497f6bd70ae83198","modified":1533635112784},{"_id":"themes/next6.4/LICENSE.md","hash":"f0190c7d83a98464549a6b3a51bb206148d88e1b","modified":1533635112785},{"_id":"themes/next6.4/README.md","hash":"2d142fa1bdfab00abf8e99f972346e15572c9b12","modified":1533635112786},{"_id":"themes/next6.4/_config.yml","hash":"a124d29ffe74cb21056268e237c440fffb6fae7f","modified":1593939852271},{"_id":"themes/next6.4/bower.json","hash":"72d7f5ef565cca1da30ba64fc04075b9ac99e319","modified":1533635112788},{"_id":"themes/next6.4/package.json","hash":"735ace0b7fe3b1171c220c5424fcd4fe3aadd7f8","modified":1533635112893},{"_id":"themes/next6.4/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1533635112789},{"_id":"themes/next6.4/gulpfile.coffee","hash":"67eaf2515100971f6195b60eeebbfe5e8de895ab","modified":1533635112809},{"_id":"source/_posts/JavaScript学习笔记.md","hash":"e2b204dfb163a7c005ae5227ab3b558bba9878ea","modified":1582178819362},{"_id":"source/_posts/Gradle版本问题.md","hash":"2c0ddce31802b3b41b022caaf0c7494d3a85f1fa","modified":1582178819361},{"_id":"source/_posts/Genymotion 解决虚拟镜像下载速度特别慢的问题.md","hash":"772b4bb61fa78d0d172363c7edd6bf478cde95b9","modified":1582178819359},{"_id":"source/_posts/Java学习笔记（day01）.md","hash":"1b27ac50354747cc637fbe7d88fffb8a98bc5bff","modified":1582178819377},{"_id":"source/_posts/GitHub pages访问加速.md","hash":"0d7734628c054a32923aa89b9556bbd4f5e95cc0","modified":1582178819360},{"_id":"source/_posts/Java学习笔记（day03）.md","hash":"74ba22de2a9c8bbf73afc3291e64b907baa442a3","modified":1582178819379},{"_id":"source/_posts/Java学习笔记（day02）.md","hash":"e12956d3dea42f67da19f6d7a316c87031687a9e","modified":1582178819377},{"_id":"source/_posts/Java学习笔记（day04）.md","hash":"266b6fefca5639af63e8a48871d8fc77dc21507a","modified":1582178819381},{"_id":"source/_posts/Java学习笔记（day06）.md","hash":"0efa173d18c30229bac531cf9fa2cbf7b80b644e","modified":1582178819384},{"_id":"source/_posts/Java学习笔记（day05）.md","hash":"a9bc0e659ef6993cfd63fe18514bfc118c7d1f20","modified":1582178819382},{"_id":"source/_posts/Java学习笔记（day07）.md","hash":"69b743955315a981f82058809cfb864d70336c2c","modified":1582178819386},{"_id":"source/_posts/Java学习笔记（day08）.md","hash":"f1818a17179e51a7bdb00786a34b52b20636b817","modified":1582178819388},{"_id":"source/_posts/Java学习笔记（day10）.md","hash":"82542e723df97fdc39880eb638d8fab755e3a663","modified":1582178819390},{"_id":"source/_posts/Java学习笔记（day11）.md","hash":"7ca1d6c14ca437e79bae85e693dfe7dca7e2592c","modified":1582178819391},{"_id":"source/_posts/Java面试题.md","hash":"934d6e2132e7d66629f58d0234101ed6a5965311","modified":1582178819393},{"_id":"source/_posts/MySQL定时弹出一个taskeng.md","hash":"8fd1783a3113652fc80e3f6dca08169038aaaba0","modified":1582178819393},{"_id":"source/_posts/Java集成开发环境安装（IntelliJ IDEA）.md","hash":"31ebed45b0adbee63ac30a624458198e1b1503d6","modified":1582178819392},{"_id":"source/_posts/JavaWeb复习.md","hash":"f4c2fad739fea5308e27c74bd55b692b778c7e10","modified":1582178819370},{"_id":"source/_posts/Speed Of Sound.md","hash":"f29dbac968a951a61f2400c111777c26fb29ae0e","modified":1582178819395},{"_id":"source/_posts/Python基本数据类型.md","hash":"aafba5ff9e8bb67838c60ac8c5fe6189372edae4","modified":1582178819394},{"_id":"source/_posts/Ubuntu双系统安装.md","hash":"01861638d6f8c7e7479713e570c6df79374fd59f","modified":1582178819395},{"_id":"source/_posts/about页面不显示右侧文章目录sidebar.md","hash":"76003b22b9449e11b3659b3f05e5b2824f2537a7","modified":1582178819397},{"_id":"source/_posts/VS code配置开发环境.md","hash":"a832404f5a09cf09514d5f49950d9e0ec83248c7","modified":1582178819396},{"_id":"source/_posts/aplayer 音乐播放器.md","hash":"5e8af7398438c98921e8b2da3b754f24b7692e5d","modified":1582178819397},{"_id":"source/_posts/docker及docker-compose的安装配置加速服务.md","hash":"662574b021fc57ab0377a05f1fd78dfd77b62286","modified":1582178819398},{"_id":"source/_posts/hello-world.md","hash":"affc149be8539bb858cbcaf499dd202579500ffe","modified":1582178819399},{"_id":"source/_posts/hexo页面布局修改.md","hash":"e550573eda089ee5058393b16181806aa4a17788","modified":1582178819405},{"_id":"source/_posts/hexo折腾记.md","hash":"3819bfee4cb3b5c8a5891ff293f9c485a876cb00","modified":1582178819402},{"_id":"source/_posts/jupyter notebook美化与配置自动补全.md","hash":"fe5cbda8dcd8d427c6a37751a01d16ffec201d48","modified":1582178819406},{"_id":"source/_posts/hexo的HttpRequestException问题.md","hash":"41fd037e064ae005039a2aebceb555230f482843","modified":1582178819403},{"_id":"source/_posts/linux常用命令.md","hash":"5cf3a44d72e7087ddd033dc81a4ecfb884d15fef","modified":1598248870788},{"_id":"source/_posts/linux折腾小记.md","hash":"f443a2fd93eb4d74a22779b0cfb7274119cec029","modified":1598248280094},{"_id":"source/_posts/kvm+Linux远程桌面.md","hash":"5df751292e9efe15fefff22358e1518b5ba2d311","modified":1582178819407},{"_id":"source/_posts/hexo优化基于NexT6.4.md","hash":"63c7a1c23eb256bb286c9d4f09cfcec097bfd950","modified":1582178819401},{"_id":"source/_posts/markdown语法.md","hash":"61a57e9c47de0f03478fdf5fa7fb8437217a5bf7","modified":1582178819408},{"_id":"source/_posts/nginx配置.md","hash":"cc1d7b7098e8da055004bc0d5e6c074970153a08","modified":1598248314666},{"_id":"source/_posts/request模块.md","hash":"2acec2fa630f65912fdd658c698fae4ad09364ee","modified":1582178819409},{"_id":"source/_posts/vsCode中午乱码解决方法.md","hash":"ffbf32ab0d65d679a40b857c08ed500d770d63c1","modified":1582178819412},{"_id":"source/_posts/test.md","hash":"4550c57e5c53f80c30261dea77ce3dc04443f7a5","modified":1582178819410},{"_id":"source/_posts/ubuntu系统折腾记.md","hash":"1fca3dea909ac45aa39ba05b9295b6da99342f12","modified":1582178819412},{"_id":"source/_posts/win10权限继承问题.md","hash":"b4373c4f699fe262f67e08331e657ac457e50eb1","modified":1582178819413},{"_id":"source/_posts/中国穷人，越来越配不上梦想了？.md","hash":"4345eaac5a93793fa9e1355cc771ed0e62098702","modified":1582178819414},{"_id":"source/_posts/中国大学mooc视频下载.md","hash":"6f5351ea420b2b154f82aa75d2e82562be3dfd4e","modified":1582178819413},{"_id":"source/_posts/使用RIP协议实现不同网段之间的通信（模拟实验）.md","hash":"899e56b11383683c305b0471762e198821f8e625","modified":1582178819415},{"_id":"source/_posts/免流的原理.md","hash":"e1a7abe1bea381e02ec14f5ba7945dc9d0b85aef","modified":1582178819415},{"_id":"source/_posts/将Java编译成可执行程序.md","hash":"bf47620783a1d777c88d1ac3b8924fbca2bb55f7","modified":1582178819416},{"_id":"source/_posts/安装Genymotion并关联到Android Studio.md","hash":"43b8780d9e987edc245d3f3ecdd84a5b6c326a66","modified":1586013044705},{"_id":"source/_posts/搭建ftp服务器并t映射到外网（实验）.md","hash":"6b59406ca55be89fbdddadb3cbbc5fda47d061f5","modified":1582178819417},{"_id":"source/_posts/效率启动器Wox优雅地使用电脑.md","hash":"277979cd8bdabe47b1a4649fcc40e22c579f9475","modified":1582178819418},{"_id":"source/_posts/数据提取方法.md","hash":"bd0a421a6512931b7a15b31863584f984f762a6b","modified":1582178819419},{"_id":"source/_posts/是谁杀死了20岁的中国男生.md","hash":"c01d79500769267f1f2ed3595ebb9e51d136db4f","modified":1582178819420},{"_id":"source/_posts/将python编译成可执行程序.md","hash":"be99ad643f402ce99ab2b9bbbd71717e7eb5c90a","modified":1582178819417},{"_id":"source/_posts/模板.md","hash":"649119e8e9aac8a0c47fb740e707012fe6329454","modified":1582178819420},{"_id":"source/_posts/汇编基础知识.md","hash":"e1782d796aa20929cce3f79ea0335cac74bb94b6","modified":1582178819423},{"_id":"source/_posts/汇编语言课后习题-单元测试1.md","hash":"65d18789f7a423fdb89c0906966df44fd0fbf5ce","modified":1582178819424},{"_id":"source/_posts/深入理解python语言（绘制蟒蛇）.md","hash":"37ab66b551d42dc0dd01f97d52611edcf18fa71f","modified":1582178819425},{"_id":"source/_posts/毁掉一个中国年轻人有多容易.md","hash":"d960df5c47f0dc12d32b89177d146910bcc5408b","modified":1582178819421},{"_id":"source/_posts/爬虫基础知识和软件准备.md","hash":"2576cb14ab2b50294f6564756891cc0951ed51ee","modified":1582178819426},{"_id":"source/_posts/计算机网络-名词解释.md","hash":"3d6de1ab3128eec12896c85b22a002885f88a921","modified":1582178819428},{"_id":"source/_posts/网络安全复习.md","hash":"e55949d1ce85c57ed6b45127b8160c733f76a78f","modified":1582178819427},{"_id":"source/_posts/计算机操作系统笔记.md","hash":"f0cdc17f1bcf182573ee35d91add11a5c9a5614f","modified":1582178819427},{"_id":"source/_posts/计算机网络考研复习整理.md","hash":"511d5de0e659d76493b548b61929871838616a6b","modified":1582178819431},{"_id":"source/_posts/走亲戚送礼.md","hash":"122fa57cadc5d3369edfa0e413a2c77c45699d37","modified":1582178819433},{"_id":"source/_posts/计算机网络复习.md","hash":"9dd1e17fe15a5f7a16e8a0bff0a3739bd6d6985a","modified":1582178819429},{"_id":"source/_posts/记录一下这些年买的课.md","hash":"5cd337ebb3463d33469f8e9c1b2643d7286a1af8","modified":1596857619507},{"_id":"source/_posts/链圈币圈与我们的信仰比特币.md","hash":"c0fc0a8502d3380c9a9229f58d51e9fe42b05b05","modified":1582178819434},{"_id":"source/_posts/走迷宫游戏.md","hash":"d04ffb99a96277a6a3ea26ae0f38cf6406616b7a","modified":1582178819434},{"_id":"source/_posts/闲语.md","hash":"2e5c879c1ed915faa8be4ecdb7908fd0c16d31d3","modified":1582178819436},{"_id":"source/_posts/防火墙控制不同网段通信并访问外网.md","hash":"58887f46a83e1c0bba195ec0b790482c35259d8b","modified":1582178819437},{"_id":"source/about/index.md","hash":"aa006ae5d9a2c4af34a1cc5d245b0a3b595f2101","modified":1582178819439},{"_id":"source/_posts/面试知识点.md","hash":"e17dd0043ddaaf19befd64d45dfa376e3b2894d2","modified":1598249449681},{"_id":"themes/next6.4/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1533635112736},{"_id":"source/tags/index.md","hash":"b3565061b3cb42ddfee09587c97fa83d3757b412","modified":1582178819443},{"_id":"source/categories/index.md","hash":"effaeb41cad6bdca9ea841f76e0a9dfd9b6d997d","modified":1582178819441},{"_id":"themes/next6.4/.git/config","hash":"7f8b507977a695e25b27d4c2e8aaed71410536bf","modified":1533635112749},{"_id":"themes/next6.4/.git/ORIG_HEAD","hash":"ef394d14489e6e0f269eed649db814d5bccd9566","modified":1551451642905},{"_id":"themes/next6.4/.git/index","hash":"96490d87bc654bf7b1787dde3e67977bc8d00456","modified":1551512463139},{"_id":"themes/next6.4/.git/COMMIT_EDITMSG","hash":"f0eee419a20b460d9863270660391a2a3d71189d","modified":1551451668105},{"_id":"themes/next6.4/.git/packed-refs","hash":"39fd2328b8e566a5259f327f84cd2acf5927b64f","modified":1533635112730},{"_id":"themes/next6.4/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1533635107187},{"_id":"themes/next6.4/.github/CODE_OF_CONDUCT.md","hash":"22f2ccc5522563b67c8663849fc1d6cbae93a8ff","modified":1533635112772},{"_id":"themes/next6.4/.github/ISSUE_TEMPLATE.md","hash":"1e212fe229bd659726b4a3bcf4b5b14e0310ba3a","modified":1533635112774},{"_id":"source/top/index.md","hash":"58e1b0baf692c14335712d7aa62a6de85a6f2746","modified":1587721587279},{"_id":"themes/next6.4/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1533635112776},{"_id":"themes/next6.4/.github/CONTRIBUTING.md","hash":"40b0fd9fdb8586fab98e23f713940e7a2f80e2f9","modified":1533635112773},{"_id":"themes/next6.4/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1533635112782},{"_id":"themes/next6.4/docs/AGPL3.md","hash":"f463f95b169d64983f59fa6f3e4b6760290a0e6b","modified":1533635112790},{"_id":"themes/next6.4/.github/PULL_REQUEST_TEMPLATE.md","hash":"36201119490a04107c8179b10202548a9d0e5e60","modified":1533635112775},{"_id":"themes/next6.4/docs/AUTHORS.md","hash":"51a0a13da55ff3d596970b2f9ab4531c6b2211f2","modified":1533635112792},{"_id":"themes/next6.4/docs/DATA-FILES.md","hash":"9a1895c0a0db705c4c48f512e86917f9af1ec3fb","modified":1533635112793},{"_id":"themes/next6.4/docs/ALGOLIA-SEARCH.md","hash":"1dada3c3404445a00367882b8f97cdf092b7943d","modified":1533635112791},{"_id":"themes/next6.4/docs/LICENSE","hash":"5b702310012d480b40529fd10cf1872f687277a0","modified":1533635112796},{"_id":"themes/next6.4/docs/INSTALLATION.md","hash":"b74ef6fedf76cdb156e2265759ee0a789ddd49cc","modified":1533635112794},{"_id":"themes/next6.4/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"f2fd611a84dd6f9ed5395b63e187e29e9effbcd3","modified":1533635112795},{"_id":"themes/next6.4/docs/UPDATE-FROM-5.1.X.md","hash":"c9f2ed8e15c137b1885d9ca8b7197d9f457971e9","modified":1533635112798},{"_id":"themes/next6.4/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1533635112811},{"_id":"themes/next6.4/languages/de.yml","hash":"641e49587d41bb87e4d5932dc3d975754ded7953","modified":1533635112810},{"_id":"themes/next6.4/docs/MATH.md","hash":"34a46ca9a05b4570903beaadd4807e6759afb52e","modified":1533635112797},{"_id":"themes/next6.4/languages/en.yml","hash":"d66b8b48840443a4f9c72c7696a21e292f685a47","modified":1533635112812},{"_id":"themes/next6.4/languages/fr.yml","hash":"ebcd1f188af8c3f5ef1f0923e794c839fbfae2d4","modified":1533635112813},{"_id":"themes/next6.4/languages/it.yml","hash":"4e3adeb10c0fa627935d69ae1783ce0894f5dee5","modified":1533635112814},{"_id":"themes/next6.4/languages/ja.yml","hash":"576af89e8228f5c852a1ddd7276a128a6bcbe785","modified":1533635112815},{"_id":"themes/next6.4/languages/id.yml","hash":"9709a4dbacc56a1571a96b139b872128d6959e90","modified":1533635112813},{"_id":"themes/next6.4/languages/pt-BR.yml","hash":"dc09e290e908744ca28e093dbdd859ca2a20290e","modified":1533635112817},{"_id":"themes/next6.4/languages/nl.yml","hash":"060efc260c1c529469d739d97dcee79683e8f411","modified":1533635112816},{"_id":"themes/next6.4/languages/pt.yml","hash":"53e2a52b9d5dc20c04080acd4f5b954e8699780f","modified":1533635112818},{"_id":"themes/next6.4/languages/ko.yml","hash":"33e065ceb21590b8eb32430a69e76c2f057eb758","modified":1533635112816},{"_id":"themes/next6.4/languages/zh-CN.yml","hash":"09435fdcb08c37d2fc20a9e79cadf569eba5a6c7","modified":1533815708649},{"_id":"themes/next6.4/languages/tr.yml","hash":"6d2f53d3687a7a46c67c78ab47908accd8812add","modified":1533635112820},{"_id":"themes/next6.4/languages/vi.yml","hash":"e2b3b18359ab41d58c64b2002acfedd60a7505a4","modified":1533635112821},{"_id":"themes/next6.4/languages/ru.yml","hash":"720b92a9ec075b68737d296b1f29ad8e01151c85","modified":1533635112819},{"_id":"themes/next6.4/languages/zh-HK.yml","hash":"c22113c4a6c748c18093dae56da5a9e8c5b963cd","modified":1533635112822},{"_id":"themes/next6.4/languages/zh-TW.yml","hash":"dbf4dd87716babb2db4f5332fae9ec190a6f636a","modified":1533635112823},{"_id":"themes/next6.4/layout/category.swig","hash":"f0e3338bfa5efb205d2c28e635e9611f1fff3b55","modified":1533635112888},{"_id":"themes/next6.4/layout/_layout.swig","hash":"a03fd08cb3a8832eb2a821cb842c85d1eb8a3619","modified":1534257410597},{"_id":"themes/next6.4/layout/archive.swig","hash":"4b53070008775ecfd03953bd1b4adfcb0fabcaac","modified":1533635112888},{"_id":"themes/next6.4/layout/index.swig","hash":"f75252d0497e586cd8964fe7f7d10fb5ea018317","modified":1533712051365},{"_id":"themes/next6.4/scripts/helpers.js","hash":"7849f9b9a86fc82d6e186e32a5e26e1f27c49b47","modified":1533635112894},{"_id":"themes/next6.4/layout/page.swig","hash":"fa1be9c77be5b925c5e50b06307be684d5b03423","modified":1533730850365},{"_id":"themes/next6.4/layout/schedule.swig","hash":"d99b9eff0cff38caf095445f27c08aaf11a5b862","modified":1533635112891},{"_id":"themes/next6.4/scripts/merge-configs.js","hash":"5f96f63e86825fd7028c2522e4111103e261a758","modified":1533635112894},{"_id":"themes/next6.4/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1533635112896},{"_id":"themes/next6.4/layout/tag.swig","hash":"7cda2822e50b9fee9848a6b81e6c2d1aca830aeb","modified":1533635112892},{"_id":"themes/next6.4/layout/post.swig","hash":"0554f42f90f4a524666c2b520be30b689c1d6a87","modified":1533635112890},{"_id":"themes/next6.4/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1533635113037},{"_id":"source/_posts.zip","hash":"320be47bf29baa517496957bc3ef0ab399a27d38","modified":1582178819357},{"_id":"themes/next6.4/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1533635113039},{"_id":"themes/next6.4/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1533635113038},{"_id":"themes/next6.4/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1533635112988},{"_id":"source/_posts/test/JavaScript简介.md","hash":"51a899ab174cd090431055a4ffbbed3f4b211b9f","modified":1582178819411},{"_id":"source/_posts/test/redis.md","hash":"1dd327571769d5723077a2d1eb7d6191770dc34e","modified":1587511439735},{"_id":"source/_posts/test/笔试题目（非算法）.html","hash":"9408b76fc3dcde1e586f02c0fa0bef82750e15e5","modified":1584009159132},{"_id":"source/_posts/test/前端vue项目配置与运行.md","hash":"e5a0c45e0ddf13dd74ff3fe73afaee7372b1a2ba","modified":1598488526827},{"_id":"source/_posts/test/面试知识点.html","hash":"96b1c7a52903fc928389f42c2636a32e1b18ac00","modified":1584009136325},{"_id":"source/_posts/test/笔试题目（非算法）.md","hash":"a3c14a542b0dcb8fcc0daaa0903fd470814a1e3b","modified":1587168994466},{"_id":"themes/next6.4/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1533635107188},{"_id":"themes/next6.4/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1533635107188},{"_id":"themes/next6.4/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1533635107190},{"_id":"themes/next6.4/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1533635107191},{"_id":"themes/next6.4/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1533635107189},{"_id":"themes/next6.4/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1533635107457},{"_id":"themes/next6.4/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1533635107458},{"_id":"themes/next6.4/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1533635107459},{"_id":"themes/next6.4/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1533635107460},{"_id":"themes/next6.4/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1533635107463},{"_id":"themes/next6.4/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1533635107460},{"_id":"themes/next6.4/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1533635107462},{"_id":"themes/next6.4/.git/logs/HEAD","hash":"8ea902007824aaa62732efcbefffa817a8bcf6f9","modified":1551451668128},{"_id":"themes/next6.4/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"9b512cb820627fcc45c9f77c7a122aa99e021bd5","modified":1533635112803},{"_id":"themes/next6.4/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"e771c5b745608c6fb5ae2fa1c06c61b3699627ec","modified":1533635112802},{"_id":"themes/next6.4/docs/zh-CN/CONTRIBUTING.md","hash":"6ea741f380dc3e90661d12db7e115a94b77643a4","modified":1533635112804},{"_id":"themes/next6.4/docs/zh-CN/DATA-FILES.md","hash":"67f4a987e7db0ab1ce1ea4c311f2961df07b6681","modified":1533635112804},{"_id":"themes/next6.4/docs/zh-CN/INSTALLATION.md","hash":"baca12cc24be082f1db28c7f283493569666321c","modified":1533635112805},{"_id":"themes/next6.4/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"7214fcd1b5830e62b3ac0836ad2d1b0fa391ae12","modified":1533635112806},{"_id":"themes/next6.4/docs/zh-CN/MATH.md","hash":"4d68054b062b3c8404b146a155d9624d2d25dd9b","modified":1533635112807},{"_id":"themes/next6.4/docs/ru/DATA-FILES.md","hash":"a51de08657f5946f4028b11373280ddc04639525","modified":1533635112799},{"_id":"themes/next6.4/docs/zh-CN/README.md","hash":"74547943ee6cba2e2bbbd67d306ee4de9db1a2bd","modified":1533635112807},{"_id":"themes/next6.4/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"2095d1214a4e519a1d31b67b41c89080fa3285d3","modified":1533635112808},{"_id":"themes/next6.4/docs/ru/INSTALLATION.md","hash":"7b2963daac19b0c14f98ebef375d5fbce8fc3f44","modified":1533635112799},{"_id":"themes/next6.4/docs/ru/UPDATE-FROM-5.1.X.md","hash":"1a4e41adcf5831057f3f7b3025ed4a5ef7c442b4","modified":1533635112801},{"_id":"themes/next6.4/layout/_custom/head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1533635112824},{"_id":"themes/next6.4/docs/ru/README.md","hash":"bbe7ac3ef6352b7fedbba2ab800915e33251adf8","modified":1533635112800},{"_id":"themes/next6.4/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1533635112825},{"_id":"themes/next6.4/layout/_partials/breadcrumb.swig","hash":"4b48fdbfe3bf41ddeda4ff74c1ff17ab9f15c14e","modified":1533635112833},{"_id":"themes/next6.4/layout/_custom/custom.swig","hash":"116b46084577b78ac4148d8ddbf97aa63443e03d","modified":1541225588994},{"_id":"themes/next6.4/layout/_partials/comments.swig","hash":"412d2a0e18a237e490e1b8bce5547558768b9da3","modified":1533635112834},{"_id":"themes/next6.4/layout/_custom/sidebar.swig","hash":"83fbdf9f98ae4f346b3354f9afced0bbb924378c","modified":1533722729728},{"_id":"themes/next6.4/layout/_partials/footer.swig","hash":"ec4f8a69dbb2d8ebab7ef28e342eae543eaee241","modified":1533635112835},{"_id":"themes/next6.4/layout/_partials/pagination.swig","hash":"914155d5d758306cff405beefd4a07973fd8fc77","modified":1533635112845},{"_id":"themes/next6.4/layout/_partials/page-header.swig","hash":"206cbd6ac9ca6a219a8516f59beae25b3c770199","modified":1533635112843},{"_id":"themes/next6.4/layout/_macro/passage-end-tag.swig","hash":"b81c4be451a1dbfab066e388748b51367513c383","modified":1533788946727},{"_id":"themes/next6.4/layout/_macro/post-collapse.swig","hash":"310570b8aecbefbf55841915a180f376e6204ed9","modified":1533693515085},{"_id":"themes/next6.4/layout/_macro/passage-index-image.swig","hash":"705a26395b207b243418c786e93ff63bbd4af829","modified":1533789495057},{"_id":"themes/next6.4/layout/_macro/post-copyright.swig","hash":"b22f3e9bdd3e0065da94f3503eb7df6942060949","modified":1533694319245},{"_id":"themes/next6.4/layout/_macro/post-related.swig","hash":"e8dfb86eb62b9c2bc1435d6d1afa95d3b4c7b931","modified":1533635112829},{"_id":"themes/next6.4/layout/_macro/sidebar.swig","hash":"65d2c01b9ac378ca2421727fd31aa763a87e8d8f","modified":1534248586488},{"_id":"themes/next6.4/layout/_macro/reward.swig","hash":"56733f92352b891b0bb1baca293f68f6c8928b0b","modified":1533635112831},{"_id":"themes/next6.4/layout/_macro/wechat-subscriber.swig","hash":"7a9b687087793bf5e218cbc345214f927fa5601a","modified":1533635112832},{"_id":"themes/next6.4/layout/_macro/post.swig","hash":"02f41f056d2b3eb0246e1a89141ef9a9a7554d9e","modified":1534413027198},{"_id":"themes/next6.4/layout/_third-party/github-banner.swig","hash":"736cb278fa09d3b4ed6f305b56353941ea918793","modified":1533635112875},{"_id":"themes/next6.4/layout/_third-party/bookmark.swig","hash":"ed62ea83d3f2c9db2ea57bf23a7d765ed82504c2","modified":1533635112868},{"_id":"themes/next6.4/layout/_third-party/exturl.swig","hash":"53861f78a1fb52e96a43cf6909e1530dcf6cbff8","modified":1533635112874},{"_id":"themes/next6.4/layout/_third-party/copy-code.swig","hash":"c62c37474c8de78cf34e54c6219b503ec28d9815","modified":1533635112873},{"_id":"themes/next6.4/layout/_third-party/needsharebutton.swig","hash":"debba9b7110f635204a15df148194d4c2fd2668b","modified":1533635112879},{"_id":"themes/next6.4/layout/_third-party/pangu.swig","hash":"ccf0035086e14dcefa24c2907301edf4c37d5448","modified":1533635112880},{"_id":"themes/next6.4/layout/_third-party/scroll-cookie.swig","hash":"a174d4a0c9188f9c4a2652f49bfa7a60ad0a83e3","modified":1533635112882},{"_id":"themes/next6.4/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1533635112881},{"_id":"themes/next6.4/layout/_scripts/boostrap.swig","hash":"27fb1d81151b9b79683e488579df19eee7e654d6","modified":1533635112852},{"_id":"themes/next6.4/layout/_scripts/noscript.swig","hash":"f8c7e729ad6e72b4c705a2c5d5041589c2b4cc52","modified":1533635112853},{"_id":"themes/next6.4/layout/_scripts/commons.swig","hash":"f544e21883d249d5a341c684c97bd25831008f07","modified":1533635112852},{"_id":"themes/next6.4/scripts/tags/button.js","hash":"510f3711a9c9d3e2a844250647d90e8359e7d130","modified":1533635112896},{"_id":"themes/next6.4/scripts/tags/center-quote.js","hash":"4519ab8e6898f2ee90d05cde060375462b937a7d","modified":1533635112897},{"_id":"themes/next6.4/scripts/tags/exturl.js","hash":"83e48148d2f4f8543f6833effa8a26eb0b60f2f0","modified":1533635112898},{"_id":"themes/next6.4/scripts/tags/full-image.js","hash":"ef2c2985a3edb9f69740740c5bc42d4b692c86fd","modified":1533635112899},{"_id":"themes/next6.4/scripts/tags/include-raw.js","hash":"ab4a82a7246265717556c7a42f897430340b88cf","modified":1533635112900},{"_id":"themes/next6.4/scripts/tags/group-pictures.js","hash":"2b969ca830862b2bc119b69ede4bd971e27a6ff8","modified":1533635112899},{"_id":"themes/next6.4/scripts/tags/label.js","hash":"bb502616bfabe85de5de903074ec6afe627f8413","modified":1533635112901},{"_id":"themes/next6.4/scripts/tags/note.js","hash":"bd3310a5890bded1bda9ba3ad6f98ee44ecb101a","modified":1533635112901},{"_id":"themes/next6.4/scripts/tags/tabs.js","hash":"2d257e26718d4011509fd6f530d2ea37e50e3e66","modified":1533635112902},{"_id":"themes/next6.4/layout/_scripts/vendors.swig","hash":"f134aeb8d5bee351e5277edb92ac694af314b75f","modified":1533635112857},{"_id":"themes/next6.4/source/css/main.styl","hash":"2a62e2a11e9cdcc69e538d856d6f9ce228a07c93","modified":1533635112987},{"_id":"themes/next6.4/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1533635112881},{"_id":"themes/next6.4/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1533635112989},{"_id":"themes/next6.4/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1533635112990},{"_id":"themes/next6.4/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1533635112988},{"_id":"themes/next6.4/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1533635112992},{"_id":"themes/next6.4/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1533635112991},{"_id":"themes/next6.4/source/images/favicon-16x16-next.ico","hash":"8a834aa09e23681cdf9883e469ae66c75bb7de6c","modified":1516704076168},{"_id":"themes/next6.4/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1533635112996},{"_id":"themes/next6.4/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1533635112994},{"_id":"themes/next6.4/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1533635112993},{"_id":"themes/next6.4/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1533635112995},{"_id":"themes/next6.4/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1533635112997},{"_id":"themes/next6.4/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1533635112998},{"_id":"themes/next6.4/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1533635112998},{"_id":"themes/next6.4/source/images/head.png","hash":"bc1a8567e91234d0cc84a2e8ef9e7ef03eafd94a","modified":1516615102698},{"_id":"themes/next6.4/source/images/favicon-48x48-next.ico","hash":"9196cbe3fdafe9fdb63dc5d1f8e2dcca816b5aee","modified":1516704082490},{"_id":"themes/next6.4/source/images/favicon-32x32-next.ico","hash":"bef23d3157a0963ad9ef7d55c16dadc0497ef288","modified":1516704078164},{"_id":"themes/next6.4/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1533635112997},{"_id":"themes/next6.4/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1533635113000},{"_id":"themes/next6.4/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1533635113002},{"_id":"themes/next6.4/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1533635112999},{"_id":"themes/next6.4/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1533635113001},{"_id":"themes/next6.4/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1533635113000},{"_id":"themes/next6.4/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1533635112855},{"_id":"themes/next6.4/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1533635112855},{"_id":"themes/next6.4/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1533635112962},{"_id":"themes/next6.4/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1533635112963},{"_id":"themes/next6.4/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1533635112964},{"_id":"themes/next6.4/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1533635112985},{"_id":"themes/next6.4/source/images/apple-touch-icon-next.ico","hash":"68ba846ba64c86d2ca4a5ce78de31f34a6b911bc","modified":1516703797427},{"_id":"themes/next6.4/.git/objects/09/cfe37397af91b13db469a94ecf573f8edc203a","hash":"7d22d05b9c6c147a0cfedc7c0127066957157283","modified":1533710998697},{"_id":"themes/next6.4/.git/objects/02/49d88fff455141b6095cf43ef51632204aa2bd","hash":"a6c5f5425292b03f90cee594dbbc5038bd193a68","modified":1533710918558},{"_id":"themes/next6.4/.git/objects/1e/3ea8c7dda499b5aa9ec1c9af1eb2776585b4b4","hash":"380e1f9bf5329c7e5eb986a06727ff61a439a61e","modified":1533710976829},{"_id":"themes/next6.4/.git/objects/04/236aff34f2c9eb009acf690a2a5e3ac221750b","hash":"1838db9d981f8a39651683470d8c35fdd1efdd05","modified":1533711312208},{"_id":"themes/next6.4/.git/objects/65/a0cd2388acf3a112e8599a8d5a26fc76e8a8b0","hash":"d5128fd4f9d1894d8af060f86f7abea7595f69c1","modified":1551451668110},{"_id":"themes/next6.4/.git/objects/32/08edef49e44d2a86fda1740e47560ff7451ea3","hash":"77f0e89bd0846f6521b2101606b0b3383a62caa5","modified":1533710924581},{"_id":"themes/next6.4/.git/objects/44/deab1e86fe40fbe3644c0835155f67f1e53322","hash":"92acec48c3ec7f160089f5f55ee7c36e0ba7a875","modified":1533710921311},{"_id":"themes/next6.4/.git/objects/32/cf736b48a33224a54b16ab16a9cd01f2a1fc40","hash":"91b8418d0b7c1037e45890c851bbeb5b0317d013","modified":1533710976874},{"_id":"themes/next6.4/.git/objects/8d/700e473f9469336f369cc1eb0f04febab61e7e","hash":"f66a1be0972869d56c7d6a36d244f88b3c6b1c8a","modified":1533710998656},{"_id":"themes/next6.4/.git/objects/6f/d4b87917ef1add1cbd32a8264fcf0982358ce8","hash":"3df0c691af359c4311f3db5c65ac43eda20b0fe2","modified":1533711312265},{"_id":"themes/next6.4/.git/objects/8d/1d332ae1dfd6908a4ee16989db5ce19d98e410","hash":"cba60bd33795c429e26b09446181f25395128c99","modified":1533710922853},{"_id":"themes/next6.4/.git/objects/96/bd6b7dec2dcb7461764270834968bd14553869","hash":"e62c630126425d86110b6cd221941bb2fb600fd5","modified":1533710998652},{"_id":"themes/next6.4/.git/objects/97/e35886a6a242ccc55ef5b3699cafeee9662e2c","hash":"3608e100bb0d9e0bcd8b99e8ce46cda6efda27fb","modified":1533710976846},{"_id":"themes/next6.4/.git/objects/a0/c4a9b75714195a8c15cadbe11c061e4119e625","hash":"90a41c20749797605270ae7f712076918d16a7aa","modified":1533710998665},{"_id":"themes/next6.4/.git/objects/b9/57a8f925683d696bd0d98eb647f534272f8400","hash":"d1e62667ad17e9ea7fed3ec3a2b16f53e54da1d1","modified":1533710976836},{"_id":"themes/next6.4/.git/objects/e7/a67af58a24015411ff27bed41cedf7095b11fe","hash":"4156f95861af03b4f4488d8eb5312da44727af1b","modified":1533711312214},{"_id":"themes/next6.4/.git/objects/f8/c85761588f206d863145d87aabbc793a68e4fd","hash":"a632f405186ee6478e3eaf41cb56f958af4dd06c","modified":1533711312225},{"_id":"themes/next6.4/.git/objects/cb/5efe8eccbb40a1c37693e16ee142a6252dd7e8","hash":"631689ea6fc57dfe195b54c7301d8df06e71031f","modified":1533711304511},{"_id":"themes/next6.4/.git/refs/heads/master","hash":"7081e41f127c704f404eb5a3b4e4f8007a376af4","modified":1551451668127},{"_id":"themes/next6.4/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1533635112836},{"_id":"themes/next6.4/layout/_partials/head/head-unique.swig","hash":"0b8349710caf9691741a457aa746add35245048e","modified":1533635112837},{"_id":"themes/next6.4/layout/_partials/head/head.swig","hash":"a277f0aa3a107e4f4c81c80488722362c2820715","modified":1536109140791},{"_id":"themes/next6.4/layout/_partials/head/password.swig","hash":"2ea6a7cb6aabae363fbfe29542f9cbfec130b7d6","modified":1536108357133},{"_id":"themes/next6.4/layout/_partials/header/index.swig","hash":"c909f6e96373c151dea325bcddfdd8c9522421b6","modified":1533635112840},{"_id":"themes/next6.4/layout/_partials/header/brand.swig","hash":"19050627bc23b0b2c2e65e7248c0f88468eb8ea5","modified":1533635112839},{"_id":"themes/next6.4/layout/_partials/header/menu.swig","hash":"f3ae3168801304af3d80ec3b84264e1d4201cb89","modified":1533635112841},{"_id":"themes/next6.4/layout/_partials/header/sub-menu.swig","hash":"3f11ae8e9084f39628cd2006931d39a2069b9dd6","modified":1533635112842},{"_id":"themes/next6.4/layout/_macro/menu/menu-item.swig","hash":"aab518204d3125e948796a9ba6b56b09cade2d92","modified":1533635112828},{"_id":"themes/next6.4/layout/_macro/menu/menu-badge.swig","hash":"4eb8e222dc337211efb0d3bbdb5e29af3e6ecdb8","modified":1533635112828},{"_id":"themes/next6.4/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1533635112849},{"_id":"themes/next6.4/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1533635112851},{"_id":"themes/next6.4/layout/_partials/search/index.swig","hash":"f6454c452b2e90a8c760321bce7e3dc6119b71fa","modified":1533635112846},{"_id":"themes/next6.4/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1533635112847},{"_id":"themes/next6.4/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1533635112848},{"_id":"themes/next6.4/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1533635112850},{"_id":"themes/next6.4/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1533635112847},{"_id":"themes/next6.4/layout/_third-party/comments/disqus.swig","hash":"4a2d2269f23e90c1311bd867d22def0b4a092bf1","modified":1533635112870},{"_id":"themes/next6.4/layout/_third-party/comments/index.swig","hash":"34cc66d4dbada2d561ba6f70fd9a75207c5adbd4","modified":1533635112871},{"_id":"themes/next6.4/layout/_third-party/comments/gitment.swig","hash":"292cdd1059b76d3d10486b71c99d9afb3e59ea44","modified":1533635112870},{"_id":"themes/next6.4/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1533635112858},{"_id":"themes/next6.4/layout/_third-party/comments/livere.swig","hash":"694483f2d853c65b87a6a70e38dbc40e40eb1332","modified":1533635112872},{"_id":"themes/next6.4/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1533635112869},{"_id":"themes/next6.4/layout/_third-party/analytics/busuanzi-counter.swig","hash":"1ce5fa218a44cf6e620583e9013e0b674dd6a989","modified":1538987044821},{"_id":"themes/next6.4/layout/_third-party/comments/valine.swig","hash":"41f67f7bf5221b7253cb35d614471dcb3b0b9c40","modified":1534045938681},{"_id":"themes/next6.4/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1533635112861},{"_id":"themes/next6.4/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1533635112862},{"_id":"themes/next6.4/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1533635112859},{"_id":"themes/next6.4/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1533635112860},{"_id":"themes/next6.4/layout/_third-party/analytics/google-analytics.swig","hash":"cfc932c5db04fef64cc56d3ba0b8ddf3a15a63bd","modified":1533635112863},{"_id":"themes/next6.4/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1533635112864},{"_id":"themes/next6.4/layout/_third-party/analytics/firestore.swig","hash":"d67d9a176a276cdab6f2bcb7eb3650fbca5459c4","modified":1533635112863},{"_id":"themes/next6.4/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1533635112867},{"_id":"themes/next6.4/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1533635112867},{"_id":"themes/next6.4/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1533635112866},{"_id":"themes/next6.4/layout/_third-party/math/katex.swig","hash":"860de4ce6fccc516d2f779a4b600a4214d8c18e2","modified":1533635112877},{"_id":"themes/next6.4/layout/_third-party/math/index.swig","hash":"30e9e55d9af2ced6e6b156a042026a8b480f0ab0","modified":1533635112877},{"_id":"themes/next6.4/layout/_third-party/analytics/lean-analytics.swig","hash":"809f6d31c24ee0012e12631f5893a79f69e7bc84","modified":1533635112865},{"_id":"themes/next6.4/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1533635112885},{"_id":"themes/next6.4/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1533635112887},{"_id":"themes/next6.4/layout/_third-party/math/mathjax.swig","hash":"c0c2fd87e71f0beb542aa50c0bc875da5aa5c44b","modified":1533635112878},{"_id":"themes/next6.4/layout/_scripts/pages/post-details.swig","hash":"580e9d9c4d8783ee6200d845ae16c98979bf1ea3","modified":1533635112854},{"_id":"themes/next6.4/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1533635112886},{"_id":"themes/next6.4/layout/_scripts/schemes/gemini.swig","hash":"c381f638315a007b1baf5fea879161001fe50cd0","modified":1533635112855},{"_id":"themes/next6.4/layout/_scripts/schemes/pisces.swig","hash":"c381f638315a007b1baf5fea879161001fe50cd0","modified":1533635112856},{"_id":"themes/next6.4/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1533635112962},{"_id":"themes/next6.4/source/css/_custom/custom.styl","hash":"7817ffdb3fdb65383b58dfc86a9dcce66803a497","modified":1552468041037},{"_id":"themes/next6.4/source/css/_mixins/Pisces.styl","hash":"8aa98ae349908736ba43196c42498fd5bdeb780a","modified":1533635112963},{"_id":"themes/next6.4/layout/_third-party/search/localsearch.swig","hash":"71c897f9b107dd0de1b7f649633cf583c206a9db","modified":1533635112885},{"_id":"themes/next6.4/source/css/_mixins/base.styl","hash":"0882d76333ab409e8d3362c284b91a0f0ae761ae","modified":1533724169156},{"_id":"themes/next6.4/source/css/_variables/Gemini.styl","hash":"8d6cf29f63c90364f4d3c336f7c9bb794b4c46cc","modified":1533635112984},{"_id":"themes/next6.4/source/css/_variables/custom.styl","hash":"89ed9dc12deeba8a7174c0628fe4d37bca56c4f9","modified":1533724479980},{"_id":"themes/next6.4/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1533635112985},{"_id":"themes/next6.4/source/css/_variables/Pisces.styl","hash":"72927abd51d3a607a6ba32cf882390792b34e834","modified":1533635112985},{"_id":"themes/next6.4/source/css/_variables/base.styl","hash":"1625e3e1da6c453108526e027dae25e311b18adf","modified":1533724241357},{"_id":"themes/next6.4/source/lib/bookmark/.eslintignore","hash":"bbd18f176a313f38aafbce58b55ad002563a689b","modified":1534043541099},{"_id":"themes/next6.4/source/lib/bookmark/.gitignore","hash":"5410a1bef9807f666cd92a0d2020f700e67e4096","modified":1534043541117},{"_id":"themes/next6.4/source/lib/bookmark/LICENSE","hash":"c3036598ab8f45797460e48880c9e859268d574a","modified":1534043541127},{"_id":"themes/next6.4/source/lib/bookmark/.eslintrc.js","hash":"21e561d7708a2c4884ba0d03f148ce46253b08ad","modified":1534043541108},{"_id":"themes/next6.4/source/lib/bookmark/README.md","hash":"aef0ed533378c45cadb548e4b26b375e2501fe07","modified":1534043541136},{"_id":"themes/next6.4/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1533816815886},{"_id":"themes/next6.4/source/lib/bookmark/package.json","hash":"e3eedf4ba6fa086743553176f9526e1bf0b44439","modified":1534043541162},{"_id":"themes/next6.4/source/lib/bookmark/bookmark.min.js","hash":"9e525329553335c2484f6faf9e933a6bbee9ab6d","modified":1534043541147},{"_id":"themes/next6.4/source/lib/bookmark/index.js","hash":"1364ef511550daf991177d151a5fabc6539fced4","modified":1534043541156},{"_id":"themes/next6.4/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1533816815887},{"_id":"themes/next6.4/source/lib/canvas-nest/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1533642532773},{"_id":"themes/next6.4/source/lib/fancybox/LICENSE","hash":"7713a1753ce88f2c7e6b054ecc8e4c786df76300","modified":1533816815894},{"_id":"themes/next6.4/source/lib/fancybox/README.md","hash":"c2f6c17aa80484af0481857aa7de0490238b15bc","modified":1533816815899},{"_id":"themes/next6.4/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1533635113015},{"_id":"themes/next6.4/source/lib/canvas-nest/README.md","hash":"f438a7daeb1845d95b333d34925899438a3abd6f","modified":1533642532775},{"_id":"themes/next6.4/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1533635113014},{"_id":"themes/next6.4/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1533635113014},{"_id":"themes/next6.4/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1533635113016},{"_id":"themes/next6.4/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1533635113016},{"_id":"themes/next6.4/source/lib/pace/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1533642568971},{"_id":"themes/next6.4/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1533642532778},{"_id":"themes/next6.4/source/lib/pace/README.md","hash":"ddcd2834d847f37b8ee77858bd03d31f70f55fb7","modified":1533642568973},{"_id":"themes/next6.4/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1533642568979},{"_id":"themes/next6.4/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1533642568977},{"_id":"themes/next6.4/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1533642568983},{"_id":"themes/next6.4/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1533642568981},{"_id":"themes/next6.4/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1533642568987},{"_id":"themes/next6.4/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1533642568985},{"_id":"themes/next6.4/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1533642568988},{"_id":"themes/next6.4/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1533642568991},{"_id":"themes/next6.4/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1533642568994},{"_id":"themes/next6.4/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1533642568996},{"_id":"themes/next6.4/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1533642568999},{"_id":"themes/next6.4/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1533642568997},{"_id":"themes/next6.4/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1533642569001},{"_id":"themes/next6.4/source/lib/reading_progress/.editorconfig","hash":"b1fd3a1cdad8120ed818833be00ea9b9cab2845a","modified":1533641968982},{"_id":"themes/next6.4/source/lib/reading_progress/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1533641968994},{"_id":"themes/next6.4/source/lib/reading_progress/.gitignore","hash":"09cde1060b4213a7eee528b54560777d2d3756e8","modified":1533641968988},{"_id":"themes/next6.4/source/lib/reading_progress/README.md","hash":"892aa722541608d334f009f8236babde866c2a9d","modified":1533641969000},{"_id":"themes/next6.4/source/lib/reading_progress/package.json","hash":"193693c3d0de991041175777543650def85be391","modified":1533641969006},{"_id":"themes/next6.4/source/lib/reading_progress/reading_progress.min.js","hash":"98af8d99819882904f9b1a9254bebf40602e1843","modified":1533641969018},{"_id":"themes/next6.4/source/lib/reading_progress/reading_progress.js","hash":"afe7024841712455762d9993f92c63582dd44969","modified":1533641969012},{"_id":"themes/next6.4/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1533642569002},{"_id":"themes/next6.4/source/lib/pangu/LICENSE","hash":"0b609305c50cdc3f1ef5ec9e7d2e174f7f99a183","modified":1533699317790},{"_id":"themes/next6.4/source/lib/pangu/README.md","hash":"727e7a3d9467a2738aa1428668b1fe68bc45a6a2","modified":1533699317793},{"_id":"themes/next6.4/source/js/src/algolia-search.js","hash":"84906eeae57bd06744dd20160b93eacf658f97e2","modified":1533635113003},{"_id":"themes/next6.4/source/js/src/affix.js","hash":"ad343aa406fd8181b5f310434817ce98fc2219e3","modified":1533635113003},{"_id":"themes/next6.4/source/js/src/clicklove.js","hash":"6583037545c7edc355f76f29b3393e250b150032","modified":1525620029192},{"_id":"themes/next6.4/source/js/src/exturl.js","hash":"c48aa4b3c0e578a807fd3661e6cd4f3890777437","modified":1533635113005},{"_id":"themes/next6.4/source/js/src/bootstrap.js","hash":"c7e2a588b679d46379124141bb2f30bc2f3210e2","modified":1533635113004},{"_id":"themes/next6.4/source/js/src/motion.js","hash":"6b5a2646b775609630b9ff6221fa58b6823a25fa","modified":1533635113007},{"_id":"themes/next6.4/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1533635113006},{"_id":"themes/next6.4/source/js/src/post-details.js","hash":"7d309b771e86c7e22ce11cc25625481ef7d5985c","modified":1533635113008},{"_id":"themes/next6.4/source/js/src/scroll-cookie.js","hash":"c4867626afab749404daf321367f9b6b8e223f69","modified":1533635113011},{"_id":"themes/next6.4/source/js/src/utils.js","hash":"9cddff04f9ff64b1e3202e1726eff512a2ef8497","modified":1533635113013},{"_id":"themes/next6.4/source/js/src/scrollspy.js","hash":"68d3690152c89e7adb08bb35ec28dbda2bd93686","modified":1533635113012},{"_id":"themes/next6.4/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1533635113036},{"_id":"themes/next6.4/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1533635113034},{"_id":"themes/next6.4/.git/objects/pack/pack-2fcbf3230b60a7e38c99c5a5e5ca9b08e0cfc5ed.idx","hash":"fb8f0e84e93a3adf171ecdcddb7ee7a380cbd0ca","modified":1533635112692},{"_id":"themes/next6.4/source/images/background1.jpg","hash":"49bd8a4f8d805ed3c522cac1e9da049a9a4d516b","modified":1533554992351},{"_id":"themes/next6.4/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1533635113035},{"_id":"themes/next6.4/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1533635113028},{"_id":"themes/next6.4/source/js/src/Valine.min.js","hash":"4b220ba942d838037ae59448596106e8b3cab0b8","modified":1534045552049},{"_id":"themes/next6.4/.git/logs/refs/heads/master","hash":"8ea902007824aaa62732efcbefffa817a8bcf6f9","modified":1551451668128},{"_id":"themes/next6.4/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1533635112735},{"_id":"themes/next6.4/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1533635112884},{"_id":"themes/next6.4/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1533635112904},{"_id":"themes/next6.4/layout/_third-party/search/algolia-search/assets.swig","hash":"6e076b5e183eedf425a445e99851f938789c3194","modified":1533635112883},{"_id":"themes/next6.4/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1533635112904},{"_id":"themes/next6.4/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1533635112906},{"_id":"themes/next6.4/source/css/_common/outline/outline.styl","hash":"fbb6be577529c750ef7c872fe7abdc7ab0faf0f8","modified":1533635112955},{"_id":"themes/next6.4/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1533635112905},{"_id":"themes/next6.4/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1533635112941},{"_id":"themes/next6.4/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1533635112906},{"_id":"themes/next6.4/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1533635112921},{"_id":"themes/next6.4/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1533635112960},{"_id":"themes/next6.4/source/css/_common/scaffolding/base.styl","hash":"97bb39756e85f5b27bba7f43270105ad01d736c9","modified":1533635112956},{"_id":"themes/next6.4/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1533635112957},{"_id":"themes/next6.4/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1533635112958},{"_id":"themes/next6.4/source/css/_common/scaffolding/tables.styl","hash":"52bc8ba71b91d954530b35dfc63b402a02b1321d","modified":1533635112961},{"_id":"themes/next6.4/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1533635112967},{"_id":"themes/next6.4/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1533635112959},{"_id":"themes/next6.4/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1533635112968},{"_id":"themes/next6.4/source/css/_schemes/Mist/_menu.styl","hash":"f3aa863adf972569b72f2df6bc6a914e7daace99","modified":1533635112968},{"_id":"themes/next6.4/source/css/_schemes/Mist/_base.styl","hash":"d0e9065b0dbbc01811259f0597d1790268b4881b","modified":1533635112966},{"_id":"themes/next6.4/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fa6c00fdaf8f0ca3b690a5a556671745fb67e2c9","modified":1533635112969},{"_id":"themes/next6.4/source/css/_schemes/Mist/index.styl","hash":"2ccb9bdc309b7c1ef183a3dbb0a4621bec54a328","modified":1533635112970},{"_id":"themes/next6.4/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1533635112970},{"_id":"themes/next6.4/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1533635112973},{"_id":"themes/next6.4/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1533635112973},{"_id":"themes/next6.4/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1533635112975},{"_id":"themes/next6.4/source/css/_schemes/Muse/_menu.styl","hash":"3cc7646583218d16925ced7b70865e63a901d4a7","modified":1533635112974},{"_id":"themes/next6.4/source/css/_schemes/Muse/index.styl","hash":"b26f8a3394d8357a5bfd24d9f8bf62d7b4063ebb","modified":1533635112976},{"_id":"themes/next6.4/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1533635112979},{"_id":"themes/next6.4/source/css/_schemes/Gemini/index.styl","hash":"7e4e499964c2112d47e6f9d2b6e87c31ec8269e2","modified":1533635112965},{"_id":"themes/next6.4/source/css/_schemes/Pisces/_menu.styl","hash":"cc961108b12ab97d9216606ceb1cd1cd31ab20f0","modified":1533635112980},{"_id":"themes/next6.4/source/css/_schemes/Pisces/_layout.styl","hash":"ccf5a4761cb0ce451b5e994cfabf8769248a45c1","modified":1533635112980},{"_id":"themes/next6.4/source/css/_schemes/Pisces/_sidebar.styl","hash":"df16dc995eb9ad498df2edcfc3e20528fc9aa133","modified":1533635112982},{"_id":"themes/next6.4/source/css/_schemes/Pisces/index.styl","hash":"a558803ca81cceae2bdc22c18ef638fcc023681b","modified":1533635112983},{"_id":"themes/next6.4/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1533635112981},{"_id":"themes/next6.4/source/lib/bookmark/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1534043537871},{"_id":"themes/next6.4/source/css/_schemes/Pisces/_sub-menu.styl","hash":"be72740313a9a0477b8a22f62e4c8ffa6d23a2e5","modified":1533635112982},{"_id":"themes/next6.4/source/lib/bookmark/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1534043541026},{"_id":"themes/next6.4/source/lib/bookmark/.git/config","hash":"372e915f4fb40d0662b65f33af12eb031385d511","modified":1534043541060},{"_id":"themes/next6.4/source/lib/fancybox/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1533816815836},{"_id":"themes/next6.4/source/lib/fancybox/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1533816805457},{"_id":"themes/next6.4/source/lib/bookmark/.git/index","hash":"252f5937ac5efbcc9eb3c87170f2e13a5f6fb5a3","modified":1534043541164},{"_id":"themes/next6.4/source/lib/bookmark/.git/packed-refs","hash":"887c94abd6c6687c55ee33a37d1463c5604c109f","modified":1534043541011},{"_id":"themes/next6.4/source/lib/fancybox/.git/config","hash":"4fc79da46367ae41549841689ce379dd86237762","modified":1533816815858},{"_id":"themes/next6.4/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1533816815906},{"_id":"themes/next6.4/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1533816815912},{"_id":"themes/next6.4/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1533816815923},{"_id":"themes/next6.4/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1533816815929},{"_id":"themes/next6.4/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1533816815934},{"_id":"themes/next6.4/source/lib/fancybox/.git/index","hash":"a367ba5928fd7aab8f9fb0fd2ba95bae95440a2e","modified":1533816815993},{"_id":"themes/next6.4/source/lib/fancybox/.git/packed-refs","hash":"3fe0047b2c616e49e16f736dec3f8ff176573e31","modified":1533816815817},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1533642532716},{"_id":"themes/next6.4/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1533816815940},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/config","hash":"78c4459d066ad795856608d603d780b53488073d","modified":1533642532743},{"_id":"themes/next6.4/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1533816815979},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1533642530628},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/packed-refs","hash":"60cebf9a6bcd88fd6b2132480cdef3ebf7a7dcf7","modified":1533642532692},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/index","hash":"07a44beac933aca750fe861091963988201337a4","modified":1533642532780},{"_id":"themes/next6.4/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1533635113018},{"_id":"themes/next6.4/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1533816815990},{"_id":"themes/next6.4/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1533635113018},{"_id":"themes/next6.4/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1533816815985},{"_id":"themes/next6.4/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1533635113019},{"_id":"themes/next6.4/source/lib/pace/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1533642568902},{"_id":"themes/next6.4/source/lib/pace/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1533642566433},{"_id":"themes/next6.4/source/lib/pace/.git/config","hash":"fadcc75e42b86ee74d05ce56b08984ec6b034e5e","modified":1533642568938},{"_id":"themes/next6.4/source/lib/pace/.git/index","hash":"0e6fa3ef16359a62e39301a239dbf842ddbc6aa7","modified":1533642569004},{"_id":"themes/next6.4/source/lib/reading_progress/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1533641968927},{"_id":"themes/next6.4/source/lib/pace/.git/packed-refs","hash":"2423e57d7b82d584aa814481ceeff0055b991cda","modified":1533642568880},{"_id":"themes/next6.4/source/lib/reading_progress/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1533641966545},{"_id":"themes/next6.4/source/lib/reading_progress/.git/config","hash":"dafc19913534d0710c8219015fe8fcf6f54966f7","modified":1533641968948},{"_id":"themes/next6.4/source/lib/pangu/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1533699317717},{"_id":"themes/next6.4/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1533635113029},{"_id":"themes/next6.4/source/lib/reading_progress/.git/index","hash":"31cdc55a8af3673919ddee74a2003c21eff172ea","modified":1533641969020},{"_id":"themes/next6.4/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1533635113029},{"_id":"themes/next6.4/source/lib/pangu/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1533699315381},{"_id":"themes/next6.4/source/lib/pangu/.git/config","hash":"6ce775e9ebccd0c197cbd9ca5c1d584b0c477ae0","modified":1533699317752},{"_id":"themes/next6.4/source/lib/reading_progress/.git/packed-refs","hash":"47ca9f7dfcd1e7e9cf23b80dc8fa8544e36d048c","modified":1533641968910},{"_id":"themes/next6.4/source/lib/pangu/.git/index","hash":"46b6166b9194e8d2bf316d184ed8c5711f09e291","modified":1533699317808},{"_id":"themes/next6.4/source/lib/pangu/.git/packed-refs","hash":"53b18dbcc9940bac320a19779536f55b17810585","modified":1533699317693},{"_id":"themes/next6.4/source/lib/pangu/dist/pangu.js.map","hash":"6a7c5927e3410ed4dfe14caa9fb2eb115d85e5e7","modified":1533699317800},{"_id":"themes/next6.4/.git/objects/c8/0c8310e28da8122cc98bf7655a65a581c41cc9","hash":"366c9310d174ae7c8026ec95b59f0e3d780cff5b","modified":1533710983033},{"_id":"themes/next6.4/source/lib/pangu/dist/pangu.js","hash":"0804dc1b42abd7d405bd8f80af69a1a142a3e99a","modified":1533699317798},{"_id":"themes/next6.4/source/lib/pangu/dist/pangu.min.js","hash":"da7cf96f57cee01041851ff273bda880d06ad061","modified":1533699317803},{"_id":"themes/next6.4/source/js/src/schemes/pisces.js","hash":"6ed3f2389457daa382de96a08633d9faaaaf53fb","modified":1533635113010},{"_id":"themes/next6.4/source/images/background2.jpg","hash":"bf58eca1022e6d04f1702f17f8a7dc191651ae15","modified":1533555032965},{"_id":"themes/next6.4/source/js/src/av-min.js","hash":"2577e72b52b736d99649f9e95be8976d58563333","modified":1534045585893},{"_id":"themes/next6.4/source/images/background6.jpg","hash":"a8621ebd65fa3ac0323a65f594aff614c291938d","modified":1533555022696},{"_id":"themes/next6.4/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1533635113025},{"_id":"themes/next6.4/source/lib/pangu/dist/pangu.min.js.map","hash":"1aa0d935665a2f075bbc4b5f0a53bbfaece12c5b","modified":1533699317806},{"_id":"themes/next6.4/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1533635113033},{"_id":"themes/next6.4/.git/logs/refs/remotes/origin/HEAD","hash":"1a7023473226d2e13aca2484df2b53ef95f47952","modified":1533635112734},{"_id":"themes/next6.4/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1533635112911},{"_id":"themes/next6.4/source/css/_common/components/header/github-banner.styl","hash":"3f3d2a43d1a326bad25b633c8ec9ddd87867224c","modified":1533635112908},{"_id":"themes/next6.4/source/css/_common/components/header/header.styl","hash":"34f5ac3c1ed2dd31e9297cc4c0733e71bc2e252f","modified":1533635112909},{"_id":"themes/next6.4/source/css/_common/components/footer/footer.styl","hash":"7dd247c8869fdefb5a007045d00f3ef8ceecf300","modified":1533635112907},{"_id":"themes/next6.4/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1533635112914},{"_id":"themes/next6.4/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1533635112915},{"_id":"themes/next6.4/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1533635112913},{"_id":"themes/next6.4/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1533635112912},{"_id":"themes/next6.4/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1533635112917},{"_id":"themes/next6.4/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1533635112916},{"_id":"themes/next6.4/source/css/_common/components/pages/breadcrumb.styl","hash":"630be616447a982413030e561bbd3a80ac14b120","modified":1533635112918},{"_id":"themes/next6.4/source/css/_common/components/highlight/highlight.styl","hash":"835c1340571bd6c4ec263c482cf13283fb047e49","modified":1533635112916},{"_id":"themes/next6.4/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1533635112919},{"_id":"themes/next6.4/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1533635112921},{"_id":"themes/next6.4/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1533635112920},{"_id":"themes/next6.4/source/css/_common/components/pages/pages.styl","hash":"ad4cae23c8e383f4fabc9a2a95bca6055020d22e","modified":1533635112919},{"_id":"themes/next6.4/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1533635112924},{"_id":"themes/next6.4/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1533635112922},{"_id":"themes/next6.4/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1533635112923},{"_id":"themes/next6.4/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1533635112923},{"_id":"themes/next6.4/source/css/_common/components/post/post-expand.styl","hash":"317c9ceda655e9dc373ce8e7b71d20b794fce9a4","modified":1533635112925},{"_id":"themes/next6.4/source/css/_common/components/post/post-meta.styl","hash":"330c8884efb5612e7eb03986d87d29e8b0651974","modified":1533635112927},{"_id":"themes/next6.4/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1533635112926},{"_id":"themes/next6.4/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1533635112928},{"_id":"themes/next6.4/source/css/_common/components/post/post-reward.styl","hash":"ff50a32ae6fea5fcdf2939dc9b01e1eb76cc73f0","modified":1533635112929},{"_id":"themes/next6.4/source/css/_common/components/post/post-reading_progress.styl","hash":"82bc7fa5d38d98e98cc25f9a73189024fda25e63","modified":1533635112928},{"_id":"themes/next6.4/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1533635112930},{"_id":"themes/next6.4/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1533635112930},{"_id":"themes/next6.4/source/css/_common/components/post/post-widgets.styl","hash":"5c3141d58970a0614896b6a62fd7a8a8caf4e401","modified":1533635112932},{"_id":"themes/next6.4/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1533635112932},{"_id":"themes/next6.4/source/css/_common/components/post/post-title.styl","hash":"adfd6d2d3b34adc4b476a0ea91e19020456a3b1a","modified":1533635112931},{"_id":"themes/next6.4/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"fa57ec9a6f1943c0558856dfba2d6b8faca0cd4d","modified":1533635112934},{"_id":"themes/next6.4/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1533635112935},{"_id":"themes/next6.4/source/css/_common/components/post/post.styl","hash":"bb8162bb7c7b0b255a0e8e234eb382a0879a4962","modified":1533635112933},{"_id":"themes/next6.4/source/css/_common/components/sidebar/sidebar-author.styl","hash":"debe322cc9e2688ecf38d0b6afcd6b71ad02fbd0","modified":1533635112935},{"_id":"themes/next6.4/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1533635112936},{"_id":"themes/next6.4/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1533635112937},{"_id":"themes/next6.4/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"9e05a2232faabb41bcebb51d545d897a76f077da","modified":1533635112938},{"_id":"themes/next6.4/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1533635112937},{"_id":"themes/next6.4/source/css/_common/components/sidebar/sidebar.styl","hash":"94d76e6da600a36d80e2470326ebb6b3be447ccb","modified":1533635112939},{"_id":"themes/next6.4/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1533635112939},{"_id":"themes/next6.4/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1533635112940},{"_id":"themes/next6.4/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1533635112942},{"_id":"themes/next6.4/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1533635112945},{"_id":"themes/next6.4/source/css/_common/components/tags/full-image.styl","hash":"2d58ad90f148e845bc7023751a7a13260600f8d6","modified":1533635112944},{"_id":"themes/next6.4/source/css/_common/components/tags/exturl.styl","hash":"02ee0eb49c256ecb4e71bbc65072f9147418d7d7","modified":1533635112943},{"_id":"themes/next6.4/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1533635112945},{"_id":"themes/next6.4/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1533635112946},{"_id":"themes/next6.4/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1533635112950},{"_id":"themes/next6.4/source/css/_common/components/third-party/algolia-search.styl","hash":"f4d8144c22544bdb89787c14ab9d39578dae4b7c","modified":1533635112950},{"_id":"themes/next6.4/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1533635112947},{"_id":"themes/next6.4/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1533635112949},{"_id":"themes/next6.4/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1533635112948},{"_id":"themes/next6.4/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1533635112952},{"_id":"themes/next6.4/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1533635112951},{"_id":"themes/next6.4/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1533635112952},{"_id":"themes/next6.4/source/css/_common/components/third-party/related-posts.styl","hash":"acfdd76b1c90d2e384affb3d0006a39b524609d2","modified":1533635112954},{"_id":"themes/next6.4/source/css/_common/components/third-party/third-party.styl","hash":"c31fbaec7e6373ecfb8588500b972d451695a6ad","modified":1533635112954},{"_id":"themes/next6.4/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1533635112978},{"_id":"themes/next6.4/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1533635112972},{"_id":"themes/next6.4/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1533635112953},{"_id":"themes/next6.4/source/images/background5.jpg","hash":"d5dd1613915b8d20b1504fb7390d86c0a241a2ec","modified":1533555049389},{"_id":"themes/next6.4/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1533635112971},{"_id":"themes/next6.4/source/lib/bookmark/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1534043537875},{"_id":"themes/next6.4/source/lib/bookmark/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1534043537884},{"_id":"themes/next6.4/source/lib/bookmark/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1534043537898},{"_id":"themes/next6.4/source/lib/bookmark/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1534043537906},{"_id":"themes/next6.4/source/lib/bookmark/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1534043537918},{"_id":"themes/next6.4/source/lib/bookmark/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1534043537924},{"_id":"themes/next6.4/source/lib/bookmark/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1534043537937},{"_id":"themes/next6.4/source/lib/bookmark/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1534043537931},{"_id":"themes/next6.4/source/lib/bookmark/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1534043537892},{"_id":"themes/next6.4/source/lib/bookmark/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1534043537958},{"_id":"themes/next6.4/source/lib/bookmark/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1534043537913},{"_id":"themes/next6.4/source/lib/bookmark/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1534043537947},{"_id":"themes/next6.4/source/lib/bookmark/.git/logs/HEAD","hash":"4ed080928697b9a8ac70130296d62c1f2f355dbb","modified":1534043541036},{"_id":"themes/next6.4/source/lib/fancybox/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1533816805461},{"_id":"themes/next6.4/source/lib/fancybox/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1533816805467},{"_id":"themes/next6.4/source/lib/fancybox/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1533816805473},{"_id":"themes/next6.4/source/lib/fancybox/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1533816805470},{"_id":"themes/next6.4/source/lib/fancybox/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1533816805476},{"_id":"themes/next6.4/source/lib/fancybox/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1533816805486},{"_id":"themes/next6.4/source/lib/fancybox/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1533816805490},{"_id":"themes/next6.4/source/lib/fancybox/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1533816805479},{"_id":"themes/next6.4/source/lib/fancybox/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1533816805492},{"_id":"themes/next6.4/source/lib/fancybox/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1533816805503},{"_id":"themes/next6.4/source/lib/fancybox/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1533816805495},{"_id":"themes/next6.4/source/lib/fancybox/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1533816805499},{"_id":"themes/next6.4/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1533816815946},{"_id":"themes/next6.4/source/lib/fancybox/.git/logs/HEAD","hash":"99dceabb4ea2459375ed61a46bee23378772fd3e","modified":1533816815844},{"_id":"themes/next6.4/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1533816815952},{"_id":"themes/next6.4/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1533816815968},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1533642530638},{"_id":"themes/next6.4/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1533816815958},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1533642530633},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1533642530635},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1533642530640},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1533642530642},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1533642530649},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1533642530645},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1533642530651},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1533642530662},{"_id":"themes/next6.4/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1533816815963},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1533642530653},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1533642530658},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1533642530655},{"_id":"themes/next6.4/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1533635113022},{"_id":"themes/next6.4/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1533816815974},{"_id":"themes/next6.4/source/lib/pace/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1533642566436},{"_id":"themes/next6.4/source/lib/pace/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1533642566440},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/logs/HEAD","hash":"e8ee632367c497ce3b9d0976b60cd0ca479c958c","modified":1533642532726},{"_id":"themes/next6.4/source/lib/pace/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1533642566438},{"_id":"themes/next6.4/source/lib/pace/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1533642566445},{"_id":"themes/next6.4/source/lib/pace/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1533642566524},{"_id":"themes/next6.4/source/lib/pace/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1533642566526},{"_id":"themes/next6.4/source/lib/pace/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1533642566529},{"_id":"themes/next6.4/source/lib/pace/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1533642566538},{"_id":"themes/next6.4/source/lib/pace/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1533642566533},{"_id":"themes/next6.4/source/lib/pace/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1533642566531},{"_id":"themes/next6.4/source/lib/pace/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1533642566535},{"_id":"themes/next6.4/source/lib/pace/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1533642566442},{"_id":"themes/next6.4/source/lib/reading_progress/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1533641966548},{"_id":"themes/next6.4/source/lib/reading_progress/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1533641966555},{"_id":"themes/next6.4/source/lib/pace/.git/logs/HEAD","hash":"11b5b236f969f811c597f87e145f0d4e7bb4113a","modified":1533642568917},{"_id":"themes/next6.4/source/lib/reading_progress/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1533641966570},{"_id":"themes/next6.4/source/lib/reading_progress/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1533641966562},{"_id":"themes/next6.4/source/lib/reading_progress/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1533641966576},{"_id":"themes/next6.4/source/lib/reading_progress/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1533641966590},{"_id":"themes/next6.4/source/lib/reading_progress/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1533641966582},{"_id":"themes/next6.4/source/lib/reading_progress/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1533641966597},{"_id":"themes/next6.4/source/lib/reading_progress/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1533641966606},{"_id":"themes/next6.4/source/lib/reading_progress/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1533641966611},{"_id":"themes/next6.4/source/lib/reading_progress/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1533641966618},{"_id":"themes/next6.4/source/lib/reading_progress/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1533641966626},{"_id":"themes/next6.4/source/lib/pangu/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1533699315391},{"_id":"themes/next6.4/source/lib/reading_progress/.git/logs/HEAD","hash":"27bbec0873a8940783bb337a048942bf77d1d787","modified":1533641968935},{"_id":"themes/next6.4/source/lib/pangu/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1533699315417},{"_id":"themes/next6.4/source/lib/pangu/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1533699315399},{"_id":"themes/next6.4/source/lib/pangu/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1533699315425},{"_id":"themes/next6.4/source/lib/pangu/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1533699315434},{"_id":"themes/next6.4/source/lib/pangu/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1533699315409},{"_id":"themes/next6.4/source/lib/pangu/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1533699315443},{"_id":"themes/next6.4/source/lib/pangu/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1533699315463},{"_id":"themes/next6.4/source/lib/pangu/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1533699315455},{"_id":"themes/next6.4/source/lib/pangu/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1533699315472},{"_id":"themes/next6.4/source/lib/pangu/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1533699315482},{"_id":"themes/next6.4/source/lib/pangu/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1533699315491},{"_id":"themes/next6.4/.git/objects/72/6ce1fb41cd7139b292b86af818464b0765b0e8","hash":"30a7b2f49d46eca412290177d4a1dc0acb33b4aa","modified":1533710985610},{"_id":"themes/next6.4/source/lib/pangu/.git/logs/HEAD","hash":"489ceaba261c6e4246d0cffa6e83bd40ad9c324d","modified":1533699317730},{"_id":"themes/next6.4/source/images/background4.jpg","hash":"615cc9a8cb9870991b48e9eaf2010b55d646244b","modified":1533555097985},{"_id":"themes/next6.4/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1533635113024},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/07/4d4d38a37d506f5db482b5c27ad1143bba5aab","hash":"ee76158694b6490056328594b5d15a54faba253e","modified":1534043540524},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/02/b27223487ca819cf7167dc23626af595112e25","hash":"e5bbb1906aa9a8e2696817d19d85aeedf82539ed","modified":1534043540678},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/0d/61683ea74054da2645effdd51d0a3282d6a9ff","hash":"879563c866dbe7efa0074a1ebcd206723e552f27","modified":1534043540230},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/11/8348fe672067e7d9c32c73d586023804eeb565","hash":"2b73c34eb535ff7e7d91cefb5215feddd9f2c36f","modified":1534043540284},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/1b/db4ff581f77318e6c4783d8e1ce811c37f13bf","hash":"06b3da6e152ffd68ed4617db1c4e3912f41d8bec","modified":1534043540236},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/17/ad1e81c2805cc9c5c00846c8bf9bf16524b55a","hash":"8f779f28267873af1e5c71386603042dbaff6211","modified":1534043540494},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/0a/9e6b66e9d710a68e08fcc295fca440eabcb4bc","hash":"aa0b269640b41735ba54a9279f10ddd19ecd5887","modified":1534043540257},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/16/75d42fcbd2aded2e9b42efe38c347ced893495","hash":"979ec745cfdc8dd979785b78c9be7645bb73d922","modified":1534043540396},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/18/77388dd9427b36d7c8703038a215b79f1218c2","hash":"8d48c7c0d7427116dbeb32552c576cc4edbe2d38","modified":1534043540713},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/25/42ea91169dbe9da086918ad02160e42310e185","hash":"3c942c82f3ef7fcd9a15276c82fcf59fa141521c","modified":1534043540737},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/25/b729e9ad0151b51f50297ea35280111b953236","hash":"af4bf7f3feb175c6980ee81a84f679149f713987","modified":1534043540485},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/29/de98ce86c01618ebbe3352e213db74feda0dc0","hash":"046bf7ab442c095f0150c96fe06d83855c92092f","modified":1534043540423},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/2b/358da01f778126b38fc4ddf5ecafa625cad38b","hash":"d4613d86e15d9679b8f1f18950b71a182af4b5c8","modified":1534043540224},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/2b/d59834388b6377fd14413f2614f550e35e35f1","hash":"654763c707c65aa3f353f8a9edb0cc0ae4bcccfa","modified":1534043540305},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/2f/425e03cfa918b2d638bbd37279a8b1e7757508","hash":"283713eda90efb64849519db267b652facfdbd63","modified":1534043540444},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/36/6ee3e25fa36be8ea88ed1c7913a8de8fd3b820","hash":"81c45f061381dd947da576758992b64b6101fbc8","modified":1534043540378},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/3f/30e2e442e4fdc1e91d5d1b642662e3900e5d6f","hash":"358397c32831b80fa4828334de7080bdaafe1c52","modified":1534043540697},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/40/b878db5b1c97fc77049537a71bb2e249abe5dc","hash":"929471c4b27858bbdae034381982f996144f6b3d","modified":1534043540318},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/41/bde8ccd130442ef0b3f8b24764a6d72635a485","hash":"4a833bb669ac126a00dec7153f8c263eab47b024","modified":1534043540775},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/42/c32aba927940c9e92b9928dceee88eacbf4874","hash":"2c7b6bb078f2eb52eead906df3ed4fa136a1e651","modified":1534043540098},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/48/7e5a296eebd45809199d2f557e340603931bad","hash":"6cf9f9b5ae990bbb0083b37b0c29b269cd8cc735","modified":1534043540620},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/4a/16717bb5a449fab2291e6397c30c6cb34814f1","hash":"5e244da7b9b6dfc9ad924ee5259805d4ae272c2e","modified":1534043540297},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/55/31419f7d03a523182be5373e246e43acdf60d7","hash":"274085edc584079218a79c199bd0c7360a700290","modified":1534043540109},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/47/1dd1f3ddf970ee3418f801ae787bf98191d47e","hash":"8634518aeeffc4b8b0dbe6ca6159480264cf1916","modified":1534043540027},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/4a/6e0d94cae4e01312054983b4e2e4007e3fd3b8","hash":"9eff6f1c82336ebdab0503e0ab0f753cd18f01ff","modified":1534043540273},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/4e/7ec652ef197de221d6576a717edf0b583a688a","hash":"e45f3b02a04d04eb3bcd6373ae79d86cbbd62798","modified":1534043540603},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/4a/7e8d64b8956ffd9339000e62d490f18dcd3ecd","hash":"3cc8fd65b3663a750887093f67bb28696492d5e5","modified":1534043540746},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/5e/038b5098480c14a29cefd944e3eb23109473b2","hash":"9c3aba7ff1afc70708a90e2f4f610499ee268d4a","modified":1534043540755},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/5c/02525c8b55f89f0ec0304cd0d266453bdf0541","hash":"51cab03e6cbebdb421eea45818b1ff7d9ec7783f","modified":1534043540515},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/5c/ffa97fb277e628a550bc1d8f7fa7c5c776129f","hash":"8c4e4a79d14522f34280ef85c794df6f4886e040","modified":1534043540407},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/58/b257bc636adc71871da51e615e6734c9479f3a","hash":"4e63de59c359c9bf480b47aa5e342ed78663fb58","modified":1534043540730},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/61/4795cc61f429929887fde3962027254db90a62","hash":"c4e415dda2e421df728dda51f953cc2f01296378","modified":1534043540722},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/5f/1541db4b58002e45b9b5fe19426551a8239a49","hash":"9a50dcb663e39892adbfccab943fb8dc37add2d0","modified":1534043540640},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/60/438c0c99eece781f9c7b2779ab7673ab34ba62","hash":"76032e20bf2916b03d9f795982831868f42a03af","modified":1534043540391},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/62/150c9d8f54ca62e1af3c9d666bb5e35eb3bdbd","hash":"2998eaea45a0135e879da15851a535ae2940d85e","modified":1534043540213},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/69/d5670af93cd1d3f0acc082583b1d150c5d61b5","hash":"e6c6fdb25f5fc4949594e217ae14d309b2fba4a1","modified":1534043540034},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/75/4a45e75b8a6dc256755287312c729adc2fc6c9","hash":"e700708d93a902401e54d96d4d632ae4225cdf2c","modified":1534043540541},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/7e/58471cd13382a6bafd05015cd0a5b5a8e899eb","hash":"21ae04d7ac48092d7b07b7278bf099cfc2691e57","modified":1534043540432},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/79/c8a354ccacb4edc27acbcc503f26acf6119624","hash":"7a44189d1189ad7aedea595fc8a4ef387de7041d","modified":1534043540370},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/77/d7bbc93f0a411d2e50b7c67a2827dece42727f","hash":"6865e0eb54a9882e55e70669a44cdddb2da1665e","modified":1534043540251},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/84/08abfa6c03a2809cb160da5badc6d1050bfbb3","hash":"9d3f29a89223403d1a0292681a330cbf7616c190","modified":1534043540018},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/8a/7f4f27cc671188881ca5cd80d941720a78be04","hash":"de24124a9660dad2ee4e1d25a3580ac87d42b3e0","modified":1534043540463},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/8d/ae3702857a081653c16320999ed63f3c6fb719","hash":"cc5ed8d3d17451c722a3ebfa3251fff27d348218","modified":1534043540656},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/92/f5900e81d1cf9e90787b7138f4285434e45c10","hash":"05c5b8557d69133fd01ebd1b85a5e009a822ca20","modified":1534043540510},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/8e/b07c89ff54bda39a40d6448a6a8ef4df57c8f2","hash":"fadb84b2a2c5dee0b8f67dd53b4e2b8a5b270e92","modified":1534043540348},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/96/353334c808a19403f7d2f0e880668bf8f0e320","hash":"dbcb9efdc52a50d5f0431394c24b35ff47f1833d","modified":1534043540068},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/9d/a80d05852c1c5aec3e8d31b63d429bcfecc0c5","hash":"392385eddea633b0bea1194c2c66db593c6a9c0a","modified":1534043540312},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/97/b44840ca6d92e3e650428f433b75a501b1427c","hash":"a899d561a89c4ab798063c1df81d78015992ad15","modified":1534043540086},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/ad/b3297e18bb4d11be9f7305db144e5015f40738","hash":"b44f4417307f3dbb33d30c22700dbfb61c87f198","modified":1534043540597},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/6d/1188177a8798893f9efe275d4d75d0f9301be9","hash":"b8652b3249ef6662a8dee7c01e5667f7e4f33cc4","modified":1534043540241},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/a9/21fc59cd52b57fc3093fbdc04b446bae0a2f8a","hash":"a2e879b7fdb0cf153f8526064a6b8810b2cd8988","modified":1534043540535},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/aa/d78f9de11c827340e4695cbc1f5a73f53ee577","hash":"0f5086a5818caf093dcf60126a7d0f72bc73928b","modified":1534043540570},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/bc/0570da6c07cf361d794008e58455455a2580be","hash":"822af280dbbe78499a932faf9229f4c467d48cbe","modified":1534043540550},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/b5/c8b8aa1a6dba7c8152b49ef103a0952f1bb9ca","hash":"d070cad9094ddcf44be0e16b3872f1fb4f05ae0d","modified":1534043540092},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/bf/05dfc0c17af4b48e94676e1e2feaba911d8c71","hash":"4d8adbebcb8ffb4bc3c61b9c97bd225f128b8e74","modified":1534043540246},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/c1/7940ffb480f454472c9083efabce723ff53cd4","hash":"29bbded01d4399f509abd809c00957f182226432","modified":1534043540457},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/bf/c91bf59adb7231937b98d35cb952b4bab01fff","hash":"016dc36835bb17ba3f54eebaef4d57f5498015da","modified":1534043540103},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/c3/75bd4420a3baa49b9a5d52f8040400491ac933","hash":"beb87437d1591c6bec51a6e85176f576092a83f2","modified":1534043540690},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/cd/ea049768c3f2d2b89792c19a523584590292c5","hash":"5e69fbae98becc6ed3be947a2450511294252891","modified":1534043540580},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/c7/631242bf4ea5781b2d173d999b41c69fdd8ace","hash":"f2d3b9fb648bed7f61dc917d9ad45550c4c70e77","modified":1534043540783},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/c6/26688a33395276a262158e171027a61c56150c","hash":"3727c122ab41e9dd1abc6490a40eb28f212c5c8e","modified":1534043540039},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/ca/799c34c37f63bd64ed9b49413e7fc6db8ab2ef","hash":"4e6ee2dffc199b5954fb34b129fe2f012099463d","modified":1534043540264},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/d6/31561b3edf93b81d38f81278d6574c77006e39","hash":"afaad8a2c6944b11695122cf45cedadbc3bd7605","modified":1534043540592},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/d2/45f9acfffc2e168c17bcc4e115527f21a77521","hash":"76d31ac0c9ca563b5854fe5b6c5ab46ebb202680","modified":1534043540631},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/ce/70a57b7d6bcddae01e3434d416c27c84b24727","hash":"d8ccbf99469b51ae629347665f96354c264457b4","modified":1534043540475},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/d3/a06b992cfe7d26e022b14abf5ba563e6e63c4a","hash":"6820962ea4a4da9e9de834c97c1630477c30ef20","modified":1534043540324},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/d4/d4c40411de7936e90c6ebbc19e182ad225cb4c","hash":"f8d44f87905d5dfbeb1fdf5519a5256d27d00120","modified":1534043540718},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/db/3b3566df6e7d89575c4150067f61087be1bedb","hash":"118afda770f93908ad97d6ad0bb6a42b21aab9cf","modified":1534043540058},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/de/52a356f671fa73a9d9910c26968d47100c655f","hash":"5bd5f521df149c8e24640151b6d83b3c6be1fd30","modified":1534043540048},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/df/af7173f5d152681fb2bc7adfdebb54ad195281","hash":"7fc27717b2f7da8f6a6e40ac8d88c75485a505fa","modified":1534043540333},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/ef/090e162cd7cc22d2da95d77acac1d7a1eb9c43","hash":"a6997644fb850bedaeeb01adfc90fc404cf80074","modified":1534043540357},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/e7/aba3f8ec35017b4dd2bc8f5ca94253a8674ce7","hash":"8fe85003f71bf38e6ae367366ae6e95a819d046d","modified":1534043540011},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/fb/0a1d42d6507805651dec61ecc4df11f37dc1a6","hash":"fcef8ee1a40833b2cf5ecae90bfa22002f46b29a","modified":1534043540673},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/f7/bc8429b09417e69629d9fa0c2874dd5adc30d2","hash":"d8b3844ae942e165b59b6a57c5decdeb35582539","modified":1534043540615},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/fc/63af0044284a5b08f20cf1444a062176d835fe","hash":"9994dd502452c757856b88aa0d1be86540dd7a82","modified":1534043540661},{"_id":"themes/next6.4/source/lib/bookmark/.git/refs/heads/master","hash":"0d74c802af2ae1718308cb07fda4520f5dc7f8d0","modified":1534043541034},{"_id":"themes/next6.4/source/lib/bookmark/.git/objects/f6/c892849ea799eb017a3d5bf05edb602780cd38","hash":"3b568af69c7a3dc7439155fe36b64a65e8b0bb79","modified":1534043540077},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/07/872072704114b91681e2e6f9697ce1521b64d2","hash":"e1e853424fa012a1c0eb1cba9da3f0916b80538a","modified":1533816814023},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/03/212ebc9d60c75daf0a3e1151809b2eb6b3932e","hash":"fd9b9ae200d7466a7ed14c1ae1a219b8a64f4a3b","modified":1533816813591},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/0c/f71a412edc19f5126ed30cd2e3995124452d9c","hash":"0112c358a98fa224a6a1097e3bc36ab9b4732c30","modified":1533816813147},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/35/84c8a781abd6116ed585d50a4586e485491860","hash":"31d5a4a413f1a67480ea02878389be367a2e2e68","modified":1533816814037},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/35/d42e808f0a8017b8d52a06be2f8fec0b466a66","hash":"78537d1ed6c5d74a9db86a7c127b3d0fccb15b2f","modified":1533816813614},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/43/9b878fcc130303c16f8debdaf37035a60b6668","hash":"b756528410464852169103436d5735404e8030b5","modified":1533816814016},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/36/7890a4af658d073d2b79c06829337d45434b84","hash":"6668ecb7c9d769947940486cfa3fa79b548cf2db","modified":1533816814056},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/46/e1eb55f66a85e835793c7b3dfdc57dd06f20ac","hash":"168d0705f18d9902a6748e8abc5682f59e881e17","modified":1533816813160},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/5b/20887d579a6d1a6aba4f77f59c14e4aaa0df49","hash":"4a6be5d7a913691c129bb4cb64eefa3dfcf9f62f","modified":1533816813608},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/5d/b3d4ac2e42459be7f72b6ce88f697d42b931b4","hash":"13c3052cf9b64c5e6f396eb23556931f5fed2bbc","modified":1533816814049},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/63/d294368d9e280e976902648209486ffd056a1a","hash":"0dca77e6355e04537383b9362d4f239168d16f39","modified":1533816814042},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/74/6e2b94283144e8f5209f51b53071784d34f8f7","hash":"3e6d4da2ae3861796b23f76208d99a53c459763d","modified":1533816815732},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/73/f757843855f1eb0b23d8c81a8fb7f001989b66","hash":"84152c7efd120a5c51a8a60cea9cc39616f6ad1a","modified":1533816815723},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/78/756afde9fe79a12b08fc5a7b12695448bcf9ba","hash":"fe9ccfe0ce40528a4f87aa22e849d9f98bdc810b","modified":1533816813182},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/95/f9086c6635b9e32b583d4649feeb13fe44281e","hash":"d606fb2c8004327ed4c2a16d1809769385d5330d","modified":1533816815746},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/92/05aeb09fffa6b571b4c6beee30b18400829c03","hash":"7108489bba664f36612804a465c2910a6efe85a8","modified":1533816813629},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/a0/3a40c097ee728709f65d4ea7397903a389d484","hash":"260ab091942f1d6279b3933b22db30b5efcc9d50","modified":1533816813623},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/94/a9ed024d3859793618152ea559a168bbcbb5e2","hash":"1c2d080a86f03eb960e112a94910a5115addf57a","modified":1533816813584},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/a6/683963a784aafeb3bf2a487c33950b32707826","hash":"478487f14feda93e52923fce5ae92fe82ce7d0bc","modified":1533816813154},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/a2/6273af232562db60229e75809403a784e36d28","hash":"57f280327903563e205ed329a365ee91b44dc17c","modified":1533816814028},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/d6/19a807458f9037320f1bf786e26786f16319cf","hash":"65b1c4853344964144ee7281f0b94bb5d305408e","modified":1533816813166},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/dc/845cf4113504e8737a1d784bd093c89f509bfd","hash":"425e89b5ade9446f516723b8e10cb68f72515583","modified":1533816815739},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/a4/391396a9d6b6d7ff3b781f16904732fea40bdd","hash":"20fc3d5b4c6f0f72a178e61d15a8589bf475678d","modified":1533816813635},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/d0/e4779f4bed43fe339f0cf1eb045d8cb9430c87","hash":"89fdecf64fedf2cca040f73464d56ef834945733","modified":1533816814010},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/f6/bb280a0b2c68256a8e906b35c6976c80c1b3be","hash":"5daaee11fc384fbe0f02c7123036c954ee9a73fd","modified":1533816813194},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/e9/7d00dfa1dd21d1129a921517e5318979410c8b","hash":"dc39fdf7749fb74e36156bc92cdb892ec4fee59e","modified":1533816813172},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/e8/e1987c6cbd752cf39f724e084865a85b56ac9f","hash":"3516f2621bf9d94d803163a2aeb6f3c4efc36d81","modified":1533816814407},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/fd/8b95566800f8d70399b94728d6e4ba476641f9","hash":"5794953cab53637cdd39ddd6b4f732a98cf92c57","modified":1533816814032},{"_id":"themes/next6.4/source/lib/fancybox/.git/refs/heads/master","hash":"e9013224d7090217e3d87b80d8f683fcfe338286","modified":1533816815843},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/fe/834f7ca5a81b4035ac7ceabd7087e9f5e706b9","hash":"976bfa40e3f29e3173998d03750734f3ebac72b6","modified":1533816813602},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/fd/8d5ca566d47a77d9562168617bb2f6482bf9be","hash":"93d5b016ddd99f514ae6e718357d83f14e22077a","modified":1533816814004},{"_id":"themes/next6.4/source/lib/fancybox/.git/objects/fe/9e08652d9aba310f292865f050f4fca58dc11c","hash":"9d9e76a5ec7d62502a6f701b0dda109ac37e8bb7","modified":1533816813188},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/objects/45/9262fe92f0115707bf8d8764f1886bc5e7c9e0","hash":"36040483f8af76775b7e4b6d87cec53729625399","modified":1533642532655},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/objects/69/39233ece53c9bdb9a1faf3271ed5768b034aad","hash":"5a770d418c1bb7b0f031f4d5416530002032fcf3","modified":1533642532621},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/objects/2a/f622a4d7df40a2708946e91d6d7a0df1dc468c","hash":"3da7207fb18d361b83c56f4e35f67e9e945abd82","modified":1533642532640},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1533642532600},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/objects/86/1c9f4241fe0eb6af02ad770d5ce04c1f68972b","hash":"7005c3e36015a4af30d4b91bd5a849a7861a073e","modified":1533642532627},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/objects/75/de2b8fa62d52690de32c351c63ab6446104ed5","hash":"52d10122d633ce4895a0690c5955e1b356f5a391","modified":1533642532649},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/objects/90/f6477118d05f5f96ce0a63c6f18b7b2baea200","hash":"385f58e92981f27fa54eb52bf60424e87c70a9d8","modified":1533642532581},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/objects/5a/69ce9c2e4a1a34f6063ae9a121af1555669c69","hash":"dad25cc0f450e2827b5676975f4a70636e3fd2c8","modified":1533642532607},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/objects/d4/95d28a8fab74d23908f6ccef9e4db2625fbacb","hash":"59e6067b0a806deee7bda6460b36c0f63e2e1db5","modified":1533642532615},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/refs/heads/master","hash":"5442226ab36d787824e89f50241336839b376133","modified":1533642532724},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/objects/aa/da83ad9aa55faa2b34ede31b1d41e16966f80b","hash":"b304541ab95b7969a63ba2ec4f60f5391bd8bb44","modified":1533642532573},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/objects/98/67d1132e0e50bbb7df754a63358d70741df6d5","hash":"3cb710a1faee73c08036f5e2df7df3a7ce29e9dd","modified":1533642532566},{"_id":"themes/next6.4/source/lib/pace/.git/objects/3e/dcd352d2a1a60dbb6a43e7e9f00bab8b55791a","hash":"725bf5094855cd943dd1cd351906fb1ebec1d861","modified":1533642568730},{"_id":"themes/next6.4/source/lib/pace/.git/objects/00/13175fe71888324d9142744034e8296501174a","hash":"0ad0e50f7fe91fe14491924aa4b1e2e8f060a5cd","modified":1533642568693},{"_id":"themes/next6.4/source/lib/pace/.git/objects/35/a749d823ad0aae6111a76dc501a1170478f376","hash":"e757129fb6bca3170b62b05f3e850e4b55f3ae88","modified":1533642568813},{"_id":"themes/next6.4/source/lib/pace/.git/objects/1c/159365320ef5dde63906912f3df067376b40d0","hash":"1dd6b7373c3f9c67e34aa319c9c08fd0f667156a","modified":1533642568821},{"_id":"themes/next6.4/source/lib/pace/.git/objects/41/28e69301ad36a283c0fc523f3aef89644d2467","hash":"d8b985cf431fbdc5b4fa3be89e27db7a3437c920","modified":1533642568834},{"_id":"themes/next6.4/source/lib/pace/.git/objects/23/4f9b3e93f06a85cb2ec01acc872ccdc2bec7cb","hash":"63f8640eceff35a80175a102fcbd8789e690cfaa","modified":1533642568702},{"_id":"themes/next6.4/source/lib/pace/.git/objects/4d/fbb499a4f7b2f26a535c335cd66c966ff8b261","hash":"14e4cdcc137045c7efed32f796273d40c9fcef87","modified":1533642568788},{"_id":"themes/next6.4/source/lib/pace/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1533642568686},{"_id":"themes/next6.4/source/lib/pace/.git/objects/60/0378418401f2b0e7c58407a7bbc5a5196cfa51","hash":"20489d796247dda758599f40cbfcf14d194ef64a","modified":1533642568680},{"_id":"themes/next6.4/source/lib/pace/.git/objects/82/8dcba3c8a21de08d1eb38f2eee453b51543188","hash":"629aad2ee2e564790e78cd46e99ad396544960ab","modified":1533642568737},{"_id":"themes/next6.4/source/lib/pace/.git/objects/53/3d55db0342c2b011ac05703c3b42e88a25c1ed","hash":"c48454760d2e04602a5499188b33d38839c58aee","modified":1533642568803},{"_id":"themes/next6.4/source/lib/pace/.git/objects/84/a17ac7b4fe9cea559de91f00af88f810bff7f1","hash":"b41b6d3cbccd75b711f0523bba1c26bf19b0a862","modified":1533642568665},{"_id":"themes/next6.4/source/lib/pace/.git/objects/97/1e8a1f2ad6d45f693980c106af0aead9d1c215","hash":"e45f0963920a53a57f6b53d178e5b05a8e315189","modified":1533642568715},{"_id":"themes/next6.4/source/lib/pace/.git/objects/9b/3058068409f2282607ebb91717d7a6a1406230","hash":"651c5857021e11dc397df86dbe0f01e6c7dc7f16","modified":1533642568761},{"_id":"themes/next6.4/source/lib/pace/.git/objects/a6/dbd9c99e726f621e2bdcd3c6fe2795a5d4272d","hash":"25350dd31f504af7206610ced355d162aabda8dd","modified":1533642568775},{"_id":"themes/next6.4/source/lib/pace/.git/objects/8b/b4535a79cc15127f8906b24c4e0bb4a38a5947","hash":"9c2d65a63f18929b09f3592dda064f24309ff98b","modified":1533642568752},{"_id":"themes/next6.4/source/lib/pace/.git/objects/49/0db22b657dd64430d003fe2831905a54858b22","hash":"43694656c4c331cfa3667afca630bd486ac0d0fe","modified":1533642568782},{"_id":"themes/next6.4/source/lib/pace/.git/objects/aa/813c5a6398600e01b740696cd889eb3becad84","hash":"c62a1513ca820dc59fe1cd6d9ec16c92e0e2fbf0","modified":1533642568709},{"_id":"themes/next6.4/source/lib/pace/.git/objects/de/79ab6539ac3702aaac64b879d95e6575f4eefa","hash":"0046fefd52ed4679e0fee757cc91ced94e3ddc12","modified":1533642568827},{"_id":"themes/next6.4/source/lib/pace/.git/objects/f3/0e0a99bb016267bde55537dd47b3657ae59544","hash":"8bf0bc17a6111b6a82981073133f33cc8e815c41","modified":1533642568721},{"_id":"themes/next6.4/source/lib/pace/.git/objects/c0/05c71f1a000d8187df58083d215c962d7f5505","hash":"dffd212ca2ec705233fabe82a6f483d6be4b151d","modified":1533642568746},{"_id":"themes/next6.4/source/lib/pace/.git/refs/heads/master","hash":"3190f62cf3c4f9eccb1e54c8f7289ed7e6955767","modified":1533642568913},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/01/9a385ce3e8b0232ee5edfa6b4e1dcd44cf142e","hash":"6894d6df0722077c5d21d116f33046625cd57ab8","modified":1533641968770},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/01/36e1990fcbef0586e0bd4b9d90b96900dcd575","hash":"37ac2f94a41384f4cb66cd74c8313099367a5603","modified":1533641968654},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/00/4fa4280892c7d18f6151fac22daf51344c02ea","hash":"7a81ed1087c3792f37bd83137d4034179c911627","modified":1533641968676},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/36/58085a9181df88f19f04603b28f6ea21d199cc","hash":"6a467dd51d39b28c1af9c25869e25c6821f6602a","modified":1533641968807},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/08/4d73e711ab990007314dab66ac8da236a98212","hash":"aca52af21085b7a579b275a1e7bb5f1a8818e3d4","modified":1533641968731},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/2b/c9c88e86c252b037a36df9a3d3df519b254bfc","hash":"e647f9721e4f2e1cd52bfff3c80683b787f76a11","modified":1533641968659},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/48/1ebe947f06e440e41c1a971be0844e852c1d37","hash":"61fea90ca1824db58df6cfc662bc5b371db02224","modified":1533641968753},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1533641968737},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/71/4aebae4e17e00cdb0e82893d9fa39d35b20b59","hash":"d09daa7d244ee40035e6eb67f13867182fb8af86","modified":1533641968759},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/2d/488e7ac12f9be4cba8a7a383e972449b4ecef7","hash":"e477cea6ada0896804b0e8dab23c9d56825a0ece","modified":1533641968690},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/83/d5a97b3daaa59cccb44af55f6723f431f2e94a","hash":"448c16fa4f53e5123838d4c3593dcfb15f309905","modified":1533641968792},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/8f/ca1e70cfeea939105e31d7d17f7c3516120b30","hash":"312d55b1a7fbdcc14c54b3805f0827fc42ad94ed","modified":1533641968671},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/98/a2041bc808f55bbcb9d8b53560e22558338bda","hash":"ebb53379aa2d77ea0832973fa3e44846df0f170f","modified":1533641968797},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/a2/7bba2bf42630fc03150b64fc74f2a29c151a27","hash":"b1afe600ba94298a2905a2cf64c900f5954cc146","modified":1533641968741},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/ae/aa7a68a7131bd03e0bce06f45bfdfa1cd93587","hash":"d7d37380ba502a4050834df40227d612cf911595","modified":1533641968712},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/c0/018cb7262951a7eea4001bea16bf6c1db1de0e","hash":"b54299894dbbf00b3187ae3e16a480a91ca75e73","modified":1533641968725},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/a8/63332915ebfd107ca4418c25c80674875c422b","hash":"f12e708237bcf98c072e73e45f1542cfb5646839","modified":1533641968701},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/b2/6b015c6a0aacd5fcbd3fd3a09b0b216855f35c","hash":"6924e4c4558366a76578a2497d2fca15ef39a9f8","modified":1533641968764},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/b6/eda56cb9647d239b26d86f579204cbccf745fe","hash":"12e479d3dfe08df6f9d4d56be2f0a17d9720d846","modified":1533641968781},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/d1/94060fce08431ebef4cb5f4c02739b913373cb","hash":"b9022b117b03703b5fa8af85fc076b692bde33cf","modified":1533641968718},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/c7/8ceb135b768a369ded42f77d4db3f6363bde20","hash":"aa90e157f2a043dad6017bab2e4aa699f6236a63","modified":1533641968775},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/f0/acd06a59665dabfb6eb0608f0a797fdcd44158","hash":"f85f3dbe326b8752f6e32c7169ed3b409f4167b7","modified":1533641968683},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/f6/8184f97255dfd504e22775df6450edb9b51d70","hash":"b0a36dcf81780a9f82db6318daa065200e16efee","modified":1533641968818},{"_id":"themes/next6.4/source/lib/reading_progress/.git/objects/e5/dc795cdf7d9163cc736be938a9707f73869c9f","hash":"57163dfa4eebe09d57ede37ee259b7cbb2b1e643","modified":1533641968665},{"_id":"themes/next6.4/source/lib/reading_progress/.git/refs/heads/master","hash":"35b5015021477f00984d50ee8894b23b639bb6d4","modified":1533641968934},{"_id":"themes/next6.4/source/lib/pangu/.git/objects/37/180cbe56dc95fe1a9e0b3de00b61b11aff3e7f","hash":"193cabbb4af1308bec54a5b99b35385ca13ea5ac","modified":1533699317432},{"_id":"themes/next6.4/source/lib/pangu/.git/objects/6d/0d46c3fbd28f9537143108712f9941ab8363f8","hash":"07befbdc872ee282846ca782852ef7163ad7f385","modified":1533699317615},{"_id":"themes/next6.4/source/lib/pangu/.git/objects/08/52519b95abd33154998c5680271aaf67f8e106","hash":"f8c789e5cf42a5dba5ad7fa380bc45ce80df80d7","modified":1533699317412},{"_id":"themes/next6.4/source/lib/pangu/.git/objects/ee/34b05fd5e668a48ec9108c61a9cb7fbfba3462","hash":"07e1e94f3ffcbca994bc631830665fc56517899d","modified":1533699317426},{"_id":"themes/next6.4/source/lib/pangu/.git/objects/e8/f4305b379951c7f220930e72e9c621fb3469ef","hash":"6989cfa9149252690b2897e5f8a28675e257e822","modified":1533699317624},{"_id":"themes/next6.4/source/lib/pangu/.git/objects/f4/f5a021a51f1d1793884318fd2f5a5498169a6b","hash":"c93b4a05458b1d11e943e9eb88a894a37a3b2dfe","modified":1533699317448},{"_id":"themes/next6.4/.git/objects/3d/6be90185d26c6f50daeb394f9eb39cb371dc12","hash":"5ac35e7c7da53dc3f575e5bb75afbbc90ee27a8a","modified":1533710990283},{"_id":"themes/next6.4/source/lib/pangu/.git/objects/7f/afb14e3df3d5494e74aa96d5b25fe0dee7c787","hash":"d9a7aa765fcef890d16c2d65f853a01ab9ced476","modified":1533699317638},{"_id":"themes/next6.4/.git/objects/ae/a4523ffbf1f7fee6bb9effae18f2d066dd6f66","hash":"1f66bc82f813af5b3e493353cfbc47444b07aff7","modified":1533710989062},{"_id":"themes/next6.4/.git/objects/b4/f31464d6b3f8e4981a83c1906376a1b1b772db","hash":"216d268e74a7731d06a629fd45848a85b02fad1b","modified":1533710986789},{"_id":"themes/next6.4/source/lib/pangu/.git/refs/heads/master","hash":"20ecc53983248064b3342e28a181958762f8306b","modified":1533699317727},{"_id":"themes/next6.4/source/lib/pangu/.git/objects/fa/62fee9eeddb232bd001f58f0ebd30e947db226","hash":"2e20bce6f6a81710e6e067681944a9ca13a13c35","modified":1533699317417},{"_id":"themes/next6.4/source/lib/pangu/.git/objects/f7/bd3c723d5b2947d4d0b7c0e5ce118054f22c2b","hash":"b26d8ef5455e3b929a64166af6bb4f89fa4d351e","modified":1533699317439},{"_id":"themes/next6.4/.git/objects/f3/e4edaef39193c9616bb88bf5f784f29a166d94","hash":"aa8e2916aaedbf675fb8c6d25aed89ad557e938a","modified":1533710987909},{"_id":"themes/next6.4/source/images/background3.jpg","hash":"543dbadc0bdb9d6072796eee2c116ebde567c210","modified":1533555071921},{"_id":"themes/next6.4/source/lib/bookmark/.git/logs/refs/heads/master","hash":"4ed080928697b9a8ac70130296d62c1f2f355dbb","modified":1534043541039},{"_id":"themes/next6.4/source/lib/fancybox/.git/logs/refs/heads/master","hash":"99dceabb4ea2459375ed61a46bee23378772fd3e","modified":1533816815847},{"_id":"themes/next6.4/source/lib/bookmark/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1534043541024},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/logs/refs/heads/master","hash":"e8ee632367c497ce3b9d0976b60cd0ca479c958c","modified":1533642532730},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1533642532711},{"_id":"themes/next6.4/source/lib/pace/.git/logs/refs/heads/master","hash":"11b5b236f969f811c597f87e145f0d4e7bb4113a","modified":1533642568920},{"_id":"themes/next6.4/source/lib/reading_progress/.git/logs/refs/heads/master","hash":"27bbec0873a8940783bb337a048942bf77d1d787","modified":1533641968938},{"_id":"themes/next6.4/source/lib/fancybox/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1533816815832},{"_id":"themes/next6.4/source/lib/pace/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1533642568898},{"_id":"themes/next6.4/source/lib/pangu/.git/logs/refs/heads/master","hash":"489ceaba261c6e4246d0cffa6e83bd40ad9c324d","modified":1533699317733},{"_id":"themes/next6.4/source/lib/reading_progress/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1533641968925},{"_id":"themes/next6.4/source/lib/pangu/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1533699317713},{"_id":"themes/next6.4/source/lib/bookmark/.git/logs/refs/remotes/origin/HEAD","hash":"4ed080928697b9a8ac70130296d62c1f2f355dbb","modified":1534043541023},{"_id":"themes/next6.4/source/lib/fancybox/.git/logs/refs/remotes/origin/HEAD","hash":"99dceabb4ea2459375ed61a46bee23378772fd3e","modified":1533816815831},{"_id":"themes/next6.4/source/lib/canvas-nest/.git/logs/refs/remotes/origin/HEAD","hash":"e8ee632367c497ce3b9d0976b60cd0ca479c958c","modified":1533642532709},{"_id":"themes/next6.4/source/lib/pace/.git/logs/refs/remotes/origin/HEAD","hash":"11b5b236f969f811c597f87e145f0d4e7bb4113a","modified":1533642568897},{"_id":"themes/next6.4/source/lib/reading_progress/.git/logs/refs/remotes/origin/HEAD","hash":"27bbec0873a8940783bb337a048942bf77d1d787","modified":1533641968924},{"_id":"themes/next6.4/source/lib/pangu/.git/logs/refs/remotes/origin/HEAD","hash":"489ceaba261c6e4246d0cffa6e83bd40ad9c324d","modified":1533699317710},{"_id":"themes/next6.4/.git/objects/pack/pack-2fcbf3230b60a7e38c99c5a5e5ca9b08e0cfc5ed.pack","hash":"e5ba3b05e41d3d3ce69881250a11f236bc6f72ff","modified":1533635112694},{"_id":"public/baidusitemap.xml","hash":"228c1186ec7eeb19fcafe43f9224b3df39ddf587","modified":1598490316724},{"_id":"public/atom.xml","hash":"a5d7efc35d31ba99889b69604f40b79ffc24ce03","modified":1598490316724},{"_id":"public/sitemap.xml","hash":"b39b9a5297a7060a381bf69df295ddd2fa39f11b","modified":1598490316725},{"_id":"public/search.xml","hash":"e210d701f3162536270383699cd04ac738a74ad2","modified":1598490316724},{"_id":"public/categories/index.html","hash":"d22844f7b0cca3e766f8fe7bb5fe228a95d13ebb","modified":1598490316749},{"_id":"public/post/5239bbb3.html","hash":"b8df95caa211fb0f4700bba6018ed70f1ac28b4f","modified":1598490316749},{"_id":"public/tags/index.html","hash":"c62db29c388b8f080467c9f7377f87106d09527a","modified":1598490316748},{"_id":"public/about/index.html","hash":"f4dd683686b7302b969456df3f45356dd8450991","modified":1598490316748},{"_id":"public/post/5fdb7ae9.html","hash":"c56e36611638cb91ba4b32cae9b9d1691a9c21b0","modified":1598490316749},{"_id":"public/post/ed6658a4.html","hash":"6f259eba63c1f76b008657e2f2710884047fd983","modified":1598490316749},{"_id":"public/top/index.html","hash":"a505c2365ddcd6d3a0885541929fd2b5df7c9cbd","modified":1598490316749},{"_id":"public/post/fe4ef317.html","hash":"b9e6aa781411a2db67bb9e25640ca4d81b9d2fea","modified":1598490316749},{"_id":"public/post/521a3173.html","hash":"24e01806666b592a964022050eb31b48312a888e","modified":1598490316749},{"_id":"public/post/256ed997.html","hash":"8a6a6dd8d02d6a21eb4858ebff9dab598222adb9","modified":1598490316750},{"_id":"public/post/bc197637.html","hash":"ef4cfb6f6b27b5a4e1fb6417f498d00a2786c2b0","modified":1598490316750},{"_id":"public/post/2bee8b90.html","hash":"2a138e5841da49bbcd3ccc10c8e1aff3e6e5472c","modified":1598490316750},{"_id":"public/post/c6360c4.html","hash":"34a9713c08d94bd3212b36ba022b1e74c58ae386","modified":1598490316750},{"_id":"public/post/1566eda6.html","hash":"90550b582d1680a9b714f9f0179b19b53ba7edb5","modified":1598490316750},{"_id":"public/post/7e6d3dbd.html","hash":"590246f9d069051e5186579c8d672b8b783cb4be","modified":1598490316750},{"_id":"public/post/a044f431.html","hash":"deed701ae64e264d1578855c0af3c3a96db83e27","modified":1598490316751},{"_id":"public/post/41bba354.html","hash":"1d3a6b915dfe0e517d242068667632a6164b68eb","modified":1598490316751},{"_id":"public/post/5f85a932.html","hash":"4de95b425e37b8e119f8cb71950e67a4b53df442","modified":1598490316751},{"_id":"public/post/1a300c2b.html","hash":"21a0b7e6960a890b88c8ca85a22f6ed40f9de565","modified":1598490316751},{"_id":"public/post/2b866d21.html","hash":"310f633e2258f7daef81cc7d9237745cfa211091","modified":1598490316751},{"_id":"public/post/d2fd1f13.html","hash":"8516ea7fa174f98fa1b45ccc80be047101a85d2b","modified":1598490316751},{"_id":"public/post/d3217c3b.html","hash":"159c31231b15780e47fbf8e0fc374e3950e839c5","modified":1598490316751},{"_id":"public/post/35a8cbed.html","hash":"44c5bb011a3359c77c70123b87745f87edcc324a","modified":1598490316752},{"_id":"public/post/8d14ac88.html","hash":"ba6327eaea0c610c0f75dc79ae90448255354a01","modified":1598490316752},{"_id":"public/post/75c0add7.html","hash":"7874b77562651b9180498eb82fbacf4a30fa568c","modified":1598490316752},{"_id":"public/post/2da3bd81.html","hash":"6b8ff71aa92fec7026cc1cae582f514e6f54a1ed","modified":1598490316752},{"_id":"public/post/951fdae4.html","hash":"df5fefd7af5875fefc1ffd59797f606dd303df6c","modified":1598490316752},{"_id":"public/post/bfc7c122.html","hash":"6c5a15d992808bf3d692ae2dd34594d4f3e419c5","modified":1598490316752},{"_id":"public/post/87aa750a.html","hash":"bb4e7948a503dca6873fea128f31aea59244b227","modified":1598490316753},{"_id":"public/post/a2c12ad6.html","hash":"01a4e51a2a0d85d4943733b3d33a4e1573091130","modified":1598490316753},{"_id":"public/post/3f16126f.html","hash":"34c48febb9c9750b6d01856b3dcf16b40d99ff37","modified":1598490316753},{"_id":"public/post/4546ca94.html","hash":"1e3de2e9cc34cb07561243127b5f0a1caa42c7d2","modified":1598490316753},{"_id":"public/post/1a7d4db3.html","hash":"13cb38d9e464d40882f8ad831909c6ea6f67634b","modified":1598490316753},{"_id":"public/post/38df1aba.html","hash":"1242af7d758615af165be9adfe643e46deb9c35c","modified":1598490316753},{"_id":"public/post/13c8d3a0.html","hash":"4e77e65c1d62d13df4697e632f62308b54f1d170","modified":1598490316754},{"_id":"public/post/1bb05bfb.html","hash":"19883cc7b0d0d241072f96893c06a867e0ca3043","modified":1598490316754},{"_id":"public/post/23e28675.html","hash":"b1fbc0874cda5e118a71476b51cb199c1093eaf4","modified":1598490316754},{"_id":"public/post/8c8e25d.html","hash":"0e736bb73d0cbbd3217402cb823585c164afa5a1","modified":1598490316754},{"_id":"public/post/fdf0e152.html","hash":"1b916499156dc447b8e6c4eef33a36ba455763c0","modified":1598490316754},{"_id":"public/post/a11ee691.html","hash":"17346de42a1e6744f0b5a4ff3df612a098fc1de7","modified":1598490316754},{"_id":"public/post/9a8cdc59.html","hash":"7e9df37f87ad7f6152aaa5526b27a55c96c03dc5","modified":1598490316754},{"_id":"public/post/cd12463.html","hash":"2914b70de4a3e773e1cfc86f04ae21c6794daed5","modified":1598490316755},{"_id":"public/post/fa0e7c88.html","hash":"474b2022d690c56e0211c397797b39d93f252df6","modified":1598490316755},{"_id":"public/post/106fc1c3.html","hash":"3d7485b0e55d180109f022c21034e39bbde00746","modified":1598490316755},{"_id":"public/post/16dd4349.html","hash":"9742426a686c0cd8787172eebe2f4bfdae08b0b0","modified":1598490316755},{"_id":"public/post/63840324.html","hash":"833d06e36eec0213de75c092502ee70ddde4846f","modified":1598490316755},{"_id":"public/post/51937609.html","hash":"97f26e50dd341d5107b4d59d638acb69c6ec54fe","modified":1598490316755},{"_id":"public/post/cf1235a7.html","hash":"70d48a8fc90a63a2c469f61cbf241f15f994f47d","modified":1598490316755},{"_id":"public/post/98bc273a.html","hash":"f7d114a72c3bbd20bb5594c08dee62fc8100c6be","modified":1598490316755},{"_id":"public/post/8b3b02a7.html","hash":"e01055189e1645640b561e062460858912bf46fd","modified":1598490316756},{"_id":"public/post/a84d1ef1.html","hash":"faa9f753deed16b8ad5f9580f5af03c2d0b07c04","modified":1598490316756},{"_id":"public/post/12acf01b.html","hash":"4be4026d21ad98f5bcdcfca777ce8f19707572a6","modified":1598490316756},{"_id":"public/post/40ae08c3.html","hash":"8df474b9b54b78d9ae3248ed5da06f571e54611b","modified":1598490316756},{"_id":"public/post/a033ab3f.html","hash":"8f98528362569a322a7c9b17cdc90c3835f1bb89","modified":1598490316756},{"_id":"public/post/60a25379.html","hash":"ac15119843adac2ebafe619a55ff5ac409f3e033","modified":1598490316756},{"_id":"public/post/74b1112a.html","hash":"22b2caef67a4e27170e7e8deff952089e6642a0d","modified":1598490316756},{"_id":"public/post/6d7b9178.html","hash":"b525e05a8dc992aa8fa09a7290645a07996739d3","modified":1598490316757},{"_id":"public/post/60cd4fc4.html","hash":"f5f0fe22a120a098be4d3e24550bde77f43720d5","modified":1598490316757},{"_id":"public/post/47112e7a.html","hash":"3db1c6c2c079ff7d76ab7520e6ac754b0cc8053d","modified":1598490316757},{"_id":"public/post/fec62b1b.html","hash":"cc01fe3d1407c764b64264f0394c37f64c3ddc82","modified":1598490316757},{"_id":"public/post/b04d82e3.html","hash":"ede7b38a95ba82ad17f3d4c516b15ead4771708a","modified":1598490316757},{"_id":"public/post/5133767d.html","hash":"b4e136c711b7fefaa3b6c39a1e6615c4aa162eac","modified":1598490316757},{"_id":"public/post/c9feff90.html","hash":"9159319093deee2680a433f3725b80b8396da7aa","modified":1598490316757},{"_id":"public/post/53b2030c.html","hash":"636824eaa52ab30c29a3ed2c7c64b81ae1590643","modified":1598490316757},{"_id":"public/post/29cebcea.html","hash":"44c3ed66d0593a631547c0dea5ca11083bf3ec4d","modified":1598490316758},{"_id":"public/post/30631cd4.html","hash":"eeeafa75db2edb44e9284a5dceb4d9d6d20f9d5e","modified":1598490316758},{"_id":"public/post/936c5fbe.html","hash":"040e13a0308abc5ca707ad681b446c2591bea726","modified":1598490316758},{"_id":"public/post/e07f2122.html","hash":"ba65e8e2d110ff884eb8d58bb4ce85d31a73f888","modified":1598490316758},{"_id":"public/post/65a05ef.html","hash":"53c93fc44d88b73f2c502d7926aad2798d8a1898","modified":1598490316758},{"_id":"public/post/fa20dd9d.html","hash":"6199961da592d608fd78bb16bfdfc95ce2750649","modified":1598490316758},{"_id":"public/post/4a17b156.html","hash":"8052e07029b55b1532e774cff24eca3f45617b16","modified":1598490316759},{"_id":"public/post/72dd6893.html","hash":"793bea690cfe6f8ecaaddcaa5b8075c5e16d82ee","modified":1598490316758},{"_id":"public/archives/index.html","hash":"b0f3f994452cd15cac964132ab10cf2774a5b09f","modified":1598490316759},{"_id":"public/post/d87f7e0c.html","hash":"35d4d31e35ae1cf1120865efd4c049467d657994","modified":1598490316758},{"_id":"public/categories/学习/index.html","hash":"719d04dc3c375bed529c8dc07de252503fb702eb","modified":1598490316759},{"_id":"public/categories/hexo/index.html","hash":"a207ae3fbe22ea8e04db805bac1bc450a90875ea","modified":1598490316759},{"_id":"public/categories/Android/index.html","hash":"9ec1a6ad444500ba67839442e42619daac739763","modified":1598490316759},{"_id":"public/categories/Java/index.html","hash":"ed34cf46942482d5832c819a67886a99d80e1089","modified":1598490316759},{"_id":"public/categories/Java/page/2/index.html","hash":"79e83a6d77c709211779709e1e56722d6d54956b","modified":1598490316759},{"_id":"public/categories/系统/index.html","hash":"68a10c81d7f5134972d90d04bd338d20578faddb","modified":1598490316760},{"_id":"public/categories/python/index.html","hash":"55cbc8bc4b4ff7cd9a121e9c00a2dc9505444903","modified":1598490316760},{"_id":"public/categories/音乐/index.html","hash":"d93197fd74ad72dec295422227e66fb266b69778","modified":1598490316760},{"_id":"public/categories/数据库/index.html","hash":"2c88727d5378040d0e8eedf29175cceda8eed205","modified":1598490316759},{"_id":"public/categories/docker/index.html","hash":"f7877ddf22e6cc97dd0304bf7a9a8f05a1fb29ed","modified":1598490316760},{"_id":"public/categories/Linux/index.html","hash":"dda456e2ab8e127c86a88ea70163283091344397","modified":1598490316760},{"_id":"public/categories/vps/index.html","hash":"c9575cc7d6ad22975c77a09e36c2fc6bc881d491","modified":1598490316760},{"_id":"public/categories/网络/index.html","hash":"5abb7ac09d4cef7d30bd3327aabd93309a748766","modified":1598490316760},{"_id":"public/categories/闲读/index.html","hash":"800cbc9d2f49eaa356721c0cee0aec4894dfe1e3","modified":1598490316760},{"_id":"public/categories/汇编/index.html","hash":"74ee2adad33ea207873bc5578313033bdb592a9f","modified":1598490316761},{"_id":"public/index.html","hash":"7e54360f49ae0312ad6c691e975588e90b156cde","modified":1598490316761},{"_id":"public/categories/转载/index.html","hash":"4cadc24157a2fb2d4e935db0c5e3105a7f55d550","modified":1598490316761},{"_id":"public/categories/比特币/index.html","hash":"cd049a280a4405ced832c23d8b7b833b9a7fde44","modified":1598490316761},{"_id":"public/page/3/index.html","hash":"23ce6693476611d54deb6c72d40f9c18d6ccb39d","modified":1598490316762},{"_id":"public/categories/C-C/index.html","hash":"f40777d91fd8e7e1407198083294cf6913191187","modified":1598490316761},{"_id":"public/page/2/index.html","hash":"c99c85f091041f1e3aed67109586cbd96e98cd46","modified":1598490316762},{"_id":"public/page/4/index.html","hash":"206deb583c359cb1ce0aa6e926fae4a663d6e376","modified":1598490316762},{"_id":"public/tags/Android/index.html","hash":"236af58f460a56a8d5f1b24f09edbffa87400c5d","modified":1598490316762},{"_id":"public/page/5/index.html","hash":"9826ddb188a23c35492a47499b43a2aa4362c3a3","modified":1598490316762},{"_id":"public/tags/hexo/index.html","hash":"30cf049b633fdf52ec4b5a356e355e16ee900c8c","modified":1598490316763},{"_id":"public/tags/学习/index.html","hash":"fe7aebcfa5844464c24fb6fc2ec7af20991bf2ae","modified":1598490316762},{"_id":"public/tags/Java/index.html","hash":"d2bae50a4a62aa4dd52ea73ac0f3fd89e850b077","modified":1598490316763},{"_id":"public/tags/Java/page/2/index.html","hash":"b7ebe98a7b7303d241fe644f0379e85d68d452de","modified":1598490316763},{"_id":"public/tags/Java开发工具/index.html","hash":"fb7f50861c65ba09dd8628a6dc4a3deb69f7976c","modified":1598490316763},{"_id":"public/tags/MySQL/index.html","hash":"14160a50ac87ee47c2ad26e51b3e1bf360494003","modified":1598490316763},{"_id":"public/tags/python/index.html","hash":"5ea365cc256d44621b4ca0ef02938db6111ccccf","modified":1598490316764},{"_id":"public/tags/数据库/index.html","hash":"82790ca586045d462c2e9b1535982bba74dccb36","modified":1598490316763},{"_id":"public/tags/教程/index.html","hash":"de1c531c7632c1e317869d4d02e0253fcc062998","modified":1598490316764},{"_id":"public/tags/Linux/index.html","hash":"7602fa48d5eb75ccb9b36b8a53d717c87e4388da","modified":1598490316764},{"_id":"public/tags/uefi/index.html","hash":"33c66b05f9a89e6c644bcb83d1d8a5112bd3a21c","modified":1598490316764},{"_id":"public/tags/Ubuntu/index.html","hash":"bdad3bb0ce96b8a571d598d5af8d8ee2a692b29f","modified":1598490316764},{"_id":"public/tags/C-C/index.html","hash":"17055d91f75c2cbca916af4ffaf80ff8e3a90e46","modified":1598490316764},{"_id":"public/tags/docker/index.html","hash":"0096453badd0f48088b024e68af614b8c90797b8","modified":1598490316765},{"_id":"public/tags/Testing/index.html","hash":"6f6831b15bb3ef685061c17cb83e4bf36a873a1b","modified":1598490316764},{"_id":"public/tags/vps/index.html","hash":"9bac52fd1d1cdd4012b7b21b251749ff31fa152a","modified":1598490316765},{"_id":"public/tags/爬虫/index.html","hash":"ceff398020784476eac0c9da36e95632c09801b9","modified":1598490316765},{"_id":"public/tags/生活/index.html","hash":"614233c24efb8246010d7f5e1a253792eb20d2d3","modified":1598490316765},{"_id":"public/tags/windows/index.html","hash":"e7b5c9ed7095de9f23119e86b1b4f97dc01a4013","modified":1598490316765},{"_id":"public/tags/免流/index.html","hash":"153db8b446badbe3a90519eb7e6ba6469a6a8056","modified":1598490316765},{"_id":"public/tags/梦想/index.html","hash":"c5829ccc0c685c648ca99bea4c31a7d6457618bd","modified":1598490316765},{"_id":"public/tags/网络/index.html","hash":"a4519f2829cd53caf2d585e307f7468f75d3199d","modified":1598490316766},{"_id":"public/tags/eNSP/index.html","hash":"e702c9dce9454b5855302f4b74c1babcd3de7210","modified":1598490316766},{"_id":"public/tags/ICT/index.html","hash":"03102c9f7e0ebaf52c3b3ef2cf71113152e2b1f8","modified":1598490316766},{"_id":"public/tags/数据通信/index.html","hash":"15dada5329062edb1e810e38e882c54a5ea3ee1e","modified":1598490316767},{"_id":"public/tags/励志/index.html","hash":"91b1c7f0924826b7727414587d5dd6690b34d1df","modified":1598490316768},{"_id":"public/tags/汇编/index.html","hash":"8d751c6fe25f7b5c3bbe7ecdb4881d5b9f8f410e","modified":1598490316768},{"_id":"public/tags/情感/index.html","hash":"7e0786618e30a1a91c4de762650e3549c6a889dd","modified":1598490316767},{"_id":"public/tags/区块链/index.html","hash":"025e4edfe1aa7668b154ba31a31559f5d8504b45","modified":1598490316768},{"_id":"public/tags/比特币/index.html","hash":"ade40b05bfd142a6d023489e0effc5dc2468c61c","modified":1598490316769},{"_id":"public/tags/课程设计/index.html","hash":"8fb8632d81c90f5ea37421d3e674a12ea0c633c5","modified":1598490316769},{"_id":"public/lib/blog-encrypt.js","hash":"c9c3cd609c4d93a377849a010497a8eea2a0576e","modified":1598488569864},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1598488569874},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1598488569874},{"_id":"public/README.md","hash":"6ed35df17d59a83196bba7e60c4fedd307cbd137","modified":1598488569874},{"_id":"public/404.html","hash":"9eb955271b03c72a4bb23a06b60e4ecb4070a880","modified":1598488569874},{"_id":"public/CNAME","hash":"e9d2af314350bd5792abe8ab16cb76e636595ec4","modified":1598488569874},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1598488569874},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1598488569874},{"_id":"public/images/favicon-16x16-next.ico","hash":"8a834aa09e23681cdf9883e469ae66c75bb7de6c","modified":1598488569874},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1598488569874},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1598488569874},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1598488569874},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1598488569875},{"_id":"public/images/head.png","hash":"bc1a8567e91234d0cc84a2e8ef9e7ef03eafd94a","modified":1598488569875},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1598488569875},{"_id":"public/images/favicon-48x48-next.ico","hash":"9196cbe3fdafe9fdb63dc5d1f8e2dcca816b5aee","modified":1598488569875},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1598488571768},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1598488571768},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1598488571768},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1598488571768},{"_id":"public/images/favicon-32x32-next.ico","hash":"bef23d3157a0963ad9ef7d55c16dadc0497ef288","modified":1598488571768},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1598488571768},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1598488571768},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1598488571769},{"_id":"public/lib/bookmark/LICENSE","hash":"c3036598ab8f45797460e48880c9e859268d574a","modified":1598488571769},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1598488571769},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1598488571769},{"_id":"public/lib/canvas-nest/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1598488571769},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1598488571769},{"_id":"public/lib/fancybox/LICENSE","hash":"7713a1753ce88f2c7e6b054ecc8e4c786df76300","modified":1598488571769},{"_id":"public/lib/pace/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1598488571769},{"_id":"public/lib/reading_progress/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1598488571769},{"_id":"public/lib/pangu/LICENSE","hash":"0b609305c50cdc3f1ef5ec9e7d2e174f7f99a183","modified":1598488571769},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1598488571769},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1598488571769},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1598488571769},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1598488571769},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1598488571770},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1598488571770},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1598488571770},{"_id":"public/lib/pangu/dist/pangu.js.map","hash":"6a7c5927e3410ed4dfe14caa9fb2eb115d85e5e7","modified":1598488571770},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1598488571770},{"_id":"public/lib/pangu/dist/pangu.min.js.map","hash":"1aa0d935665a2f075bbc4b5f0a53bbfaece12c5b","modified":1598488571770},{"_id":"public/css/blog-encrypt.css","hash":"b609ba95748409b03ef3386681d43bd1739399c8","modified":1598488571770},{"_id":"public/live2dw/assets/miku.model.json","hash":"32e49dfc6cb4d9c537453bb083aab39ed708c476","modified":1598488571770},{"_id":"public/live2dw/assets/miku.physics.json","hash":"d5ca7f215044ba5bf1cdb8045a5c99b64ec258ce","modified":1598488571770},{"_id":"public/live2dw/assets/mtn/miku_idle_01.mtn","hash":"5633f73601cf8b0a318e7a7265f71cc782683251","modified":1598488571770},{"_id":"public/live2dw/assets/mtn/miku_m_02.mtn","hash":"2eda9602d626d89285e0c0c5f564383964516cc8","modified":1598488571770},{"_id":"public/live2dw/assets/mtn/miku_m_03.mtn","hash":"94ef9d31a78f7f90d3fb213c4353afbdb3462cff","modified":1598488571770},{"_id":"public/live2dw/assets/mtn/miku_m_06.mtn","hash":"0bfd6ad29e5e171a1ce03a7acb8ffcca9f463902","modified":1598488571770},{"_id":"public/live2dw/assets/mtn/miku_m_05.mtn","hash":"73b9b162c1dbf9a6747364ae47b12cba9da0bbec","modified":1598488571770},{"_id":"public/live2dw/assets/mtn/miku_m_04.mtn","hash":"5c440e8f4cd45e73a7c8044ea0e2ea11234f9fd9","modified":1598488571771},{"_id":"public/live2dw/assets/mtn/miku_shake_01.mtn","hash":"190875ab6cdeee7ae87c4c296429b848c942dd8a","modified":1598488571771},{"_id":"public/live2dw/assets/mtn/miku_m_01.mtn","hash":"bd0ea5f2f0528b21c4e5632838b69e478b652e88","modified":1598488571771},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"77b9cffc61987bd179b7ba289eb1e5296d8ef345","modified":1598488571771},{"_id":"public/assets/js/Meting.min.js","hash":"5e3fda3405bf0ff3a8323613bd91df7d9dbe8a1f","modified":1598488571771},{"_id":"public/assets/css/APlayer.min.css","hash":"7f4f8913f2d46ade2def5134e2cc8684a4b87939","modified":1598488571771},{"_id":"public/assets/js/APlayer.min.js","hash":"70c0c4a9bf698747b7c058c21287ad617355e5dd","modified":1598488571771},{"_id":"public/css/main.css","hash":"97dce6e03403beb93be965ba93ed561e56860e3b","modified":1598488571859},{"_id":"public/images/apple-touch-icon-next.ico","hash":"68ba846ba64c86d2ca4a5ce78de31f34a6b911bc","modified":1598488571859},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1598488571859},{"_id":"public/lib/bookmark/bookmark.min.js","hash":"9e525329553335c2484f6faf9e933a6bbee9ab6d","modified":1598488571864},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1598488571865},{"_id":"public/lib/bookmark/package.json","hash":"9f06f3432c12b68a2c2fe3f318455b35a965a1da","modified":1598488571865},{"_id":"public/lib/bookmark/index.js","hash":"5e5cba645a1a4531ccbb4782df2f7a075626393f","modified":1598488571865},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1598488571865},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1598488571865},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1598488571865},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1598488571865},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1598488571865},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1598488571865},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1598488571866},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1598488571866},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1598488571866},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1598488571866},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1598488571866},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1598488571866},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1598488571866},{"_id":"public/lib/reading_progress/reading_progress.js","hash":"174678a8e2a24763e3fe8b9c25496fdf6ee0220b","modified":1598488571866},{"_id":"public/lib/reading_progress/reading_progress.min.js","hash":"98af8d99819882904f9b1a9254bebf40602e1843","modified":1598488571866},{"_id":"public/lib/reading_progress/package.json","hash":"e404a0bdf26df62eb89173c6fe5f5824345801c5","modified":1598488571867},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1598488571867},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1598488571868},{"_id":"public/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1598488571868},{"_id":"public/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1598488571868},{"_id":"public/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1598488571868},{"_id":"public/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1598488571868},{"_id":"public/js/src/clicklove.js","hash":"effa770d8085f7e7fb903de217ce521dff163780","modified":1598488571868},{"_id":"public/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1598488571868},{"_id":"public/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1598488571868},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1598488571868},{"_id":"public/js/src/motion.js","hash":"52fd093cb96b68229b38436c9b8ebcefc7e12cb2","modified":1598488571868},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1598488571869},{"_id":"public/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1598488571869},{"_id":"public/js/src/utils.js","hash":"e829806d054991d0324a339993082206ca6026e5","modified":1598488571869},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1598488571869},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1598488571869},{"_id":"public/lib/pangu/dist/pangu.min.js","hash":"9887d0641d828b330969dc2f81f6d45a1e97be2c","modified":1598488571869},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1598488571871},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1598488571871},{"_id":"public/js/src/schemes/pisces.js","hash":"ab6f13fae0513a9b39f8d8c4c3a4e3928014f046","modified":1598488571871},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1598488571871},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1598488571871},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1598488571871},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1598488571872},{"_id":"public/lib/bookmark/README.html","hash":"0ae3ecac12edcdcdd8b91ef7408f61f1dd206abf","modified":1598488571872},{"_id":"public/lib/fancybox/README.html","hash":"e6797096bbb275bb3917cbe24470c3427dc423f2","modified":1598488571872},{"_id":"public/lib/canvas-nest/README.html","hash":"ef9c2ecc43a05f62e7434ca87b4f171ec6723b49","modified":1598488571872},{"_id":"public/lib/pace/README.html","hash":"18aab025b9e25e0196ef9ad786b1681231415de6","modified":1598488571872},{"_id":"public/lib/reading_progress/README.html","hash":"b5eae674e7b863f4897b152e74e2212b9d43741c","modified":1598488571872},{"_id":"public/lib/pangu/README.html","hash":"75a01de707e0c04527ce5cb5291d465339399e43","modified":1598488571873},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1598488571873},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1598488571873},{"_id":"public/js/src/Valine.min.js","hash":"4b220ba942d838037ae59448596106e8b3cab0b8","modified":1598488571873},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1598488571873},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1598488571873},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1598488571874},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1598488571874},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1598488571874},{"_id":"public/js/src/av-min.js","hash":"2577e72b52b736d99649f9e95be8976d58563333","modified":1598488571874},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1598488571874},{"_id":"public/lib/pangu/dist/pangu.js","hash":"8f2c5a78edf77a7e4a6d04e7dd568d544cc93737","modified":1598488571874},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1598488571874},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1598488571875},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"94121cfcd4d0911a8314ab98efa7440dbabafe37","modified":1598488571875},{"_id":"public/images/background1.jpg","hash":"49bd8a4f8d805ed3c522cac1e9da049a9a4d516b","modified":1598488571877},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1598488571877},{"_id":"public/live2dw/assets/moc/miku.moc","hash":"a57e92e12f1fcb21d4d3a9ac34f01badbeff3671","modified":1598488571878},{"_id":"public/lib/crypto-js.js","hash":"ddacd177f23f65ff97b93b0417048f51928ee17e","modified":1598488574255},{"_id":"public/images/background5.jpg","hash":"d5dd1613915b8d20b1504fb7390d86c0a241a2ec","modified":1598488574375},{"_id":"public/images/background6.jpg","hash":"a8621ebd65fa3ac0323a65f594aff614c291938d","modified":1598488574411},{"_id":"public/images/background3.jpg","hash":"543dbadc0bdb9d6072796eee2c116ebde567c210","modified":1598488574411},{"_id":"public/images/background4.jpg","hash":"615cc9a8cb9870991b48e9eaf2010b55d646244b","modified":1598488574593},{"_id":"public/images/background2.jpg","hash":"bf58eca1022e6d04f1702f17f8a7dc191651ae15","modified":1598488574595},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1598488574595},{"_id":"public/live2dw/assets/moc/miku.2048/texture_00.png","hash":"26fe101720ab8e55fb62c87b563d0dbb903c5eaf","modified":1598488574626},{"_id":"source/_posts/前端vue项目配置与运行.md","hash":"3d540cb47739da90cc04416d6acee73bcccdd60a","modified":1598488614971},{"_id":"public/post/ead1bac9.html","hash":"b247496a7e2fbbe75d49fad41ef85bb15ad3df90","modified":1598490316775}],"Category":[{"name":"Android","_id":"ckec2tdad0021fkup0amm5aaa"},{"name":"学习","_id":"ckec2tdav0023fkup6qv7gfv5"},{"name":"hexo","_id":"ckec2tday0027fkup51jn5soq"},{"name":"Java","_id":"ckec2tdaz0029fkup5wa4n3d3"},{"name":"数据库","_id":"ckec2tdbe002vfkupyt7r7a62"},{"name":"音乐","_id":"ckec2tdbi0031fkup3odp7av7"},{"name":"python","_id":"ckec2tdbj0033fkup7kvl2t3n"},{"name":"系统","_id":"ckec2tdbk0035fkupqlj37tvt"},{"name":"docker","_id":"ckec2tdbo003dfkupkn2daz00"},{"name":"Linux","_id":"ckec2tdbx003nfkupdk0gsm3d"},{"name":"vps","_id":"ckec2tdc0003rfkup8sraa7b3"},{"name":"闲读","_id":"ckec2tdc70041fkup3z0hd21w"},{"name":"网络","_id":"ckec2tdc90045fkupozjnsk69"},{"name":"汇编","_id":"ckec2tdci004jfkupdq8wq1r6"},{"name":"转载","_id":"ckec2tdcq004zfkupte0ix9j1"},{"name":"比特币","_id":"ckec2tdcr0051fkupm06vsm1z"},{"name":"C/C++","_id":"ckec2tdcs0053fkupiwwkbdfw"}],"Data":[],"Page":[{"title":"标签","date":"2018-01-24T12:06:57.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-01-24 20:06:57\ntype: \"tags\"\ncomments: false\n---","updated":"2020-02-20T06:06:59.443Z","path":"tags/index.html","layout":"page","_id":"ckec2td1g0000fkupxu9hbq6y","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"","date":"2018-01-24T12:08:17.000Z","type":"about","comments":0,"_content":"\n ### &nbsp;about\n \n ###  &nbsp;个人简介\n\n &emsp;&emsp;&emsp;CZLisyx\n  &emsp;&emsp;&emsp;略懂 C Java\n   &emsp;&emsp;&emsp;来自山西  就读于北京\n    &emsp;&emsp;&emsp;Email: cxsz16888@gmail.com\n\t\n\n### &nbsp;关于本站\n\n&emsp;&emsp;&emsp;hexo主题托管于[hexo-next][1]\n&emsp;&emsp;&emsp;本站托管在[Github](https://github.com/zyd16888/zyd16888.github.io)\n&emsp;&emsp;&emsp;Hexo搭建博客指南:[Next主题](http://theme-next.iissnan.com)\n&emsp;&emsp;&emsp;~~折腾开始于2018年1月20日，基本在2018年1月25日完工。~~\n&emsp;&emsp;&emsp;2018年7月29日~2018年8月12日左右，整站进行升级\n&emsp;&emsp;&emsp;重写大部分页面UI，hexo版本升级到3.7.2，nexT主题更换为6.4版本，增加评论功能\n&emsp;&emsp;&emsp;接入又拍云CDN，国内走CDN链接，国外直连\n\n&emsp;&emsp;&emsp;19.3.7 hexo更新为3.9.0，渲染速度加快，next主题因修改的部分太多，无法升级\n\n&emsp;&emsp;&emsp;19.5.24 接入融云备份，提高安全性\n\n\n### &nbsp;其他流言\n\n&emsp;&emsp;&emsp;宅\n&emsp;&emsp;&emsp;fps游戏爱好者\n&emsp;&emsp;&emsp;切尔西球迷\n\n\n  [1]: https://github.com/zyd16888/hexo-theme-next","source":"about/index.md","raw":"---\ntitle:\ndate: 2018-01-24 20:08:17\ntype: \"about\"\ncomments: false\n---\n\n ### &nbsp;about\n \n ###  &nbsp;个人简介\n\n &emsp;&emsp;&emsp;CZLisyx\n  &emsp;&emsp;&emsp;略懂 C Java\n   &emsp;&emsp;&emsp;来自山西  就读于北京\n    &emsp;&emsp;&emsp;Email: cxsz16888@gmail.com\n\t\n\n### &nbsp;关于本站\n\n&emsp;&emsp;&emsp;hexo主题托管于[hexo-next][1]\n&emsp;&emsp;&emsp;本站托管在[Github](https://github.com/zyd16888/zyd16888.github.io)\n&emsp;&emsp;&emsp;Hexo搭建博客指南:[Next主题](http://theme-next.iissnan.com)\n&emsp;&emsp;&emsp;~~折腾开始于2018年1月20日，基本在2018年1月25日完工。~~\n&emsp;&emsp;&emsp;2018年7月29日~2018年8月12日左右，整站进行升级\n&emsp;&emsp;&emsp;重写大部分页面UI，hexo版本升级到3.7.2，nexT主题更换为6.4版本，增加评论功能\n&emsp;&emsp;&emsp;接入又拍云CDN，国内走CDN链接，国外直连\n\n&emsp;&emsp;&emsp;19.3.7 hexo更新为3.9.0，渲染速度加快，next主题因修改的部分太多，无法升级\n\n&emsp;&emsp;&emsp;19.5.24 接入融云备份，提高安全性\n\n\n### &nbsp;其他流言\n\n&emsp;&emsp;&emsp;宅\n&emsp;&emsp;&emsp;fps游戏爱好者\n&emsp;&emsp;&emsp;切尔西球迷\n\n\n  [1]: https://github.com/zyd16888/hexo-theme-next","updated":"2020-02-20T06:06:59.439Z","path":"about/index.html","layout":"page","_id":"ckec2td1s0002fkup77h8zujj","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h3 id=\"about\"><a class=\"header-anchor\" href=\"#about\">☆</a> about</h3>\n<h3 id=\"个人简介\"><a class=\"header-anchor\" href=\"#个人简介\">☆</a> 个人简介</h3>\n<p>   CZLisyx<br>\n   略懂 C Java<br>\n   来自山西  就读于北京<br>\n   Email: <a href=\"mailto:cxsz16888@gmail.com\" target=\"_blank\" rel=\"noopener\">cxsz16888@gmail.com</a></p>\n<h3 id=\"关于本站\"><a class=\"header-anchor\" href=\"#关于本站\">☆</a> 关于本站</h3>\n<p>   hexo主题托管于<a href=\"https://github.com/zyd16888/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">hexo-next</a><br>\n   本站托管在<a href=\"https://github.com/zyd16888/zyd16888.github.io\" target=\"_blank\" rel=\"noopener\">Github</a><br>\n   Hexo搭建博客指南:<a href=\"http://theme-next.iissnan.com\" target=\"_blank\" rel=\"noopener\">Next主题</a><br>\n   <s>折腾开始于2018年1月20日，基本在2018年1月25日完工。</s><br>\n   2018年7月29日~2018年8月12日左右，整站进行升级<br>\n   重写大部分页面UI，hexo版本升级到3.7.2，nexT主题更换为6.4版本，增加评论功能<br>\n   接入又拍云CDN，国内走CDN链接，国外直连</p>\n<p>   19.3.7 hexo更新为3.9.0，渲染速度加快，next主题因修改的部分太多，无法升级</p>\n<p>   19.5.24 接入融云备份，提高安全性</p>\n<h3 id=\"其他流言\"><a class=\"header-anchor\" href=\"#其他流言\">☆</a> 其他流言</h3>\n<p>   宅<br>\n   fps游戏爱好者<br>\n   切尔西球迷</p>\n","site":{"data":{}},"length":382,"excerpt":"","more":"<h3 id=\"about\"><a class=\"header-anchor\" href=\"#about\">☆</a> about</h3>\n<h3 id=\"个人简介\"><a class=\"header-anchor\" href=\"#个人简介\">☆</a> 个人简介</h3>\n<p>   CZLisyx<br>\n   略懂 C Java<br>\n   来自山西  就读于北京<br>\n   Email: <a href=\"mailto:cxsz16888@gmail.com\" target=\"_blank\" rel=\"noopener\">cxsz16888@gmail.com</a></p>\n<h3 id=\"关于本站\"><a class=\"header-anchor\" href=\"#关于本站\">☆</a> 关于本站</h3>\n<p>   hexo主题托管于<a href=\"https://github.com/zyd16888/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">hexo-next</a><br>\n   本站托管在<a href=\"https://github.com/zyd16888/zyd16888.github.io\" target=\"_blank\" rel=\"noopener\">Github</a><br>\n   Hexo搭建博客指南:<a href=\"http://theme-next.iissnan.com\" target=\"_blank\" rel=\"noopener\">Next主题</a><br>\n   <s>折腾开始于2018年1月20日，基本在2018年1月25日完工。</s><br>\n   2018年7月29日~2018年8月12日左右，整站进行升级<br>\n   重写大部分页面UI，hexo版本升级到3.7.2，nexT主题更换为6.4版本，增加评论功能<br>\n   接入又拍云CDN，国内走CDN链接，国外直连</p>\n<p>   19.3.7 hexo更新为3.9.0，渲染速度加快，next主题因修改的部分太多，无法升级</p>\n<p>   19.5.24 接入融云备份，提高安全性</p>\n<h3 id=\"其他流言\"><a class=\"header-anchor\" href=\"#其他流言\">☆</a> 其他流言</h3>\n<p>   宅<br>\n   fps游戏爱好者<br>\n   切尔西球迷</p>\n"},{"title":"categories","date":"2017-08-01T08:22:26.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-08-01 16:22:26\ntype: \"categories\"\ncomments: false\n---\n","updated":"2020-02-20T06:06:59.441Z","path":"categories/index.html","layout":"page","_id":"ckec2td1x0004fkupiq7iwv1s","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>","site":{"data":{}},"length":0,"excerpt":"","more":""},{"title":"TopX","comments":0,"keywords":"top,文章阅读量排行榜","description":"博客文章阅读量排行榜","_content":"<div id=\"top\"></div>\n<script src=\"https://cdn1.lncld.net/static/js/av-core-mini-0.6.4.js\"></script>\n<script>AV.initialize(\"8QMj0uOJdczOlxeHKH2i6Spb-gzGzoHsz\", \"AGFEQO5aIXQBAGF5mc5N2tHL\");</script>\n<script type=\"text/javascript\">\n  var time=0\n  var title=\"\"\n  var url=\"\"\n  var query = new AV.Query('Counter');\n  query.notEqualTo('id',0);\n  query.descending('time');\n  query.limit(1000);\n  query.find().then(function (todo) {\n    for (var i=0;i<1000;i++){\n      var result=todo[i].attributes;\n      time=result.time;\n      title=result.title;\n      url=result.url;\n      var content=\"<a href='\"+\"https://www.singlelovely.cn\"+url+\"'>\"+title+\"</a>\"+\"<br />\"+\"<font color='#555'>\"+\"阅读次数：\"+time+\"</font>\"+\"<br /><br />\";\n      document.getElementById(\"top\").innerHTML+=content\n    }\n  }, function (error) {\n    console.log(\"error\");\n  });\n</script>\n<p>LeanCloud 因实名认证问题（需要支付宝刷脸认证，但当前手机不支持刷脸，问题暂时无解），请求可能会出问题，如未正常显示，请谅解。。。</p>\n<style>.post-description { display: none; }<style>","source":"top/index.md","raw":"---\ntitle: TopX\ncomments: false\nkeywords: top,文章阅读量排行榜\ndescription: 博客文章阅读量排行榜\n---\n<div id=\"top\"></div>\n<script src=\"https://cdn1.lncld.net/static/js/av-core-mini-0.6.4.js\"></script>\n<script>AV.initialize(\"8QMj0uOJdczOlxeHKH2i6Spb-gzGzoHsz\", \"AGFEQO5aIXQBAGF5mc5N2tHL\");</script>\n<script type=\"text/javascript\">\n  var time=0\n  var title=\"\"\n  var url=\"\"\n  var query = new AV.Query('Counter');\n  query.notEqualTo('id',0);\n  query.descending('time');\n  query.limit(1000);\n  query.find().then(function (todo) {\n    for (var i=0;i<1000;i++){\n      var result=todo[i].attributes;\n      time=result.time;\n      title=result.title;\n      url=result.url;\n      var content=\"<a href='\"+\"https://www.singlelovely.cn\"+url+\"'>\"+title+\"</a>\"+\"<br />\"+\"<font color='#555'>\"+\"阅读次数：\"+time+\"</font>\"+\"<br /><br />\";\n      document.getElementById(\"top\").innerHTML+=content\n    }\n  }, function (error) {\n    console.log(\"error\");\n  });\n</script>\n<p>LeanCloud 因实名认证问题（需要支付宝刷脸认证，但当前手机不支持刷脸，问题暂时无解），请求可能会出问题，如未正常显示，请谅解。。。</p>\n<style>.post-description { display: none; }<style>","date":"2020-04-24T09:46:27.279Z","updated":"2020-04-24T09:46:27.279Z","path":"top/index.html","layout":"page","_id":"ckec2td220006fkupa5mhzf7s","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><div id=\"top\"></div>\n<script src=\"https://cdn1.lncld.net/static/js/av-core-mini-0.6.4.js\"></script>\n<script>AV.initialize(\"8QMj0uOJdczOlxeHKH2i6Spb-gzGzoHsz\", \"AGFEQO5aIXQBAGF5mc5N2tHL\");</script>\n<script type=\"text/javascript\">\n  var time=0\n  var title=\"\"\n  var url=\"\"\n  var query = new AV.Query('Counter');\n  query.notEqualTo('id',0);\n  query.descending('time');\n  query.limit(1000);\n  query.find().then(function (todo) {\n    for (var i=0;i<1000;i++){\n      var result=todo[i].attributes;\n      time=result.time;\n      title=result.title;\n      url=result.url;\n      var content=\"<a href='\"+\"https://www.singlelovely.cn\"+url+\"'>\"+title+\"</a>\"+\"<br />\"+\"<font color='#555'>\"+\"阅读次数：\"+time+\"</font>\"+\"<br /><br />\";\n      document.getElementById(\"top\").innerHTML+=content\n    }\n  }, function (error) {\n    console.log(\"error\");\n  });\n</script>\n<p>LeanCloud 因实名认证问题（需要支付宝刷脸认证，但当前手机不支持刷脸，问题暂时无解），请求可能会出问题，如未正常显示，请谅解。。。</p>\n<style>.post-description { display: none; }<style></style>","site":{"data":{}},"length":284,"excerpt":"","more":"<div id=\"top\"></div>\n<script src=\"https://cdn1.lncld.net/static/js/av-core-mini-0.6.4.js\"></script>\n<script>AV.initialize(\"8QMj0uOJdczOlxeHKH2i6Spb-gzGzoHsz\", \"AGFEQO5aIXQBAGF5mc5N2tHL\");</script>\n<script type=\"text/javascript\">\n  var time=0\n  var title=\"\"\n  var url=\"\"\n  var query = new AV.Query('Counter');\n  query.notEqualTo('id',0);\n  query.descending('time');\n  query.limit(1000);\n  query.find().then(function (todo) {\n    for (var i=0;i<1000;i++){\n      var result=todo[i].attributes;\n      time=result.time;\n      title=result.title;\n      url=result.url;\n      var content=\"<a href='\"+\"https://www.singlelovely.cn\"+url+\"'>\"+title+\"</a>\"+\"<br />\"+\"<font color='#555'>\"+\"阅读次数：\"+time+\"</font>\"+\"<br /><br />\";\n      document.getElementById(\"top\").innerHTML+=content\n    }\n  }, function (error) {\n    console.log(\"error\");\n  });\n</script>\n<p>LeanCloud 因实名认证问题（需要支付宝刷脸认证，但当前手机不支持刷脸，问题暂时无解），请求可能会出问题，如未正常显示，请谅解。。。</p>\n<style>.post-description { display: none; }<style></style>"}],"Post":[{"title":"Could not find com.android.tools.build:gradle:3.0.0","copyright":true,"abbrlink":"5133767d","date":"2018-03-02T12:47:08.000Z","password":null,"_content":"\n今天更新了Android Studio版本后，运行以前的项目时突然出现了下面的错误：\n`Searched in the following locations:\n    file:/G:/Android/Android Studio/gradle/m2repository/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.pom\n    file:/G:/Android/Android Studio/gradle/m2repository/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.jar\n    https://jcenter.bintray.com/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.pom\n    https://jcenter.bintray.com/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.jar\nRequired by:\n    project :\n<a href=\"add.google.maven.repository\">Add Google Maven repository and sync project</a><br><a href=\"openFile:C:\\\\Users\\\\dong\\\\AndroidStudioProjects\\\\PraClock-master-333c8464e4a6120e4a7c8235a11d5670005296dc\\\\build.gradle\">Open File</a>\n`\n按照提示路径找到文件位置G:/Android/Android Studio/gradle/m2repository/com/android/tools/build/gradle\n![][1]\n\n发现是没有3.0.0的gradle造成的\n找到项目中的gradle文件，将下面的位置更改即可\n![][2]\n\n然后点击sync或者try again刷新一下，问题解决。\n\n\n\n\n  [1]: https://data.singlelovely.cn/xsj/20182/NDGcPRDMONQ53NVOKVA2K.png\n  [2]: https://data.singlelovely.cn/xsj/20182/7OX%29OQX2%5B9_G%7BO2NI8F9E15.png","source":"_posts/Gradle版本问题.md","raw":"---\ntitle: 'Could not find com.android.tools.build:gradle:3.0.0'\ntags:\n  - Android\n  - 学习\ncategories: Android\ncopyright: true\nabbrlink: 5133767d\ndate: 2018-03-02 20:47:08\npassword:\n---\n\n今天更新了Android Studio版本后，运行以前的项目时突然出现了下面的错误：\n`Searched in the following locations:\n    file:/G:/Android/Android Studio/gradle/m2repository/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.pom\n    file:/G:/Android/Android Studio/gradle/m2repository/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.jar\n    https://jcenter.bintray.com/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.pom\n    https://jcenter.bintray.com/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.jar\nRequired by:\n    project :\n<a href=\"add.google.maven.repository\">Add Google Maven repository and sync project</a><br><a href=\"openFile:C:\\\\Users\\\\dong\\\\AndroidStudioProjects\\\\PraClock-master-333c8464e4a6120e4a7c8235a11d5670005296dc\\\\build.gradle\">Open File</a>\n`\n按照提示路径找到文件位置G:/Android/Android Studio/gradle/m2repository/com/android/tools/build/gradle\n![][1]\n\n发现是没有3.0.0的gradle造成的\n找到项目中的gradle文件，将下面的位置更改即可\n![][2]\n\n然后点击sync或者try again刷新一下，问题解决。\n\n\n\n\n  [1]: https://data.singlelovely.cn/xsj/20182/NDGcPRDMONQ53NVOKVA2K.png\n  [2]: https://data.singlelovely.cn/xsj/20182/7OX%29OQX2%5B9_G%7BO2NI8F9E15.png","slug":"Gradle版本问题","published":1,"updated":"2020-02-20T06:06:59.361Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td1j0001fkupz6ichc1p","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>今天更新了Android Studio版本后，运行以前的项目时突然出现了下面的错误：<br>\n<code>Searched in the following locations: file:/G:/Android/Android Studio/gradle/m2repository/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.pom file:/G:/Android/Android Studio/gradle/m2repository/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.jar https://jcenter.bintray.com/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.pom https://jcenter.bintray.com/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.jar Required by: project : &lt;a href=&quot;add.google.maven.repository&quot;&gt;Add Google Maven repository and sync project&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;openFile:C:\\\\Users\\\\dong\\\\AndroidStudioProjects\\\\PraClock-master-333c8464e4a6120e4a7c8235a11d5670005296dc\\\\build.gradle&quot;&gt;Open File&lt;/a&gt;</code><br>\n按照提示路径找到文件位置G:/Android/Android Studio/gradle/m2repository/com/android/tools/build/gradle<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/NDGcPRDMONQ53NVOKVA2K.png\" alt></p>\n<p>发现是没有3.0.0的gradle造成的<br>\n找到项目中的gradle文件，将下面的位置更改即可<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/7OX%29OQX2%5B9_G%7BO2NI8F9E15.png\" alt></p>\n<p>然后点击sync或者try again刷新一下，问题解决。</p>\n","site":{"data":{}},"length":923,"excerpt":"","more":"<p>今天更新了Android Studio版本后，运行以前的项目时突然出现了下面的错误：<br>\n<code>Searched in the following locations: file:/G:/Android/Android Studio/gradle/m2repository/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.pom file:/G:/Android/Android Studio/gradle/m2repository/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.jar https://jcenter.bintray.com/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.pom https://jcenter.bintray.com/com/android/tools/build/gradle/3.0.0/gradle-3.0.0.jar Required by: project : &lt;a href=&quot;add.google.maven.repository&quot;&gt;Add Google Maven repository and sync project&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;openFile:C:\\\\Users\\\\dong\\\\AndroidStudioProjects\\\\PraClock-master-333c8464e4a6120e4a7c8235a11d5670005296dc\\\\build.gradle&quot;&gt;Open File&lt;/a&gt;</code><br>\n按照提示路径找到文件位置G:/Android/Android Studio/gradle/m2repository/com/android/tools/build/gradle<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/NDGcPRDMONQ53NVOKVA2K.png\" alt></p>\n<p>发现是没有3.0.0的gradle造成的<br>\n找到项目中的gradle文件，将下面的位置更改即可<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/7OX%29OQX2%5B9_G%7BO2NI8F9E15.png\" alt></p>\n<p>然后点击sync或者try again刷新一下，问题解决。</p>\n"},{"title":"JavaScript笔记","copyright":false,"abbrlink":"2b866d21","notshow":false,"description":"随便写写","sticky":null,"date":"2019-02-12T08:25:00.000Z","password":null,"image":["https://data.singlelovely.cn/CoverPicture/2b866d21.jpg!CoverPicture"],"photos":[],"_content":"\n## 变量\n\n保留字\n\n| abstract  |            delete |              goto    |               null\t    |          throws|\n|---|---|---|---|---|\nas  |                    do   |                  if\t\t |           package\t  |      transient |\nboolean   |              double      |           implements   |            private  |             true |\nbreak     |              else     |              import    |               protected     |        try |\nbyte      |              enum      |             in     |                  public   |             typeof |\ncase   |                 export    |             instanceof  |             return    |            use |\ncatch        |           extends         |       int       |               short    |             var |\nchar        |            false     |             interface  |              static     |           void |\nclass          |         final     |             is     |                  super    |             volatile |\ncontinue       |         finally    |            long   |                  switch   |             while |\nconst       |            float      |            namespace |               synchronized  |        with |\ndebugger         |       for     |               native   |                this      |\ndefault        |         function       |        new    |                  throw  |\n\n使用 `const` 声明的变量称为“常量”。它们不能被修改。\n\n### 总结\n\n- `let` – 新时代的变量声明方式。Chrome（V8）中代码必须开启严格模式以使用 let。\n- `var` – 旧时代的变量声明方式。\n- `const` – 类似于let，但是变量的值无法被修改。\n\n## 数据类型\n\n七种基本的类型:\n\n- `number` 用于任何类型的数字：整数或者浮点数。\n- `string` 用于字符串。一个字符串可以包含一个或多个字符，所以没有单独的单字符类型。\n- `boolean` 用于 `true` 和 `false`。\n- `null` 用于未知的值 —— 只有一个 `null` 值的独立类型。\n- `undefined` 用于未定义的值 —— 只有一个 `undefined` 值的独立类型。\n- `object` 用于更复杂的数据结构。\n- `symbol` 用于唯一的标识符。\n\ntypeof 运算符可以查看变量的类型。\n\n- 两种形式：`typeof x` 或者 `typeof(x)`。\n- 返回的类型的字符串，比如 `\"string\"`。\n- `null` 返回 `\"object\"` —— 这是语言中的一个错误，实际上它并不是一个对象。\n\nJavaScript 中的 `null` 不是一个“对不存在对象的引用”或者 “null 指针”。\n\n仅仅是一个含义为“无”、“空”或“值未知”的特殊值。\n\n## 类型转换\n\n有三种常用的类型转换：转换为 string 类型、转换为 number 类型和转换为 boolean 类型。\n\nToString —— 输出内容时 ToString 发生转换，或通过 String(value) 进行显式转换。原始类型值的 string 类型转换通常是可预见的。\n\nToNumber – 进行算术操作时发生 ToNumber 转换，或通过 Number(value) 进行显式转换。\n\nToNumber 转换遵循以下规则：\n\n|值 |\t变成…|\n|---|---|\n|undefined |NaN|\n|null | 0|\n|true / false | 1 / 0|\n|string | 字符串“按原样读取”，两端的空白被忽略。空字符串变成 0。出错变成 NaN。|\n\nToBoolean – 进行逻辑操作时发生 ToBoolean 转换。或通过 Boolean(value) 进行显式转换。\n\nToBoolean 遵循以下规则：\n\n|值|变成…|\n|---|---|\n|0, null, undefined, NaN, \"\"\t|false|\n|其他值\t|true|\n\n- undefined 进行 ToNumber 时变成 NaN，而非 0。\n- \"0\" 和只有空格的字符串(比如：\" \" )在进行 ToBoolean 变成 true。\n\n## 值的比较\n\n- 字符串比较时按位比较\n- 若直接比较两个值，其结果是相等的。\n- 若把两个值转为布尔值，它们可能得出完全相反的结果，即 true 和 false。\n\n示例：\n\n```JavaScript\nlet a = 0;\nalert( Boolean(a) ); // false\n\nlet b = \"0\";\nalert( Boolean(b) ); // true\n\nalert(a == b); // true!\n\nlet c = (\"2\" > \"12\");//字符串比较\nalert(\"c = \" + c);//true\n```\n\n对于 JavaScript 而言这种现象蛮正常的，因为它会把待比较的值转为数字后再做比较（因此 \"0\" 变成了 0 ）。若只是将一个变量转为 Boolean，则会使用其他的类型转换规则。\n\n普通的相等性检查 == 存在一个问题，它不能区分出 0 和 false：\n\n>alert( 0 == false ); // true\n\n也同样无法区分空字符串和 false：\n\n> alert( '' == false ); // true\n\n这是因为在比较不同类型的值时，处于相等判断符号 == 两侧的值会被转换为数字的原因。空字符串和 false 也是如此，转换后它们都等于 0。\n\n### 严格相等操作符 === 在进行比较时不会做任何的类型转换。\n\n`undefined` 和 `null` 在相等性检测 `==` 中不会进行任何的类型转换，它们有自己独立的比较规则，所以除了它们之间互等外不会等于任何其他的值。\n\n### 小结\n\n- 比较操作符始终返回逻辑值。\n- 字符串间按“词典”顺序逐字符比较大小。\n- 当待比较的值类型不同时，它们会被转为数字（不包括严格相等检测）进行比较。\n- 在非严格相等 `==` 下，`null` 和 `undefined` 相等且各自不等于任何其他的值。\n- 在使用 `>` 或 `<` 进行比较时，需要注意变量可能为 `null/undefined` 的情况。比较好的方法是单独检查变量是否等于 `null/undefined`。\n\n## 交互\n\nalert 弹出显示信息。\n\nprompt 要求用户输入文本，确定返回文本，取消返回`null`。\n\nconfirm 显示信息等待确定或取消，确定返回`true`取消返回`false`。\n\n## 三元运算符 ‘?’\n\n```JavaScript\nlet result = condition ? value1 : value2\n```\n\n计算条件结果，如果结果为真，则返回 `value1`，否则返回 `value2`。\n\nJava中同样适用\n\n使用一系列问号 ? 运算符可以返回一个取决于多个条件的值。\n\n例如：\n\n```JavaScript\nlet age = prompt('age?', 18);\n\nlet message = (age < 3) ? 'Hi, baby!' :\n  (age < 18) ? 'Hello!' :\n  (age < 100) ? 'Greetings!' :\n  'What an unusual age!';\n\nalert( message );\n```\n\n## \"use strict\" 新模式\n\n2009 年 ECMAScript 5 (ES5) 的出现。ES5 规范增加了新的语言特性并且修改了一些已经存在的特性。为了保证旧的功能能够使用，大部分的修改是默认不生效的。需要一个特殊的指令 —— `\"use strict\"` 来明确地使用这些特性。\n\n- 请确保 `\"use strict\"` 出现在脚本的最顶部，否则严格模式可能无法启用。\n- 没有类似于 `\"no use strict\"` 这样的指令，这会返回原来的默认模式。\n\n## 函数\n\n- 对于有参函数，如未传入参数，则默认值为 `undefined`\n- 如函数无返回值，则返回`undefined`\n- 空`return` 和 `return undefined` 一样\n\n### 函数命名\n\n一种普遍的做法是用动词前缀来开始一个函数，这个前缀模糊地描述了这个动作。团队内部必须就前缀的含义达成一致。\n\n- `\"get…\"` —— 返回值，\n- `\"calc…\"` —— 计算\n- `\"create…\"` —— 创建，\n- `\"check…\"` —— 检查并返回 boolean 值，等。\n\n### 练习\n\n使用 '?' 或者 '||' 重写函数\n\n```JavaScript\nfunction checkAge(age) {\n  if (age > 18) {\n    return true;\n  } else {\n    return confirm('Do you have your parents permission to access this page?');\n  }\n}\n```\n\n```JavaScript\nfunction checkAge(age) {\n  return (age > 18) ? true : confirm('Did parents allow you?');\n}\n```\n\n```JavaScript\nfunction checkAge(age) {\n  return (age > 18) || confirm('Did parents allow you?');\n}\n```\n\n写一个函数 pow(x,n)，在 n 中返回 x。或者换句话说，将 x 与自身相乘 n 次，然后返回结果。\n\n```JavaScript\nfunction pow(x,n){\n    let result = x;\n    while (n>1){\n        result *= x;\n        n--;\n    }\n    return result;\n}\n```\n\n## 逻辑运算符\n\n### 或运算寻找第一个真值\n\n> result = value1 || value2 || value3;\n\n- 从左到右依次计算操作数。\n- 将每一个操作数转化为布尔值。如果结果是 true，就停止计算，返回这个操作数的初始值。\n- 如果所有的操作数都被计算过（也就是，转换结果都是 false），返回最后一个操作数。\n\n例1：获取变量列表或者表达式的第一个真值\n\n```JavaScript\nlet currentUser = null;\nlet defaultUser = \"John\";\n\nlet name = currentUser || defaultUser || \"unnamed\";\n\nalert( name ); // 选出了 “John” - 第一个真值\n```\n\n例2：短路取值\n\n```js\nlet x;\n\n!true! || (x = 1);\n\nalert(x); // undefined，因为 (x = 1) 没有被执行\n```\n\n### 与操作寻找第一个假值\n\n> result = value1 && value2 && value3;\n\n- 从左到右依次计算操作数。\n- 将每一个操作数转化为布尔值。如果结果是 false，就停止计算，返回这个操作数的初始值。\n- 如果所有的操作数都被计算过（也就是，转换结果都是 true），返回最后一个操作数。\n\n```js\nalert( 1 && 2 && null && 3 ); // null\n\nalert( 1 && 2 && 3 ); // 3，最后一个值\n```\n\n与运算 `&&` 的优先级比或运算 `||` 要高\n\n```js\nalert( 5 || 1 && 0 ); // 5\n```\n\n### 练习题\n\n```js\nalert( null || 2 && 3 || 4 ); //3\n\n// 执行。\n// -1 || 0 的结果为 -1，真值\nif (-1 || 0) alert( 'first' );\n\n// 不执行。\n// -1 && 0 = 0，假值\nif (-1 && 0) alert( 'second' );\n\n// 执行\n// && 运算的优先级比 || 高\n// 所以 -1 && 1 先执行，给出如下运算链：\n// null || -1 && 1  ->  null || 1  ->  1\nif (null || -1 && 1) alert( 'third' );\n```\n\n","source":"_posts/JavaScript学习笔记.md","raw":"---\ntitle: JavaScript笔记\ncopyright: false\nabbrlink: 2b866d21\nnotshow: false\ntags:\ncategories: 学习\ndescription: 随便写写\nsticky:\ndate: 2019-02-12 16:25:00\npassword:\nimage:\n- \"https://data.singlelovely.cn/CoverPicture/2b866d21.jpg!CoverPicture\"\nphotos:\n---\n\n## 变量\n\n保留字\n\n| abstract  |            delete |              goto    |               null\t    |          throws|\n|---|---|---|---|---|\nas  |                    do   |                  if\t\t |           package\t  |      transient |\nboolean   |              double      |           implements   |            private  |             true |\nbreak     |              else     |              import    |               protected     |        try |\nbyte      |              enum      |             in     |                  public   |             typeof |\ncase   |                 export    |             instanceof  |             return    |            use |\ncatch        |           extends         |       int       |               short    |             var |\nchar        |            false     |             interface  |              static     |           void |\nclass          |         final     |             is     |                  super    |             volatile |\ncontinue       |         finally    |            long   |                  switch   |             while |\nconst       |            float      |            namespace |               synchronized  |        with |\ndebugger         |       for     |               native   |                this      |\ndefault        |         function       |        new    |                  throw  |\n\n使用 `const` 声明的变量称为“常量”。它们不能被修改。\n\n### 总结\n\n- `let` – 新时代的变量声明方式。Chrome（V8）中代码必须开启严格模式以使用 let。\n- `var` – 旧时代的变量声明方式。\n- `const` – 类似于let，但是变量的值无法被修改。\n\n## 数据类型\n\n七种基本的类型:\n\n- `number` 用于任何类型的数字：整数或者浮点数。\n- `string` 用于字符串。一个字符串可以包含一个或多个字符，所以没有单独的单字符类型。\n- `boolean` 用于 `true` 和 `false`。\n- `null` 用于未知的值 —— 只有一个 `null` 值的独立类型。\n- `undefined` 用于未定义的值 —— 只有一个 `undefined` 值的独立类型。\n- `object` 用于更复杂的数据结构。\n- `symbol` 用于唯一的标识符。\n\ntypeof 运算符可以查看变量的类型。\n\n- 两种形式：`typeof x` 或者 `typeof(x)`。\n- 返回的类型的字符串，比如 `\"string\"`。\n- `null` 返回 `\"object\"` —— 这是语言中的一个错误，实际上它并不是一个对象。\n\nJavaScript 中的 `null` 不是一个“对不存在对象的引用”或者 “null 指针”。\n\n仅仅是一个含义为“无”、“空”或“值未知”的特殊值。\n\n## 类型转换\n\n有三种常用的类型转换：转换为 string 类型、转换为 number 类型和转换为 boolean 类型。\n\nToString —— 输出内容时 ToString 发生转换，或通过 String(value) 进行显式转换。原始类型值的 string 类型转换通常是可预见的。\n\nToNumber – 进行算术操作时发生 ToNumber 转换，或通过 Number(value) 进行显式转换。\n\nToNumber 转换遵循以下规则：\n\n|值 |\t变成…|\n|---|---|\n|undefined |NaN|\n|null | 0|\n|true / false | 1 / 0|\n|string | 字符串“按原样读取”，两端的空白被忽略。空字符串变成 0。出错变成 NaN。|\n\nToBoolean – 进行逻辑操作时发生 ToBoolean 转换。或通过 Boolean(value) 进行显式转换。\n\nToBoolean 遵循以下规则：\n\n|值|变成…|\n|---|---|\n|0, null, undefined, NaN, \"\"\t|false|\n|其他值\t|true|\n\n- undefined 进行 ToNumber 时变成 NaN，而非 0。\n- \"0\" 和只有空格的字符串(比如：\" \" )在进行 ToBoolean 变成 true。\n\n## 值的比较\n\n- 字符串比较时按位比较\n- 若直接比较两个值，其结果是相等的。\n- 若把两个值转为布尔值，它们可能得出完全相反的结果，即 true 和 false。\n\n示例：\n\n```JavaScript\nlet a = 0;\nalert( Boolean(a) ); // false\n\nlet b = \"0\";\nalert( Boolean(b) ); // true\n\nalert(a == b); // true!\n\nlet c = (\"2\" > \"12\");//字符串比较\nalert(\"c = \" + c);//true\n```\n\n对于 JavaScript 而言这种现象蛮正常的，因为它会把待比较的值转为数字后再做比较（因此 \"0\" 变成了 0 ）。若只是将一个变量转为 Boolean，则会使用其他的类型转换规则。\n\n普通的相等性检查 == 存在一个问题，它不能区分出 0 和 false：\n\n>alert( 0 == false ); // true\n\n也同样无法区分空字符串和 false：\n\n> alert( '' == false ); // true\n\n这是因为在比较不同类型的值时，处于相等判断符号 == 两侧的值会被转换为数字的原因。空字符串和 false 也是如此，转换后它们都等于 0。\n\n### 严格相等操作符 === 在进行比较时不会做任何的类型转换。\n\n`undefined` 和 `null` 在相等性检测 `==` 中不会进行任何的类型转换，它们有自己独立的比较规则，所以除了它们之间互等外不会等于任何其他的值。\n\n### 小结\n\n- 比较操作符始终返回逻辑值。\n- 字符串间按“词典”顺序逐字符比较大小。\n- 当待比较的值类型不同时，它们会被转为数字（不包括严格相等检测）进行比较。\n- 在非严格相等 `==` 下，`null` 和 `undefined` 相等且各自不等于任何其他的值。\n- 在使用 `>` 或 `<` 进行比较时，需要注意变量可能为 `null/undefined` 的情况。比较好的方法是单独检查变量是否等于 `null/undefined`。\n\n## 交互\n\nalert 弹出显示信息。\n\nprompt 要求用户输入文本，确定返回文本，取消返回`null`。\n\nconfirm 显示信息等待确定或取消，确定返回`true`取消返回`false`。\n\n## 三元运算符 ‘?’\n\n```JavaScript\nlet result = condition ? value1 : value2\n```\n\n计算条件结果，如果结果为真，则返回 `value1`，否则返回 `value2`。\n\nJava中同样适用\n\n使用一系列问号 ? 运算符可以返回一个取决于多个条件的值。\n\n例如：\n\n```JavaScript\nlet age = prompt('age?', 18);\n\nlet message = (age < 3) ? 'Hi, baby!' :\n  (age < 18) ? 'Hello!' :\n  (age < 100) ? 'Greetings!' :\n  'What an unusual age!';\n\nalert( message );\n```\n\n## \"use strict\" 新模式\n\n2009 年 ECMAScript 5 (ES5) 的出现。ES5 规范增加了新的语言特性并且修改了一些已经存在的特性。为了保证旧的功能能够使用，大部分的修改是默认不生效的。需要一个特殊的指令 —— `\"use strict\"` 来明确地使用这些特性。\n\n- 请确保 `\"use strict\"` 出现在脚本的最顶部，否则严格模式可能无法启用。\n- 没有类似于 `\"no use strict\"` 这样的指令，这会返回原来的默认模式。\n\n## 函数\n\n- 对于有参函数，如未传入参数，则默认值为 `undefined`\n- 如函数无返回值，则返回`undefined`\n- 空`return` 和 `return undefined` 一样\n\n### 函数命名\n\n一种普遍的做法是用动词前缀来开始一个函数，这个前缀模糊地描述了这个动作。团队内部必须就前缀的含义达成一致。\n\n- `\"get…\"` —— 返回值，\n- `\"calc…\"` —— 计算\n- `\"create…\"` —— 创建，\n- `\"check…\"` —— 检查并返回 boolean 值，等。\n\n### 练习\n\n使用 '?' 或者 '||' 重写函数\n\n```JavaScript\nfunction checkAge(age) {\n  if (age > 18) {\n    return true;\n  } else {\n    return confirm('Do you have your parents permission to access this page?');\n  }\n}\n```\n\n```JavaScript\nfunction checkAge(age) {\n  return (age > 18) ? true : confirm('Did parents allow you?');\n}\n```\n\n```JavaScript\nfunction checkAge(age) {\n  return (age > 18) || confirm('Did parents allow you?');\n}\n```\n\n写一个函数 pow(x,n)，在 n 中返回 x。或者换句话说，将 x 与自身相乘 n 次，然后返回结果。\n\n```JavaScript\nfunction pow(x,n){\n    let result = x;\n    while (n>1){\n        result *= x;\n        n--;\n    }\n    return result;\n}\n```\n\n## 逻辑运算符\n\n### 或运算寻找第一个真值\n\n> result = value1 || value2 || value3;\n\n- 从左到右依次计算操作数。\n- 将每一个操作数转化为布尔值。如果结果是 true，就停止计算，返回这个操作数的初始值。\n- 如果所有的操作数都被计算过（也就是，转换结果都是 false），返回最后一个操作数。\n\n例1：获取变量列表或者表达式的第一个真值\n\n```JavaScript\nlet currentUser = null;\nlet defaultUser = \"John\";\n\nlet name = currentUser || defaultUser || \"unnamed\";\n\nalert( name ); // 选出了 “John” - 第一个真值\n```\n\n例2：短路取值\n\n```js\nlet x;\n\n!true! || (x = 1);\n\nalert(x); // undefined，因为 (x = 1) 没有被执行\n```\n\n### 与操作寻找第一个假值\n\n> result = value1 && value2 && value3;\n\n- 从左到右依次计算操作数。\n- 将每一个操作数转化为布尔值。如果结果是 false，就停止计算，返回这个操作数的初始值。\n- 如果所有的操作数都被计算过（也就是，转换结果都是 true），返回最后一个操作数。\n\n```js\nalert( 1 && 2 && null && 3 ); // null\n\nalert( 1 && 2 && 3 ); // 3，最后一个值\n```\n\n与运算 `&&` 的优先级比或运算 `||` 要高\n\n```js\nalert( 5 || 1 && 0 ); // 5\n```\n\n### 练习题\n\n```js\nalert( null || 2 && 3 || 4 ); //3\n\n// 执行。\n// -1 || 0 的结果为 -1，真值\nif (-1 || 0) alert( 'first' );\n\n// 不执行。\n// -1 && 0 = 0，假值\nif (-1 && 0) alert( 'second' );\n\n// 执行\n// && 运算的优先级比 || 高\n// 所以 -1 && 1 先执行，给出如下运算链：\n// null || -1 && 1  ->  null || 1  ->  1\nif (null || -1 && 1) alert( 'third' );\n```\n\n","slug":"JavaScript学习笔记","published":1,"updated":"2020-02-20T06:06:59.362Z","comments":1,"layout":"post","link":"","_id":"ckec2td1u0003fkuprfsutbaa","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"变量\"><a class=\"header-anchor\" href=\"#变量\">☆</a>变量</h2>\n<p>保留字</p>\n<table>\n<thead>\n<tr>\n<th>abstract</th>\n<th>delete</th>\n<th>goto</th>\n<th>null</th>\n<th>throws</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>as</td>\n<td>do</td>\n<td>if</td>\n<td>package</td>\n<td>transient</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>double</td>\n<td>implements</td>\n<td>private</td>\n<td>true</td>\n</tr>\n<tr>\n<td>break</td>\n<td>else</td>\n<td>import</td>\n<td>protected</td>\n<td>try</td>\n</tr>\n<tr>\n<td>byte</td>\n<td>enum</td>\n<td>in</td>\n<td>public</td>\n<td>typeof</td>\n</tr>\n<tr>\n<td>case</td>\n<td>export</td>\n<td>instanceof</td>\n<td>return</td>\n<td>use</td>\n</tr>\n<tr>\n<td>catch</td>\n<td>extends</td>\n<td>int</td>\n<td>short</td>\n<td>var</td>\n</tr>\n<tr>\n<td>char</td>\n<td>false</td>\n<td>interface</td>\n<td>static</td>\n<td>void</td>\n</tr>\n<tr>\n<td>class</td>\n<td>final</td>\n<td>is</td>\n<td>super</td>\n<td>volatile</td>\n</tr>\n<tr>\n<td>continue</td>\n<td>finally</td>\n<td>long</td>\n<td>switch</td>\n<td>while</td>\n</tr>\n<tr>\n<td>const</td>\n<td>float</td>\n<td>namespace</td>\n<td>synchronized</td>\n<td>with</td>\n</tr>\n<tr>\n<td>debugger</td>\n<td>for</td>\n<td>native</td>\n<td>this</td>\n<td></td>\n</tr>\n<tr>\n<td>default</td>\n<td>function</td>\n<td>new</td>\n<td>throw</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>使用 <code>const</code> 声明的变量称为“常量”。它们不能被修改。</p>\n<h3 id=\"总结\"><a class=\"header-anchor\" href=\"#总结\">☆</a>总结</h3>\n<ul>\n<li><code>let</code> – 新时代的变量声明方式。Chrome（V8）中代码必须开启严格模式以使用 let。</li>\n<li><code>var</code> – 旧时代的变量声明方式。</li>\n<li><code>const</code> – 类似于let，但是变量的值无法被修改。</li>\n</ul>\n<h2 id=\"数据类型\"><a class=\"header-anchor\" href=\"#数据类型\">☆</a>数据类型</h2>\n<p>七种基本的类型:</p>\n<ul>\n<li><code>number</code> 用于任何类型的数字：整数或者浮点数。</li>\n<li><code>string</code> 用于字符串。一个字符串可以包含一个或多个字符，所以没有单独的单字符类型。</li>\n<li><code>boolean</code> 用于 <code>true</code> 和 <code>false</code>。</li>\n<li><code>null</code> 用于未知的值 —— 只有一个 <code>null</code> 值的独立类型。</li>\n<li><code>undefined</code> 用于未定义的值 —— 只有一个 <code>undefined</code> 值的独立类型。</li>\n<li><code>object</code> 用于更复杂的数据结构。</li>\n<li><code>symbol</code> 用于唯一的标识符。</li>\n</ul>\n<p>typeof 运算符可以查看变量的类型。</p>\n<ul>\n<li>两种形式：<code>typeof x</code> 或者 <code>typeof(x)</code>。</li>\n<li>返回的类型的字符串，比如 <code>&quot;string&quot;</code>。</li>\n<li><code>null</code> 返回 <code>&quot;object&quot;</code> —— 这是语言中的一个错误，实际上它并不是一个对象。</li>\n</ul>\n<p>JavaScript 中的 <code>null</code> 不是一个“对不存在对象的引用”或者 “null 指针”。</p>\n<p>仅仅是一个含义为“无”、“空”或“值未知”的特殊值。</p>\n<h2 id=\"类型转换\"><a class=\"header-anchor\" href=\"#类型转换\">☆</a>类型转换</h2>\n<p>有三种常用的类型转换：转换为 string 类型、转换为 number 类型和转换为 boolean 类型。</p>\n<p>ToString —— 输出内容时 ToString 发生转换，或通过 String(value) 进行显式转换。原始类型值的 string 类型转换通常是可预见的。</p>\n<p>ToNumber – 进行算术操作时发生 ToNumber 转换，或通过 Number(value) 进行显式转换。</p>\n<p>ToNumber 转换遵循以下规则：</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>变成…</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>undefined</td>\n<td>NaN</td>\n</tr>\n<tr>\n<td>null</td>\n<td>0</td>\n</tr>\n<tr>\n<td>true / false</td>\n<td>1 / 0</td>\n</tr>\n<tr>\n<td>string</td>\n<td>字符串“按原样读取”，两端的空白被忽略。空字符串变成 0。出错变成 NaN。</td>\n</tr>\n</tbody>\n</table>\n<p>ToBoolean – 进行逻辑操作时发生 ToBoolean 转换。或通过 Boolean(value) 进行显式转换。</p>\n<p>ToBoolean 遵循以下规则：</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>变成…</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0, null, undefined, NaN, “”</td>\n<td>false</td>\n</tr>\n<tr>\n<td>其他值</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>undefined 进行 ToNumber 时变成 NaN，而非 0。</li>\n<li>“0” 和只有空格的字符串(比如：&quot; &quot; )在进行 ToBoolean 变成 true。</li>\n</ul>\n<h2 id=\"值的比较\"><a class=\"header-anchor\" href=\"#值的比较\">☆</a>值的比较</h2>\n<ul>\n<li>字符串比较时按位比较</li>\n<li>若直接比较两个值，其结果是相等的。</li>\n<li>若把两个值转为布尔值，它们可能得出完全相反的结果，即 true 和 false。</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">alert( <span class=\"built_in\">Boolean</span>(a) ); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"string\">\"0\"</span>;</span><br><span class=\"line\">alert( <span class=\"built_in\">Boolean</span>(b) ); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">alert(a == b); <span class=\"comment\">// true!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> c = (<span class=\"string\">\"2\"</span> &gt; <span class=\"string\">\"12\"</span>);<span class=\"comment\">//字符串比较</span></span><br><span class=\"line\">alert(<span class=\"string\">\"c = \"</span> + c);<span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n<p>对于 JavaScript 而言这种现象蛮正常的，因为它会把待比较的值转为数字后再做比较（因此 “0” 变成了 0 ）。若只是将一个变量转为 Boolean，则会使用其他的类型转换规则。</p>\n<p>普通的相等性检查 == 存在一个问题，它不能区分出 0 和 false：</p>\n<blockquote>\n<p>alert( 0 == false ); // true</p>\n</blockquote>\n<p>也同样无法区分空字符串和 false：</p>\n<blockquote>\n<p>alert( ‘’ == false ); // true</p>\n</blockquote>\n<p>这是因为在比较不同类型的值时，处于相等判断符号 == 两侧的值会被转换为数字的原因。空字符串和 false 也是如此，转换后它们都等于 0。</p>\n<h3 id=\"严格相等操作符-在进行比较时不会做任何的类型转换\"><a class=\"header-anchor\" href=\"#严格相等操作符-在进行比较时不会做任何的类型转换\">☆</a>严格相等操作符 === 在进行比较时不会做任何的类型转换。</h3>\n<p><code>undefined</code> 和 <code>null</code> 在相等性检测 <code>==</code> 中不会进行任何的类型转换，它们有自己独立的比较规则，所以除了它们之间互等外不会等于任何其他的值。</p>\n<h3 id=\"小结\"><a class=\"header-anchor\" href=\"#小结\">☆</a>小结</h3>\n<ul>\n<li>比较操作符始终返回逻辑值。</li>\n<li>字符串间按“词典”顺序逐字符比较大小。</li>\n<li>当待比较的值类型不同时，它们会被转为数字（不包括严格相等检测）进行比较。</li>\n<li>在非严格相等 <code>==</code> 下，<code>null</code> 和 <code>undefined</code> 相等且各自不等于任何其他的值。</li>\n<li>在使用 <code>&gt;</code> 或 <code>&lt;</code> 进行比较时，需要注意变量可能为 <code>null/undefined</code> 的情况。比较好的方法是单独检查变量是否等于 <code>null/undefined</code>。</li>\n</ul>\n<h2 id=\"交互\"><a class=\"header-anchor\" href=\"#交互\">☆</a>交互</h2>\n<p>alert 弹出显示信息。</p>\n<p>prompt 要求用户输入文本，确定返回文本，取消返回<code>null</code>。</p>\n<p>confirm 显示信息等待确定或取消，确定返回<code>true</code>取消返回<code>false</code>。</p>\n<h2 id=\"三元运算符\"><a class=\"header-anchor\" href=\"#三元运算符\">☆</a>三元运算符 ‘?’</h2>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> result = condition ? value1 : value2</span><br></pre></td></tr></table></figure>\n<p>计算条件结果，如果结果为真，则返回 <code>value1</code>，否则返回 <code>value2</code>。</p>\n<p>Java中同样适用</p>\n<p>使用一系列问号 ? 运算符可以返回一个取决于多个条件的值。</p>\n<p>例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> age = prompt(<span class=\"string\">'age?'</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> message = (age &lt; <span class=\"number\">3</span>) ? <span class=\"string\">'Hi, baby!'</span> :</span><br><span class=\"line\">  (age &lt; <span class=\"number\">18</span>) ? <span class=\"string\">'Hello!'</span> :</span><br><span class=\"line\">  (age &lt; <span class=\"number\">100</span>) ? <span class=\"string\">'Greetings!'</span> :</span><br><span class=\"line\">  <span class=\"string\">'What an unusual age!'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">alert( message );</span><br></pre></td></tr></table></figure>\n<h2 id=\"use-strict-新模式\"><a class=\"header-anchor\" href=\"#use-strict-新模式\">☆</a>“use strict” 新模式</h2>\n<p>2009 年 ECMAScript 5 (ES5) 的出现。ES5 规范增加了新的语言特性并且修改了一些已经存在的特性。为了保证旧的功能能够使用，大部分的修改是默认不生效的。需要一个特殊的指令 —— <code>&quot;use strict&quot;</code> 来明确地使用这些特性。</p>\n<ul>\n<li>请确保 <code>&quot;use strict&quot;</code> 出现在脚本的最顶部，否则严格模式可能无法启用。</li>\n<li>没有类似于 <code>&quot;no use strict&quot;</code> 这样的指令，这会返回原来的默认模式。</li>\n</ul>\n<h2 id=\"函数\"><a class=\"header-anchor\" href=\"#函数\">☆</a>函数</h2>\n<ul>\n<li>对于有参函数，如未传入参数，则默认值为 <code>undefined</code></li>\n<li>如函数无返回值，则返回<code>undefined</code></li>\n<li>空<code>return</code> 和 <code>return undefined</code> 一样</li>\n</ul>\n<h3 id=\"函数命名\"><a class=\"header-anchor\" href=\"#函数命名\">☆</a>函数命名</h3>\n<p>一种普遍的做法是用动词前缀来开始一个函数，这个前缀模糊地描述了这个动作。团队内部必须就前缀的含义达成一致。</p>\n<ul>\n<li><code>&quot;get…&quot;</code> —— 返回值，</li>\n<li><code>&quot;calc…&quot;</code> —— 计算</li>\n<li><code>&quot;create…&quot;</code> —— 创建，</li>\n<li><code>&quot;check…&quot;</code> —— 检查并返回 boolean 值，等。</li>\n</ul>\n<h3 id=\"练习\"><a class=\"header-anchor\" href=\"#练习\">☆</a>练习</h3>\n<p>使用 ‘?’ 或者 ‘||’ 重写函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkAge</span>(<span class=\"params\">age</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (age &gt; <span class=\"number\">18</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> confirm(<span class=\"string\">'Do you have your parents permission to access this page?'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkAge</span>(<span class=\"params\">age</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (age &gt; <span class=\"number\">18</span>) ? <span class=\"literal\">true</span> : confirm(<span class=\"string\">'Did parents allow you?'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkAge</span>(<span class=\"params\">age</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (age &gt; <span class=\"number\">18</span>) || confirm(<span class=\"string\">'Did parents allow you?'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>写一个函数 pow(x,n)，在 n 中返回 x。或者换句话说，将 x 与自身相乘 n 次，然后返回结果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pow</span>(<span class=\"params\">x,n</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = x;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n&gt;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        result *= x;</span><br><span class=\"line\">        n--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"逻辑运算符\"><a class=\"header-anchor\" href=\"#逻辑运算符\">☆</a>逻辑运算符</h2>\n<h3 id=\"或运算寻找第一个真值\"><a class=\"header-anchor\" href=\"#或运算寻找第一个真值\">☆</a>或运算寻找第一个真值</h3>\n<blockquote>\n<p>result = value1 || value2 || value3;</p>\n</blockquote>\n<ul>\n<li>从左到右依次计算操作数。</li>\n<li>将每一个操作数转化为布尔值。如果结果是 true，就停止计算，返回这个操作数的初始值。</li>\n<li>如果所有的操作数都被计算过（也就是，转换结果都是 false），返回最后一个操作数。</li>\n</ul>\n<p>例1：获取变量列表或者表达式的第一个真值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> currentUser = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> defaultUser = <span class=\"string\">\"John\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> name = currentUser || defaultUser || <span class=\"string\">\"unnamed\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">alert( name ); <span class=\"comment\">// 选出了 “John” - 第一个真值</span></span><br></pre></td></tr></table></figure>\n<p>例2：短路取值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> x;</span><br><span class=\"line\"></span><br><span class=\"line\">!<span class=\"literal\">true</span>! || (x = <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">alert(x); <span class=\"comment\">// undefined，因为 (x = 1) 没有被执行</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"与操作寻找第一个假值\"><a class=\"header-anchor\" href=\"#与操作寻找第一个假值\">☆</a>与操作寻找第一个假值</h3>\n<blockquote>\n<p>result = value1 &amp;&amp; value2 &amp;&amp; value3;</p>\n</blockquote>\n<ul>\n<li>从左到右依次计算操作数。</li>\n<li>将每一个操作数转化为布尔值。如果结果是 false，就停止计算，返回这个操作数的初始值。</li>\n<li>如果所有的操作数都被计算过（也就是，转换结果都是 true），返回最后一个操作数。</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert( <span class=\"number\">1</span> &amp;&amp; <span class=\"number\">2</span> &amp;&amp; <span class=\"literal\">null</span> &amp;&amp; <span class=\"number\">3</span> ); <span class=\"comment\">// null</span></span><br><span class=\"line\"></span><br><span class=\"line\">alert( <span class=\"number\">1</span> &amp;&amp; <span class=\"number\">2</span> &amp;&amp; <span class=\"number\">3</span> ); <span class=\"comment\">// 3，最后一个值</span></span><br></pre></td></tr></table></figure>\n<p>与运算 <code>&amp;&amp;</code> 的优先级比或运算 <code>||</code> 要高</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert( <span class=\"number\">5</span> || <span class=\"number\">1</span> &amp;&amp; <span class=\"number\">0</span> ); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"练习题\"><a class=\"header-anchor\" href=\"#练习题\">☆</a>练习题</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert( <span class=\"literal\">null</span> || <span class=\"number\">2</span> &amp;&amp; <span class=\"number\">3</span> || <span class=\"number\">4</span> ); <span class=\"comment\">//3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 执行。</span></span><br><span class=\"line\"><span class=\"comment\">// -1 || 0 的结果为 -1，真值</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">-1</span> || <span class=\"number\">0</span>) alert( <span class=\"string\">'first'</span> );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不执行。</span></span><br><span class=\"line\"><span class=\"comment\">// -1 &amp;&amp; 0 = 0，假值</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">-1</span> &amp;&amp; <span class=\"number\">0</span>) alert( <span class=\"string\">'second'</span> );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 执行</span></span><br><span class=\"line\"><span class=\"comment\">// &amp;&amp; 运算的优先级比 || 高</span></span><br><span class=\"line\"><span class=\"comment\">// 所以 -1 &amp;&amp; 1 先执行，给出如下运算链：</span></span><br><span class=\"line\"><span class=\"comment\">// null || -1 &amp;&amp; 1  -&gt;  null || 1  -&gt;  1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">null</span> || <span class=\"number\">-1</span> &amp;&amp; <span class=\"number\">1</span>) alert( <span class=\"string\">'third'</span> );</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"length":4814,"excerpt":"","more":"<h2 id=\"变量\"><a class=\"header-anchor\" href=\"#变量\">☆</a>变量</h2>\n<p>保留字</p>\n<table>\n<thead>\n<tr>\n<th>abstract</th>\n<th>delete</th>\n<th>goto</th>\n<th>null</th>\n<th>throws</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>as</td>\n<td>do</td>\n<td>if</td>\n<td>package</td>\n<td>transient</td>\n</tr>\n<tr>\n<td>boolean</td>\n<td>double</td>\n<td>implements</td>\n<td>private</td>\n<td>true</td>\n</tr>\n<tr>\n<td>break</td>\n<td>else</td>\n<td>import</td>\n<td>protected</td>\n<td>try</td>\n</tr>\n<tr>\n<td>byte</td>\n<td>enum</td>\n<td>in</td>\n<td>public</td>\n<td>typeof</td>\n</tr>\n<tr>\n<td>case</td>\n<td>export</td>\n<td>instanceof</td>\n<td>return</td>\n<td>use</td>\n</tr>\n<tr>\n<td>catch</td>\n<td>extends</td>\n<td>int</td>\n<td>short</td>\n<td>var</td>\n</tr>\n<tr>\n<td>char</td>\n<td>false</td>\n<td>interface</td>\n<td>static</td>\n<td>void</td>\n</tr>\n<tr>\n<td>class</td>\n<td>final</td>\n<td>is</td>\n<td>super</td>\n<td>volatile</td>\n</tr>\n<tr>\n<td>continue</td>\n<td>finally</td>\n<td>long</td>\n<td>switch</td>\n<td>while</td>\n</tr>\n<tr>\n<td>const</td>\n<td>float</td>\n<td>namespace</td>\n<td>synchronized</td>\n<td>with</td>\n</tr>\n<tr>\n<td>debugger</td>\n<td>for</td>\n<td>native</td>\n<td>this</td>\n<td></td>\n</tr>\n<tr>\n<td>default</td>\n<td>function</td>\n<td>new</td>\n<td>throw</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<p>使用 <code>const</code> 声明的变量称为“常量”。它们不能被修改。</p>\n<h3 id=\"总结\"><a class=\"header-anchor\" href=\"#总结\">☆</a>总结</h3>\n<ul>\n<li><code>let</code> – 新时代的变量声明方式。Chrome（V8）中代码必须开启严格模式以使用 let。</li>\n<li><code>var</code> – 旧时代的变量声明方式。</li>\n<li><code>const</code> – 类似于let，但是变量的值无法被修改。</li>\n</ul>\n<h2 id=\"数据类型\"><a class=\"header-anchor\" href=\"#数据类型\">☆</a>数据类型</h2>\n<p>七种基本的类型:</p>\n<ul>\n<li><code>number</code> 用于任何类型的数字：整数或者浮点数。</li>\n<li><code>string</code> 用于字符串。一个字符串可以包含一个或多个字符，所以没有单独的单字符类型。</li>\n<li><code>boolean</code> 用于 <code>true</code> 和 <code>false</code>。</li>\n<li><code>null</code> 用于未知的值 —— 只有一个 <code>null</code> 值的独立类型。</li>\n<li><code>undefined</code> 用于未定义的值 —— 只有一个 <code>undefined</code> 值的独立类型。</li>\n<li><code>object</code> 用于更复杂的数据结构。</li>\n<li><code>symbol</code> 用于唯一的标识符。</li>\n</ul>\n<p>typeof 运算符可以查看变量的类型。</p>\n<ul>\n<li>两种形式：<code>typeof x</code> 或者 <code>typeof(x)</code>。</li>\n<li>返回的类型的字符串，比如 <code>&quot;string&quot;</code>。</li>\n<li><code>null</code> 返回 <code>&quot;object&quot;</code> —— 这是语言中的一个错误，实际上它并不是一个对象。</li>\n</ul>\n<p>JavaScript 中的 <code>null</code> 不是一个“对不存在对象的引用”或者 “null 指针”。</p>\n<p>仅仅是一个含义为“无”、“空”或“值未知”的特殊值。</p>\n<h2 id=\"类型转换\"><a class=\"header-anchor\" href=\"#类型转换\">☆</a>类型转换</h2>\n<p>有三种常用的类型转换：转换为 string 类型、转换为 number 类型和转换为 boolean 类型。</p>\n<p>ToString —— 输出内容时 ToString 发生转换，或通过 String(value) 进行显式转换。原始类型值的 string 类型转换通常是可预见的。</p>\n<p>ToNumber – 进行算术操作时发生 ToNumber 转换，或通过 Number(value) 进行显式转换。</p>\n<p>ToNumber 转换遵循以下规则：</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>变成…</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>undefined</td>\n<td>NaN</td>\n</tr>\n<tr>\n<td>null</td>\n<td>0</td>\n</tr>\n<tr>\n<td>true / false</td>\n<td>1 / 0</td>\n</tr>\n<tr>\n<td>string</td>\n<td>字符串“按原样读取”，两端的空白被忽略。空字符串变成 0。出错变成 NaN。</td>\n</tr>\n</tbody>\n</table>\n<p>ToBoolean – 进行逻辑操作时发生 ToBoolean 转换。或通过 Boolean(value) 进行显式转换。</p>\n<p>ToBoolean 遵循以下规则：</p>\n<table>\n<thead>\n<tr>\n<th>值</th>\n<th>变成…</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0, null, undefined, NaN, “”</td>\n<td>false</td>\n</tr>\n<tr>\n<td>其他值</td>\n<td>true</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>undefined 进行 ToNumber 时变成 NaN，而非 0。</li>\n<li>“0” 和只有空格的字符串(比如：&quot; &quot; )在进行 ToBoolean 变成 true。</li>\n</ul>\n<h2 id=\"值的比较\"><a class=\"header-anchor\" href=\"#值的比较\">☆</a>值的比较</h2>\n<ul>\n<li>字符串比较时按位比较</li>\n<li>若直接比较两个值，其结果是相等的。</li>\n<li>若把两个值转为布尔值，它们可能得出完全相反的结果，即 true 和 false。</li>\n</ul>\n<p>示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> a = <span class=\"number\">0</span>;</span><br><span class=\"line\">alert( <span class=\"built_in\">Boolean</span>(a) ); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> b = <span class=\"string\">\"0\"</span>;</span><br><span class=\"line\">alert( <span class=\"built_in\">Boolean</span>(b) ); <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">alert(a == b); <span class=\"comment\">// true!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> c = (<span class=\"string\">\"2\"</span> &gt; <span class=\"string\">\"12\"</span>);<span class=\"comment\">//字符串比较</span></span><br><span class=\"line\">alert(<span class=\"string\">\"c = \"</span> + c);<span class=\"comment\">//true</span></span><br></pre></td></tr></table></figure>\n<p>对于 JavaScript 而言这种现象蛮正常的，因为它会把待比较的值转为数字后再做比较（因此 “0” 变成了 0 ）。若只是将一个变量转为 Boolean，则会使用其他的类型转换规则。</p>\n<p>普通的相等性检查 == 存在一个问题，它不能区分出 0 和 false：</p>\n<blockquote>\n<p>alert( 0 == false ); // true</p>\n</blockquote>\n<p>也同样无法区分空字符串和 false：</p>\n<blockquote>\n<p>alert( ‘’ == false ); // true</p>\n</blockquote>\n<p>这是因为在比较不同类型的值时，处于相等判断符号 == 两侧的值会被转换为数字的原因。空字符串和 false 也是如此，转换后它们都等于 0。</p>\n<h3 id=\"严格相等操作符-在进行比较时不会做任何的类型转换\"><a class=\"header-anchor\" href=\"#严格相等操作符-在进行比较时不会做任何的类型转换\">☆</a>严格相等操作符 === 在进行比较时不会做任何的类型转换。</h3>\n<p><code>undefined</code> 和 <code>null</code> 在相等性检测 <code>==</code> 中不会进行任何的类型转换，它们有自己独立的比较规则，所以除了它们之间互等外不会等于任何其他的值。</p>\n<h3 id=\"小结\"><a class=\"header-anchor\" href=\"#小结\">☆</a>小结</h3>\n<ul>\n<li>比较操作符始终返回逻辑值。</li>\n<li>字符串间按“词典”顺序逐字符比较大小。</li>\n<li>当待比较的值类型不同时，它们会被转为数字（不包括严格相等检测）进行比较。</li>\n<li>在非严格相等 <code>==</code> 下，<code>null</code> 和 <code>undefined</code> 相等且各自不等于任何其他的值。</li>\n<li>在使用 <code>&gt;</code> 或 <code>&lt;</code> 进行比较时，需要注意变量可能为 <code>null/undefined</code> 的情况。比较好的方法是单独检查变量是否等于 <code>null/undefined</code>。</li>\n</ul>\n<h2 id=\"交互\"><a class=\"header-anchor\" href=\"#交互\">☆</a>交互</h2>\n<p>alert 弹出显示信息。</p>\n<p>prompt 要求用户输入文本，确定返回文本，取消返回<code>null</code>。</p>\n<p>confirm 显示信息等待确定或取消，确定返回<code>true</code>取消返回<code>false</code>。</p>\n<h2 id=\"三元运算符\"><a class=\"header-anchor\" href=\"#三元运算符\">☆</a>三元运算符 ‘?’</h2>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> result = condition ? value1 : value2</span><br></pre></td></tr></table></figure>\n<p>计算条件结果，如果结果为真，则返回 <code>value1</code>，否则返回 <code>value2</code>。</p>\n<p>Java中同样适用</p>\n<p>使用一系列问号 ? 运算符可以返回一个取决于多个条件的值。</p>\n<p>例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> age = prompt(<span class=\"string\">'age?'</span>, <span class=\"number\">18</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> message = (age &lt; <span class=\"number\">3</span>) ? <span class=\"string\">'Hi, baby!'</span> :</span><br><span class=\"line\">  (age &lt; <span class=\"number\">18</span>) ? <span class=\"string\">'Hello!'</span> :</span><br><span class=\"line\">  (age &lt; <span class=\"number\">100</span>) ? <span class=\"string\">'Greetings!'</span> :</span><br><span class=\"line\">  <span class=\"string\">'What an unusual age!'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">alert( message );</span><br></pre></td></tr></table></figure>\n<h2 id=\"use-strict-新模式\"><a class=\"header-anchor\" href=\"#use-strict-新模式\">☆</a>“use strict” 新模式</h2>\n<p>2009 年 ECMAScript 5 (ES5) 的出现。ES5 规范增加了新的语言特性并且修改了一些已经存在的特性。为了保证旧的功能能够使用，大部分的修改是默认不生效的。需要一个特殊的指令 —— <code>&quot;use strict&quot;</code> 来明确地使用这些特性。</p>\n<ul>\n<li>请确保 <code>&quot;use strict&quot;</code> 出现在脚本的最顶部，否则严格模式可能无法启用。</li>\n<li>没有类似于 <code>&quot;no use strict&quot;</code> 这样的指令，这会返回原来的默认模式。</li>\n</ul>\n<h2 id=\"函数\"><a class=\"header-anchor\" href=\"#函数\">☆</a>函数</h2>\n<ul>\n<li>对于有参函数，如未传入参数，则默认值为 <code>undefined</code></li>\n<li>如函数无返回值，则返回<code>undefined</code></li>\n<li>空<code>return</code> 和 <code>return undefined</code> 一样</li>\n</ul>\n<h3 id=\"函数命名\"><a class=\"header-anchor\" href=\"#函数命名\">☆</a>函数命名</h3>\n<p>一种普遍的做法是用动词前缀来开始一个函数，这个前缀模糊地描述了这个动作。团队内部必须就前缀的含义达成一致。</p>\n<ul>\n<li><code>&quot;get…&quot;</code> —— 返回值，</li>\n<li><code>&quot;calc…&quot;</code> —— 计算</li>\n<li><code>&quot;create…&quot;</code> —— 创建，</li>\n<li><code>&quot;check…&quot;</code> —— 检查并返回 boolean 值，等。</li>\n</ul>\n<h3 id=\"练习\"><a class=\"header-anchor\" href=\"#练习\">☆</a>练习</h3>\n<p>使用 ‘?’ 或者 ‘||’ 重写函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkAge</span>(<span class=\"params\">age</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (age &gt; <span class=\"number\">18</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> confirm(<span class=\"string\">'Do you have your parents permission to access this page?'</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkAge</span>(<span class=\"params\">age</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (age &gt; <span class=\"number\">18</span>) ? <span class=\"literal\">true</span> : confirm(<span class=\"string\">'Did parents allow you?'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkAge</span>(<span class=\"params\">age</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (age &gt; <span class=\"number\">18</span>) || confirm(<span class=\"string\">'Did parents allow you?'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>写一个函数 pow(x,n)，在 n 中返回 x。或者换句话说，将 x 与自身相乘 n 次，然后返回结果。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pow</span>(<span class=\"params\">x,n</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> result = x;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (n&gt;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        result *= x;</span><br><span class=\"line\">        n--;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"逻辑运算符\"><a class=\"header-anchor\" href=\"#逻辑运算符\">☆</a>逻辑运算符</h2>\n<h3 id=\"或运算寻找第一个真值\"><a class=\"header-anchor\" href=\"#或运算寻找第一个真值\">☆</a>或运算寻找第一个真值</h3>\n<blockquote>\n<p>result = value1 || value2 || value3;</p>\n</blockquote>\n<ul>\n<li>从左到右依次计算操作数。</li>\n<li>将每一个操作数转化为布尔值。如果结果是 true，就停止计算，返回这个操作数的初始值。</li>\n<li>如果所有的操作数都被计算过（也就是，转换结果都是 false），返回最后一个操作数。</li>\n</ul>\n<p>例1：获取变量列表或者表达式的第一个真值</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> currentUser = <span class=\"literal\">null</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> defaultUser = <span class=\"string\">\"John\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> name = currentUser || defaultUser || <span class=\"string\">\"unnamed\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">alert( name ); <span class=\"comment\">// 选出了 “John” - 第一个真值</span></span><br></pre></td></tr></table></figure>\n<p>例2：短路取值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> x;</span><br><span class=\"line\"></span><br><span class=\"line\">!<span class=\"literal\">true</span>! || (x = <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">alert(x); <span class=\"comment\">// undefined，因为 (x = 1) 没有被执行</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"与操作寻找第一个假值\"><a class=\"header-anchor\" href=\"#与操作寻找第一个假值\">☆</a>与操作寻找第一个假值</h3>\n<blockquote>\n<p>result = value1 &amp;&amp; value2 &amp;&amp; value3;</p>\n</blockquote>\n<ul>\n<li>从左到右依次计算操作数。</li>\n<li>将每一个操作数转化为布尔值。如果结果是 false，就停止计算，返回这个操作数的初始值。</li>\n<li>如果所有的操作数都被计算过（也就是，转换结果都是 true），返回最后一个操作数。</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert( <span class=\"number\">1</span> &amp;&amp; <span class=\"number\">2</span> &amp;&amp; <span class=\"literal\">null</span> &amp;&amp; <span class=\"number\">3</span> ); <span class=\"comment\">// null</span></span><br><span class=\"line\"></span><br><span class=\"line\">alert( <span class=\"number\">1</span> &amp;&amp; <span class=\"number\">2</span> &amp;&amp; <span class=\"number\">3</span> ); <span class=\"comment\">// 3，最后一个值</span></span><br></pre></td></tr></table></figure>\n<p>与运算 <code>&amp;&amp;</code> 的优先级比或运算 <code>||</code> 要高</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert( <span class=\"number\">5</span> || <span class=\"number\">1</span> &amp;&amp; <span class=\"number\">0</span> ); <span class=\"comment\">// 5</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"练习题\"><a class=\"header-anchor\" href=\"#练习题\">☆</a>练习题</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alert( <span class=\"literal\">null</span> || <span class=\"number\">2</span> &amp;&amp; <span class=\"number\">3</span> || <span class=\"number\">4</span> ); <span class=\"comment\">//3</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 执行。</span></span><br><span class=\"line\"><span class=\"comment\">// -1 || 0 的结果为 -1，真值</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">-1</span> || <span class=\"number\">0</span>) alert( <span class=\"string\">'first'</span> );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 不执行。</span></span><br><span class=\"line\"><span class=\"comment\">// -1 &amp;&amp; 0 = 0，假值</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"number\">-1</span> &amp;&amp; <span class=\"number\">0</span>) alert( <span class=\"string\">'second'</span> );</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 执行</span></span><br><span class=\"line\"><span class=\"comment\">// &amp;&amp; 运算的优先级比 || 高</span></span><br><span class=\"line\"><span class=\"comment\">// 所以 -1 &amp;&amp; 1 先执行，给出如下运算链：</span></span><br><span class=\"line\"><span class=\"comment\">// null || -1 &amp;&amp; 1  -&gt;  null || 1  -&gt;  1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"literal\">null</span> || <span class=\"number\">-1</span> &amp;&amp; <span class=\"number\">1</span>) alert( <span class=\"string\">'third'</span> );</span><br></pre></td></tr></table></figure>\n"},{"title":"Genymotion 解决虚拟镜像下载速度特别慢的问题","copyright":true,"abbrlink":"c9feff90","date":"2018-03-06T01:47:08.000Z","password":null,"_content":"\nGenymotion下载地址（需注册账号）：https://www.genymotion.com/download/\n\nGenymotion号称android模拟器中运行最快的，但是服务器在国外，Android镜像下载起来那个速度就不想说了。\n\nAdd new device后下载速度太慢了，容易失败\n\n\n\n解决方法如下：\n\n方法一：\n\n1、设置HTTP代理，在Setting->Network，自己设置HTTP proxy和Port，\n\n \n\n方法二：\n\n1、找到下载链接，直接用迅雷拖下来\n\n     遇到下载失败或者下载太慢，win+R打开运行框，输入 %appdata%， 再点击上一步（Alt+↑ ），找到local文件夹里的Genymobile,打开 查看里面的genymotion.log文件，\n\n找到类似下面的文字\n\n[Genymotion] [Debug] Downloading file\n\n\"http://files2.genymotion.com/dists/4.1.1/ova/genymotion_vbox86p_4.1.1_151117_133208.ova\"\n\n\n\n将http://file........ova 这个虚拟镜像地址直接用迅雷极速版下载，或者使用迅雷离线下载等功能很快能完成下载\n\n\n\n2、把下载的文件复制到C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\Genymotion\\ova 中覆盖里面以随机数命名的对应镜像。实际上就是刚才看到genymotion软件刚刚点击下载的那个镜像，\n\n\n\n3、重新按照刚刚下载操作GUI的下载步骤，你会发现对应的镜像已经可以使用了不需要下载了，验证安装后即会显示在设备列表中。\n\n点击start ，启动模拟器，开始使用\n\n\n\n\n\n提供两个下载地址：\n\nhttp://files2.genymotion.com/dists/4.2.2/ova/genymotion_vbox86p_4.2.2_160608_211959.ova\n\nhttp://files2.genymotion.com/dists/6.0.0/ova/genymotion_vbox86p_6.0_160608_210807.ova","source":"_posts/Genymotion 解决虚拟镜像下载速度特别慢的问题.md","raw":"---\ntitle: Genymotion 解决虚拟镜像下载速度特别慢的问题\ntags:\n  - Android\ncategories: Android\ncopyright: true\nabbrlink: c9feff90\ndate: 2018-03-06 09:47:08\npassword:\n---\n\nGenymotion下载地址（需注册账号）：https://www.genymotion.com/download/\n\nGenymotion号称android模拟器中运行最快的，但是服务器在国外，Android镜像下载起来那个速度就不想说了。\n\nAdd new device后下载速度太慢了，容易失败\n\n\n\n解决方法如下：\n\n方法一：\n\n1、设置HTTP代理，在Setting->Network，自己设置HTTP proxy和Port，\n\n \n\n方法二：\n\n1、找到下载链接，直接用迅雷拖下来\n\n     遇到下载失败或者下载太慢，win+R打开运行框，输入 %appdata%， 再点击上一步（Alt+↑ ），找到local文件夹里的Genymobile,打开 查看里面的genymotion.log文件，\n\n找到类似下面的文字\n\n[Genymotion] [Debug] Downloading file\n\n\"http://files2.genymotion.com/dists/4.1.1/ova/genymotion_vbox86p_4.1.1_151117_133208.ova\"\n\n\n\n将http://file........ova 这个虚拟镜像地址直接用迅雷极速版下载，或者使用迅雷离线下载等功能很快能完成下载\n\n\n\n2、把下载的文件复制到C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\Genymotion\\ova 中覆盖里面以随机数命名的对应镜像。实际上就是刚才看到genymotion软件刚刚点击下载的那个镜像，\n\n\n\n3、重新按照刚刚下载操作GUI的下载步骤，你会发现对应的镜像已经可以使用了不需要下载了，验证安装后即会显示在设备列表中。\n\n点击start ，启动模拟器，开始使用\n\n\n\n\n\n提供两个下载地址：\n\nhttp://files2.genymotion.com/dists/4.2.2/ova/genymotion_vbox86p_4.2.2_160608_211959.ova\n\nhttp://files2.genymotion.com/dists/6.0.0/ova/genymotion_vbox86p_6.0_160608_210807.ova","slug":"Genymotion 解决虚拟镜像下载速度特别慢的问题","published":1,"updated":"2020-02-20T06:06:59.359Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td1z0005fkupah8ch8pn","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>Genymotion下载地址（需注册账号）：<a href=\"https://www.genymotion.com/download/\" target=\"_blank\" rel=\"noopener\">https://www.genymotion.com/download/</a></p>\n<p>Genymotion号称android模拟器中运行最快的，但是服务器在国外，Android镜像下载起来那个速度就不想说了。</p>\n<p>Add new device后下载速度太慢了，容易失败</p>\n<p>解决方法如下：</p>\n<p>方法一：</p>\n<p>1、设置HTTP代理，在Setting-&gt;Network，自己设置HTTP proxy和Port，</p>\n<p>方法二：</p>\n<p>1、找到下载链接，直接用迅雷拖下来</p>\n<pre><code> 遇到下载失败或者下载太慢，win+R打开运行框，输入 %appdata%， 再点击上一步（Alt+↑ ），找到local文件夹里的Genymobile,打开 查看里面的genymotion.log文件，\n</code></pre>\n<p>找到类似下面的文字</p>\n<p>[Genymotion] [Debug] Downloading file</p>\n<p>“<a href=\"http://files2.genymotion.com/dists/4.1.1/ova/genymotion_vbox86p_4.1.1_151117_133208.ova\" target=\"_blank\" rel=\"noopener\">http://files2.genymotion.com/dists/4.1.1/ova/genymotion_vbox86p_4.1.1_151117_133208.ova</a>”</p>\n<p>将http://file…ova 这个虚拟镜像地址直接用迅雷极速版下载，或者使用迅雷离线下载等功能很快能完成下载</p>\n<p>2、把下载的文件复制到C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\Genymotion\\ova 中覆盖里面以随机数命名的对应镜像。实际上就是刚才看到genymotion软件刚刚点击下载的那个镜像，</p>\n<p>3、重新按照刚刚下载操作GUI的下载步骤，你会发现对应的镜像已经可以使用了不需要下载了，验证安装后即会显示在设备列表中。</p>\n<p>点击start ，启动模拟器，开始使用</p>\n<p>提供两个下载地址：</p>\n<p><a href=\"http://files2.genymotion.com/dists/4.2.2/ova/genymotion_vbox86p_4.2.2_160608_211959.ova\" target=\"_blank\" rel=\"noopener\">http://files2.genymotion.com/dists/4.2.2/ova/genymotion_vbox86p_4.2.2_160608_211959.ova</a></p>\n<p><a href=\"http://files2.genymotion.com/dists/6.0.0/ova/genymotion_vbox86p_6.0_160608_210807.ova\" target=\"_blank\" rel=\"noopener\">http://files2.genymotion.com/dists/6.0.0/ova/genymotion_vbox86p_6.0_160608_210807.ova</a></p>\n","site":{"data":{}},"length":899,"excerpt":"","more":"<p>Genymotion下载地址（需注册账号）：<a href=\"https://www.genymotion.com/download/\" target=\"_blank\" rel=\"noopener\">https://www.genymotion.com/download/</a></p>\n<p>Genymotion号称android模拟器中运行最快的，但是服务器在国外，Android镜像下载起来那个速度就不想说了。</p>\n<p>Add new device后下载速度太慢了，容易失败</p>\n<p>解决方法如下：</p>\n<p>方法一：</p>\n<p>1、设置HTTP代理，在Setting-&gt;Network，自己设置HTTP proxy和Port，</p>\n<p>方法二：</p>\n<p>1、找到下载链接，直接用迅雷拖下来</p>\n<pre><code> 遇到下载失败或者下载太慢，win+R打开运行框，输入 %appdata%， 再点击上一步（Alt+↑ ），找到local文件夹里的Genymobile,打开 查看里面的genymotion.log文件，\n</code></pre>\n<p>找到类似下面的文字</p>\n<p>[Genymotion] [Debug] Downloading file</p>\n<p>“<a href=\"http://files2.genymotion.com/dists/4.1.1/ova/genymotion_vbox86p_4.1.1_151117_133208.ova\" target=\"_blank\" rel=\"noopener\">http://files2.genymotion.com/dists/4.1.1/ova/genymotion_vbox86p_4.1.1_151117_133208.ova</a>”</p>\n<p>将http://file…ova 这个虚拟镜像地址直接用迅雷极速版下载，或者使用迅雷离线下载等功能很快能完成下载</p>\n<p>2、把下载的文件复制到C:\\Users\\用户主目录\\AppData\\Local\\Genymobile\\Genymotion\\ova 中覆盖里面以随机数命名的对应镜像。实际上就是刚才看到genymotion软件刚刚点击下载的那个镜像，</p>\n<p>3、重新按照刚刚下载操作GUI的下载步骤，你会发现对应的镜像已经可以使用了不需要下载了，验证安装后即会显示在设备列表中。</p>\n<p>点击start ，启动模拟器，开始使用</p>\n<p>提供两个下载地址：</p>\n<p><a href=\"http://files2.genymotion.com/dists/4.2.2/ova/genymotion_vbox86p_4.2.2_160608_211959.ova\" target=\"_blank\" rel=\"noopener\">http://files2.genymotion.com/dists/4.2.2/ova/genymotion_vbox86p_4.2.2_160608_211959.ova</a></p>\n<p><a href=\"http://files2.genymotion.com/dists/6.0.0/ova/genymotion_vbox86p_6.0_160608_210807.ova\" target=\"_blank\" rel=\"noopener\">http://files2.genymotion.com/dists/6.0.0/ova/genymotion_vbox86p_6.0_160608_210807.ova</a></p>\n"},{"title":"关于GitHub pages访问加速","copyright":true,"abbrlink":"40ae08c3","date":"2018-03-29T01:33:43.000Z","password":null,"_content":"\n&emsp; &emsp; 博客搭建好后，一直托管在GitHub上，由于服务器在国外的原因，访问速度一直不是很好，但是也没什么人看，就没有管，最近几天突然发现断流严重（可能是墙又加高了吧:sweat:），就决定花点时间解决一下。\n\n&emsp; &emsp; 前后折腾了好久（两三天吧），尝试了不同的解决方案。费时间的原因主要还是域名解析一次最少要10分钟或更久，还有就是想找一个免费的解决方案，付费的话，这个事根本就不是事（贫穷限制了我的······:joy:）。\n\n### 尝试过的一些方法：\n#### coding\n\n&emsp; &emsp;首先想到的是找一个类似GitHub的托管平台，然后就找到了本地化比较好的coding，coding可以说是完全模仿GitHub做的一个平台，由于服务器在国内，访速度很快，且支持中文。\n\n&emsp; &emsp;一番折腾，把网站上传到了仓库，成功开启了pages服务，然后就遇到了很坑的事，不能绑定自己的域名，要升级一个银牌会员才能，还好不花钱，只是补全信息就行，终于，补全信息并成功解析，浏览器输入域名，秒开，嗯······什么鬼？怎么不是我的网站，竟然被插入了跳转广告，看了一下官方文档，想要除去广告，要么花钱冲会员要么在网站首页放coding的跳转链接，冲会员是不可能的，广告？也是不可能的！:relieved: **coding被放弃······**\n\n#### 码云\n\n&emsp; &emsp;码云也是国内的一个代码托管平台，这个平台呢，发现它每个项目的ssh公钥是可以分开设置的，直接上传一个公钥，不指定到项目的画是不能够访问的，这个地方耗费了不少时间才解决，然后更麻烦的事来了，码云的用户地址和用户名竟然是不同的，按照用户名创建的仓库，开启pages服务后，是不能用`用户名.gitee.io`去访问的，只能用项目地址去访问，只有通过用户地址创建的仓库，才能用`.io`的后缀去访问。\n\n&emsp; &emsp;又是一通折腾，一切就绪，接下来就是访问测试，然后就是不断的404，百度了一下，原来码云不支持CNAME解析，但好在没广告啊，不就一个跳转问题嘛，没有CNAME解析，还有`301/302/url隐性/rul显性`等各种跳转么，想办法搞定就是了。\n\n&emsp; &emsp;看了下腾讯云的控制台，支持url跳转，显性的会改地址，改了后加独立域名的效果等于没加，选个隐性的吧，竟然要600块。不能用现成的，另外想办法啦，正好手上有一台腾讯云的服务器（最低配，做个跳转应该是足够了），上网找一下隐性跳转的原理，自己写一个跳转页面吧。\n\n\n&emsp; &emsp;又是······  跳转有了，成功打开网站，速度不错，嗯，貌似没有什么问题，应该可以收工了。咦？点页面怎么地址栏没变化啊？这是个大问题呀！然后查代码，不能动态实时生成跳转链接，暂时找不到什么好的解决办法（水平不够），:relieved: **码云被放弃······**\n\n\n----------\n&emsp; &emsp;陆续又尝试了一些DNS加速啥的，效果也不是很理想，偶然看到了CDN，就尝试一下，下面谈谈CDN。\n\n----------\n\n&emsp; &emsp;图片和音乐啥的一直都在七牛云上放着，一直一来速度也不错，然后就想到了用它家的融合CDN，一通配置调试后，速度还不错，\t但是七牛云的https加密认证要钱啊，本着免费为先的原则，又看到了腾讯的CDN，免费流量多呀，很迅速就转到了腾讯云的CDN节点，但那个访问速度的确是不敢恭维:broken_heart:，而且还不支持https（是绑定了证书没起作用，不知道问题出在哪），最终还是又换回了七牛云······\n\n### 附。。。\n\n####  隐性跳转链接\n```\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gbk\" />\n<meta name=\"keywords\" content=\"\" />\n<meta name=\"description\" content=\"\" />\n<title></title></head>\n<frameset rows=\"100%\" border=\"0\" frameborder=\"0\" framespacing=\"0\" framecolor=\"#000000\"><frame src=\"http://www.singlelovely.cn/\"  scrolling=\"auto\"></frameset><noframes><body><script language='javascript'>document.location = 'http://www.singlelovely.cn/'</script></body></noframes>\n</html>\n```\n#### SSL证书\n\n腾讯云的免费DV证书-------最多申请20个，http强制转换https，计费0.28/GB:star:\n\n#### 收录\nGoogle 好像没有干什么就被收录了，百度的话，GitHub拒绝了百度抓取，提交了也没什么用\n\n#### 关于解析\n\n国内解析到七牛云的CDN节点，CDN节点每天零点自动刷新缓存\n国外直接解析到GitHub库，实时更新缓存","source":"_posts/GitHub pages访问加速.md","raw":"---\ntitle: 关于GitHub pages访问加速\ntags:\n  - hexo\ncategories: hexo\ncopyright: true\nabbrlink: 40ae08c3\ndate: 2018-03-29 09:33:43\npassword:\n---\n\n&emsp; &emsp; 博客搭建好后，一直托管在GitHub上，由于服务器在国外的原因，访问速度一直不是很好，但是也没什么人看，就没有管，最近几天突然发现断流严重（可能是墙又加高了吧:sweat:），就决定花点时间解决一下。\n\n&emsp; &emsp; 前后折腾了好久（两三天吧），尝试了不同的解决方案。费时间的原因主要还是域名解析一次最少要10分钟或更久，还有就是想找一个免费的解决方案，付费的话，这个事根本就不是事（贫穷限制了我的······:joy:）。\n\n### 尝试过的一些方法：\n#### coding\n\n&emsp; &emsp;首先想到的是找一个类似GitHub的托管平台，然后就找到了本地化比较好的coding，coding可以说是完全模仿GitHub做的一个平台，由于服务器在国内，访速度很快，且支持中文。\n\n&emsp; &emsp;一番折腾，把网站上传到了仓库，成功开启了pages服务，然后就遇到了很坑的事，不能绑定自己的域名，要升级一个银牌会员才能，还好不花钱，只是补全信息就行，终于，补全信息并成功解析，浏览器输入域名，秒开，嗯······什么鬼？怎么不是我的网站，竟然被插入了跳转广告，看了一下官方文档，想要除去广告，要么花钱冲会员要么在网站首页放coding的跳转链接，冲会员是不可能的，广告？也是不可能的！:relieved: **coding被放弃······**\n\n#### 码云\n\n&emsp; &emsp;码云也是国内的一个代码托管平台，这个平台呢，发现它每个项目的ssh公钥是可以分开设置的，直接上传一个公钥，不指定到项目的画是不能够访问的，这个地方耗费了不少时间才解决，然后更麻烦的事来了，码云的用户地址和用户名竟然是不同的，按照用户名创建的仓库，开启pages服务后，是不能用`用户名.gitee.io`去访问的，只能用项目地址去访问，只有通过用户地址创建的仓库，才能用`.io`的后缀去访问。\n\n&emsp; &emsp;又是一通折腾，一切就绪，接下来就是访问测试，然后就是不断的404，百度了一下，原来码云不支持CNAME解析，但好在没广告啊，不就一个跳转问题嘛，没有CNAME解析，还有`301/302/url隐性/rul显性`等各种跳转么，想办法搞定就是了。\n\n&emsp; &emsp;看了下腾讯云的控制台，支持url跳转，显性的会改地址，改了后加独立域名的效果等于没加，选个隐性的吧，竟然要600块。不能用现成的，另外想办法啦，正好手上有一台腾讯云的服务器（最低配，做个跳转应该是足够了），上网找一下隐性跳转的原理，自己写一个跳转页面吧。\n\n\n&emsp; &emsp;又是······  跳转有了，成功打开网站，速度不错，嗯，貌似没有什么问题，应该可以收工了。咦？点页面怎么地址栏没变化啊？这是个大问题呀！然后查代码，不能动态实时生成跳转链接，暂时找不到什么好的解决办法（水平不够），:relieved: **码云被放弃······**\n\n\n----------\n&emsp; &emsp;陆续又尝试了一些DNS加速啥的，效果也不是很理想，偶然看到了CDN，就尝试一下，下面谈谈CDN。\n\n----------\n\n&emsp; &emsp;图片和音乐啥的一直都在七牛云上放着，一直一来速度也不错，然后就想到了用它家的融合CDN，一通配置调试后，速度还不错，\t但是七牛云的https加密认证要钱啊，本着免费为先的原则，又看到了腾讯的CDN，免费流量多呀，很迅速就转到了腾讯云的CDN节点，但那个访问速度的确是不敢恭维:broken_heart:，而且还不支持https（是绑定了证书没起作用，不知道问题出在哪），最终还是又换回了七牛云······\n\n### 附。。。\n\n####  隐性跳转链接\n```\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=gbk\" />\n<meta name=\"keywords\" content=\"\" />\n<meta name=\"description\" content=\"\" />\n<title></title></head>\n<frameset rows=\"100%\" border=\"0\" frameborder=\"0\" framespacing=\"0\" framecolor=\"#000000\"><frame src=\"http://www.singlelovely.cn/\"  scrolling=\"auto\"></frameset><noframes><body><script language='javascript'>document.location = 'http://www.singlelovely.cn/'</script></body></noframes>\n</html>\n```\n#### SSL证书\n\n腾讯云的免费DV证书-------最多申请20个，http强制转换https，计费0.28/GB:star:\n\n#### 收录\nGoogle 好像没有干什么就被收录了，百度的话，GitHub拒绝了百度抓取，提交了也没什么用\n\n#### 关于解析\n\n国内解析到七牛云的CDN节点，CDN节点每天零点自动刷新缓存\n国外直接解析到GitHub库，实时更新缓存","slug":"GitHub pages访问加速","published":1,"updated":"2020-02-20T06:06:59.360Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td230007fkupjhhqgq18","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>    博客搭建好后，一直托管在GitHub上，由于服务器在国外的原因，访问速度一直不是很好，但是也没什么人看，就没有管，最近几天突然发现断流严重（可能是墙又加高了吧😓），就决定花点时间解决一下。</p>\n<p>    前后折腾了好久（两三天吧），尝试了不同的解决方案。费时间的原因主要还是域名解析一次最少要10分钟或更久，还有就是想找一个免费的解决方案，付费的话，这个事根本就不是事（贫穷限制了我的······😂）。</p>\n<h3 id=\"尝试过的一些方法：\"><a class=\"header-anchor\" href=\"#尝试过的一些方法：\">☆</a>尝试过的一些方法：</h3>\n<h4 id=\"coding\"><a class=\"header-anchor\" href=\"#coding\">☆</a>coding</h4>\n<p>   首先想到的是找一个类似GitHub的托管平台，然后就找到了本地化比较好的coding，coding可以说是完全模仿GitHub做的一个平台，由于服务器在国内，访速度很快，且支持中文。</p>\n<p>   一番折腾，把网站上传到了仓库，成功开启了pages服务，然后就遇到了很坑的事，不能绑定自己的域名，要升级一个银牌会员才能，还好不花钱，只是补全信息就行，终于，补全信息并成功解析，浏览器输入域名，秒开，嗯······什么鬼？怎么不是我的网站，竟然被插入了跳转广告，看了一下官方文档，想要除去广告，要么花钱冲会员要么在网站首页放coding的跳转链接，冲会员是不可能的，广告？也是不可能的！😌 <strong>coding被放弃······</strong></p>\n<h4 id=\"码云\"><a class=\"header-anchor\" href=\"#码云\">☆</a>码云</h4>\n<p>   码云也是国内的一个代码托管平台，这个平台呢，发现它每个项目的ssh公钥是可以分开设置的，直接上传一个公钥，不指定到项目的画是不能够访问的，这个地方耗费了不少时间才解决，然后更麻烦的事来了，码云的用户地址和用户名竟然是不同的，按照用户名创建的仓库，开启pages服务后，是不能用<code>用户名.gitee.io</code>去访问的，只能用项目地址去访问，只有通过用户地址创建的仓库，才能用<code>.io</code>的后缀去访问。</p>\n<p>   又是一通折腾，一切就绪，接下来就是访问测试，然后就是不断的404，百度了一下，原来码云不支持CNAME解析，但好在没广告啊，不就一个跳转问题嘛，没有CNAME解析，还有<code>301/302/url隐性/rul显性</code>等各种跳转么，想办法搞定就是了。</p>\n<p>   看了下腾讯云的控制台，支持url跳转，显性的会改地址，改了后加独立域名的效果等于没加，选个隐性的吧，竟然要600块。不能用现成的，另外想办法啦，正好手上有一台腾讯云的服务器（最低配，做个跳转应该是足够了），上网找一下隐性跳转的原理，自己写一个跳转页面吧。</p>\n<p>   又是······  跳转有了，成功打开网站，速度不错，嗯，貌似没有什么问题，应该可以收工了。咦？点页面怎么地址栏没变化啊？这是个大问题呀！然后查代码，不能动态实时生成跳转链接，暂时找不到什么好的解决办法（水平不够），😌 <strong>码云被放弃······</strong></p>\n<hr>\n<p>   陆续又尝试了一些DNS加速啥的，效果也不是很理想，偶然看到了CDN，就尝试一下，下面谈谈CDN。</p>\n<hr>\n<p>   图片和音乐啥的一直都在七牛云上放着，一直一来速度也不错，然后就想到了用它家的融合CDN，一通配置调试后，速度还不错，\t但是七牛云的https加密认证要钱啊，本着免费为先的原则，又看到了腾讯的CDN，免费流量多呀，很迅速就转到了腾讯云的CDN节点，但那个访问速度的确是不敢恭维💔，而且还不支持https（是绑定了证书没起作用，不知道问题出在哪），最终还是又换回了七牛云······</p>\n<h3 id=\"附\"><a class=\"header-anchor\" href=\"#附\">☆</a>附。。。</h3>\n<h4 id=\"隐性跳转链接\"><a class=\"header-anchor\" href=\"#隐性跳转链接\">☆</a>隐性跳转链接</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gbk&quot; /&gt;</span><br><span class=\"line\">&lt;meta name=&quot;keywords&quot; content=&quot;&quot; /&gt;</span><br><span class=\"line\">&lt;meta name=&quot;description&quot; content=&quot;&quot; /&gt;</span><br><span class=\"line\">&lt;title&gt;&lt;/title&gt;&lt;/head&gt;</span><br><span class=\"line\">&lt;frameset rows=&quot;100%&quot; border=&quot;0&quot; frameborder=&quot;0&quot; framespacing=&quot;0&quot; framecolor=&quot;#000000&quot;&gt;&lt;frame src=&quot;http://www.singlelovely.cn/&quot;  scrolling=&quot;auto&quot;&gt;&lt;/frameset&gt;&lt;noframes&gt;&lt;body&gt;&lt;script language=&apos;javascript&apos;&gt;document.location = &apos;http://www.singlelovely.cn/&apos;&lt;/script&gt;&lt;/body&gt;&lt;/noframes&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"ssl证书\"><a class=\"header-anchor\" href=\"#ssl证书\">☆</a>SSL证书</h4>\n<p>腾讯云的免费DV证书-------最多申请20个，http强制转换https，计费0.28/GB⭐️</p>\n<h4 id=\"收录\"><a class=\"header-anchor\" href=\"#收录\">☆</a>收录</h4>\n<p>Google 好像没有干什么就被收录了，百度的话，GitHub拒绝了百度抓取，提交了也没什么用</p>\n<h4 id=\"关于解析\"><a class=\"header-anchor\" href=\"#关于解析\">☆</a>关于解析</h4>\n<p>国内解析到七牛云的CDN节点，CDN节点每天零点自动刷新缓存<br>\n国外直接解析到GitHub库，实时更新缓存</p>\n","site":{"data":{}},"length":2248,"excerpt":"","more":"<p>    博客搭建好后，一直托管在GitHub上，由于服务器在国外的原因，访问速度一直不是很好，但是也没什么人看，就没有管，最近几天突然发现断流严重（可能是墙又加高了吧😓），就决定花点时间解决一下。</p>\n<p>    前后折腾了好久（两三天吧），尝试了不同的解决方案。费时间的原因主要还是域名解析一次最少要10分钟或更久，还有就是想找一个免费的解决方案，付费的话，这个事根本就不是事（贫穷限制了我的······😂）。</p>\n<h3 id=\"尝试过的一些方法：\"><a class=\"header-anchor\" href=\"#尝试过的一些方法：\">☆</a>尝试过的一些方法：</h3>\n<h4 id=\"coding\"><a class=\"header-anchor\" href=\"#coding\">☆</a>coding</h4>\n<p>   首先想到的是找一个类似GitHub的托管平台，然后就找到了本地化比较好的coding，coding可以说是完全模仿GitHub做的一个平台，由于服务器在国内，访速度很快，且支持中文。</p>\n<p>   一番折腾，把网站上传到了仓库，成功开启了pages服务，然后就遇到了很坑的事，不能绑定自己的域名，要升级一个银牌会员才能，还好不花钱，只是补全信息就行，终于，补全信息并成功解析，浏览器输入域名，秒开，嗯······什么鬼？怎么不是我的网站，竟然被插入了跳转广告，看了一下官方文档，想要除去广告，要么花钱冲会员要么在网站首页放coding的跳转链接，冲会员是不可能的，广告？也是不可能的！😌 <strong>coding被放弃······</strong></p>\n<h4 id=\"码云\"><a class=\"header-anchor\" href=\"#码云\">☆</a>码云</h4>\n<p>   码云也是国内的一个代码托管平台，这个平台呢，发现它每个项目的ssh公钥是可以分开设置的，直接上传一个公钥，不指定到项目的画是不能够访问的，这个地方耗费了不少时间才解决，然后更麻烦的事来了，码云的用户地址和用户名竟然是不同的，按照用户名创建的仓库，开启pages服务后，是不能用<code>用户名.gitee.io</code>去访问的，只能用项目地址去访问，只有通过用户地址创建的仓库，才能用<code>.io</code>的后缀去访问。</p>\n<p>   又是一通折腾，一切就绪，接下来就是访问测试，然后就是不断的404，百度了一下，原来码云不支持CNAME解析，但好在没广告啊，不就一个跳转问题嘛，没有CNAME解析，还有<code>301/302/url隐性/rul显性</code>等各种跳转么，想办法搞定就是了。</p>\n<p>   看了下腾讯云的控制台，支持url跳转，显性的会改地址，改了后加独立域名的效果等于没加，选个隐性的吧，竟然要600块。不能用现成的，另外想办法啦，正好手上有一台腾讯云的服务器（最低配，做个跳转应该是足够了），上网找一下隐性跳转的原理，自己写一个跳转页面吧。</p>\n<p>   又是······  跳转有了，成功打开网站，速度不错，嗯，貌似没有什么问题，应该可以收工了。咦？点页面怎么地址栏没变化啊？这是个大问题呀！然后查代码，不能动态实时生成跳转链接，暂时找不到什么好的解决办法（水平不够），😌 <strong>码云被放弃······</strong></p>\n<hr>\n<p>   陆续又尝试了一些DNS加速啥的，效果也不是很理想，偶然看到了CDN，就尝试一下，下面谈谈CDN。</p>\n<hr>\n<p>   图片和音乐啥的一直都在七牛云上放着，一直一来速度也不错，然后就想到了用它家的融合CDN，一通配置调试后，速度还不错，\t但是七牛云的https加密认证要钱啊，本着免费为先的原则，又看到了腾讯的CDN，免费流量多呀，很迅速就转到了腾讯云的CDN节点，但那个访问速度的确是不敢恭维💔，而且还不支持https（是绑定了证书没起作用，不知道问题出在哪），最终还是又换回了七牛云······</p>\n<h3 id=\"附\"><a class=\"header-anchor\" href=\"#附\">☆</a>附。。。</h3>\n<h4 id=\"隐性跳转链接\"><a class=\"header-anchor\" href=\"#隐性跳转链接\">☆</a>隐性跳转链接</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=gbk&quot; /&gt;</span><br><span class=\"line\">&lt;meta name=&quot;keywords&quot; content=&quot;&quot; /&gt;</span><br><span class=\"line\">&lt;meta name=&quot;description&quot; content=&quot;&quot; /&gt;</span><br><span class=\"line\">&lt;title&gt;&lt;/title&gt;&lt;/head&gt;</span><br><span class=\"line\">&lt;frameset rows=&quot;100%&quot; border=&quot;0&quot; frameborder=&quot;0&quot; framespacing=&quot;0&quot; framecolor=&quot;#000000&quot;&gt;&lt;frame src=&quot;http://www.singlelovely.cn/&quot;  scrolling=&quot;auto&quot;&gt;&lt;/frameset&gt;&lt;noframes&gt;&lt;body&gt;&lt;script language=&apos;javascript&apos;&gt;document.location = &apos;http://www.singlelovely.cn/&apos;&lt;/script&gt;&lt;/body&gt;&lt;/noframes&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"ssl证书\"><a class=\"header-anchor\" href=\"#ssl证书\">☆</a>SSL证书</h4>\n<p>腾讯云的免费DV证书-------最多申请20个，http强制转换https，计费0.28/GB⭐️</p>\n<h4 id=\"收录\"><a class=\"header-anchor\" href=\"#收录\">☆</a>收录</h4>\n<p>Google 好像没有干什么就被收录了，百度的话，GitHub拒绝了百度抓取，提交了也没什么用</p>\n<h4 id=\"关于解析\"><a class=\"header-anchor\" href=\"#关于解析\">☆</a>关于解析</h4>\n<p>国内解析到七牛云的CDN节点，CDN节点每天零点自动刷新缓存<br>\n国外直接解析到GitHub库，实时更新缓存</p>\n"},{"title":"Java学习笔记（day01）","copyright":true,"abbrlink":"8c8e25d","date":"2018-07-24T10:11:23.000Z","notshow":true,"password":null,"_content":"\n### 01.01_ 计算机概述(了解)\n\n* A:什么是计算机?计算机在生活中的应用举例\n\t* 计算机（Computer）全称：电子计算机，俗称电脑。是一种能够按照程序运行，自动、高速处理海量数据的现代化智能电子设备。由硬件和软件所组成，没有安装任何软件的计算机称为裸机。常见的形式有台式计算机、笔记本计算机、大型计算机等。\n\t* 应用举例\n\t\t* 1：科学计算\n\t\t* 2、数据处理\n\t\t* 3、自动控制\n\t\t* 4、计算机辅助设计\n\t\t* 5、人工智能\n\t\t* 6、多媒体应用\n\t\t* 7、计算机网络\n\t\t* ... \n* B:什么是硬件?硬件举例\n\t* 计算机硬件（Computer Hardware）是指计算机系统中由电子，机械和光电元件等组成的各种物理装置的总称。这些物理装置按系统结构的要求构成一个有机整体为计算机软件运行提供物质基础。\n\t* 冯.诺依曼体系结构\n\t* 计算机的硬件分成5大组成部件：运算器、控制器、存储器、输入设备和输出设备。\n\t\n\t\t* 运算器和控制器是计算机的核心，合称中央处理单元（Central Processing Unit，CPU）或处理器。CPU的内部还有一些高速存储单元，被称为寄存器。其中运算器执行所有的算术和逻辑运算；控制器负责把指令逐条从存储器中取出，经译码后向计算机发出各种控制命令；而寄存器为处理单元提供操作所需要的数据。\n\t\t* 存储器是计算机的记忆部分，用来存放程序以及程序中涉及的数据。它分为内部存储器和外部存储器。内部存储器用于存放正在执行的程序和使用的数据，其成本高、容量小，但速度快。外部存储器可用于长期保存大量程序和数据，其成本低、容量大，但速度较慢。\n\t\t* 输入设备和输出设备统称为外部设备，简称外设或I/O设备，用来实现人机交互和机间通信。微型机中常用的输入设备有键盘、鼠标等，输出设备有显示器、打印机等。\n* C:什么是软件?软件分类及举例\n\t* 计算机软件(Computer Software)是使用计算机过程中必不可少的东西，计算机软件可以使计算机按照事先预定好的顺序完成特定的功能\n\t* 计算机软件按照其功能划分为系统软件与应用软件\n\t\t* 系统软件： DOS(Disk Operating System), Windows, Linux, Unix, Mac, Android, iOS\n\t\t* 应用软件：office  QQ聊天  YY语言  扫雷\n\n### 01.02_ 软件开发和计算机语言概述 (了解)\n\n* A:什么是软件\n\t* 按照特定顺序组织的计算机数据和指令的集合\n* B:什么是开发\n\t* 软件的制作过程\n* C:什么是软件开发\n\t* 借助开发工具与计算机语言制作软件 \n* D:什么是计算机语言\n\t* 人与计算机之间进行信息交流沟通的一种特殊语言\n* E:计算机语言的分类\n\t* 机器语言：\n\t\t* 机器语言是直接用二进制代码指令表达的计算机语言，指令是用0和1组成的一串代码，它们有一定的位数，并分成若干段，各段的编码表示不同的含义。\n\t* 汇编语言：\n\t\t* 汇编语言是使用一些特殊的符号来代替机器语言的二进制码，计算机不能直接识别，需要用一种软件将汇编语言翻译成机器语言。\n\t* 高级语言：  \n\t\t* 使用普通英语进行编写源代码，通过编译器将源代码翻译成计算机直接识别的机器语言，之后再由计算机执行。\n\t\t* 高级语言包括C,C++,C#,JAVA\n\n### 01.03_ 人机交互 (了解)\n\n* A:人机交互的两种方式\n\t* a:命令行方式 \n\t\t* 需要有一个控制台，输入特定的指令，让计算机完成一些操作。较为麻烦，需要记录住一些命令。 \n\t* b:图形化界面方式\n\t\t* 这种方式简单直观，使用者易于接受，容易上手操作。\n\n### 01.04_ 键盘功能键和快捷键 (掌握)\n\n* A:键盘功能键\n\t* a:Tab\n\t* b:Shift\n\t* c:Ctrl\n\t* d:Alt\n\t* e:空格\n\t* f:Enter\n\t* g:Window\n\t* h:上下左右键\n\t* i:PrtSc(PrintScreen)屏幕截图\n* B:键盘快捷键\n\t* a:Ctrl+A\t全选\n\t* b:Ctrl+C\t复制\n\t* c:Ctrl+V\t粘贴\n\t* d:Ctrl+X\t剪切\n\t* e:Ctrl+Z\t撤销\n\t* f:Ctrl+S\t保存\n\n### 01.05_ 如何打开DOS控制台 (掌握)\n\n* A:xp下如何打开DOS控制台？\n\t* a:开始--程序--附件--命令提示符\n\t* b:开始--运行--cmd--回车\n\t* c:win+r--cmd--回车\n* B:win7下如何打开DOS控制台？\n\t* a:开始--所有程序--附件--命令提示符\n\t* b:开始--搜索程序和文件--cmd--回车\n\t* c:win+r--cmd--回车\n* C:win8下如何打开DOS控制台\n\t* a:鼠标左击开始--下箭头--命令提示符\n\t* b:鼠标右击开始--搜索--cmd--回车\n\t* c:鼠标右击开始--运行--cmd--回车\n\t* d:win+r--cmd--回车\n\n### 01.06_ 常见的DOS命令讲解\n\n* A:d: 回车\t盘符切换\n* B:dir(directory):列出当前目录下的文件以及文件夹\n* C:cd (change directory)改变指定目录(进入指定目录)\n* D:cd.. : 退回到上一级目录\n* E:cd\\: 退回到根目录\n* F:cls : (clear screen)清屏\n* G:exit : 退出dos命令行(分割线上的需要掌握,下的了解)\n* /=========================================================\n* md (make directory) : 创建目录\n* rd (remove directory): 删除目录\n* del (delete): 删除文件,删除一堆后缀名一样的文件*.txt\n* notepad 创建文件\n* 删除带内容的文件夹\n\t* rd + /s\t文件夹名称(询问是否删除)\n\t* rd + /q + /s 文件夹名称(直接删除)\n\n### 01.07_  Java语言概述 (了解)\n\n* A:Java语言发展史\n\t* 詹姆斯·高斯林（James Gosling）1977年获得了加拿大卡尔加里大学计算机科学学士学位，1983年获得了美国卡内基梅隆大学计算机科学博士学位，毕业后到IBM工作，设计IBM第一代工作站NeWS系统，但不受重视。后来转至Sun公司，1990年，与Patrick，Naughton和Mike Sheridan等人合作“绿色计划”，后来发展一套语言叫做“Oak”，后改名为Java。\n\t* SUN(Stanford University Network，斯坦福大学网络公司) \n* B:Java语言版本\n\t* JDK 1.1.4\t\tSparkler\t宝石\t\t\t\t1997-09-12\n\t* JDK 1.1.5\t\tPumpkin\t\t南瓜\t\t\t\t1997-12-13\n\t* JDK 1.1.6\t\tAbigail\t\t阿比盖尔--女子名\t\t1998-04-24\n\t* JDK 1.1.7\t\tBrutus\t\t布鲁图--古罗马政治家和将军\t1998-09-28\n\t* JDK 1.1.8\t\tChelsea\t\t切尔西--城市名\t\t\t1999-04-08\n\t* J2SE 1.2\t\tPlayground\t运动场\t\t\t\t1998-12-04\n\t* J2SE 1.2.1\t\tnone\t\t无\t\t\t\t1999-03-30\n\t* J2SE 1.2.2\t\tCricket\t\t蟋蟀\t\t\t\t1999-07-08\n\t* J2SE 1.3\t\tKestrel\t\t美洲红隼(sǔn)\t\t\t2000-05-08\n\t* J2SE 1.3.1\t\tLadybird\t瓢虫\t\t\t\t2001-05-17\n\t* J2SE 1.4.0\t\tMerlin\t\t灰背隼\t\t\t\t2002-02-13\n\t* J2SE 1.4.1\t\tgrasshopper\t蚱蜢\t\t\t\t2002-09-16\n\t* J2SE 1.4.2\t\tMantis\t\t螳螂\t\t\t\t2003-06-26\n\t* JAVASE 5.0 (1.5.0)\tTiger\t\t老虎\t\n\t* JAVASE 5.1 (1.5.1)\tDragonfly\t蜻蜓\t\n\t* JAVASE 6.0 (1.6.0)\tMustang\t\t野马\n\t* JAVASE 7.0 (1.7.0)\tDolphin\t\t海豚\n* C:Java语言平台\n\t* J2SE(Java 2 Platform Standard Edition)标准版\n\t\t* 是为开发普通桌面和商务应用程序提供的解决方案,该技术体系是其他两者的基础，可以完成一些桌面应用程序的开发\n\t* J2ME(Java 2 Platform Micro Edition)小型版\n\t\t* 是为开发电子消费产品和嵌入式设备提供的解决方案\n\t* J2EE(Java 2 Platform Enterprise Edition)企业版\n\t\t* 是为开发企业环境下的应用程序提供的一套解决方案,该技术体系中包含的技术如 Servlet、Jsp等，主要针对于Web应用程序开发 \n* C:Java语言特点\n\t* 简单性\t\t\n\t* 解释性\n\t* 面向对象\t\t\n\t* 高性能\n\t* 分布式处理\t\n\t* 多线程\n\t* 健壮性\t\t\n\t* 动态\n\t* 结构中立\t\t\n\t* 安全性\n\t* 开源\n\t* 跨平台\n\n### 01.08_  Java语言跨平台原理 (掌握)\n\n* A:什么是跨平台性\n* B:Java语言跨平台原理\n\t* 只要在需要运行java应用程序的操作系统上，先安装一个Java虚拟机(JVM Java Virtual Machine)即可。由JVM来负责Java程序在该系统中的运行。\n* C:Java语言跨平台图解\n\t* write once ,run anywhere!(一处编译,到处运行)\n\n### 01.09_  JRE和JDK的概述 (掌握)\n\n* A:什么是JRE\n\t* 包括Java虚拟机(JVM Java Virtual Machine)和Java程序所需的核心类库等，如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。\n\t* JRE:JVM+类库。 \n* B:什么是JDK\n\t* JDK是提供给Java开发人员使用的，其中包含了java的开发工具，也包括了JRE。所以安装了JDK，就不用在单独安装JRE了。\n\t* 其中的开发工具：编译工具(javac.exe)  打包工具(jar.exe)等\n \t* JDK:JRE+JAVA的开发工具。\n* C:为什么JDK中包含一个JRE\n\t* 为什么JDK中包含一个JRE呢？\n\t\t* 开发完的程序，需要运行一下看看效果。\n* D:JDK,JRE,JVM的作用和关系\n\n### 01.10_  JDK的下载和安装过程图解 (了解)\n\n* A:JDK的下载\n\t* a:官网 http://www.oracle.com\n\t* b:演示下载流程\n* B:JDK的安装\n\t* a:傻瓜式安装\n\t\t* 双击安装程序，然后一路next即可(但是不建议)\n\t* b:安装的推荐方式\n\t\t* 安装路径不要有中文或者特殊符号如空格等。\n\t\t* 所有和开发相关的软件最好安装目录统一。\n\t\t\t* 举例：我的JDK安装路径\n\t\t\t\t* D:\\develop\\Java\\jdk1.7.0_72\n\t\t* 当提示安装JRE时，可以选择不安装。建议还是安装上。\n\t* c:演示安装流程\n\t\t* 可以先在d盘建立一个文件夹develop\n\t\t* 然后演示安装过程\n* C:验证安装是否成功\n\t* a:通过DOS命令，切换到JDK安装的bin目录下。\n\t\t* D:\\develop\\Java\\jdk1.7.0_72\\bin\n\t* b:然后分别输入javac和java，如果正常显示一些内容，说明安装成功\n\n### 01.11_  JDK安装路径下的目录解释 (了解)\n\n* a:bin目录：该目录用于存放一些可执行程序。\n\t* 如javac.exe（java编译器）、java.exe(java运行工具)，jar.exe(打包工具)和* javadoc.exe(文档生成工具)等。\n* b:db目录：db目录是一个小型的数据库。\n\t* 从JDK 6.0开始，Java中引用了一个新的成员JavaDB，这是一个纯Java实现、开源的数据库管理系统。这个数据库不仅轻便，而且支持JDBC 4.0所有的规范，在学习JDBC 时，不再需要额外地安装一个数据库软件，选择直接使用JavaDB即可。\n* c:jre目录：\"jre\"是 Java Runtime Environment 的缩写，意为Java程序运行时环境。此目录是Java运行时环境的根目录，它包括Java虚拟机，运行时的类包，Java应用启动器以及一个bin目录，但不包含开发环境中的开发工具。\n* d:include目录：由于JDK是通过C和C++实现的，因此在启动时需要引入一些C语言的头文件，该目录就是用于存放这些头文件的。\n* e:lib目录：lib是library的缩写，意为 Java 类库或库文件，是开发工具使用的归档包文件。\n* f:src.zip文件：src.zip为src文件夹的压缩文件，src中放置的是JDK核心类的源代码，通过该文件可以查看Java基础类的源代码。\n\n### 01.12_  Java开发工具介绍 (了解)\n\n* A:notepad(微软操作系统自带)\n* B:Editplus/Notepad++\n* C:Eclipse\n* D:MyEclipse\n\t* 给大家简单的介绍一下这些工具，然后说说我们使用这些工具的顺序。\n\t* 基础班：先notepad，然后Editplus，再Eclipse。\n\t* 就业班：MyEclipse和Eclipse都用。\n\n### 01.13_  HelloWorld案例的编写和运行 (掌握)\n\n* A:定义类\n* B:写main方法\n* C:写输出语句\n* D:Java程序开发运行与工作原理\n* E:编译和运行程序\n\n\t\tclass HelloWorld {\n\t\t\tpublic static void main(String[] args) {\n\t\t\t\tSystem.out.println(\"HelloWorld\");\n\t\t\t}\n\t\t}\n\n### 01.14_  HelloWorld案例常见问题 (掌握)\n\n* A:找不到文件(都演示一下，让学生看看出现的都是什么问题)\n\t* a:文件扩展名隐藏导致编译失败\n\t* b:文件名写错了\n* B:单词拼写问题(都演示一下，让学生看看出现的都是什么问题)\n\t* a:class写成Class\n\t* b:String写成string\n\t* c:System写成system\n\t* d:main写成mian\n* C:括号匹配问题(都演示一下，让学生看看出现的都是什么问题)\n\t* a:把类体的那对大括号弄掉一个\n\t* b:把方法体的那对大括号弄掉一个\n\t* c:把输出语句的那对小括号弄掉一个\n* D:中英文问题(都演示一下，让学生看看出现的都是什么问题)\n\t* a:提示信息：错误: 非法字符: \\????的格式\n\t* 注意：java编程中需要的基本上都是英文字符\n\n### 01.15_  Java语言的书写格式(约定俗成)(掌握)\n\n* 1,大括号要对齐,并且成对写\n* 2,左大括号前面有空格\n* 3,遇到左大括号要缩进,Tab\n* 4,方法和程序块之间加空行让程序看起来清晰\n* 5,并排语句之间加空格,例如for语句\n* 6,运算符两侧加空格\n\n### 01.16_  path环境变量的作用及配置方式1 (掌握)\n\n* A:在JDK的bin目录下开发程序容易产生的问题\n\t* a:如果文件过多，不方便管理\n\t* b:删除自己写过的不需要的文件，可能不小心把JDK自带的工具给删除了\n* B:如何解决问题呢\n\t* notepad这样的命令为什么在任何路径下都能够执行,配置path环境变量\n* C:配置方式\n\t* a:xp系统\n\t\t* 右键点击桌面计算机→选择属性→选择高级选项卡→点击环境变量→下方系统变量中查找path→双击path→将jdk安装目录下的bin目录添加到最左边并添加分号。\n\t* b:win7/win8系统\n\t\t* 右键点击桌面计算机→选择属性→选择高级系统设置→选择高级选项卡→点击环境变量→下方系统变量中查找path→双击path→将jdk安装目录下的bin目录添加到最左边并添加分号。\n* path配置的是可执行的文件.exe,配置后可以在不同的盘符下访问path路径下的可执行文件\n\n### 01.17_  Path环境变量的配置方式2 (掌握)\n\n* A:先配置JAVA_HOME\n* B:再修改path\n* C:最后说一下path是有先后顺序关系的\n\n### 01.18_  classpath环境变量的作用及其配置 (了解)\n\n* A:为什么要配置classpath\n* B:classpath配置的原理\n* C:如何配置classpath\n\n* path和classpath的区别\n\t* path配置的是可执行的文件.exe,配置后可以在不同的盘符下访问path路径下的可执行文件\n\t* classpath配置的java的类文件,就是.class文件\n\n### 01.19_  Editplus开发程序并编译运行 (了解)\n\n* A:配置快捷键编译运行\n* B:去除备份文件\n\n### 01.20_  注释概述及其分类 (掌握)\n\n* A:什么是注释\n* B:注释的分类及讲解\n\t* 文档注释目前不讲，说后面讲解\n\n* 注释的作用\n\t* A:解释说明程序\n\t* B:帮助我们调试错误\n\t\n### 01.21_  关键字的概述和使用 (掌握)\n\n* A:什么是关键字\n\t* 被Java语言赋予特定含义的单词 \n* B:关键字的特点\n\t* 组成关键字的字母全部小写 \n* C:常见关键字\n\t* public static void class等 \n* D:关键字的注意事项\n\t* goto和const作为保留字存在,目前并不使用,类似Editplus这样的高级记事本,针对关键字有特殊的颜色标记，非常直观 \n\n### 01.22_  标识符的概述和组成规则 (掌握)\n\n* A:什么是标识符\n\t* 就是给类,接口,方法,变量等起名字时使用的字符序列 \n* B:标识符的组成规则\n\t* 英文大小写字母\n\t* 数字字符\n\t* $和_ \n* C:标识符注意事项\n\t* 1,不能使用关键字\n\t* 2,不能数字开头 \n\n### 01.23_  标识符中常见的命名规则 (了解)\n\n* 见名知意\n* A:包\n\t* 最好是域名倒过来,要求所有的字母小写 \n* B:类或者接口\n\t* 如果是一个单词首字母大写\n\t* 如果是多个单词每个单词首字母大写(驼峰标识) \n* C:方法或者变量\n\t* 如果是一个单词全部小写\n\t* 如果是多个单词,从第二个单词首字母大写 \n* D:常量\n\t* 如果是一个单词,所有字母大写\n\t* 如果是多个单词,所有的单词大写,用下划线区分每个单词 \n\n### 01.24_day01总结\n\n* 把今天的知识点总结一遍。","source":"_posts/Java学习笔记（day01）.md","raw":"---\ntitle: Java学习笔记（day01）\ncopyright: true\nabbrlink: 8c8e25d\ntags:\n  - Java\ncategories: Java\ndate: 2018-07-24 18:11:23\nnotshow: true\npassword:\n---\n\n### 01.01_ 计算机概述(了解)\n\n* A:什么是计算机?计算机在生活中的应用举例\n\t* 计算机（Computer）全称：电子计算机，俗称电脑。是一种能够按照程序运行，自动、高速处理海量数据的现代化智能电子设备。由硬件和软件所组成，没有安装任何软件的计算机称为裸机。常见的形式有台式计算机、笔记本计算机、大型计算机等。\n\t* 应用举例\n\t\t* 1：科学计算\n\t\t* 2、数据处理\n\t\t* 3、自动控制\n\t\t* 4、计算机辅助设计\n\t\t* 5、人工智能\n\t\t* 6、多媒体应用\n\t\t* 7、计算机网络\n\t\t* ... \n* B:什么是硬件?硬件举例\n\t* 计算机硬件（Computer Hardware）是指计算机系统中由电子，机械和光电元件等组成的各种物理装置的总称。这些物理装置按系统结构的要求构成一个有机整体为计算机软件运行提供物质基础。\n\t* 冯.诺依曼体系结构\n\t* 计算机的硬件分成5大组成部件：运算器、控制器、存储器、输入设备和输出设备。\n\t\n\t\t* 运算器和控制器是计算机的核心，合称中央处理单元（Central Processing Unit，CPU）或处理器。CPU的内部还有一些高速存储单元，被称为寄存器。其中运算器执行所有的算术和逻辑运算；控制器负责把指令逐条从存储器中取出，经译码后向计算机发出各种控制命令；而寄存器为处理单元提供操作所需要的数据。\n\t\t* 存储器是计算机的记忆部分，用来存放程序以及程序中涉及的数据。它分为内部存储器和外部存储器。内部存储器用于存放正在执行的程序和使用的数据，其成本高、容量小，但速度快。外部存储器可用于长期保存大量程序和数据，其成本低、容量大，但速度较慢。\n\t\t* 输入设备和输出设备统称为外部设备，简称外设或I/O设备，用来实现人机交互和机间通信。微型机中常用的输入设备有键盘、鼠标等，输出设备有显示器、打印机等。\n* C:什么是软件?软件分类及举例\n\t* 计算机软件(Computer Software)是使用计算机过程中必不可少的东西，计算机软件可以使计算机按照事先预定好的顺序完成特定的功能\n\t* 计算机软件按照其功能划分为系统软件与应用软件\n\t\t* 系统软件： DOS(Disk Operating System), Windows, Linux, Unix, Mac, Android, iOS\n\t\t* 应用软件：office  QQ聊天  YY语言  扫雷\n\n### 01.02_ 软件开发和计算机语言概述 (了解)\n\n* A:什么是软件\n\t* 按照特定顺序组织的计算机数据和指令的集合\n* B:什么是开发\n\t* 软件的制作过程\n* C:什么是软件开发\n\t* 借助开发工具与计算机语言制作软件 \n* D:什么是计算机语言\n\t* 人与计算机之间进行信息交流沟通的一种特殊语言\n* E:计算机语言的分类\n\t* 机器语言：\n\t\t* 机器语言是直接用二进制代码指令表达的计算机语言，指令是用0和1组成的一串代码，它们有一定的位数，并分成若干段，各段的编码表示不同的含义。\n\t* 汇编语言：\n\t\t* 汇编语言是使用一些特殊的符号来代替机器语言的二进制码，计算机不能直接识别，需要用一种软件将汇编语言翻译成机器语言。\n\t* 高级语言：  \n\t\t* 使用普通英语进行编写源代码，通过编译器将源代码翻译成计算机直接识别的机器语言，之后再由计算机执行。\n\t\t* 高级语言包括C,C++,C#,JAVA\n\n### 01.03_ 人机交互 (了解)\n\n* A:人机交互的两种方式\n\t* a:命令行方式 \n\t\t* 需要有一个控制台，输入特定的指令，让计算机完成一些操作。较为麻烦，需要记录住一些命令。 \n\t* b:图形化界面方式\n\t\t* 这种方式简单直观，使用者易于接受，容易上手操作。\n\n### 01.04_ 键盘功能键和快捷键 (掌握)\n\n* A:键盘功能键\n\t* a:Tab\n\t* b:Shift\n\t* c:Ctrl\n\t* d:Alt\n\t* e:空格\n\t* f:Enter\n\t* g:Window\n\t* h:上下左右键\n\t* i:PrtSc(PrintScreen)屏幕截图\n* B:键盘快捷键\n\t* a:Ctrl+A\t全选\n\t* b:Ctrl+C\t复制\n\t* c:Ctrl+V\t粘贴\n\t* d:Ctrl+X\t剪切\n\t* e:Ctrl+Z\t撤销\n\t* f:Ctrl+S\t保存\n\n### 01.05_ 如何打开DOS控制台 (掌握)\n\n* A:xp下如何打开DOS控制台？\n\t* a:开始--程序--附件--命令提示符\n\t* b:开始--运行--cmd--回车\n\t* c:win+r--cmd--回车\n* B:win7下如何打开DOS控制台？\n\t* a:开始--所有程序--附件--命令提示符\n\t* b:开始--搜索程序和文件--cmd--回车\n\t* c:win+r--cmd--回车\n* C:win8下如何打开DOS控制台\n\t* a:鼠标左击开始--下箭头--命令提示符\n\t* b:鼠标右击开始--搜索--cmd--回车\n\t* c:鼠标右击开始--运行--cmd--回车\n\t* d:win+r--cmd--回车\n\n### 01.06_ 常见的DOS命令讲解\n\n* A:d: 回车\t盘符切换\n* B:dir(directory):列出当前目录下的文件以及文件夹\n* C:cd (change directory)改变指定目录(进入指定目录)\n* D:cd.. : 退回到上一级目录\n* E:cd\\: 退回到根目录\n* F:cls : (clear screen)清屏\n* G:exit : 退出dos命令行(分割线上的需要掌握,下的了解)\n* /=========================================================\n* md (make directory) : 创建目录\n* rd (remove directory): 删除目录\n* del (delete): 删除文件,删除一堆后缀名一样的文件*.txt\n* notepad 创建文件\n* 删除带内容的文件夹\n\t* rd + /s\t文件夹名称(询问是否删除)\n\t* rd + /q + /s 文件夹名称(直接删除)\n\n### 01.07_  Java语言概述 (了解)\n\n* A:Java语言发展史\n\t* 詹姆斯·高斯林（James Gosling）1977年获得了加拿大卡尔加里大学计算机科学学士学位，1983年获得了美国卡内基梅隆大学计算机科学博士学位，毕业后到IBM工作，设计IBM第一代工作站NeWS系统，但不受重视。后来转至Sun公司，1990年，与Patrick，Naughton和Mike Sheridan等人合作“绿色计划”，后来发展一套语言叫做“Oak”，后改名为Java。\n\t* SUN(Stanford University Network，斯坦福大学网络公司) \n* B:Java语言版本\n\t* JDK 1.1.4\t\tSparkler\t宝石\t\t\t\t1997-09-12\n\t* JDK 1.1.5\t\tPumpkin\t\t南瓜\t\t\t\t1997-12-13\n\t* JDK 1.1.6\t\tAbigail\t\t阿比盖尔--女子名\t\t1998-04-24\n\t* JDK 1.1.7\t\tBrutus\t\t布鲁图--古罗马政治家和将军\t1998-09-28\n\t* JDK 1.1.8\t\tChelsea\t\t切尔西--城市名\t\t\t1999-04-08\n\t* J2SE 1.2\t\tPlayground\t运动场\t\t\t\t1998-12-04\n\t* J2SE 1.2.1\t\tnone\t\t无\t\t\t\t1999-03-30\n\t* J2SE 1.2.2\t\tCricket\t\t蟋蟀\t\t\t\t1999-07-08\n\t* J2SE 1.3\t\tKestrel\t\t美洲红隼(sǔn)\t\t\t2000-05-08\n\t* J2SE 1.3.1\t\tLadybird\t瓢虫\t\t\t\t2001-05-17\n\t* J2SE 1.4.0\t\tMerlin\t\t灰背隼\t\t\t\t2002-02-13\n\t* J2SE 1.4.1\t\tgrasshopper\t蚱蜢\t\t\t\t2002-09-16\n\t* J2SE 1.4.2\t\tMantis\t\t螳螂\t\t\t\t2003-06-26\n\t* JAVASE 5.0 (1.5.0)\tTiger\t\t老虎\t\n\t* JAVASE 5.1 (1.5.1)\tDragonfly\t蜻蜓\t\n\t* JAVASE 6.0 (1.6.0)\tMustang\t\t野马\n\t* JAVASE 7.0 (1.7.0)\tDolphin\t\t海豚\n* C:Java语言平台\n\t* J2SE(Java 2 Platform Standard Edition)标准版\n\t\t* 是为开发普通桌面和商务应用程序提供的解决方案,该技术体系是其他两者的基础，可以完成一些桌面应用程序的开发\n\t* J2ME(Java 2 Platform Micro Edition)小型版\n\t\t* 是为开发电子消费产品和嵌入式设备提供的解决方案\n\t* J2EE(Java 2 Platform Enterprise Edition)企业版\n\t\t* 是为开发企业环境下的应用程序提供的一套解决方案,该技术体系中包含的技术如 Servlet、Jsp等，主要针对于Web应用程序开发 \n* C:Java语言特点\n\t* 简单性\t\t\n\t* 解释性\n\t* 面向对象\t\t\n\t* 高性能\n\t* 分布式处理\t\n\t* 多线程\n\t* 健壮性\t\t\n\t* 动态\n\t* 结构中立\t\t\n\t* 安全性\n\t* 开源\n\t* 跨平台\n\n### 01.08_  Java语言跨平台原理 (掌握)\n\n* A:什么是跨平台性\n* B:Java语言跨平台原理\n\t* 只要在需要运行java应用程序的操作系统上，先安装一个Java虚拟机(JVM Java Virtual Machine)即可。由JVM来负责Java程序在该系统中的运行。\n* C:Java语言跨平台图解\n\t* write once ,run anywhere!(一处编译,到处运行)\n\n### 01.09_  JRE和JDK的概述 (掌握)\n\n* A:什么是JRE\n\t* 包括Java虚拟机(JVM Java Virtual Machine)和Java程序所需的核心类库等，如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。\n\t* JRE:JVM+类库。 \n* B:什么是JDK\n\t* JDK是提供给Java开发人员使用的，其中包含了java的开发工具，也包括了JRE。所以安装了JDK，就不用在单独安装JRE了。\n\t* 其中的开发工具：编译工具(javac.exe)  打包工具(jar.exe)等\n \t* JDK:JRE+JAVA的开发工具。\n* C:为什么JDK中包含一个JRE\n\t* 为什么JDK中包含一个JRE呢？\n\t\t* 开发完的程序，需要运行一下看看效果。\n* D:JDK,JRE,JVM的作用和关系\n\n### 01.10_  JDK的下载和安装过程图解 (了解)\n\n* A:JDK的下载\n\t* a:官网 http://www.oracle.com\n\t* b:演示下载流程\n* B:JDK的安装\n\t* a:傻瓜式安装\n\t\t* 双击安装程序，然后一路next即可(但是不建议)\n\t* b:安装的推荐方式\n\t\t* 安装路径不要有中文或者特殊符号如空格等。\n\t\t* 所有和开发相关的软件最好安装目录统一。\n\t\t\t* 举例：我的JDK安装路径\n\t\t\t\t* D:\\develop\\Java\\jdk1.7.0_72\n\t\t* 当提示安装JRE时，可以选择不安装。建议还是安装上。\n\t* c:演示安装流程\n\t\t* 可以先在d盘建立一个文件夹develop\n\t\t* 然后演示安装过程\n* C:验证安装是否成功\n\t* a:通过DOS命令，切换到JDK安装的bin目录下。\n\t\t* D:\\develop\\Java\\jdk1.7.0_72\\bin\n\t* b:然后分别输入javac和java，如果正常显示一些内容，说明安装成功\n\n### 01.11_  JDK安装路径下的目录解释 (了解)\n\n* a:bin目录：该目录用于存放一些可执行程序。\n\t* 如javac.exe（java编译器）、java.exe(java运行工具)，jar.exe(打包工具)和* javadoc.exe(文档生成工具)等。\n* b:db目录：db目录是一个小型的数据库。\n\t* 从JDK 6.0开始，Java中引用了一个新的成员JavaDB，这是一个纯Java实现、开源的数据库管理系统。这个数据库不仅轻便，而且支持JDBC 4.0所有的规范，在学习JDBC 时，不再需要额外地安装一个数据库软件，选择直接使用JavaDB即可。\n* c:jre目录：\"jre\"是 Java Runtime Environment 的缩写，意为Java程序运行时环境。此目录是Java运行时环境的根目录，它包括Java虚拟机，运行时的类包，Java应用启动器以及一个bin目录，但不包含开发环境中的开发工具。\n* d:include目录：由于JDK是通过C和C++实现的，因此在启动时需要引入一些C语言的头文件，该目录就是用于存放这些头文件的。\n* e:lib目录：lib是library的缩写，意为 Java 类库或库文件，是开发工具使用的归档包文件。\n* f:src.zip文件：src.zip为src文件夹的压缩文件，src中放置的是JDK核心类的源代码，通过该文件可以查看Java基础类的源代码。\n\n### 01.12_  Java开发工具介绍 (了解)\n\n* A:notepad(微软操作系统自带)\n* B:Editplus/Notepad++\n* C:Eclipse\n* D:MyEclipse\n\t* 给大家简单的介绍一下这些工具，然后说说我们使用这些工具的顺序。\n\t* 基础班：先notepad，然后Editplus，再Eclipse。\n\t* 就业班：MyEclipse和Eclipse都用。\n\n### 01.13_  HelloWorld案例的编写和运行 (掌握)\n\n* A:定义类\n* B:写main方法\n* C:写输出语句\n* D:Java程序开发运行与工作原理\n* E:编译和运行程序\n\n\t\tclass HelloWorld {\n\t\t\tpublic static void main(String[] args) {\n\t\t\t\tSystem.out.println(\"HelloWorld\");\n\t\t\t}\n\t\t}\n\n### 01.14_  HelloWorld案例常见问题 (掌握)\n\n* A:找不到文件(都演示一下，让学生看看出现的都是什么问题)\n\t* a:文件扩展名隐藏导致编译失败\n\t* b:文件名写错了\n* B:单词拼写问题(都演示一下，让学生看看出现的都是什么问题)\n\t* a:class写成Class\n\t* b:String写成string\n\t* c:System写成system\n\t* d:main写成mian\n* C:括号匹配问题(都演示一下，让学生看看出现的都是什么问题)\n\t* a:把类体的那对大括号弄掉一个\n\t* b:把方法体的那对大括号弄掉一个\n\t* c:把输出语句的那对小括号弄掉一个\n* D:中英文问题(都演示一下，让学生看看出现的都是什么问题)\n\t* a:提示信息：错误: 非法字符: \\????的格式\n\t* 注意：java编程中需要的基本上都是英文字符\n\n### 01.15_  Java语言的书写格式(约定俗成)(掌握)\n\n* 1,大括号要对齐,并且成对写\n* 2,左大括号前面有空格\n* 3,遇到左大括号要缩进,Tab\n* 4,方法和程序块之间加空行让程序看起来清晰\n* 5,并排语句之间加空格,例如for语句\n* 6,运算符两侧加空格\n\n### 01.16_  path环境变量的作用及配置方式1 (掌握)\n\n* A:在JDK的bin目录下开发程序容易产生的问题\n\t* a:如果文件过多，不方便管理\n\t* b:删除自己写过的不需要的文件，可能不小心把JDK自带的工具给删除了\n* B:如何解决问题呢\n\t* notepad这样的命令为什么在任何路径下都能够执行,配置path环境变量\n* C:配置方式\n\t* a:xp系统\n\t\t* 右键点击桌面计算机→选择属性→选择高级选项卡→点击环境变量→下方系统变量中查找path→双击path→将jdk安装目录下的bin目录添加到最左边并添加分号。\n\t* b:win7/win8系统\n\t\t* 右键点击桌面计算机→选择属性→选择高级系统设置→选择高级选项卡→点击环境变量→下方系统变量中查找path→双击path→将jdk安装目录下的bin目录添加到最左边并添加分号。\n* path配置的是可执行的文件.exe,配置后可以在不同的盘符下访问path路径下的可执行文件\n\n### 01.17_  Path环境变量的配置方式2 (掌握)\n\n* A:先配置JAVA_HOME\n* B:再修改path\n* C:最后说一下path是有先后顺序关系的\n\n### 01.18_  classpath环境变量的作用及其配置 (了解)\n\n* A:为什么要配置classpath\n* B:classpath配置的原理\n* C:如何配置classpath\n\n* path和classpath的区别\n\t* path配置的是可执行的文件.exe,配置后可以在不同的盘符下访问path路径下的可执行文件\n\t* classpath配置的java的类文件,就是.class文件\n\n### 01.19_  Editplus开发程序并编译运行 (了解)\n\n* A:配置快捷键编译运行\n* B:去除备份文件\n\n### 01.20_  注释概述及其分类 (掌握)\n\n* A:什么是注释\n* B:注释的分类及讲解\n\t* 文档注释目前不讲，说后面讲解\n\n* 注释的作用\n\t* A:解释说明程序\n\t* B:帮助我们调试错误\n\t\n### 01.21_  关键字的概述和使用 (掌握)\n\n* A:什么是关键字\n\t* 被Java语言赋予特定含义的单词 \n* B:关键字的特点\n\t* 组成关键字的字母全部小写 \n* C:常见关键字\n\t* public static void class等 \n* D:关键字的注意事项\n\t* goto和const作为保留字存在,目前并不使用,类似Editplus这样的高级记事本,针对关键字有特殊的颜色标记，非常直观 \n\n### 01.22_  标识符的概述和组成规则 (掌握)\n\n* A:什么是标识符\n\t* 就是给类,接口,方法,变量等起名字时使用的字符序列 \n* B:标识符的组成规则\n\t* 英文大小写字母\n\t* 数字字符\n\t* $和_ \n* C:标识符注意事项\n\t* 1,不能使用关键字\n\t* 2,不能数字开头 \n\n### 01.23_  标识符中常见的命名规则 (了解)\n\n* 见名知意\n* A:包\n\t* 最好是域名倒过来,要求所有的字母小写 \n* B:类或者接口\n\t* 如果是一个单词首字母大写\n\t* 如果是多个单词每个单词首字母大写(驼峰标识) \n* C:方法或者变量\n\t* 如果是一个单词全部小写\n\t* 如果是多个单词,从第二个单词首字母大写 \n* D:常量\n\t* 如果是一个单词,所有字母大写\n\t* 如果是多个单词,所有的单词大写,用下划线区分每个单词 \n\n### 01.24_day01总结\n\n* 把今天的知识点总结一遍。","slug":"Java学习笔记（day01）","published":1,"updated":"2020-02-20T06:06:59.377Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td240008fkup9lzk3h5b","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h3 id=\"01-01-计算机概述-了解\"><a class=\"header-anchor\" href=\"#01-01-计算机概述-了解\">☆</a>01.01_ 计算机概述(了解)</h3>\n<ul>\n<li>A:什么是计算机?计算机在生活中的应用举例\n<ul>\n<li>计算机（Computer）全称：电子计算机，俗称电脑。是一种能够按照程序运行，自动、高速处理海量数据的现代化智能电子设备。由硬件和软件所组成，没有安装任何软件的计算机称为裸机。常见的形式有台式计算机、笔记本计算机、大型计算机等。</li>\n<li>应用举例\n<ul>\n<li>1：科学计算</li>\n<li>2、数据处理</li>\n<li>3、自动控制</li>\n<li>4、计算机辅助设计</li>\n<li>5、人工智能</li>\n<li>6、多媒体应用</li>\n<li>7、计算机网络</li>\n<li>…</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:什么是硬件?硬件举例\n<ul>\n<li>\n<p>计算机硬件（Computer Hardware）是指计算机系统中由电子，机械和光电元件等组成的各种物理装置的总称。这些物理装置按系统结构的要求构成一个有机整体为计算机软件运行提供物质基础。</p>\n</li>\n<li>\n<p>冯.诺依曼体系结构</p>\n</li>\n<li>\n<p>计算机的硬件分成5大组成部件：运算器、控制器、存储器、输入设备和输出设备。</p>\n<ul>\n<li>运算器和控制器是计算机的核心，合称中央处理单元（Central Processing Unit，CPU）或处理器。CPU的内部还有一些高速存储单元，被称为寄存器。其中运算器执行所有的算术和逻辑运算；控制器负责把指令逐条从存储器中取出，经译码后向计算机发出各种控制命令；而寄存器为处理单元提供操作所需要的数据。</li>\n<li>存储器是计算机的记忆部分，用来存放程序以及程序中涉及的数据。它分为内部存储器和外部存储器。内部存储器用于存放正在执行的程序和使用的数据，其成本高、容量小，但速度快。外部存储器可用于长期保存大量程序和数据，其成本低、容量大，但速度较慢。</li>\n<li>输入设备和输出设备统称为外部设备，简称外设或I/O设备，用来实现人机交互和机间通信。微型机中常用的输入设备有键盘、鼠标等，输出设备有显示器、打印机等。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>C:什么是软件?软件分类及举例\n<ul>\n<li>计算机软件(Computer Software)是使用计算机过程中必不可少的东西，计算机软件可以使计算机按照事先预定好的顺序完成特定的功能</li>\n<li>计算机软件按照其功能划分为系统软件与应用软件\n<ul>\n<li>系统软件： DOS(Disk Operating System), Windows, Linux, Unix, Mac, Android, iOS</li>\n<li>应用软件：office  QQ聊天  YY语言  扫雷</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-02-软件开发和计算机语言概述-了解\"><a class=\"header-anchor\" href=\"#01-02-软件开发和计算机语言概述-了解\">☆</a>01.02_ 软件开发和计算机语言概述 (了解)</h3>\n<ul>\n<li>A:什么是软件\n<ul>\n<li>按照特定顺序组织的计算机数据和指令的集合</li>\n</ul>\n</li>\n<li>B:什么是开发\n<ul>\n<li>软件的制作过程</li>\n</ul>\n</li>\n<li>C:什么是软件开发\n<ul>\n<li>借助开发工具与计算机语言制作软件</li>\n</ul>\n</li>\n<li>D:什么是计算机语言\n<ul>\n<li>人与计算机之间进行信息交流沟通的一种特殊语言</li>\n</ul>\n</li>\n<li>E:计算机语言的分类\n<ul>\n<li>机器语言：\n<ul>\n<li>机器语言是直接用二进制代码指令表达的计算机语言，指令是用0和1组成的一串代码，它们有一定的位数，并分成若干段，各段的编码表示不同的含义。</li>\n</ul>\n</li>\n<li>汇编语言：\n<ul>\n<li>汇编语言是使用一些特殊的符号来代替机器语言的二进制码，计算机不能直接识别，需要用一种软件将汇编语言翻译成机器语言。</li>\n</ul>\n</li>\n<li>高级语言：\n<ul>\n<li>使用普通英语进行编写源代码，通过编译器将源代码翻译成计算机直接识别的机器语言，之后再由计算机执行。</li>\n<li>高级语言包括C,C++,C#,JAVA</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-03-人机交互-了解\"><a class=\"header-anchor\" href=\"#01-03-人机交互-了解\">☆</a>01.03_ 人机交互 (了解)</h3>\n<ul>\n<li>A:人机交互的两种方式\n<ul>\n<li>a:命令行方式\n<ul>\n<li>需要有一个控制台，输入特定的指令，让计算机完成一些操作。较为麻烦，需要记录住一些命令。</li>\n</ul>\n</li>\n<li>b:图形化界面方式\n<ul>\n<li>这种方式简单直观，使用者易于接受，容易上手操作。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-04-键盘功能键和快捷键-掌握\"><a class=\"header-anchor\" href=\"#01-04-键盘功能键和快捷键-掌握\">☆</a>01.04_ 键盘功能键和快捷键 (掌握)</h3>\n<ul>\n<li>A:键盘功能键\n<ul>\n<li>a:Tab</li>\n<li>b:Shift</li>\n<li>c:Ctrl</li>\n<li>d:Alt</li>\n<li>e:空格</li>\n<li>f:Enter</li>\n<li>g:Window</li>\n<li>h:上下左右键</li>\n<li>i:PrtSc(PrintScreen)屏幕截图</li>\n</ul>\n</li>\n<li>B:键盘快捷键\n<ul>\n<li>a:Ctrl+A\t全选</li>\n<li>b:Ctrl+C\t复制</li>\n<li>c:Ctrl+V\t粘贴</li>\n<li>d:Ctrl+X\t剪切</li>\n<li>e:Ctrl+Z\t撤销</li>\n<li>f:Ctrl+S\t保存</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-05-如何打开dos控制台-掌握\"><a class=\"header-anchor\" href=\"#01-05-如何打开dos控制台-掌握\">☆</a>01.05_ 如何打开DOS控制台 (掌握)</h3>\n<ul>\n<li>A:xp下如何打开DOS控制台？\n<ul>\n<li>a:开始–程序–附件–命令提示符</li>\n<li>b:开始–运行–cmd–回车</li>\n<li>c:win+r–cmd–回车</li>\n</ul>\n</li>\n<li>B:win7下如何打开DOS控制台？\n<ul>\n<li>a:开始–所有程序–附件–命令提示符</li>\n<li>b:开始–搜索程序和文件–cmd–回车</li>\n<li>c:win+r–cmd–回车</li>\n</ul>\n</li>\n<li>C:win8下如何打开DOS控制台\n<ul>\n<li>a:鼠标左击开始–下箭头–命令提示符</li>\n<li>b:鼠标右击开始–搜索–cmd–回车</li>\n<li>c:鼠标右击开始–运行–cmd–回车</li>\n<li>d:win+r–cmd–回车</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-06-常见的dos命令讲解\"><a class=\"header-anchor\" href=\"#01-06-常见的dos命令讲解\">☆</a>01.06_ 常见的DOS命令讲解</h3>\n<ul>\n<li>A:d: 回车\t盘符切换</li>\n<li>B:dir(directory):列出当前目录下的文件以及文件夹</li>\n<li>C:cd (change directory)改变指定目录(进入指定目录)</li>\n<li>D:cd… : 退回到上一级目录</li>\n<li>E💿 退回到根目录</li>\n<li>F:cls : (clear screen)清屏</li>\n<li>G:exit : 退出dos命令行(分割线上的需要掌握,下的了解)</li>\n<li>/=========================================================</li>\n<li>md (make directory) : 创建目录</li>\n<li>rd (remove directory): 删除目录</li>\n<li>del (delete): 删除文件,删除一堆后缀名一样的文件*.txt</li>\n<li>notepad 创建文件</li>\n<li>删除带内容的文件夹\n<ul>\n<li>rd + /s\t文件夹名称(询问是否删除)</li>\n<li>rd + /q + /s 文件夹名称(直接删除)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-07-java语言概述-了解\"><a class=\"header-anchor\" href=\"#01-07-java语言概述-了解\">☆</a>01.07_  Java语言概述 (了解)</h3>\n<ul>\n<li>A:Java语言发展史\n<ul>\n<li>詹姆斯·高斯林（James Gosling）1977年获得了加拿大卡尔加里大学计算机科学学士学位，1983年获得了美国卡内基梅隆大学计算机科学博士学位，毕业后到IBM工作，设计IBM第一代工作站NeWS系统，但不受重视。后来转至Sun公司，1990年，与Patrick，Naughton和Mike Sheridan等人合作“绿色计划”，后来发展一套语言叫做“Oak”，后改名为Java。</li>\n<li>SUN(Stanford University Network，斯坦福大学网络公司)</li>\n</ul>\n</li>\n<li>B:Java语言版本\n<ul>\n<li>JDK 1.1.4\t\tSparkler\t宝石\t\t\t\t1997-09-12</li>\n<li>JDK 1.1.5\t\tPumpkin\t\t南瓜\t\t\t\t1997-12-13</li>\n<li>JDK 1.1.6\t\tAbigail\t\t阿比盖尔–女子名\t\t1998-04-24</li>\n<li>JDK 1.1.7\t\tBrutus\t\t布鲁图–古罗马政治家和将军\t1998-09-28</li>\n<li>JDK 1.1.8\t\tChelsea\t\t切尔西–城市名\t\t\t1999-04-08</li>\n<li>J2SE 1.2\t\tPlayground\t运动场\t\t\t\t1998-12-04</li>\n<li>J2SE 1.2.1\t\tnone\t\t无\t\t\t\t1999-03-30</li>\n<li>J2SE 1.2.2\t\tCricket\t\t蟋蟀\t\t\t\t1999-07-08</li>\n<li>J2SE 1.3\t\tKestrel\t\t美洲红隼(sǔn)\t\t\t2000-05-08</li>\n<li>J2SE 1.3.1\t\tLadybird\t瓢虫\t\t\t\t2001-05-17</li>\n<li>J2SE 1.4.0\t\tMerlin\t\t灰背隼\t\t\t\t2002-02-13</li>\n<li>J2SE 1.4.1\t\tgrasshopper\t蚱蜢\t\t\t\t2002-09-16</li>\n<li>J2SE 1.4.2\t\tMantis\t\t螳螂\t\t\t\t2003-06-26</li>\n<li>JAVASE 5.0 (1.5.0)\tTiger\t\t老虎</li>\n<li>JAVASE 5.1 (1.5.1)\tDragonfly\t蜻蜓</li>\n<li>JAVASE 6.0 (1.6.0)\tMustang\t\t野马</li>\n<li>JAVASE 7.0 (1.7.0)\tDolphin\t\t海豚</li>\n</ul>\n</li>\n<li>C:Java语言平台\n<ul>\n<li>J2SE(Java 2 Platform Standard Edition)标准版\n<ul>\n<li>是为开发普通桌面和商务应用程序提供的解决方案,该技术体系是其他两者的基础，可以完成一些桌面应用程序的开发</li>\n</ul>\n</li>\n<li>J2ME(Java 2 Platform Micro Edition)小型版\n<ul>\n<li>是为开发电子消费产品和嵌入式设备提供的解决方案</li>\n</ul>\n</li>\n<li>J2EE(Java 2 Platform Enterprise Edition)企业版\n<ul>\n<li>是为开发企业环境下的应用程序提供的一套解决方案,该技术体系中包含的技术如 Servlet、Jsp等，主要针对于Web应用程序开发</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>C:Java语言特点\n<ul>\n<li>简单性</li>\n<li>解释性</li>\n<li>面向对象</li>\n<li>高性能</li>\n<li>分布式处理</li>\n<li>多线程</li>\n<li>健壮性</li>\n<li>动态</li>\n<li>结构中立</li>\n<li>安全性</li>\n<li>开源</li>\n<li>跨平台</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-08-java语言跨平台原理-掌握\"><a class=\"header-anchor\" href=\"#01-08-java语言跨平台原理-掌握\">☆</a>01.08_  Java语言跨平台原理 (掌握)</h3>\n<ul>\n<li>A:什么是跨平台性</li>\n<li>B:Java语言跨平台原理\n<ul>\n<li>只要在需要运行java应用程序的操作系统上，先安装一个Java虚拟机(JVM Java Virtual Machine)即可。由JVM来负责Java程序在该系统中的运行。</li>\n</ul>\n</li>\n<li>C:Java语言跨平台图解\n<ul>\n<li>write once ,run anywhere!(一处编译,到处运行)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-09-jre和jdk的概述-掌握\"><a class=\"header-anchor\" href=\"#01-09-jre和jdk的概述-掌握\">☆</a>01.09_  JRE和JDK的概述 (掌握)</h3>\n<ul>\n<li>A:什么是JRE\n<ul>\n<li>包括Java虚拟机(JVM Java Virtual Machine)和Java程序所需的核心类库等，如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。</li>\n<li>JRE:JVM+类库。</li>\n</ul>\n</li>\n<li>B:什么是JDK\n<ul>\n<li>JDK是提供给Java开发人员使用的，其中包含了java的开发工具，也包括了JRE。所以安装了JDK，就不用在单独安装JRE了。</li>\n<li>其中的开发工具：编译工具(javac.exe)  打包工具(jar.exe)等</li>\n<li>JDK:JRE+JAVA的开发工具。</li>\n</ul>\n</li>\n<li>C:为什么JDK中包含一个JRE\n<ul>\n<li>为什么JDK中包含一个JRE呢？\n<ul>\n<li>开发完的程序，需要运行一下看看效果。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>D:JDK,JRE,JVM的作用和关系</li>\n</ul>\n<h3 id=\"01-10-jdk的下载和安装过程图解-了解\"><a class=\"header-anchor\" href=\"#01-10-jdk的下载和安装过程图解-了解\">☆</a>01.10_  JDK的下载和安装过程图解 (了解)</h3>\n<ul>\n<li>A:JDK的下载\n<ul>\n<li>a:官网 <a href=\"http://www.oracle.com\" target=\"_blank\" rel=\"noopener\">http://www.oracle.com</a></li>\n<li>b:演示下载流程</li>\n</ul>\n</li>\n<li>B:JDK的安装\n<ul>\n<li>a:傻瓜式安装\n<ul>\n<li>双击安装程序，然后一路next即可(但是不建议)</li>\n</ul>\n</li>\n<li>b:安装的推荐方式\n<ul>\n<li>安装路径不要有中文或者特殊符号如空格等。</li>\n<li>所有和开发相关的软件最好安装目录统一。\n<ul>\n<li>举例：我的JDK安装路径\n<ul>\n<li>D:\\develop\\Java\\jdk1.7.0_72</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>当提示安装JRE时，可以选择不安装。建议还是安装上。</li>\n</ul>\n</li>\n<li>c:演示安装流程\n<ul>\n<li>可以先在d盘建立一个文件夹develop</li>\n<li>然后演示安装过程</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>C:验证安装是否成功\n<ul>\n<li>a:通过DOS命令，切换到JDK安装的bin目录下。\n<ul>\n<li>D:\\develop\\Java\\jdk1.7.0_72\\bin</li>\n</ul>\n</li>\n<li>b:然后分别输入javac和java，如果正常显示一些内容，说明安装成功</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-11-jdk安装路径下的目录解释-了解\"><a class=\"header-anchor\" href=\"#01-11-jdk安装路径下的目录解释-了解\">☆</a>01.11_  JDK安装路径下的目录解释 (了解)</h3>\n<ul>\n<li>a:bin目录：该目录用于存放一些可执行程序。\n<ul>\n<li>如javac.exe（java编译器）、java.exe(java运行工具)，jar.exe(打包工具)和* javadoc.exe(文档生成工具)等。</li>\n</ul>\n</li>\n<li>b:db目录：db目录是一个小型的数据库。\n<ul>\n<li>从JDK 6.0开始，Java中引用了一个新的成员JavaDB，这是一个纯Java实现、开源的数据库管理系统。这个数据库不仅轻便，而且支持JDBC 4.0所有的规范，在学习JDBC 时，不再需要额外地安装一个数据库软件，选择直接使用JavaDB即可。</li>\n</ul>\n</li>\n<li>c:jre目录：&quot;jre&quot;是 Java Runtime Environment 的缩写，意为Java程序运行时环境。此目录是Java运行时环境的根目录，它包括Java虚拟机，运行时的类包，Java应用启动器以及一个bin目录，但不包含开发环境中的开发工具。</li>\n<li>d:include目录：由于JDK是通过C和C++实现的，因此在启动时需要引入一些C语言的头文件，该目录就是用于存放这些头文件的。</li>\n<li>e:lib目录：lib是library的缩写，意为 Java 类库或库文件，是开发工具使用的归档包文件。</li>\n<li>f:src.zip文件：src.zip为src文件夹的压缩文件，src中放置的是JDK核心类的源代码，通过该文件可以查看Java基础类的源代码。</li>\n</ul>\n<h3 id=\"01-12-java开发工具介绍-了解\"><a class=\"header-anchor\" href=\"#01-12-java开发工具介绍-了解\">☆</a>01.12_  Java开发工具介绍 (了解)</h3>\n<ul>\n<li>A:notepad(微软操作系统自带)</li>\n<li>B:Editplus/Notepad++</li>\n<li>C:Eclipse</li>\n<li>D:MyEclipse\n<ul>\n<li>给大家简单的介绍一下这些工具，然后说说我们使用这些工具的顺序。</li>\n<li>基础班：先notepad，然后Editplus，再Eclipse。</li>\n<li>就业班：MyEclipse和Eclipse都用。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-13-helloworld案例的编写和运行-掌握\"><a class=\"header-anchor\" href=\"#01-13-helloworld案例的编写和运行-掌握\">☆</a>01.13_  HelloWorld案例的编写和运行 (掌握)</h3>\n<ul>\n<li>\n<p>A:定义类</p>\n</li>\n<li>\n<p>B:写main方法</p>\n</li>\n<li>\n<p>C:写输出语句</p>\n</li>\n<li>\n<p>D:Java程序开发运行与工作原理</p>\n</li>\n<li>\n<p>E:编译和运行程序</p>\n<pre><code>class HelloWorld {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(&quot;HelloWorld&quot;);\n\t}\n}\n</code></pre>\n</li>\n</ul>\n<h3 id=\"01-14-helloworld案例常见问题-掌握\"><a class=\"header-anchor\" href=\"#01-14-helloworld案例常见问题-掌握\">☆</a>01.14_  HelloWorld案例常见问题 (掌握)</h3>\n<ul>\n<li>A:找不到文件(都演示一下，让学生看看出现的都是什么问题)\n<ul>\n<li>a:文件扩展名隐藏导致编译失败</li>\n<li>b:文件名写错了</li>\n</ul>\n</li>\n<li>B:单词拼写问题(都演示一下，让学生看看出现的都是什么问题)\n<ul>\n<li>a:class写成Class</li>\n<li>b:String写成string</li>\n<li>c:System写成system</li>\n<li>d:main写成mian</li>\n</ul>\n</li>\n<li>C:括号匹配问题(都演示一下，让学生看看出现的都是什么问题)\n<ul>\n<li>a:把类体的那对大括号弄掉一个</li>\n<li>b:把方法体的那对大括号弄掉一个</li>\n<li>c:把输出语句的那对小括号弄掉一个</li>\n</ul>\n</li>\n<li>D:中英文问题(都演示一下，让学生看看出现的都是什么问题)\n<ul>\n<li>a:提示信息：错误: 非法字符: ???的格式</li>\n<li>注意：java编程中需要的基本上都是英文字符</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-15-java语言的书写格式-约定俗成-掌握\"><a class=\"header-anchor\" href=\"#01-15-java语言的书写格式-约定俗成-掌握\">☆</a>01.15_  Java语言的书写格式(约定俗成)(掌握)</h3>\n<ul>\n<li>1,大括号要对齐,并且成对写</li>\n<li>2,左大括号前面有空格</li>\n<li>3,遇到左大括号要缩进,Tab</li>\n<li>4,方法和程序块之间加空行让程序看起来清晰</li>\n<li>5,并排语句之间加空格,例如for语句</li>\n<li>6,运算符两侧加空格</li>\n</ul>\n<h3 id=\"01-16-path环境变量的作用及配置方式1-掌握\"><a class=\"header-anchor\" href=\"#01-16-path环境变量的作用及配置方式1-掌握\">☆</a>01.16_  path环境变量的作用及配置方式1 (掌握)</h3>\n<ul>\n<li>A:在JDK的bin目录下开发程序容易产生的问题\n<ul>\n<li>a:如果文件过多，不方便管理</li>\n<li>b:删除自己写过的不需要的文件，可能不小心把JDK自带的工具给删除了</li>\n</ul>\n</li>\n<li>B:如何解决问题呢\n<ul>\n<li>notepad这样的命令为什么在任何路径下都能够执行,配置path环境变量</li>\n</ul>\n</li>\n<li>C:配置方式\n<ul>\n<li>a:xp系统\n<ul>\n<li>右键点击桌面计算机→选择属性→选择高级选项卡→点击环境变量→下方系统变量中查找path→双击path→将jdk安装目录下的bin目录添加到最左边并添加分号。</li>\n</ul>\n</li>\n<li>b:win7/win8系统\n<ul>\n<li>右键点击桌面计算机→选择属性→选择高级系统设置→选择高级选项卡→点击环境变量→下方系统变量中查找path→双击path→将jdk安装目录下的bin目录添加到最左边并添加分号。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>path配置的是可执行的文件.exe,配置后可以在不同的盘符下访问path路径下的可执行文件</li>\n</ul>\n<h3 id=\"01-17-path环境变量的配置方式2-掌握\"><a class=\"header-anchor\" href=\"#01-17-path环境变量的配置方式2-掌握\">☆</a>01.17_  Path环境变量的配置方式2 (掌握)</h3>\n<ul>\n<li>A:先配置JAVA_HOME</li>\n<li>B:再修改path</li>\n<li>C:最后说一下path是有先后顺序关系的</li>\n</ul>\n<h3 id=\"01-18-classpath环境变量的作用及其配置-了解\"><a class=\"header-anchor\" href=\"#01-18-classpath环境变量的作用及其配置-了解\">☆</a>01.18_  classpath环境变量的作用及其配置 (了解)</h3>\n<ul>\n<li>\n<p>A:为什么要配置classpath</p>\n</li>\n<li>\n<p>B:classpath配置的原理</p>\n</li>\n<li>\n<p>C:如何配置classpath</p>\n</li>\n<li>\n<p>path和classpath的区别</p>\n<ul>\n<li>path配置的是可执行的文件.exe,配置后可以在不同的盘符下访问path路径下的可执行文件</li>\n<li>classpath配置的java的类文件,就是.class文件</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-19-editplus开发程序并编译运行-了解\"><a class=\"header-anchor\" href=\"#01-19-editplus开发程序并编译运行-了解\">☆</a>01.19_  Editplus开发程序并编译运行 (了解)</h3>\n<ul>\n<li>A:配置快捷键编译运行</li>\n<li>B:去除备份文件</li>\n</ul>\n<h3 id=\"01-20-注释概述及其分类-掌握\"><a class=\"header-anchor\" href=\"#01-20-注释概述及其分类-掌握\">☆</a>01.20_  注释概述及其分类 (掌握)</h3>\n<ul>\n<li>\n<p>A:什么是注释</p>\n</li>\n<li>\n<p>B:注释的分类及讲解</p>\n<ul>\n<li>文档注释目前不讲，说后面讲解</li>\n</ul>\n</li>\n<li>\n<p>注释的作用</p>\n<ul>\n<li>A:解释说明程序</li>\n<li>B:帮助我们调试错误</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-21-关键字的概述和使用-掌握\"><a class=\"header-anchor\" href=\"#01-21-关键字的概述和使用-掌握\">☆</a>01.21_  关键字的概述和使用 (掌握)</h3>\n<ul>\n<li>A:什么是关键字\n<ul>\n<li>被Java语言赋予特定含义的单词</li>\n</ul>\n</li>\n<li>B:关键字的特点\n<ul>\n<li>组成关键字的字母全部小写</li>\n</ul>\n</li>\n<li>C:常见关键字\n<ul>\n<li>public static void class等</li>\n</ul>\n</li>\n<li>D:关键字的注意事项\n<ul>\n<li>goto和const作为保留字存在,目前并不使用,类似Editplus这样的高级记事本,针对关键字有特殊的颜色标记，非常直观</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-22-标识符的概述和组成规则-掌握\"><a class=\"header-anchor\" href=\"#01-22-标识符的概述和组成规则-掌握\">☆</a>01.22_  标识符的概述和组成规则 (掌握)</h3>\n<ul>\n<li>A:什么是标识符\n<ul>\n<li>就是给类,接口,方法,变量等起名字时使用的字符序列</li>\n</ul>\n</li>\n<li>B:标识符的组成规则\n<ul>\n<li>英文大小写字母</li>\n<li>数字字符</li>\n<li>$和_</li>\n</ul>\n</li>\n<li>C:标识符注意事项\n<ul>\n<li>1,不能使用关键字</li>\n<li>2,不能数字开头</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-23-标识符中常见的命名规则-了解\"><a class=\"header-anchor\" href=\"#01-23-标识符中常见的命名规则-了解\">☆</a>01.23_  标识符中常见的命名规则 (了解)</h3>\n<ul>\n<li>见名知意</li>\n<li>A:包\n<ul>\n<li>最好是域名倒过来,要求所有的字母小写</li>\n</ul>\n</li>\n<li>B:类或者接口\n<ul>\n<li>如果是一个单词首字母大写</li>\n<li>如果是多个单词每个单词首字母大写(驼峰标识)</li>\n</ul>\n</li>\n<li>C:方法或者变量\n<ul>\n<li>如果是一个单词全部小写</li>\n<li>如果是多个单词,从第二个单词首字母大写</li>\n</ul>\n</li>\n<li>D:常量\n<ul>\n<li>如果是一个单词,所有字母大写</li>\n<li>如果是多个单词,所有的单词大写,用下划线区分每个单词</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-24-day01总结\"><a class=\"header-anchor\" href=\"#01-24-day01总结\">☆</a>01.24_day01总结</h3>\n<ul>\n<li>把今天的知识点总结一遍。</li>\n</ul>\n","site":{"data":{}},"length":6878,"excerpt":"","more":"<h3 id=\"01-01-计算机概述-了解\"><a class=\"header-anchor\" href=\"#01-01-计算机概述-了解\">☆</a>01.01_ 计算机概述(了解)</h3>\n<ul>\n<li>A:什么是计算机?计算机在生活中的应用举例\n<ul>\n<li>计算机（Computer）全称：电子计算机，俗称电脑。是一种能够按照程序运行，自动、高速处理海量数据的现代化智能电子设备。由硬件和软件所组成，没有安装任何软件的计算机称为裸机。常见的形式有台式计算机、笔记本计算机、大型计算机等。</li>\n<li>应用举例\n<ul>\n<li>1：科学计算</li>\n<li>2、数据处理</li>\n<li>3、自动控制</li>\n<li>4、计算机辅助设计</li>\n<li>5、人工智能</li>\n<li>6、多媒体应用</li>\n<li>7、计算机网络</li>\n<li>…</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:什么是硬件?硬件举例\n<ul>\n<li>\n<p>计算机硬件（Computer Hardware）是指计算机系统中由电子，机械和光电元件等组成的各种物理装置的总称。这些物理装置按系统结构的要求构成一个有机整体为计算机软件运行提供物质基础。</p>\n</li>\n<li>\n<p>冯.诺依曼体系结构</p>\n</li>\n<li>\n<p>计算机的硬件分成5大组成部件：运算器、控制器、存储器、输入设备和输出设备。</p>\n<ul>\n<li>运算器和控制器是计算机的核心，合称中央处理单元（Central Processing Unit，CPU）或处理器。CPU的内部还有一些高速存储单元，被称为寄存器。其中运算器执行所有的算术和逻辑运算；控制器负责把指令逐条从存储器中取出，经译码后向计算机发出各种控制命令；而寄存器为处理单元提供操作所需要的数据。</li>\n<li>存储器是计算机的记忆部分，用来存放程序以及程序中涉及的数据。它分为内部存储器和外部存储器。内部存储器用于存放正在执行的程序和使用的数据，其成本高、容量小，但速度快。外部存储器可用于长期保存大量程序和数据，其成本低、容量大，但速度较慢。</li>\n<li>输入设备和输出设备统称为外部设备，简称外设或I/O设备，用来实现人机交互和机间通信。微型机中常用的输入设备有键盘、鼠标等，输出设备有显示器、打印机等。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>C:什么是软件?软件分类及举例\n<ul>\n<li>计算机软件(Computer Software)是使用计算机过程中必不可少的东西，计算机软件可以使计算机按照事先预定好的顺序完成特定的功能</li>\n<li>计算机软件按照其功能划分为系统软件与应用软件\n<ul>\n<li>系统软件： DOS(Disk Operating System), Windows, Linux, Unix, Mac, Android, iOS</li>\n<li>应用软件：office  QQ聊天  YY语言  扫雷</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-02-软件开发和计算机语言概述-了解\"><a class=\"header-anchor\" href=\"#01-02-软件开发和计算机语言概述-了解\">☆</a>01.02_ 软件开发和计算机语言概述 (了解)</h3>\n<ul>\n<li>A:什么是软件\n<ul>\n<li>按照特定顺序组织的计算机数据和指令的集合</li>\n</ul>\n</li>\n<li>B:什么是开发\n<ul>\n<li>软件的制作过程</li>\n</ul>\n</li>\n<li>C:什么是软件开发\n<ul>\n<li>借助开发工具与计算机语言制作软件</li>\n</ul>\n</li>\n<li>D:什么是计算机语言\n<ul>\n<li>人与计算机之间进行信息交流沟通的一种特殊语言</li>\n</ul>\n</li>\n<li>E:计算机语言的分类\n<ul>\n<li>机器语言：\n<ul>\n<li>机器语言是直接用二进制代码指令表达的计算机语言，指令是用0和1组成的一串代码，它们有一定的位数，并分成若干段，各段的编码表示不同的含义。</li>\n</ul>\n</li>\n<li>汇编语言：\n<ul>\n<li>汇编语言是使用一些特殊的符号来代替机器语言的二进制码，计算机不能直接识别，需要用一种软件将汇编语言翻译成机器语言。</li>\n</ul>\n</li>\n<li>高级语言：\n<ul>\n<li>使用普通英语进行编写源代码，通过编译器将源代码翻译成计算机直接识别的机器语言，之后再由计算机执行。</li>\n<li>高级语言包括C,C++,C#,JAVA</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-03-人机交互-了解\"><a class=\"header-anchor\" href=\"#01-03-人机交互-了解\">☆</a>01.03_ 人机交互 (了解)</h3>\n<ul>\n<li>A:人机交互的两种方式\n<ul>\n<li>a:命令行方式\n<ul>\n<li>需要有一个控制台，输入特定的指令，让计算机完成一些操作。较为麻烦，需要记录住一些命令。</li>\n</ul>\n</li>\n<li>b:图形化界面方式\n<ul>\n<li>这种方式简单直观，使用者易于接受，容易上手操作。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-04-键盘功能键和快捷键-掌握\"><a class=\"header-anchor\" href=\"#01-04-键盘功能键和快捷键-掌握\">☆</a>01.04_ 键盘功能键和快捷键 (掌握)</h3>\n<ul>\n<li>A:键盘功能键\n<ul>\n<li>a:Tab</li>\n<li>b:Shift</li>\n<li>c:Ctrl</li>\n<li>d:Alt</li>\n<li>e:空格</li>\n<li>f:Enter</li>\n<li>g:Window</li>\n<li>h:上下左右键</li>\n<li>i:PrtSc(PrintScreen)屏幕截图</li>\n</ul>\n</li>\n<li>B:键盘快捷键\n<ul>\n<li>a:Ctrl+A\t全选</li>\n<li>b:Ctrl+C\t复制</li>\n<li>c:Ctrl+V\t粘贴</li>\n<li>d:Ctrl+X\t剪切</li>\n<li>e:Ctrl+Z\t撤销</li>\n<li>f:Ctrl+S\t保存</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-05-如何打开dos控制台-掌握\"><a class=\"header-anchor\" href=\"#01-05-如何打开dos控制台-掌握\">☆</a>01.05_ 如何打开DOS控制台 (掌握)</h3>\n<ul>\n<li>A:xp下如何打开DOS控制台？\n<ul>\n<li>a:开始–程序–附件–命令提示符</li>\n<li>b:开始–运行–cmd–回车</li>\n<li>c:win+r–cmd–回车</li>\n</ul>\n</li>\n<li>B:win7下如何打开DOS控制台？\n<ul>\n<li>a:开始–所有程序–附件–命令提示符</li>\n<li>b:开始–搜索程序和文件–cmd–回车</li>\n<li>c:win+r–cmd–回车</li>\n</ul>\n</li>\n<li>C:win8下如何打开DOS控制台\n<ul>\n<li>a:鼠标左击开始–下箭头–命令提示符</li>\n<li>b:鼠标右击开始–搜索–cmd–回车</li>\n<li>c:鼠标右击开始–运行–cmd–回车</li>\n<li>d:win+r–cmd–回车</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-06-常见的dos命令讲解\"><a class=\"header-anchor\" href=\"#01-06-常见的dos命令讲解\">☆</a>01.06_ 常见的DOS命令讲解</h3>\n<ul>\n<li>A:d: 回车\t盘符切换</li>\n<li>B:dir(directory):列出当前目录下的文件以及文件夹</li>\n<li>C:cd (change directory)改变指定目录(进入指定目录)</li>\n<li>D:cd… : 退回到上一级目录</li>\n<li>E💿 退回到根目录</li>\n<li>F:cls : (clear screen)清屏</li>\n<li>G:exit : 退出dos命令行(分割线上的需要掌握,下的了解)</li>\n<li>/=========================================================</li>\n<li>md (make directory) : 创建目录</li>\n<li>rd (remove directory): 删除目录</li>\n<li>del (delete): 删除文件,删除一堆后缀名一样的文件*.txt</li>\n<li>notepad 创建文件</li>\n<li>删除带内容的文件夹\n<ul>\n<li>rd + /s\t文件夹名称(询问是否删除)</li>\n<li>rd + /q + /s 文件夹名称(直接删除)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-07-java语言概述-了解\"><a class=\"header-anchor\" href=\"#01-07-java语言概述-了解\">☆</a>01.07_  Java语言概述 (了解)</h3>\n<ul>\n<li>A:Java语言发展史\n<ul>\n<li>詹姆斯·高斯林（James Gosling）1977年获得了加拿大卡尔加里大学计算机科学学士学位，1983年获得了美国卡内基梅隆大学计算机科学博士学位，毕业后到IBM工作，设计IBM第一代工作站NeWS系统，但不受重视。后来转至Sun公司，1990年，与Patrick，Naughton和Mike Sheridan等人合作“绿色计划”，后来发展一套语言叫做“Oak”，后改名为Java。</li>\n<li>SUN(Stanford University Network，斯坦福大学网络公司)</li>\n</ul>\n</li>\n<li>B:Java语言版本\n<ul>\n<li>JDK 1.1.4\t\tSparkler\t宝石\t\t\t\t1997-09-12</li>\n<li>JDK 1.1.5\t\tPumpkin\t\t南瓜\t\t\t\t1997-12-13</li>\n<li>JDK 1.1.6\t\tAbigail\t\t阿比盖尔–女子名\t\t1998-04-24</li>\n<li>JDK 1.1.7\t\tBrutus\t\t布鲁图–古罗马政治家和将军\t1998-09-28</li>\n<li>JDK 1.1.8\t\tChelsea\t\t切尔西–城市名\t\t\t1999-04-08</li>\n<li>J2SE 1.2\t\tPlayground\t运动场\t\t\t\t1998-12-04</li>\n<li>J2SE 1.2.1\t\tnone\t\t无\t\t\t\t1999-03-30</li>\n<li>J2SE 1.2.2\t\tCricket\t\t蟋蟀\t\t\t\t1999-07-08</li>\n<li>J2SE 1.3\t\tKestrel\t\t美洲红隼(sǔn)\t\t\t2000-05-08</li>\n<li>J2SE 1.3.1\t\tLadybird\t瓢虫\t\t\t\t2001-05-17</li>\n<li>J2SE 1.4.0\t\tMerlin\t\t灰背隼\t\t\t\t2002-02-13</li>\n<li>J2SE 1.4.1\t\tgrasshopper\t蚱蜢\t\t\t\t2002-09-16</li>\n<li>J2SE 1.4.2\t\tMantis\t\t螳螂\t\t\t\t2003-06-26</li>\n<li>JAVASE 5.0 (1.5.0)\tTiger\t\t老虎</li>\n<li>JAVASE 5.1 (1.5.1)\tDragonfly\t蜻蜓</li>\n<li>JAVASE 6.0 (1.6.0)\tMustang\t\t野马</li>\n<li>JAVASE 7.0 (1.7.0)\tDolphin\t\t海豚</li>\n</ul>\n</li>\n<li>C:Java语言平台\n<ul>\n<li>J2SE(Java 2 Platform Standard Edition)标准版\n<ul>\n<li>是为开发普通桌面和商务应用程序提供的解决方案,该技术体系是其他两者的基础，可以完成一些桌面应用程序的开发</li>\n</ul>\n</li>\n<li>J2ME(Java 2 Platform Micro Edition)小型版\n<ul>\n<li>是为开发电子消费产品和嵌入式设备提供的解决方案</li>\n</ul>\n</li>\n<li>J2EE(Java 2 Platform Enterprise Edition)企业版\n<ul>\n<li>是为开发企业环境下的应用程序提供的一套解决方案,该技术体系中包含的技术如 Servlet、Jsp等，主要针对于Web应用程序开发</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>C:Java语言特点\n<ul>\n<li>简单性</li>\n<li>解释性</li>\n<li>面向对象</li>\n<li>高性能</li>\n<li>分布式处理</li>\n<li>多线程</li>\n<li>健壮性</li>\n<li>动态</li>\n<li>结构中立</li>\n<li>安全性</li>\n<li>开源</li>\n<li>跨平台</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-08-java语言跨平台原理-掌握\"><a class=\"header-anchor\" href=\"#01-08-java语言跨平台原理-掌握\">☆</a>01.08_  Java语言跨平台原理 (掌握)</h3>\n<ul>\n<li>A:什么是跨平台性</li>\n<li>B:Java语言跨平台原理\n<ul>\n<li>只要在需要运行java应用程序的操作系统上，先安装一个Java虚拟机(JVM Java Virtual Machine)即可。由JVM来负责Java程序在该系统中的运行。</li>\n</ul>\n</li>\n<li>C:Java语言跨平台图解\n<ul>\n<li>write once ,run anywhere!(一处编译,到处运行)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-09-jre和jdk的概述-掌握\"><a class=\"header-anchor\" href=\"#01-09-jre和jdk的概述-掌握\">☆</a>01.09_  JRE和JDK的概述 (掌握)</h3>\n<ul>\n<li>A:什么是JRE\n<ul>\n<li>包括Java虚拟机(JVM Java Virtual Machine)和Java程序所需的核心类库等，如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。</li>\n<li>JRE:JVM+类库。</li>\n</ul>\n</li>\n<li>B:什么是JDK\n<ul>\n<li>JDK是提供给Java开发人员使用的，其中包含了java的开发工具，也包括了JRE。所以安装了JDK，就不用在单独安装JRE了。</li>\n<li>其中的开发工具：编译工具(javac.exe)  打包工具(jar.exe)等</li>\n<li>JDK:JRE+JAVA的开发工具。</li>\n</ul>\n</li>\n<li>C:为什么JDK中包含一个JRE\n<ul>\n<li>为什么JDK中包含一个JRE呢？\n<ul>\n<li>开发完的程序，需要运行一下看看效果。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>D:JDK,JRE,JVM的作用和关系</li>\n</ul>\n<h3 id=\"01-10-jdk的下载和安装过程图解-了解\"><a class=\"header-anchor\" href=\"#01-10-jdk的下载和安装过程图解-了解\">☆</a>01.10_  JDK的下载和安装过程图解 (了解)</h3>\n<ul>\n<li>A:JDK的下载\n<ul>\n<li>a:官网 <a href=\"http://www.oracle.com\" target=\"_blank\" rel=\"noopener\">http://www.oracle.com</a></li>\n<li>b:演示下载流程</li>\n</ul>\n</li>\n<li>B:JDK的安装\n<ul>\n<li>a:傻瓜式安装\n<ul>\n<li>双击安装程序，然后一路next即可(但是不建议)</li>\n</ul>\n</li>\n<li>b:安装的推荐方式\n<ul>\n<li>安装路径不要有中文或者特殊符号如空格等。</li>\n<li>所有和开发相关的软件最好安装目录统一。\n<ul>\n<li>举例：我的JDK安装路径\n<ul>\n<li>D:\\develop\\Java\\jdk1.7.0_72</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>当提示安装JRE时，可以选择不安装。建议还是安装上。</li>\n</ul>\n</li>\n<li>c:演示安装流程\n<ul>\n<li>可以先在d盘建立一个文件夹develop</li>\n<li>然后演示安装过程</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>C:验证安装是否成功\n<ul>\n<li>a:通过DOS命令，切换到JDK安装的bin目录下。\n<ul>\n<li>D:\\develop\\Java\\jdk1.7.0_72\\bin</li>\n</ul>\n</li>\n<li>b:然后分别输入javac和java，如果正常显示一些内容，说明安装成功</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-11-jdk安装路径下的目录解释-了解\"><a class=\"header-anchor\" href=\"#01-11-jdk安装路径下的目录解释-了解\">☆</a>01.11_  JDK安装路径下的目录解释 (了解)</h3>\n<ul>\n<li>a:bin目录：该目录用于存放一些可执行程序。\n<ul>\n<li>如javac.exe（java编译器）、java.exe(java运行工具)，jar.exe(打包工具)和* javadoc.exe(文档生成工具)等。</li>\n</ul>\n</li>\n<li>b:db目录：db目录是一个小型的数据库。\n<ul>\n<li>从JDK 6.0开始，Java中引用了一个新的成员JavaDB，这是一个纯Java实现、开源的数据库管理系统。这个数据库不仅轻便，而且支持JDBC 4.0所有的规范，在学习JDBC 时，不再需要额外地安装一个数据库软件，选择直接使用JavaDB即可。</li>\n</ul>\n</li>\n<li>c:jre目录：&quot;jre&quot;是 Java Runtime Environment 的缩写，意为Java程序运行时环境。此目录是Java运行时环境的根目录，它包括Java虚拟机，运行时的类包，Java应用启动器以及一个bin目录，但不包含开发环境中的开发工具。</li>\n<li>d:include目录：由于JDK是通过C和C++实现的，因此在启动时需要引入一些C语言的头文件，该目录就是用于存放这些头文件的。</li>\n<li>e:lib目录：lib是library的缩写，意为 Java 类库或库文件，是开发工具使用的归档包文件。</li>\n<li>f:src.zip文件：src.zip为src文件夹的压缩文件，src中放置的是JDK核心类的源代码，通过该文件可以查看Java基础类的源代码。</li>\n</ul>\n<h3 id=\"01-12-java开发工具介绍-了解\"><a class=\"header-anchor\" href=\"#01-12-java开发工具介绍-了解\">☆</a>01.12_  Java开发工具介绍 (了解)</h3>\n<ul>\n<li>A:notepad(微软操作系统自带)</li>\n<li>B:Editplus/Notepad++</li>\n<li>C:Eclipse</li>\n<li>D:MyEclipse\n<ul>\n<li>给大家简单的介绍一下这些工具，然后说说我们使用这些工具的顺序。</li>\n<li>基础班：先notepad，然后Editplus，再Eclipse。</li>\n<li>就业班：MyEclipse和Eclipse都用。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-13-helloworld案例的编写和运行-掌握\"><a class=\"header-anchor\" href=\"#01-13-helloworld案例的编写和运行-掌握\">☆</a>01.13_  HelloWorld案例的编写和运行 (掌握)</h3>\n<ul>\n<li>\n<p>A:定义类</p>\n</li>\n<li>\n<p>B:写main方法</p>\n</li>\n<li>\n<p>C:写输出语句</p>\n</li>\n<li>\n<p>D:Java程序开发运行与工作原理</p>\n</li>\n<li>\n<p>E:编译和运行程序</p>\n<pre><code>class HelloWorld {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(&quot;HelloWorld&quot;);\n\t}\n}\n</code></pre>\n</li>\n</ul>\n<h3 id=\"01-14-helloworld案例常见问题-掌握\"><a class=\"header-anchor\" href=\"#01-14-helloworld案例常见问题-掌握\">☆</a>01.14_  HelloWorld案例常见问题 (掌握)</h3>\n<ul>\n<li>A:找不到文件(都演示一下，让学生看看出现的都是什么问题)\n<ul>\n<li>a:文件扩展名隐藏导致编译失败</li>\n<li>b:文件名写错了</li>\n</ul>\n</li>\n<li>B:单词拼写问题(都演示一下，让学生看看出现的都是什么问题)\n<ul>\n<li>a:class写成Class</li>\n<li>b:String写成string</li>\n<li>c:System写成system</li>\n<li>d:main写成mian</li>\n</ul>\n</li>\n<li>C:括号匹配问题(都演示一下，让学生看看出现的都是什么问题)\n<ul>\n<li>a:把类体的那对大括号弄掉一个</li>\n<li>b:把方法体的那对大括号弄掉一个</li>\n<li>c:把输出语句的那对小括号弄掉一个</li>\n</ul>\n</li>\n<li>D:中英文问题(都演示一下，让学生看看出现的都是什么问题)\n<ul>\n<li>a:提示信息：错误: 非法字符: ???的格式</li>\n<li>注意：java编程中需要的基本上都是英文字符</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-15-java语言的书写格式-约定俗成-掌握\"><a class=\"header-anchor\" href=\"#01-15-java语言的书写格式-约定俗成-掌握\">☆</a>01.15_  Java语言的书写格式(约定俗成)(掌握)</h3>\n<ul>\n<li>1,大括号要对齐,并且成对写</li>\n<li>2,左大括号前面有空格</li>\n<li>3,遇到左大括号要缩进,Tab</li>\n<li>4,方法和程序块之间加空行让程序看起来清晰</li>\n<li>5,并排语句之间加空格,例如for语句</li>\n<li>6,运算符两侧加空格</li>\n</ul>\n<h3 id=\"01-16-path环境变量的作用及配置方式1-掌握\"><a class=\"header-anchor\" href=\"#01-16-path环境变量的作用及配置方式1-掌握\">☆</a>01.16_  path环境变量的作用及配置方式1 (掌握)</h3>\n<ul>\n<li>A:在JDK的bin目录下开发程序容易产生的问题\n<ul>\n<li>a:如果文件过多，不方便管理</li>\n<li>b:删除自己写过的不需要的文件，可能不小心把JDK自带的工具给删除了</li>\n</ul>\n</li>\n<li>B:如何解决问题呢\n<ul>\n<li>notepad这样的命令为什么在任何路径下都能够执行,配置path环境变量</li>\n</ul>\n</li>\n<li>C:配置方式\n<ul>\n<li>a:xp系统\n<ul>\n<li>右键点击桌面计算机→选择属性→选择高级选项卡→点击环境变量→下方系统变量中查找path→双击path→将jdk安装目录下的bin目录添加到最左边并添加分号。</li>\n</ul>\n</li>\n<li>b:win7/win8系统\n<ul>\n<li>右键点击桌面计算机→选择属性→选择高级系统设置→选择高级选项卡→点击环境变量→下方系统变量中查找path→双击path→将jdk安装目录下的bin目录添加到最左边并添加分号。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>path配置的是可执行的文件.exe,配置后可以在不同的盘符下访问path路径下的可执行文件</li>\n</ul>\n<h3 id=\"01-17-path环境变量的配置方式2-掌握\"><a class=\"header-anchor\" href=\"#01-17-path环境变量的配置方式2-掌握\">☆</a>01.17_  Path环境变量的配置方式2 (掌握)</h3>\n<ul>\n<li>A:先配置JAVA_HOME</li>\n<li>B:再修改path</li>\n<li>C:最后说一下path是有先后顺序关系的</li>\n</ul>\n<h3 id=\"01-18-classpath环境变量的作用及其配置-了解\"><a class=\"header-anchor\" href=\"#01-18-classpath环境变量的作用及其配置-了解\">☆</a>01.18_  classpath环境变量的作用及其配置 (了解)</h3>\n<ul>\n<li>\n<p>A:为什么要配置classpath</p>\n</li>\n<li>\n<p>B:classpath配置的原理</p>\n</li>\n<li>\n<p>C:如何配置classpath</p>\n</li>\n<li>\n<p>path和classpath的区别</p>\n<ul>\n<li>path配置的是可执行的文件.exe,配置后可以在不同的盘符下访问path路径下的可执行文件</li>\n<li>classpath配置的java的类文件,就是.class文件</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-19-editplus开发程序并编译运行-了解\"><a class=\"header-anchor\" href=\"#01-19-editplus开发程序并编译运行-了解\">☆</a>01.19_  Editplus开发程序并编译运行 (了解)</h3>\n<ul>\n<li>A:配置快捷键编译运行</li>\n<li>B:去除备份文件</li>\n</ul>\n<h3 id=\"01-20-注释概述及其分类-掌握\"><a class=\"header-anchor\" href=\"#01-20-注释概述及其分类-掌握\">☆</a>01.20_  注释概述及其分类 (掌握)</h3>\n<ul>\n<li>\n<p>A:什么是注释</p>\n</li>\n<li>\n<p>B:注释的分类及讲解</p>\n<ul>\n<li>文档注释目前不讲，说后面讲解</li>\n</ul>\n</li>\n<li>\n<p>注释的作用</p>\n<ul>\n<li>A:解释说明程序</li>\n<li>B:帮助我们调试错误</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-21-关键字的概述和使用-掌握\"><a class=\"header-anchor\" href=\"#01-21-关键字的概述和使用-掌握\">☆</a>01.21_  关键字的概述和使用 (掌握)</h3>\n<ul>\n<li>A:什么是关键字\n<ul>\n<li>被Java语言赋予特定含义的单词</li>\n</ul>\n</li>\n<li>B:关键字的特点\n<ul>\n<li>组成关键字的字母全部小写</li>\n</ul>\n</li>\n<li>C:常见关键字\n<ul>\n<li>public static void class等</li>\n</ul>\n</li>\n<li>D:关键字的注意事项\n<ul>\n<li>goto和const作为保留字存在,目前并不使用,类似Editplus这样的高级记事本,针对关键字有特殊的颜色标记，非常直观</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-22-标识符的概述和组成规则-掌握\"><a class=\"header-anchor\" href=\"#01-22-标识符的概述和组成规则-掌握\">☆</a>01.22_  标识符的概述和组成规则 (掌握)</h3>\n<ul>\n<li>A:什么是标识符\n<ul>\n<li>就是给类,接口,方法,变量等起名字时使用的字符序列</li>\n</ul>\n</li>\n<li>B:标识符的组成规则\n<ul>\n<li>英文大小写字母</li>\n<li>数字字符</li>\n<li>$和_</li>\n</ul>\n</li>\n<li>C:标识符注意事项\n<ul>\n<li>1,不能使用关键字</li>\n<li>2,不能数字开头</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-23-标识符中常见的命名规则-了解\"><a class=\"header-anchor\" href=\"#01-23-标识符中常见的命名规则-了解\">☆</a>01.23_  标识符中常见的命名规则 (了解)</h3>\n<ul>\n<li>见名知意</li>\n<li>A:包\n<ul>\n<li>最好是域名倒过来,要求所有的字母小写</li>\n</ul>\n</li>\n<li>B:类或者接口\n<ul>\n<li>如果是一个单词首字母大写</li>\n<li>如果是多个单词每个单词首字母大写(驼峰标识)</li>\n</ul>\n</li>\n<li>C:方法或者变量\n<ul>\n<li>如果是一个单词全部小写</li>\n<li>如果是多个单词,从第二个单词首字母大写</li>\n</ul>\n</li>\n<li>D:常量\n<ul>\n<li>如果是一个单词,所有字母大写</li>\n<li>如果是多个单词,所有的单词大写,用下划线区分每个单词</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"01-24-day01总结\"><a class=\"header-anchor\" href=\"#01-24-day01总结\">☆</a>01.24_day01总结</h3>\n<ul>\n<li>把今天的知识点总结一遍。</li>\n</ul>\n"},{"title":"Java学习笔记（day02）","copyright":true,"abbrlink":"1a7d4db3","notshow":true,"date":"2018-09-08T10:11:00.000Z","password":null,"description":null,"image":null,"photos":[],"sticky":null,"_content":"\n## 02.01_Java语言基础(常量的概述和使用)(掌握)\n\n* A:什么是常量\n\t* 在程序执行的过程中其值不可以发生改变 \n* B:Java中常量的分类\n\t* 字面值常量\n\t* 自定义常量(面向对象部分讲) \n* C:字面值常量的分类\n\t* 字符串常量\t用双引号括起来的内容\n\t* 整数常量\t\t所有整数\n\t* 小数常量\t\t所有小数\n\t* 字符常量\t\t用单引号括起来的内容,里面只能放单个数字,单个字母或单个符号\n\t* 布尔常量\t\t较为特殊，只有true和false\n\t* 空常量\t\t    null(数组部分讲解)\n\n* D:案例演示\n\t* 用输出语句输出各种常量。null不演示\n\n## 02.02_Java语言基础(进制概述和二,八,十六进制图解)(了解)\n\n* A:什么是进制\n\t* 进制：就是进位制，是人们规定的一种进位方法。 对于任何一种进制--X进制，就表示某一位置上的数运算时是逢X进一位。二进制就是逢二进一，八进制是逢八进一，十进制是逢十进一，十六进制是逢十六进一。\n\t* 例如一周有七天,七进制,一年有十二个月,十二进制\n* B:十进制的由来 \n\t* 十进制的由来是因为人类有十个手指 \n* C:二进制的由来\n\t* 其实二进制来源与中国,请看史料记载\n\t* 18世纪德国数理哲学大师莱布尼兹从他的传教士朋友鲍威特寄给他的拉丁文译本《易经》中，读到了八卦的组成结构，惊奇地发现其基本素数（0）（1），即《易经》的阴爻yao- -和__阳爻，其进位制就是二进制，并认为这是世界上数学进制中最先进的。20世纪被称作第三次科技革命的重要标志之一的计算机的发明与应用，其运算模式正是二进制。它不但证明了莱布尼兹的原理是正确的，同时也证明了《易经》数理学是很了不起的。\n* D:八进制的由来\n\t* 任何数据在计算机中都是以二进制的形式存在的。二进制早期由电信号开关演变而来。一个整数在内存中一样也是二进制的，但是使用一大串的1或者0组成的数值进行使用很麻烦。 \n\t* 所以就想把一大串缩短点，将二进制中的三位用一位表示。这三位可以取到的最大值就是7.超过7就进位了，这就是八进制。 \n* E:十六进制的由来\n\t* 但是对于过长的二进制变成八进制还是较长，所以出现的用4个二进制位表示一位的情况，四个二进制位最大是15，这就是十六进制。\n* F:不同进制表现同一个数据的形式特点\n\t* 进制越大，表现形式越短\n\n## 02.03_Java语言基础(不同进制数据的表现形式)(掌握)\n\n* A:二进制的数据表现形式\n\t* 由0,1组成。以0b(b可以大写也可以小写)开头(JDK1.7版本可以表示二进制了)\n* B:八进制的数据表现形式\n\t* 由0,1,…7组成。以0开头\n* C:十进制的数据表现形式\n\t* 由0,1,…9组成。整数默认是十进制的 \n* D:十六进制的数据表现形式\n\t* 由0,1,…9,a,b,c,d,e,f(大小写均可)。以0x开头 \n* E:案例演示\n\t* 输出不同进制表现100的数据。\n\t* 0b100\n\t* 0100\n\t* 100\n\t* 0x100\n\n## 02.04_Java语言基础(任意进制到十进制的转换图解)(了解)\n\n* A:任意进制到十进制的转换原理\n\t* 系数：就是每一位上的数据。\n\t* 基数：X进制，基数就是X。\n\t* 权：在右边，从0开始编号，对应位上的编号即为该位的权。\n\t* 结果：把系数*基数的权次幂相加即可。 \n* B:画图练习\n\t* 二进制--十进制\n\t* 八进制--十进制\n\t* 十六进制--十进制\n\n## 02.05_Java语言基础(十进制到任意进制的转换图解)(了解)\n\n* A:十进制到任意进制的转换原理\n\t* 除积倒取余 \n* B:画图练习\n\t* 十进制--二进制\n\t* 十进制--八进制\n\t* 十进制--十六进制\n\n## 02.06_Java语言基础(快速的进制转换法)(了解)\n\n* A:8421码及特点\n\t* 8421码是中国大陆的叫法，8421码是BCD代码中最常用的一种。在这种编码方式中每一位二值代码的1都是代表一个固定数值，把每一位的1代表的十进制数加起来，得到的结果就是它所代表的十进制数码。 \n* B:通过8421码的方式进行二进制和十进制的相互转换\n* C:二进制到八进制的简易方式\n* D:二进制到十六进制的简易方式\n\n## 02.07_Java语言基础(原码反码补码)(了解)\n\n* A:为什么要学习原码反码补码?\n\t* 后面要学习强制类型转换,如果不知道有原反补会看不懂结果 \n* B:有符号数据表示法的几种方式\n\t* 原码\n\t\t* 就是二进制定点表示法，即最高位为符号位，“0”表示正，“1”表示负，其余位表示数值的大小。\n\t\t* 通过一个字节,也就是8个二进制位表示+7和-7\n\t\t* 0(符号位)\t0000111\n\t\t* 1(符号位)\t0000111\n\t* 反码\n\t\t* 正数的反码与其原码相同；负数的反码是对其原码逐位取反，但符号位除外。\n\t* 补码\n\t\t* 正数的补码与其原码相同；负数的补码是在其反码的末位加1。 \n\n## 02.08_Java语言基础(原码反码补码的练习)(了解)\n\n* A:已知原码求补码\n\t* 0b10110100 \n* B:已知补码求原码\n\t* 0b11101110 \n\n## 02.09_Java语言基础(变量的概述及格式)(掌握)\n\n* A:什么是变量\n\t* 在程序执行的过程中，在某个范围内其值可以发生改变的量\n* B:变量的定义格式\n\t* 数据类型 变量名 = 变量值;\n* C:为什么要定义变量\n\t* 用来不断的存放同一类型的常量，并可以重复使用 \n\n## 02.10_Java语言基础(数据类型的概述和分类)(掌握)\n\n* A:为什么有数据类型\n\t* Java语言是强类型语言，对于每一种数据都定义了明确的具体数据类型，在内存中分配了不同大小的内存空间\n* B:Java中数据类型的分类\n\t* 基本数据类型\n\t* 引用数据类型 \n\t\t* 面向对象部分讲解 \n* C:基本数据类型分类(4类8种) \n\t* 整数型\n\t\t* byte 占一个字节  -128到127\n\t\t* short 占两个字  -2^15~2^15-1\n\t\t* int 占四个字节 -2^31~2^31-1\n\t\t* long 占八个字节 -2^63~2^63-1\n\t* 浮点型\n\t\t* float 占四个字节 -3.403E38~3.403E38  单精度\n\t\t* double 占八个字节-1.798E308~1.798E308 双精度\n\t* 字符型\n\t\t* char 占两个字节 0~65535\n\t* 布尔型\n\t\t* boolean   \n\t\t\t* boolean理论上是占八分之一个字节,因为一个开关就可以决定是true和false了,但是java中boolean类型没有明确指定他的大小      \n\n## 02.11_Java语言基础(定义不同数据类型的变量)(掌握)\n\n* A:案例演示\n\t* 定义不同基本数据类型的变量，并输出\n\t* 赋值时候注意float类型,long类型\n\n## 02.12_Java语言基础(使用变量的注意事项)(掌握)\n\n* A:案例演示\n\t* a:作用域问题\n\t\t* 同一个区域不能使用相同的变量名 \n\t* b:初始化值问题\n\t\t* 局部变量在使用之前必须赋值 \n\t* c:一条语句可以定义几个变量\n\t\t* int a,b,c...; \n\n## 02.13_Java语言基础(数据类型转换之隐式转换)(掌握)\n\n* A:案例演示\n\t* a:int + int\n\t* b:byte + int \n* B:Java中的默认转换规则\n\t* 取值范围小的数据类型与取值范围大的数据类型进行运算,会先将小的数据类型提升为大的,再运算 \n* C:画图解释byte+int类型的问题\n\n## 02.14_Java语言基础(数据类型转换之强制转换)(掌握)\n\n* A:强制转换问题\n\t* int a = 10;\n\t* byte b = 20; \n\t* b = a + b;\n* B:强制转换的格式\n\t* b = (byte)(a + b); \n* C:强制转换的注意事项\n\t* 如果超出了被赋值的数据类型的取值范围得到的结果会与你期望的结果不同 \n\n## 02.15_Java语言基础(面试题之变量相加和常量相加的区别)(掌握)\n\n* A:案例演示\n\t* 面试题:看下面的程序是否有问题，如果有问题，请指出并说明理由。\n\t* byte b1 = 3;\n\t* byte b2 = 4;\n\t* byte b3 = b1 + b2;\n\t\t* 从两方面去回答这个题\n\t\t* b1和b2是两个变量,变量里面存储的值都是变化的,所以在程序运行中JVM是无法判断里面具体的值\n\t\t* byte类型的变量在进行运算的时候,会自动类型提升为int类型 \n\t* byte b4 = 3 + 4;\n\t\t* 3和4都是常量,java有常量优化机制,就是在编译的的时候直接把3和4的结果赋值给b4了 \n\n## 02.16_Java语言基础(long与float的取值范围谁大谁小)(了解)\n\n* 进行混合运算的时候,byte,short,char不会相互转换,都会自动类型提升为int类型,其他类型进行混合运算的是小的数据类型提升为大的\n\t* byte,short,char -- int -- long -- float -- double\n\t\n\t* long: 8个字节\n\t* float：4个字节\n\t* IEEE754\n\t* 4个字节是32个二进制位\n\t* 1位是符号位\n\t* 8位是指数位\n\t* 00000000   11111111\n\t* 0到255\n\t* 1到254\n\t* -126到127\n\t* 23位是尾数位\n\t* 每个指数位减去127\n\t\n\t* A:它们底层的存储结构不同。\n\t* B:float表示的数据范围比long的范围要大\n\t\t* long：2^63-1\n\t\t* float：3.4*10^38 > 2*10^38 > 2*8^38 = 2*2^3^38 = 2*2^114 > 2^63-1\n\n## 02.17_Java语言基础(字符和字符串参与运算)(掌握)\n\n* A:案例演示\n\t* System.out.println('a');\n\t* System.out.println('a'+1);\n\t\n\t* 通过看结果知道'a'的值是多少,由此引出ASCII码表\n* B:ASCII码表的概述\n\t* 记住三个值：\n\t\t* '0'  48\n\t\t* 'A'  65\n\t\t* 'a'  97\n* C:案例演示\n\t* System.out.println(\"hello\"+'a'+1);\n\t* System.out.println('a'+1+\"hello\");\n* D:+在有字符串参与中被称为字符串连接符\n\t* System.out.println(\"5+5=\"+5+5);\n\t* System.out.println(5+5+\"=5+5\");\n\n## 02.18_Java语言基础(char数据类型)(掌握)\n\n* A:char c = 97;\t0到65535\n* B:Java语言中的字符char可以存储一个中文汉字吗?为什么呢?\n\t* 可以。因为Java语言采用的是Unicode编码。Unicode编码中的每个字符占用两个字节。中文也是占的两个字节\n\t* 所以，Java中的字符可以存储一个中文汉字\n\n## 02.19_Java语言基础(算术运算符的基本用法)(掌握)\n\n* A:什么是运算符\n\t* 就是对常量和变量进行操作的符号。\n* B:运算符的分类\n\t* 算术运算符，赋值运算符，比较(关系或条件)运算符，逻辑运算符，位运算符，三目(元)运算符 \n* C:算数运算符有哪些\n\t* +,-,*,/,%,++,-- \n* D:注意事项：\n\t* a:+号在java中有三种作用,代表正号,做加法运算,字符串的连接符\n\t* b:整数相除只能得到整数。如果想得到小数，必须把数据变化为浮点数类型\n\t* c:/获取的是除法操作的商，%获取的是除法操作的余数\n\t* %运算符\n\t\t* 当左边的绝对值小于右边绝对值时,结果是左边\n\t\t* 当左边的绝对值等于右边或是右边的倍数时,结果是0\n\t\t* 当左边的绝对值大于右边绝对值时,结果是余数\n\t\t* %运算符结果的符号只和左边有关系,与右边无关\n\t\t* 任何一个正整数%2结果不是0就是1可以用来当作切换条件 \n\n## 02.20_Java语言基础(算术运算符++和--的用法)(掌握)\n\n* A:++,--运算符的作用\n\t* 自加（++）自减（--）运算\n\t* ++:自加。对原有的数据进行+1\n\t* --:自减。对原有的数据进行-1\n* B:案例演示\n\t* a:单独使用：\n\t\t* 放在操作数的前面和后面效果一样。(这种用法是我们比较常见的)\n\t* b:参与运算使用：\n\t\t* 放在操作数的前面，先自增或者自减，然后再参与运算。\n\t\t* 放在操作数的后面，先参与运算，再自增或者自减。\n\n## 02.21_Java语言基础(算术运算符++和--的练习)(掌握)\n\n* A:案例演示\n\t* 请分别计算出a,b,c的值?\n\t* \n\t\t\tint a = 10;\n\t\t\tint b = 10;\n\t\t\tint c = 10;\n\t\t\n\t\t\ta = b++;\t//10\n\t\t\tc = --a;\t//9\n\t\t\tb = ++a;\t//10\n\t\t\ta = c--;\t//9\n\t\n* B:案例演示\n\t* 请分别计算出x,y的值?\n\t\n\t\t\tint x = 4;\n\t\t\tint y = (x++)+(++x)+(x*10);\n* C:面试题\n\t* byte b = 10;\n\t* b++;\n\t* b = b + 1;\n\t* 问哪句会报错,为什么 \n\t最后一句报错，前后b的类型不匹配，需要强制转换\n\n## 02.22_Java语言基础(赋值运算符的基本用法)(掌握)\n\n* A:赋值运算符有哪些\n\t* a:基本的赋值运算符：=\n\t\t* 把=右边的数据赋值给左边。\n\t\t\n\t* b:扩展的赋值运算符：+=,-=,*=,/=,%=\n\t\t* += 把左边和右边做加法，然后赋值给左边。\n\n## 02.23_Java语言基础(赋值运算符的面试题)(掌握)\n\n* A:案例演示\n\t* 面试题:看下面的程序是否有问题，如果有问题，请指出并说明理由。\n\t* short s=1;s = s+1;\n\t* short s=1;s+=1;\n\n## 02.24_Java语言基础(关系运算符的基本用法及其注意事项)(掌握)\n\n* A:关系运算符有哪些(比较运算符,条件运算符)\n\t* ==,!=,>,>=,<,<= \n* 注意事项：\n\t* 无论你的操作是简单还是复杂，结果是boolean类型。\n\t\n\t* \"==\"不能写成\"=\"。\n\n## 02.25_day02总结\n\n* 把今天的知识点总结一遍。","source":"_posts/Java学习笔记（day02）.md","raw":"---\ntitle: Java学习笔记（day02）\ncopyright: true\nabbrlink: 1a7d4db3\nnotshow: true\ntags:\n  - Java\ncategories: Java\ndate: 2018-09-08 18:11:00\npassword:\ndescription:\nimage:\nphotos:\nsticky:\n---\n\n## 02.01_Java语言基础(常量的概述和使用)(掌握)\n\n* A:什么是常量\n\t* 在程序执行的过程中其值不可以发生改变 \n* B:Java中常量的分类\n\t* 字面值常量\n\t* 自定义常量(面向对象部分讲) \n* C:字面值常量的分类\n\t* 字符串常量\t用双引号括起来的内容\n\t* 整数常量\t\t所有整数\n\t* 小数常量\t\t所有小数\n\t* 字符常量\t\t用单引号括起来的内容,里面只能放单个数字,单个字母或单个符号\n\t* 布尔常量\t\t较为特殊，只有true和false\n\t* 空常量\t\t    null(数组部分讲解)\n\n* D:案例演示\n\t* 用输出语句输出各种常量。null不演示\n\n## 02.02_Java语言基础(进制概述和二,八,十六进制图解)(了解)\n\n* A:什么是进制\n\t* 进制：就是进位制，是人们规定的一种进位方法。 对于任何一种进制--X进制，就表示某一位置上的数运算时是逢X进一位。二进制就是逢二进一，八进制是逢八进一，十进制是逢十进一，十六进制是逢十六进一。\n\t* 例如一周有七天,七进制,一年有十二个月,十二进制\n* B:十进制的由来 \n\t* 十进制的由来是因为人类有十个手指 \n* C:二进制的由来\n\t* 其实二进制来源与中国,请看史料记载\n\t* 18世纪德国数理哲学大师莱布尼兹从他的传教士朋友鲍威特寄给他的拉丁文译本《易经》中，读到了八卦的组成结构，惊奇地发现其基本素数（0）（1），即《易经》的阴爻yao- -和__阳爻，其进位制就是二进制，并认为这是世界上数学进制中最先进的。20世纪被称作第三次科技革命的重要标志之一的计算机的发明与应用，其运算模式正是二进制。它不但证明了莱布尼兹的原理是正确的，同时也证明了《易经》数理学是很了不起的。\n* D:八进制的由来\n\t* 任何数据在计算机中都是以二进制的形式存在的。二进制早期由电信号开关演变而来。一个整数在内存中一样也是二进制的，但是使用一大串的1或者0组成的数值进行使用很麻烦。 \n\t* 所以就想把一大串缩短点，将二进制中的三位用一位表示。这三位可以取到的最大值就是7.超过7就进位了，这就是八进制。 \n* E:十六进制的由来\n\t* 但是对于过长的二进制变成八进制还是较长，所以出现的用4个二进制位表示一位的情况，四个二进制位最大是15，这就是十六进制。\n* F:不同进制表现同一个数据的形式特点\n\t* 进制越大，表现形式越短\n\n## 02.03_Java语言基础(不同进制数据的表现形式)(掌握)\n\n* A:二进制的数据表现形式\n\t* 由0,1组成。以0b(b可以大写也可以小写)开头(JDK1.7版本可以表示二进制了)\n* B:八进制的数据表现形式\n\t* 由0,1,…7组成。以0开头\n* C:十进制的数据表现形式\n\t* 由0,1,…9组成。整数默认是十进制的 \n* D:十六进制的数据表现形式\n\t* 由0,1,…9,a,b,c,d,e,f(大小写均可)。以0x开头 \n* E:案例演示\n\t* 输出不同进制表现100的数据。\n\t* 0b100\n\t* 0100\n\t* 100\n\t* 0x100\n\n## 02.04_Java语言基础(任意进制到十进制的转换图解)(了解)\n\n* A:任意进制到十进制的转换原理\n\t* 系数：就是每一位上的数据。\n\t* 基数：X进制，基数就是X。\n\t* 权：在右边，从0开始编号，对应位上的编号即为该位的权。\n\t* 结果：把系数*基数的权次幂相加即可。 \n* B:画图练习\n\t* 二进制--十进制\n\t* 八进制--十进制\n\t* 十六进制--十进制\n\n## 02.05_Java语言基础(十进制到任意进制的转换图解)(了解)\n\n* A:十进制到任意进制的转换原理\n\t* 除积倒取余 \n* B:画图练习\n\t* 十进制--二进制\n\t* 十进制--八进制\n\t* 十进制--十六进制\n\n## 02.06_Java语言基础(快速的进制转换法)(了解)\n\n* A:8421码及特点\n\t* 8421码是中国大陆的叫法，8421码是BCD代码中最常用的一种。在这种编码方式中每一位二值代码的1都是代表一个固定数值，把每一位的1代表的十进制数加起来，得到的结果就是它所代表的十进制数码。 \n* B:通过8421码的方式进行二进制和十进制的相互转换\n* C:二进制到八进制的简易方式\n* D:二进制到十六进制的简易方式\n\n## 02.07_Java语言基础(原码反码补码)(了解)\n\n* A:为什么要学习原码反码补码?\n\t* 后面要学习强制类型转换,如果不知道有原反补会看不懂结果 \n* B:有符号数据表示法的几种方式\n\t* 原码\n\t\t* 就是二进制定点表示法，即最高位为符号位，“0”表示正，“1”表示负，其余位表示数值的大小。\n\t\t* 通过一个字节,也就是8个二进制位表示+7和-7\n\t\t* 0(符号位)\t0000111\n\t\t* 1(符号位)\t0000111\n\t* 反码\n\t\t* 正数的反码与其原码相同；负数的反码是对其原码逐位取反，但符号位除外。\n\t* 补码\n\t\t* 正数的补码与其原码相同；负数的补码是在其反码的末位加1。 \n\n## 02.08_Java语言基础(原码反码补码的练习)(了解)\n\n* A:已知原码求补码\n\t* 0b10110100 \n* B:已知补码求原码\n\t* 0b11101110 \n\n## 02.09_Java语言基础(变量的概述及格式)(掌握)\n\n* A:什么是变量\n\t* 在程序执行的过程中，在某个范围内其值可以发生改变的量\n* B:变量的定义格式\n\t* 数据类型 变量名 = 变量值;\n* C:为什么要定义变量\n\t* 用来不断的存放同一类型的常量，并可以重复使用 \n\n## 02.10_Java语言基础(数据类型的概述和分类)(掌握)\n\n* A:为什么有数据类型\n\t* Java语言是强类型语言，对于每一种数据都定义了明确的具体数据类型，在内存中分配了不同大小的内存空间\n* B:Java中数据类型的分类\n\t* 基本数据类型\n\t* 引用数据类型 \n\t\t* 面向对象部分讲解 \n* C:基本数据类型分类(4类8种) \n\t* 整数型\n\t\t* byte 占一个字节  -128到127\n\t\t* short 占两个字  -2^15~2^15-1\n\t\t* int 占四个字节 -2^31~2^31-1\n\t\t* long 占八个字节 -2^63~2^63-1\n\t* 浮点型\n\t\t* float 占四个字节 -3.403E38~3.403E38  单精度\n\t\t* double 占八个字节-1.798E308~1.798E308 双精度\n\t* 字符型\n\t\t* char 占两个字节 0~65535\n\t* 布尔型\n\t\t* boolean   \n\t\t\t* boolean理论上是占八分之一个字节,因为一个开关就可以决定是true和false了,但是java中boolean类型没有明确指定他的大小      \n\n## 02.11_Java语言基础(定义不同数据类型的变量)(掌握)\n\n* A:案例演示\n\t* 定义不同基本数据类型的变量，并输出\n\t* 赋值时候注意float类型,long类型\n\n## 02.12_Java语言基础(使用变量的注意事项)(掌握)\n\n* A:案例演示\n\t* a:作用域问题\n\t\t* 同一个区域不能使用相同的变量名 \n\t* b:初始化值问题\n\t\t* 局部变量在使用之前必须赋值 \n\t* c:一条语句可以定义几个变量\n\t\t* int a,b,c...; \n\n## 02.13_Java语言基础(数据类型转换之隐式转换)(掌握)\n\n* A:案例演示\n\t* a:int + int\n\t* b:byte + int \n* B:Java中的默认转换规则\n\t* 取值范围小的数据类型与取值范围大的数据类型进行运算,会先将小的数据类型提升为大的,再运算 \n* C:画图解释byte+int类型的问题\n\n## 02.14_Java语言基础(数据类型转换之强制转换)(掌握)\n\n* A:强制转换问题\n\t* int a = 10;\n\t* byte b = 20; \n\t* b = a + b;\n* B:强制转换的格式\n\t* b = (byte)(a + b); \n* C:强制转换的注意事项\n\t* 如果超出了被赋值的数据类型的取值范围得到的结果会与你期望的结果不同 \n\n## 02.15_Java语言基础(面试题之变量相加和常量相加的区别)(掌握)\n\n* A:案例演示\n\t* 面试题:看下面的程序是否有问题，如果有问题，请指出并说明理由。\n\t* byte b1 = 3;\n\t* byte b2 = 4;\n\t* byte b3 = b1 + b2;\n\t\t* 从两方面去回答这个题\n\t\t* b1和b2是两个变量,变量里面存储的值都是变化的,所以在程序运行中JVM是无法判断里面具体的值\n\t\t* byte类型的变量在进行运算的时候,会自动类型提升为int类型 \n\t* byte b4 = 3 + 4;\n\t\t* 3和4都是常量,java有常量优化机制,就是在编译的的时候直接把3和4的结果赋值给b4了 \n\n## 02.16_Java语言基础(long与float的取值范围谁大谁小)(了解)\n\n* 进行混合运算的时候,byte,short,char不会相互转换,都会自动类型提升为int类型,其他类型进行混合运算的是小的数据类型提升为大的\n\t* byte,short,char -- int -- long -- float -- double\n\t\n\t* long: 8个字节\n\t* float：4个字节\n\t* IEEE754\n\t* 4个字节是32个二进制位\n\t* 1位是符号位\n\t* 8位是指数位\n\t* 00000000   11111111\n\t* 0到255\n\t* 1到254\n\t* -126到127\n\t* 23位是尾数位\n\t* 每个指数位减去127\n\t\n\t* A:它们底层的存储结构不同。\n\t* B:float表示的数据范围比long的范围要大\n\t\t* long：2^63-1\n\t\t* float：3.4*10^38 > 2*10^38 > 2*8^38 = 2*2^3^38 = 2*2^114 > 2^63-1\n\n## 02.17_Java语言基础(字符和字符串参与运算)(掌握)\n\n* A:案例演示\n\t* System.out.println('a');\n\t* System.out.println('a'+1);\n\t\n\t* 通过看结果知道'a'的值是多少,由此引出ASCII码表\n* B:ASCII码表的概述\n\t* 记住三个值：\n\t\t* '0'  48\n\t\t* 'A'  65\n\t\t* 'a'  97\n* C:案例演示\n\t* System.out.println(\"hello\"+'a'+1);\n\t* System.out.println('a'+1+\"hello\");\n* D:+在有字符串参与中被称为字符串连接符\n\t* System.out.println(\"5+5=\"+5+5);\n\t* System.out.println(5+5+\"=5+5\");\n\n## 02.18_Java语言基础(char数据类型)(掌握)\n\n* A:char c = 97;\t0到65535\n* B:Java语言中的字符char可以存储一个中文汉字吗?为什么呢?\n\t* 可以。因为Java语言采用的是Unicode编码。Unicode编码中的每个字符占用两个字节。中文也是占的两个字节\n\t* 所以，Java中的字符可以存储一个中文汉字\n\n## 02.19_Java语言基础(算术运算符的基本用法)(掌握)\n\n* A:什么是运算符\n\t* 就是对常量和变量进行操作的符号。\n* B:运算符的分类\n\t* 算术运算符，赋值运算符，比较(关系或条件)运算符，逻辑运算符，位运算符，三目(元)运算符 \n* C:算数运算符有哪些\n\t* +,-,*,/,%,++,-- \n* D:注意事项：\n\t* a:+号在java中有三种作用,代表正号,做加法运算,字符串的连接符\n\t* b:整数相除只能得到整数。如果想得到小数，必须把数据变化为浮点数类型\n\t* c:/获取的是除法操作的商，%获取的是除法操作的余数\n\t* %运算符\n\t\t* 当左边的绝对值小于右边绝对值时,结果是左边\n\t\t* 当左边的绝对值等于右边或是右边的倍数时,结果是0\n\t\t* 当左边的绝对值大于右边绝对值时,结果是余数\n\t\t* %运算符结果的符号只和左边有关系,与右边无关\n\t\t* 任何一个正整数%2结果不是0就是1可以用来当作切换条件 \n\n## 02.20_Java语言基础(算术运算符++和--的用法)(掌握)\n\n* A:++,--运算符的作用\n\t* 自加（++）自减（--）运算\n\t* ++:自加。对原有的数据进行+1\n\t* --:自减。对原有的数据进行-1\n* B:案例演示\n\t* a:单独使用：\n\t\t* 放在操作数的前面和后面效果一样。(这种用法是我们比较常见的)\n\t* b:参与运算使用：\n\t\t* 放在操作数的前面，先自增或者自减，然后再参与运算。\n\t\t* 放在操作数的后面，先参与运算，再自增或者自减。\n\n## 02.21_Java语言基础(算术运算符++和--的练习)(掌握)\n\n* A:案例演示\n\t* 请分别计算出a,b,c的值?\n\t* \n\t\t\tint a = 10;\n\t\t\tint b = 10;\n\t\t\tint c = 10;\n\t\t\n\t\t\ta = b++;\t//10\n\t\t\tc = --a;\t//9\n\t\t\tb = ++a;\t//10\n\t\t\ta = c--;\t//9\n\t\n* B:案例演示\n\t* 请分别计算出x,y的值?\n\t\n\t\t\tint x = 4;\n\t\t\tint y = (x++)+(++x)+(x*10);\n* C:面试题\n\t* byte b = 10;\n\t* b++;\n\t* b = b + 1;\n\t* 问哪句会报错,为什么 \n\t最后一句报错，前后b的类型不匹配，需要强制转换\n\n## 02.22_Java语言基础(赋值运算符的基本用法)(掌握)\n\n* A:赋值运算符有哪些\n\t* a:基本的赋值运算符：=\n\t\t* 把=右边的数据赋值给左边。\n\t\t\n\t* b:扩展的赋值运算符：+=,-=,*=,/=,%=\n\t\t* += 把左边和右边做加法，然后赋值给左边。\n\n## 02.23_Java语言基础(赋值运算符的面试题)(掌握)\n\n* A:案例演示\n\t* 面试题:看下面的程序是否有问题，如果有问题，请指出并说明理由。\n\t* short s=1;s = s+1;\n\t* short s=1;s+=1;\n\n## 02.24_Java语言基础(关系运算符的基本用法及其注意事项)(掌握)\n\n* A:关系运算符有哪些(比较运算符,条件运算符)\n\t* ==,!=,>,>=,<,<= \n* 注意事项：\n\t* 无论你的操作是简单还是复杂，结果是boolean类型。\n\t\n\t* \"==\"不能写成\"=\"。\n\n## 02.25_day02总结\n\n* 把今天的知识点总结一遍。","slug":"Java学习笔记（day02）","published":1,"updated":"2020-02-20T06:06:59.377Z","comments":1,"layout":"post","link":"","_id":"ckec2td260009fkupijda8kt6","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"02-01-java语言基础-常量的概述和使用-掌握\"><a class=\"header-anchor\" href=\"#02-01-java语言基础-常量的概述和使用-掌握\">☆</a>02.01_Java语言基础(常量的概述和使用)(掌握)</h2>\n<ul>\n<li>\n<p>A:什么是常量</p>\n<ul>\n<li>在程序执行的过程中其值不可以发生改变</li>\n</ul>\n</li>\n<li>\n<p>B:Java中常量的分类</p>\n<ul>\n<li>字面值常量</li>\n<li>自定义常量(面向对象部分讲)</li>\n</ul>\n</li>\n<li>\n<p>C:字面值常量的分类</p>\n<ul>\n<li>字符串常量\t用双引号括起来的内容</li>\n<li>整数常量\t\t所有整数</li>\n<li>小数常量\t\t所有小数</li>\n<li>字符常量\t\t用单引号括起来的内容,里面只能放单个数字,单个字母或单个符号</li>\n<li>布尔常量\t\t较为特殊，只有true和false</li>\n<li>空常量\t\t    null(数组部分讲解)</li>\n</ul>\n</li>\n<li>\n<p>D:案例演示</p>\n<ul>\n<li>用输出语句输出各种常量。null不演示</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-02-java语言基础-进制概述和二-八-十六进制图解-了解\"><a class=\"header-anchor\" href=\"#02-02-java语言基础-进制概述和二-八-十六进制图解-了解\">☆</a>02.02_Java语言基础(进制概述和二,八,十六进制图解)(了解)</h2>\n<ul>\n<li>A:什么是进制\n<ul>\n<li>进制：就是进位制，是人们规定的一种进位方法。 对于任何一种进制–X进制，就表示某一位置上的数运算时是逢X进一位。二进制就是逢二进一，八进制是逢八进一，十进制是逢十进一，十六进制是逢十六进一。</li>\n<li>例如一周有七天,七进制,一年有十二个月,十二进制</li>\n</ul>\n</li>\n<li>B:十进制的由来\n<ul>\n<li>十进制的由来是因为人类有十个手指</li>\n</ul>\n</li>\n<li>C:二进制的由来\n<ul>\n<li>其实二进制来源与中国,请看史料记载</li>\n<li>18世纪德国数理哲学大师莱布尼兹从他的传教士朋友鲍威特寄给他的拉丁文译本《易经》中，读到了八卦的组成结构，惊奇地发现其基本素数（0）（1），即《易经》的阴爻yao- -和__阳爻，其进位制就是二进制，并认为这是世界上数学进制中最先进的。20世纪被称作第三次科技革命的重要标志之一的计算机的发明与应用，其运算模式正是二进制。它不但证明了莱布尼兹的原理是正确的，同时也证明了《易经》数理学是很了不起的。</li>\n</ul>\n</li>\n<li>D:八进制的由来\n<ul>\n<li>任何数据在计算机中都是以二进制的形式存在的。二进制早期由电信号开关演变而来。一个整数在内存中一样也是二进制的，但是使用一大串的1或者0组成的数值进行使用很麻烦。</li>\n<li>所以就想把一大串缩短点，将二进制中的三位用一位表示。这三位可以取到的最大值就是7.超过7就进位了，这就是八进制。</li>\n</ul>\n</li>\n<li>E:十六进制的由来\n<ul>\n<li>但是对于过长的二进制变成八进制还是较长，所以出现的用4个二进制位表示一位的情况，四个二进制位最大是15，这就是十六进制。</li>\n</ul>\n</li>\n<li>F:不同进制表现同一个数据的形式特点\n<ul>\n<li>进制越大，表现形式越短</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-03-java语言基础-不同进制数据的表现形式-掌握\"><a class=\"header-anchor\" href=\"#02-03-java语言基础-不同进制数据的表现形式-掌握\">☆</a>02.03_Java语言基础(不同进制数据的表现形式)(掌握)</h2>\n<ul>\n<li>A:二进制的数据表现形式\n<ul>\n<li>由0,1组成。以0b(b可以大写也可以小写)开头(JDK1.7版本可以表示二进制了)</li>\n</ul>\n</li>\n<li>B:八进制的数据表现形式\n<ul>\n<li>由0,1,…7组成。以0开头</li>\n</ul>\n</li>\n<li>C:十进制的数据表现形式\n<ul>\n<li>由0,1,…9组成。整数默认是十进制的</li>\n</ul>\n</li>\n<li>D:十六进制的数据表现形式\n<ul>\n<li>由0,1,…9,a,b,c,d,e,f(大小写均可)。以0x开头</li>\n</ul>\n</li>\n<li>E:案例演示\n<ul>\n<li>输出不同进制表现100的数据。</li>\n<li>0b100</li>\n<li>0100</li>\n<li>100</li>\n<li>0x100</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-04-java语言基础-任意进制到十进制的转换图解-了解\"><a class=\"header-anchor\" href=\"#02-04-java语言基础-任意进制到十进制的转换图解-了解\">☆</a>02.04_Java语言基础(任意进制到十进制的转换图解)(了解)</h2>\n<ul>\n<li>A:任意进制到十进制的转换原理\n<ul>\n<li>系数：就是每一位上的数据。</li>\n<li>基数：X进制，基数就是X。</li>\n<li>权：在右边，从0开始编号，对应位上的编号即为该位的权。</li>\n<li>结果：把系数*基数的权次幂相加即可。</li>\n</ul>\n</li>\n<li>B:画图练习\n<ul>\n<li>二进制–十进制</li>\n<li>八进制–十进制</li>\n<li>十六进制–十进制</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-05-java语言基础-十进制到任意进制的转换图解-了解\"><a class=\"header-anchor\" href=\"#02-05-java语言基础-十进制到任意进制的转换图解-了解\">☆</a>02.05_Java语言基础(十进制到任意进制的转换图解)(了解)</h2>\n<ul>\n<li>A:十进制到任意进制的转换原理\n<ul>\n<li>除积倒取余</li>\n</ul>\n</li>\n<li>B:画图练习\n<ul>\n<li>十进制–二进制</li>\n<li>十进制–八进制</li>\n<li>十进制–十六进制</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-06-java语言基础-快速的进制转换法-了解\"><a class=\"header-anchor\" href=\"#02-06-java语言基础-快速的进制转换法-了解\">☆</a>02.06_Java语言基础(快速的进制转换法)(了解)</h2>\n<ul>\n<li>A:8421码及特点\n<ul>\n<li>8421码是中国大陆的叫法，8421码是BCD代码中最常用的一种。在这种编码方式中每一位二值代码的1都是代表一个固定数值，把每一位的1代表的十进制数加起来，得到的结果就是它所代表的十进制数码。</li>\n</ul>\n</li>\n<li>B:通过8421码的方式进行二进制和十进制的相互转换</li>\n<li>C:二进制到八进制的简易方式</li>\n<li>D:二进制到十六进制的简易方式</li>\n</ul>\n<h2 id=\"02-07-java语言基础-原码反码补码-了解\"><a class=\"header-anchor\" href=\"#02-07-java语言基础-原码反码补码-了解\">☆</a>02.07_Java语言基础(原码反码补码)(了解)</h2>\n<ul>\n<li>A:为什么要学习原码反码补码?\n<ul>\n<li>后面要学习强制类型转换,如果不知道有原反补会看不懂结果</li>\n</ul>\n</li>\n<li>B:有符号数据表示法的几种方式\n<ul>\n<li>原码\n<ul>\n<li>就是二进制定点表示法，即最高位为符号位，“0”表示正，“1”表示负，其余位表示数值的大小。</li>\n<li>通过一个字节,也就是8个二进制位表示+7和-7</li>\n<li>0(符号位)\t0000111</li>\n<li>1(符号位)\t0000111</li>\n</ul>\n</li>\n<li>反码\n<ul>\n<li>正数的反码与其原码相同；负数的反码是对其原码逐位取反，但符号位除外。</li>\n</ul>\n</li>\n<li>补码\n<ul>\n<li>正数的补码与其原码相同；负数的补码是在其反码的末位加1。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-08-java语言基础-原码反码补码的练习-了解\"><a class=\"header-anchor\" href=\"#02-08-java语言基础-原码反码补码的练习-了解\">☆</a>02.08_Java语言基础(原码反码补码的练习)(了解)</h2>\n<ul>\n<li>A:已知原码求补码\n<ul>\n<li>0b10110100</li>\n</ul>\n</li>\n<li>B:已知补码求原码\n<ul>\n<li>0b11101110</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-09-java语言基础-变量的概述及格式-掌握\"><a class=\"header-anchor\" href=\"#02-09-java语言基础-变量的概述及格式-掌握\">☆</a>02.09_Java语言基础(变量的概述及格式)(掌握)</h2>\n<ul>\n<li>A:什么是变量\n<ul>\n<li>在程序执行的过程中，在某个范围内其值可以发生改变的量</li>\n</ul>\n</li>\n<li>B:变量的定义格式\n<ul>\n<li>数据类型 变量名 = 变量值;</li>\n</ul>\n</li>\n<li>C:为什么要定义变量\n<ul>\n<li>用来不断的存放同一类型的常量，并可以重复使用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-10-java语言基础-数据类型的概述和分类-掌握\"><a class=\"header-anchor\" href=\"#02-10-java语言基础-数据类型的概述和分类-掌握\">☆</a>02.10_Java语言基础(数据类型的概述和分类)(掌握)</h2>\n<ul>\n<li>A:为什么有数据类型\n<ul>\n<li>Java语言是强类型语言，对于每一种数据都定义了明确的具体数据类型，在内存中分配了不同大小的内存空间</li>\n</ul>\n</li>\n<li>B:Java中数据类型的分类\n<ul>\n<li>基本数据类型</li>\n<li>引用数据类型\n<ul>\n<li>面向对象部分讲解</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>C:基本数据类型分类(4类8种)\n<ul>\n<li>整数型\n<ul>\n<li>byte 占一个字节  -128到127</li>\n<li>short 占两个字  -2<sup>15~2</sup>15-1</li>\n<li>int 占四个字节 -2<sup>31~2</sup>31-1</li>\n<li>long 占八个字节 -2<sup>63~2</sup>63-1</li>\n</ul>\n</li>\n<li>浮点型\n<ul>\n<li>float 占四个字节 -3.403E38~3.403E38  单精度</li>\n<li>double 占八个字节-1.798E308~1.798E308 双精度</li>\n</ul>\n</li>\n<li>字符型\n<ul>\n<li>char 占两个字节 0~65535</li>\n</ul>\n</li>\n<li>布尔型\n<ul>\n<li>boolean\n<ul>\n<li>boolean理论上是占八分之一个字节,因为一个开关就可以决定是true和false了,但是java中boolean类型没有明确指定他的大小</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-11-java语言基础-定义不同数据类型的变量-掌握\"><a class=\"header-anchor\" href=\"#02-11-java语言基础-定义不同数据类型的变量-掌握\">☆</a>02.11_Java语言基础(定义不同数据类型的变量)(掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>定义不同基本数据类型的变量，并输出</li>\n<li>赋值时候注意float类型,long类型</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-12-java语言基础-使用变量的注意事项-掌握\"><a class=\"header-anchor\" href=\"#02-12-java语言基础-使用变量的注意事项-掌握\">☆</a>02.12_Java语言基础(使用变量的注意事项)(掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>a:作用域问题\n<ul>\n<li>同一个区域不能使用相同的变量名</li>\n</ul>\n</li>\n<li>b:初始化值问题\n<ul>\n<li>局部变量在使用之前必须赋值</li>\n</ul>\n</li>\n<li>c:一条语句可以定义几个变量\n<ul>\n<li>int a,b,c…;</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-13-java语言基础-数据类型转换之隐式转换-掌握\"><a class=\"header-anchor\" href=\"#02-13-java语言基础-数据类型转换之隐式转换-掌握\">☆</a>02.13_Java语言基础(数据类型转换之隐式转换)(掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>a:int + int</li>\n<li>b:byte + int</li>\n</ul>\n</li>\n<li>B:Java中的默认转换规则\n<ul>\n<li>取值范围小的数据类型与取值范围大的数据类型进行运算,会先将小的数据类型提升为大的,再运算</li>\n</ul>\n</li>\n<li>C:画图解释byte+int类型的问题</li>\n</ul>\n<h2 id=\"02-14-java语言基础-数据类型转换之强制转换-掌握\"><a class=\"header-anchor\" href=\"#02-14-java语言基础-数据类型转换之强制转换-掌握\">☆</a>02.14_Java语言基础(数据类型转换之强制转换)(掌握)</h2>\n<ul>\n<li>A:强制转换问题\n<ul>\n<li>int a = 10;</li>\n<li>byte b = 20;</li>\n<li>b = a + b;</li>\n</ul>\n</li>\n<li>B:强制转换的格式\n<ul>\n<li>b = (byte)(a + b);</li>\n</ul>\n</li>\n<li>C:强制转换的注意事项\n<ul>\n<li>如果超出了被赋值的数据类型的取值范围得到的结果会与你期望的结果不同</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-15-java语言基础-面试题之变量相加和常量相加的区别-掌握\"><a class=\"header-anchor\" href=\"#02-15-java语言基础-面试题之变量相加和常量相加的区别-掌握\">☆</a>02.15_Java语言基础(面试题之变量相加和常量相加的区别)(掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>面试题:看下面的程序是否有问题，如果有问题，请指出并说明理由。</li>\n<li>byte b1 = 3;</li>\n<li>byte b2 = 4;</li>\n<li>byte b3 = b1 + b2;\n<ul>\n<li>从两方面去回答这个题</li>\n<li>b1和b2是两个变量,变量里面存储的值都是变化的,所以在程序运行中JVM是无法判断里面具体的值</li>\n<li>byte类型的变量在进行运算的时候,会自动类型提升为int类型</li>\n</ul>\n</li>\n<li>byte b4 = 3 + 4;\n<ul>\n<li>3和4都是常量,java有常量优化机制,就是在编译的的时候直接把3和4的结果赋值给b4了</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-16-java语言基础-long与float的取值范围谁大谁小-了解\"><a class=\"header-anchor\" href=\"#02-16-java语言基础-long与float的取值范围谁大谁小-了解\">☆</a>02.16_Java语言基础(long与float的取值范围谁大谁小)(了解)</h2>\n<ul>\n<li>进行混合运算的时候,byte,short,char不会相互转换,都会自动类型提升为int类型,其他类型进行混合运算的是小的数据类型提升为大的\n<ul>\n<li>\n<p>byte,short,char – int – long – float – double</p>\n</li>\n<li>\n<p>long: 8个字节</p>\n</li>\n<li>\n<p>float：4个字节</p>\n</li>\n<li>\n<p>IEEE754</p>\n</li>\n<li>\n<p>4个字节是32个二进制位</p>\n</li>\n<li>\n<p>1位是符号位</p>\n</li>\n<li>\n<p>8位是指数位</p>\n</li>\n<li>\n<p>00000000   11111111</p>\n</li>\n<li>\n<p>0到255</p>\n</li>\n<li>\n<p>1到254</p>\n</li>\n<li>\n<p>-126到127</p>\n</li>\n<li>\n<p>23位是尾数位</p>\n</li>\n<li>\n<p>每个指数位减去127</p>\n</li>\n<li>\n<p>A:它们底层的存储结构不同。</p>\n</li>\n<li>\n<p>B:float表示的数据范围比long的范围要大</p>\n<ul>\n<li>long：2^63-1</li>\n<li>float：3.4<em>10^38 &gt; 2</em>10^38 &gt; 2<em>8^38 = 2</em>2<sup>3</sup>38 = 2*2^114 &gt; 2^63-1</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-17-java语言基础-字符和字符串参与运算-掌握\"><a class=\"header-anchor\" href=\"#02-17-java语言基础-字符和字符串参与运算-掌握\">☆</a>02.17_Java语言基础(字符和字符串参与运算)(掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>\n<p>System.out.println(‘a’);</p>\n</li>\n<li>\n<p>System.out.println(‘a’+1);</p>\n</li>\n<li>\n<p>通过看结果知道’a’的值是多少,由此引出ASCII码表</p>\n</li>\n</ul>\n</li>\n<li>B:ASCII码表的概述\n<ul>\n<li>记住三个值：\n<ul>\n<li>‘0’  48</li>\n<li>‘A’  65</li>\n<li>‘a’  97</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>System.out.println(“hello”+‘a’+1);</li>\n<li>System.out.println(‘a’+1+“hello”);</li>\n</ul>\n</li>\n<li>D:+在有字符串参与中被称为字符串连接符\n<ul>\n<li>System.out.println(“5+5=”+5+5);</li>\n<li>System.out.println(5+5+&quot;=5+5&quot;);</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-18-java语言基础-char数据类型-掌握\"><a class=\"header-anchor\" href=\"#02-18-java语言基础-char数据类型-掌握\">☆</a>02.18_Java语言基础(char数据类型)(掌握)</h2>\n<ul>\n<li>A:char c = 97;\t0到65535</li>\n<li>B:Java语言中的字符char可以存储一个中文汉字吗?为什么呢?\n<ul>\n<li>可以。因为Java语言采用的是Unicode编码。Unicode编码中的每个字符占用两个字节。中文也是占的两个字节</li>\n<li>所以，Java中的字符可以存储一个中文汉字</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-19-java语言基础-算术运算符的基本用法-掌握\"><a class=\"header-anchor\" href=\"#02-19-java语言基础-算术运算符的基本用法-掌握\">☆</a>02.19_Java语言基础(算术运算符的基本用法)(掌握)</h2>\n<ul>\n<li>A:什么是运算符\n<ul>\n<li>就是对常量和变量进行操作的符号。</li>\n</ul>\n</li>\n<li>B:运算符的分类\n<ul>\n<li>算术运算符，赋值运算符，比较(关系或条件)运算符，逻辑运算符，位运算符，三目(元)运算符</li>\n</ul>\n</li>\n<li>C:算数运算符有哪些\n<ul>\n<li>+,-,*,/,%,++,–</li>\n</ul>\n</li>\n<li>D:注意事项：\n<ul>\n<li>a:+号在java中有三种作用,代表正号,做加法运算,字符串的连接符</li>\n<li>b:整数相除只能得到整数。如果想得到小数，必须把数据变化为浮点数类型</li>\n<li>c:/获取的是除法操作的商，%获取的是除法操作的余数</li>\n<li>%运算符\n<ul>\n<li>当左边的绝对值小于右边绝对值时,结果是左边</li>\n<li>当左边的绝对值等于右边或是右边的倍数时,结果是0</li>\n<li>当左边的绝对值大于右边绝对值时,结果是余数</li>\n<li>%运算符结果的符号只和左边有关系,与右边无关</li>\n<li>任何一个正整数%2结果不是0就是1可以用来当作切换条件</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-20-java语言基础-算术运算符-和-的用法-掌握\"><a class=\"header-anchor\" href=\"#02-20-java语言基础-算术运算符-和-的用法-掌握\">☆</a>02.20_Java语言基础(算术运算符++和–的用法)(掌握)</h2>\n<ul>\n<li>A:++,–运算符的作用\n<ul>\n<li>自加（++）自减（–）运算</li>\n<li>++:自加。对原有的数据进行+1</li>\n<li>–:自减。对原有的数据进行-1</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>a:单独使用：\n<ul>\n<li>放在操作数的前面和后面效果一样。(这种用法是我们比较常见的)</li>\n</ul>\n</li>\n<li>b:参与运算使用：\n<ul>\n<li>放在操作数的前面，先自增或者自减，然后再参与运算。</li>\n<li>放在操作数的后面，先参与运算，再自增或者自减。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-21-java语言基础-算术运算符-和-的练习-掌握\"><a class=\"header-anchor\" href=\"#02-21-java语言基础-算术运算符-和-的练习-掌握\">☆</a>02.21_Java语言基础(算术运算符++和–的练习)(掌握)</h2>\n<ul>\n<li>\n<p>A:案例演示</p>\n<ul>\n<li>请分别计算出a,b,c的值?</li>\n<li>\n<pre><code>int a = 10;\nint b = 10;\nint c = 10;\n\na = b++;\t//10\nc = --a;\t//9\nb = ++a;\t//10\na = c--;\t//9\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>B:案例演示</p>\n<ul>\n<li>\n<p>请分别计算出x,y的值?</p>\n<pre><code>int x = 4;\nint y = (x++)+(++x)+(x*10);\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>C:面试题</p>\n<ul>\n<li>byte b = 10;</li>\n<li>b++;</li>\n<li>b = b + 1;</li>\n<li>问哪句会报错,为什么<br>\n最后一句报错，前后b的类型不匹配，需要强制转换</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-22-java语言基础-赋值运算符的基本用法-掌握\"><a class=\"header-anchor\" href=\"#02-22-java语言基础-赋值运算符的基本用法-掌握\">☆</a>02.22_Java语言基础(赋值运算符的基本用法)(掌握)</h2>\n<ul>\n<li>A:赋值运算符有哪些\n<ul>\n<li>\n<p>a:基本的赋值运算符：=</p>\n<ul>\n<li>把=右边的数据赋值给左边。</li>\n</ul>\n</li>\n<li>\n<p>b:扩展的赋值运算符：+=,-=,*=,/=,%=</p>\n<ul>\n<li>+= 把左边和右边做加法，然后赋值给左边。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-23-java语言基础-赋值运算符的面试题-掌握\"><a class=\"header-anchor\" href=\"#02-23-java语言基础-赋值运算符的面试题-掌握\">☆</a>02.23_Java语言基础(赋值运算符的面试题)(掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>面试题:看下面的程序是否有问题，如果有问题，请指出并说明理由。</li>\n<li>short s=1;s = s+1;</li>\n<li>short s=1;s+=1;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-24-java语言基础-关系运算符的基本用法及其注意事项-掌握\"><a class=\"header-anchor\" href=\"#02-24-java语言基础-关系运算符的基本用法及其注意事项-掌握\">☆</a>02.24_Java语言基础(关系运算符的基本用法及其注意事项)(掌握)</h2>\n<ul>\n<li>A:关系运算符有哪些(比较运算符,条件运算符)\n<ul>\n<li>==,!=,&gt;,&gt;=,&lt;,&lt;=</li>\n</ul>\n</li>\n<li>注意事项：\n<ul>\n<li>\n<p>无论你的操作是简单还是复杂，结果是boolean类型。</p>\n</li>\n<li>\n<p>“==“不能写成”=”。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-25-day02总结\"><a class=\"header-anchor\" href=\"#02-25-day02总结\">☆</a>02.25_day02总结</h2>\n<ul>\n<li>把今天的知识点总结一遍。</li>\n</ul>\n","site":{"data":{}},"length":5116,"excerpt":"","more":"<h2 id=\"02-01-java语言基础-常量的概述和使用-掌握\"><a class=\"header-anchor\" href=\"#02-01-java语言基础-常量的概述和使用-掌握\">☆</a>02.01_Java语言基础(常量的概述和使用)(掌握)</h2>\n<ul>\n<li>\n<p>A:什么是常量</p>\n<ul>\n<li>在程序执行的过程中其值不可以发生改变</li>\n</ul>\n</li>\n<li>\n<p>B:Java中常量的分类</p>\n<ul>\n<li>字面值常量</li>\n<li>自定义常量(面向对象部分讲)</li>\n</ul>\n</li>\n<li>\n<p>C:字面值常量的分类</p>\n<ul>\n<li>字符串常量\t用双引号括起来的内容</li>\n<li>整数常量\t\t所有整数</li>\n<li>小数常量\t\t所有小数</li>\n<li>字符常量\t\t用单引号括起来的内容,里面只能放单个数字,单个字母或单个符号</li>\n<li>布尔常量\t\t较为特殊，只有true和false</li>\n<li>空常量\t\t    null(数组部分讲解)</li>\n</ul>\n</li>\n<li>\n<p>D:案例演示</p>\n<ul>\n<li>用输出语句输出各种常量。null不演示</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-02-java语言基础-进制概述和二-八-十六进制图解-了解\"><a class=\"header-anchor\" href=\"#02-02-java语言基础-进制概述和二-八-十六进制图解-了解\">☆</a>02.02_Java语言基础(进制概述和二,八,十六进制图解)(了解)</h2>\n<ul>\n<li>A:什么是进制\n<ul>\n<li>进制：就是进位制，是人们规定的一种进位方法。 对于任何一种进制–X进制，就表示某一位置上的数运算时是逢X进一位。二进制就是逢二进一，八进制是逢八进一，十进制是逢十进一，十六进制是逢十六进一。</li>\n<li>例如一周有七天,七进制,一年有十二个月,十二进制</li>\n</ul>\n</li>\n<li>B:十进制的由来\n<ul>\n<li>十进制的由来是因为人类有十个手指</li>\n</ul>\n</li>\n<li>C:二进制的由来\n<ul>\n<li>其实二进制来源与中国,请看史料记载</li>\n<li>18世纪德国数理哲学大师莱布尼兹从他的传教士朋友鲍威特寄给他的拉丁文译本《易经》中，读到了八卦的组成结构，惊奇地发现其基本素数（0）（1），即《易经》的阴爻yao- -和__阳爻，其进位制就是二进制，并认为这是世界上数学进制中最先进的。20世纪被称作第三次科技革命的重要标志之一的计算机的发明与应用，其运算模式正是二进制。它不但证明了莱布尼兹的原理是正确的，同时也证明了《易经》数理学是很了不起的。</li>\n</ul>\n</li>\n<li>D:八进制的由来\n<ul>\n<li>任何数据在计算机中都是以二进制的形式存在的。二进制早期由电信号开关演变而来。一个整数在内存中一样也是二进制的，但是使用一大串的1或者0组成的数值进行使用很麻烦。</li>\n<li>所以就想把一大串缩短点，将二进制中的三位用一位表示。这三位可以取到的最大值就是7.超过7就进位了，这就是八进制。</li>\n</ul>\n</li>\n<li>E:十六进制的由来\n<ul>\n<li>但是对于过长的二进制变成八进制还是较长，所以出现的用4个二进制位表示一位的情况，四个二进制位最大是15，这就是十六进制。</li>\n</ul>\n</li>\n<li>F:不同进制表现同一个数据的形式特点\n<ul>\n<li>进制越大，表现形式越短</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-03-java语言基础-不同进制数据的表现形式-掌握\"><a class=\"header-anchor\" href=\"#02-03-java语言基础-不同进制数据的表现形式-掌握\">☆</a>02.03_Java语言基础(不同进制数据的表现形式)(掌握)</h2>\n<ul>\n<li>A:二进制的数据表现形式\n<ul>\n<li>由0,1组成。以0b(b可以大写也可以小写)开头(JDK1.7版本可以表示二进制了)</li>\n</ul>\n</li>\n<li>B:八进制的数据表现形式\n<ul>\n<li>由0,1,…7组成。以0开头</li>\n</ul>\n</li>\n<li>C:十进制的数据表现形式\n<ul>\n<li>由0,1,…9组成。整数默认是十进制的</li>\n</ul>\n</li>\n<li>D:十六进制的数据表现形式\n<ul>\n<li>由0,1,…9,a,b,c,d,e,f(大小写均可)。以0x开头</li>\n</ul>\n</li>\n<li>E:案例演示\n<ul>\n<li>输出不同进制表现100的数据。</li>\n<li>0b100</li>\n<li>0100</li>\n<li>100</li>\n<li>0x100</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-04-java语言基础-任意进制到十进制的转换图解-了解\"><a class=\"header-anchor\" href=\"#02-04-java语言基础-任意进制到十进制的转换图解-了解\">☆</a>02.04_Java语言基础(任意进制到十进制的转换图解)(了解)</h2>\n<ul>\n<li>A:任意进制到十进制的转换原理\n<ul>\n<li>系数：就是每一位上的数据。</li>\n<li>基数：X进制，基数就是X。</li>\n<li>权：在右边，从0开始编号，对应位上的编号即为该位的权。</li>\n<li>结果：把系数*基数的权次幂相加即可。</li>\n</ul>\n</li>\n<li>B:画图练习\n<ul>\n<li>二进制–十进制</li>\n<li>八进制–十进制</li>\n<li>十六进制–十进制</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-05-java语言基础-十进制到任意进制的转换图解-了解\"><a class=\"header-anchor\" href=\"#02-05-java语言基础-十进制到任意进制的转换图解-了解\">☆</a>02.05_Java语言基础(十进制到任意进制的转换图解)(了解)</h2>\n<ul>\n<li>A:十进制到任意进制的转换原理\n<ul>\n<li>除积倒取余</li>\n</ul>\n</li>\n<li>B:画图练习\n<ul>\n<li>十进制–二进制</li>\n<li>十进制–八进制</li>\n<li>十进制–十六进制</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-06-java语言基础-快速的进制转换法-了解\"><a class=\"header-anchor\" href=\"#02-06-java语言基础-快速的进制转换法-了解\">☆</a>02.06_Java语言基础(快速的进制转换法)(了解)</h2>\n<ul>\n<li>A:8421码及特点\n<ul>\n<li>8421码是中国大陆的叫法，8421码是BCD代码中最常用的一种。在这种编码方式中每一位二值代码的1都是代表一个固定数值，把每一位的1代表的十进制数加起来，得到的结果就是它所代表的十进制数码。</li>\n</ul>\n</li>\n<li>B:通过8421码的方式进行二进制和十进制的相互转换</li>\n<li>C:二进制到八进制的简易方式</li>\n<li>D:二进制到十六进制的简易方式</li>\n</ul>\n<h2 id=\"02-07-java语言基础-原码反码补码-了解\"><a class=\"header-anchor\" href=\"#02-07-java语言基础-原码反码补码-了解\">☆</a>02.07_Java语言基础(原码反码补码)(了解)</h2>\n<ul>\n<li>A:为什么要学习原码反码补码?\n<ul>\n<li>后面要学习强制类型转换,如果不知道有原反补会看不懂结果</li>\n</ul>\n</li>\n<li>B:有符号数据表示法的几种方式\n<ul>\n<li>原码\n<ul>\n<li>就是二进制定点表示法，即最高位为符号位，“0”表示正，“1”表示负，其余位表示数值的大小。</li>\n<li>通过一个字节,也就是8个二进制位表示+7和-7</li>\n<li>0(符号位)\t0000111</li>\n<li>1(符号位)\t0000111</li>\n</ul>\n</li>\n<li>反码\n<ul>\n<li>正数的反码与其原码相同；负数的反码是对其原码逐位取反，但符号位除外。</li>\n</ul>\n</li>\n<li>补码\n<ul>\n<li>正数的补码与其原码相同；负数的补码是在其反码的末位加1。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-08-java语言基础-原码反码补码的练习-了解\"><a class=\"header-anchor\" href=\"#02-08-java语言基础-原码反码补码的练习-了解\">☆</a>02.08_Java语言基础(原码反码补码的练习)(了解)</h2>\n<ul>\n<li>A:已知原码求补码\n<ul>\n<li>0b10110100</li>\n</ul>\n</li>\n<li>B:已知补码求原码\n<ul>\n<li>0b11101110</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-09-java语言基础-变量的概述及格式-掌握\"><a class=\"header-anchor\" href=\"#02-09-java语言基础-变量的概述及格式-掌握\">☆</a>02.09_Java语言基础(变量的概述及格式)(掌握)</h2>\n<ul>\n<li>A:什么是变量\n<ul>\n<li>在程序执行的过程中，在某个范围内其值可以发生改变的量</li>\n</ul>\n</li>\n<li>B:变量的定义格式\n<ul>\n<li>数据类型 变量名 = 变量值;</li>\n</ul>\n</li>\n<li>C:为什么要定义变量\n<ul>\n<li>用来不断的存放同一类型的常量，并可以重复使用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-10-java语言基础-数据类型的概述和分类-掌握\"><a class=\"header-anchor\" href=\"#02-10-java语言基础-数据类型的概述和分类-掌握\">☆</a>02.10_Java语言基础(数据类型的概述和分类)(掌握)</h2>\n<ul>\n<li>A:为什么有数据类型\n<ul>\n<li>Java语言是强类型语言，对于每一种数据都定义了明确的具体数据类型，在内存中分配了不同大小的内存空间</li>\n</ul>\n</li>\n<li>B:Java中数据类型的分类\n<ul>\n<li>基本数据类型</li>\n<li>引用数据类型\n<ul>\n<li>面向对象部分讲解</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>C:基本数据类型分类(4类8种)\n<ul>\n<li>整数型\n<ul>\n<li>byte 占一个字节  -128到127</li>\n<li>short 占两个字  -2<sup>15~2</sup>15-1</li>\n<li>int 占四个字节 -2<sup>31~2</sup>31-1</li>\n<li>long 占八个字节 -2<sup>63~2</sup>63-1</li>\n</ul>\n</li>\n<li>浮点型\n<ul>\n<li>float 占四个字节 -3.403E38~3.403E38  单精度</li>\n<li>double 占八个字节-1.798E308~1.798E308 双精度</li>\n</ul>\n</li>\n<li>字符型\n<ul>\n<li>char 占两个字节 0~65535</li>\n</ul>\n</li>\n<li>布尔型\n<ul>\n<li>boolean\n<ul>\n<li>boolean理论上是占八分之一个字节,因为一个开关就可以决定是true和false了,但是java中boolean类型没有明确指定他的大小</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-11-java语言基础-定义不同数据类型的变量-掌握\"><a class=\"header-anchor\" href=\"#02-11-java语言基础-定义不同数据类型的变量-掌握\">☆</a>02.11_Java语言基础(定义不同数据类型的变量)(掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>定义不同基本数据类型的变量，并输出</li>\n<li>赋值时候注意float类型,long类型</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-12-java语言基础-使用变量的注意事项-掌握\"><a class=\"header-anchor\" href=\"#02-12-java语言基础-使用变量的注意事项-掌握\">☆</a>02.12_Java语言基础(使用变量的注意事项)(掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>a:作用域问题\n<ul>\n<li>同一个区域不能使用相同的变量名</li>\n</ul>\n</li>\n<li>b:初始化值问题\n<ul>\n<li>局部变量在使用之前必须赋值</li>\n</ul>\n</li>\n<li>c:一条语句可以定义几个变量\n<ul>\n<li>int a,b,c…;</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-13-java语言基础-数据类型转换之隐式转换-掌握\"><a class=\"header-anchor\" href=\"#02-13-java语言基础-数据类型转换之隐式转换-掌握\">☆</a>02.13_Java语言基础(数据类型转换之隐式转换)(掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>a:int + int</li>\n<li>b:byte + int</li>\n</ul>\n</li>\n<li>B:Java中的默认转换规则\n<ul>\n<li>取值范围小的数据类型与取值范围大的数据类型进行运算,会先将小的数据类型提升为大的,再运算</li>\n</ul>\n</li>\n<li>C:画图解释byte+int类型的问题</li>\n</ul>\n<h2 id=\"02-14-java语言基础-数据类型转换之强制转换-掌握\"><a class=\"header-anchor\" href=\"#02-14-java语言基础-数据类型转换之强制转换-掌握\">☆</a>02.14_Java语言基础(数据类型转换之强制转换)(掌握)</h2>\n<ul>\n<li>A:强制转换问题\n<ul>\n<li>int a = 10;</li>\n<li>byte b = 20;</li>\n<li>b = a + b;</li>\n</ul>\n</li>\n<li>B:强制转换的格式\n<ul>\n<li>b = (byte)(a + b);</li>\n</ul>\n</li>\n<li>C:强制转换的注意事项\n<ul>\n<li>如果超出了被赋值的数据类型的取值范围得到的结果会与你期望的结果不同</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-15-java语言基础-面试题之变量相加和常量相加的区别-掌握\"><a class=\"header-anchor\" href=\"#02-15-java语言基础-面试题之变量相加和常量相加的区别-掌握\">☆</a>02.15_Java语言基础(面试题之变量相加和常量相加的区别)(掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>面试题:看下面的程序是否有问题，如果有问题，请指出并说明理由。</li>\n<li>byte b1 = 3;</li>\n<li>byte b2 = 4;</li>\n<li>byte b3 = b1 + b2;\n<ul>\n<li>从两方面去回答这个题</li>\n<li>b1和b2是两个变量,变量里面存储的值都是变化的,所以在程序运行中JVM是无法判断里面具体的值</li>\n<li>byte类型的变量在进行运算的时候,会自动类型提升为int类型</li>\n</ul>\n</li>\n<li>byte b4 = 3 + 4;\n<ul>\n<li>3和4都是常量,java有常量优化机制,就是在编译的的时候直接把3和4的结果赋值给b4了</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-16-java语言基础-long与float的取值范围谁大谁小-了解\"><a class=\"header-anchor\" href=\"#02-16-java语言基础-long与float的取值范围谁大谁小-了解\">☆</a>02.16_Java语言基础(long与float的取值范围谁大谁小)(了解)</h2>\n<ul>\n<li>进行混合运算的时候,byte,short,char不会相互转换,都会自动类型提升为int类型,其他类型进行混合运算的是小的数据类型提升为大的\n<ul>\n<li>\n<p>byte,short,char – int – long – float – double</p>\n</li>\n<li>\n<p>long: 8个字节</p>\n</li>\n<li>\n<p>float：4个字节</p>\n</li>\n<li>\n<p>IEEE754</p>\n</li>\n<li>\n<p>4个字节是32个二进制位</p>\n</li>\n<li>\n<p>1位是符号位</p>\n</li>\n<li>\n<p>8位是指数位</p>\n</li>\n<li>\n<p>00000000   11111111</p>\n</li>\n<li>\n<p>0到255</p>\n</li>\n<li>\n<p>1到254</p>\n</li>\n<li>\n<p>-126到127</p>\n</li>\n<li>\n<p>23位是尾数位</p>\n</li>\n<li>\n<p>每个指数位减去127</p>\n</li>\n<li>\n<p>A:它们底层的存储结构不同。</p>\n</li>\n<li>\n<p>B:float表示的数据范围比long的范围要大</p>\n<ul>\n<li>long：2^63-1</li>\n<li>float：3.4<em>10^38 &gt; 2</em>10^38 &gt; 2<em>8^38 = 2</em>2<sup>3</sup>38 = 2*2^114 &gt; 2^63-1</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-17-java语言基础-字符和字符串参与运算-掌握\"><a class=\"header-anchor\" href=\"#02-17-java语言基础-字符和字符串参与运算-掌握\">☆</a>02.17_Java语言基础(字符和字符串参与运算)(掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>\n<p>System.out.println(‘a’);</p>\n</li>\n<li>\n<p>System.out.println(‘a’+1);</p>\n</li>\n<li>\n<p>通过看结果知道’a’的值是多少,由此引出ASCII码表</p>\n</li>\n</ul>\n</li>\n<li>B:ASCII码表的概述\n<ul>\n<li>记住三个值：\n<ul>\n<li>‘0’  48</li>\n<li>‘A’  65</li>\n<li>‘a’  97</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>System.out.println(“hello”+‘a’+1);</li>\n<li>System.out.println(‘a’+1+“hello”);</li>\n</ul>\n</li>\n<li>D:+在有字符串参与中被称为字符串连接符\n<ul>\n<li>System.out.println(“5+5=”+5+5);</li>\n<li>System.out.println(5+5+&quot;=5+5&quot;);</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-18-java语言基础-char数据类型-掌握\"><a class=\"header-anchor\" href=\"#02-18-java语言基础-char数据类型-掌握\">☆</a>02.18_Java语言基础(char数据类型)(掌握)</h2>\n<ul>\n<li>A:char c = 97;\t0到65535</li>\n<li>B:Java语言中的字符char可以存储一个中文汉字吗?为什么呢?\n<ul>\n<li>可以。因为Java语言采用的是Unicode编码。Unicode编码中的每个字符占用两个字节。中文也是占的两个字节</li>\n<li>所以，Java中的字符可以存储一个中文汉字</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-19-java语言基础-算术运算符的基本用法-掌握\"><a class=\"header-anchor\" href=\"#02-19-java语言基础-算术运算符的基本用法-掌握\">☆</a>02.19_Java语言基础(算术运算符的基本用法)(掌握)</h2>\n<ul>\n<li>A:什么是运算符\n<ul>\n<li>就是对常量和变量进行操作的符号。</li>\n</ul>\n</li>\n<li>B:运算符的分类\n<ul>\n<li>算术运算符，赋值运算符，比较(关系或条件)运算符，逻辑运算符，位运算符，三目(元)运算符</li>\n</ul>\n</li>\n<li>C:算数运算符有哪些\n<ul>\n<li>+,-,*,/,%,++,–</li>\n</ul>\n</li>\n<li>D:注意事项：\n<ul>\n<li>a:+号在java中有三种作用,代表正号,做加法运算,字符串的连接符</li>\n<li>b:整数相除只能得到整数。如果想得到小数，必须把数据变化为浮点数类型</li>\n<li>c:/获取的是除法操作的商，%获取的是除法操作的余数</li>\n<li>%运算符\n<ul>\n<li>当左边的绝对值小于右边绝对值时,结果是左边</li>\n<li>当左边的绝对值等于右边或是右边的倍数时,结果是0</li>\n<li>当左边的绝对值大于右边绝对值时,结果是余数</li>\n<li>%运算符结果的符号只和左边有关系,与右边无关</li>\n<li>任何一个正整数%2结果不是0就是1可以用来当作切换条件</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-20-java语言基础-算术运算符-和-的用法-掌握\"><a class=\"header-anchor\" href=\"#02-20-java语言基础-算术运算符-和-的用法-掌握\">☆</a>02.20_Java语言基础(算术运算符++和–的用法)(掌握)</h2>\n<ul>\n<li>A:++,–运算符的作用\n<ul>\n<li>自加（++）自减（–）运算</li>\n<li>++:自加。对原有的数据进行+1</li>\n<li>–:自减。对原有的数据进行-1</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>a:单独使用：\n<ul>\n<li>放在操作数的前面和后面效果一样。(这种用法是我们比较常见的)</li>\n</ul>\n</li>\n<li>b:参与运算使用：\n<ul>\n<li>放在操作数的前面，先自增或者自减，然后再参与运算。</li>\n<li>放在操作数的后面，先参与运算，再自增或者自减。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-21-java语言基础-算术运算符-和-的练习-掌握\"><a class=\"header-anchor\" href=\"#02-21-java语言基础-算术运算符-和-的练习-掌握\">☆</a>02.21_Java语言基础(算术运算符++和–的练习)(掌握)</h2>\n<ul>\n<li>\n<p>A:案例演示</p>\n<ul>\n<li>请分别计算出a,b,c的值?</li>\n<li>\n<pre><code>int a = 10;\nint b = 10;\nint c = 10;\n\na = b++;\t//10\nc = --a;\t//9\nb = ++a;\t//10\na = c--;\t//9\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>B:案例演示</p>\n<ul>\n<li>\n<p>请分别计算出x,y的值?</p>\n<pre><code>int x = 4;\nint y = (x++)+(++x)+(x*10);\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>C:面试题</p>\n<ul>\n<li>byte b = 10;</li>\n<li>b++;</li>\n<li>b = b + 1;</li>\n<li>问哪句会报错,为什么<br>\n最后一句报错，前后b的类型不匹配，需要强制转换</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-22-java语言基础-赋值运算符的基本用法-掌握\"><a class=\"header-anchor\" href=\"#02-22-java语言基础-赋值运算符的基本用法-掌握\">☆</a>02.22_Java语言基础(赋值运算符的基本用法)(掌握)</h2>\n<ul>\n<li>A:赋值运算符有哪些\n<ul>\n<li>\n<p>a:基本的赋值运算符：=</p>\n<ul>\n<li>把=右边的数据赋值给左边。</li>\n</ul>\n</li>\n<li>\n<p>b:扩展的赋值运算符：+=,-=,*=,/=,%=</p>\n<ul>\n<li>+= 把左边和右边做加法，然后赋值给左边。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-23-java语言基础-赋值运算符的面试题-掌握\"><a class=\"header-anchor\" href=\"#02-23-java语言基础-赋值运算符的面试题-掌握\">☆</a>02.23_Java语言基础(赋值运算符的面试题)(掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>面试题:看下面的程序是否有问题，如果有问题，请指出并说明理由。</li>\n<li>short s=1;s = s+1;</li>\n<li>short s=1;s+=1;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-24-java语言基础-关系运算符的基本用法及其注意事项-掌握\"><a class=\"header-anchor\" href=\"#02-24-java语言基础-关系运算符的基本用法及其注意事项-掌握\">☆</a>02.24_Java语言基础(关系运算符的基本用法及其注意事项)(掌握)</h2>\n<ul>\n<li>A:关系运算符有哪些(比较运算符,条件运算符)\n<ul>\n<li>==,!=,&gt;,&gt;=,&lt;,&lt;=</li>\n</ul>\n</li>\n<li>注意事项：\n<ul>\n<li>\n<p>无论你的操作是简单还是复杂，结果是boolean类型。</p>\n</li>\n<li>\n<p>“==“不能写成”=”。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"02-25-day02总结\"><a class=\"header-anchor\" href=\"#02-25-day02总结\">☆</a>02.25_day02总结</h2>\n<ul>\n<li>把今天的知识点总结一遍。</li>\n</ul>\n"},{"title":"Java学习笔记（day03）","copyright":true,"abbrlink":"a2c12ad6","notshow":true,"date":"2018-09-15T10:11:00.000Z","password":null,"description":null,"image":null,"photos":[],"sticky":null,"_content":"\n## 03.01 逻辑运算符的基本用法(掌握)\n\n* A:逻辑运算符有哪些\n\t* &,|,^,!\n\t* &&,|| \n* B:案例演示\n* 逻辑运算符的基本用法\n\t\n* 注意事项：\n\t* a:逻辑运算符一般用于连接boolean类型的表达式或者值。\n\t* b:表达式：就是用运算符把常量或者变量连接起来的符合java语法的式子。\n\t\t* 算术表达式：a + b\n\t\t* 比较表达式：a == b(条件表达式)\n* C:结论：\n* &逻辑与:有false则false。\n* |逻辑或:有true则true。\n* ^逻辑异或:相同为false，不同为true。\n* !逻辑非:非false则true，非true则false。\n\t* 特点：偶数个不改变本身。\n\n## 03.02 逻辑运算符&&和&的区别(掌握)\n\n* A:案例演示\n\t* &&和&的区别?\n\t\t* a:最终结果一样。\n\t\t* b:&&具有短路效果。左边是false，右边不执行。\n\t\t* \t&是无论左边是false还是true,右边都会执行\n* B:同理||和|的区别?(学生自学)\n* C:开发中常用谁?\n\t* &&,||,!\n\n## 03.03 位运算符的基本用法1(了解)\n\n* A:位运算符有哪些\n\t* &,|,^,~ ,>>,>>>,<<\n* B:案例演示\n\t* 位运算符的基本用法1\n\t\n\t* &,|,^,~ 的用法\n\t* &:有0则0\n\t* |:有1则1\n\t* ^:相同则0，不同则1\n\t* ~:按位取反\n\n## 03.04 位异或运算符的特点及面试题 (掌握)\n\n* A:案例演示\n\t* 位异或运算符的特点\n\n\t* ^的特点：一个数据对另一个数据位异或两次，该数本身不变。\n\t\n* B:面试题：\n\t* 请自己实现两个整数变量的交换\n\t* 注意：以后讲课的过程中，我没有明确指定数据的类型，默认int类型。\n\n## 03.05 位运算符的基本用法2及面试题 (了解)\n\n* A:案例演示 >>,>>>,<<的用法:\n\t*  <<:左移\t左边最高位丢弃，右边补齐0\n\t*  >>:右移\t最高位是0，左边补齐0;最高为是1，左边补齐1\n\t*  >>>:无符号右移 无论最高位是0还是1，左边补齐0\n\t*  最有效率的算出2 * 8的结果\n\n## 03.06 三元运算符的基本用法 (掌握)\n\n* A:三元运算符的格式\n* \t\t(关系表达式) ? 表达式1 : 表达式2;\n* B:三元运算符的执行流程 \n* C:案例演示\n\t* 获取两个数中的最大值\n\n## 03.07 三元运算符的练习 (掌握)\n\n* A:案例演示\n\t* 比较两个整数是否相同\n* B:案例演示\n\t* 获取三个整数中的最大值\n\n## 03.08 键盘录入的基本格式讲解 (掌握)\n\n* A:为什么要使用键盘录入数据\n\t* a:为了让程序的数据更符合开发的数据\n\t* b:让程序更灵活一下\n* B:如何实现键盘录入呢?\n\t* 先照格式来。\n\t* a:导包\n\t\t* 格式：\n\t\t\t* import java.util.Scanner; \n\t\t* 位置：\n\t\t\t* 在class上面。\n\t* b:创建键盘录入对象\n\t\t* 格式：\n\t\t\t* Scanner sc = new Scanner(System.in);\n\t* c:通过对象获取数据\t\n\t\t* 格式：\n\t\t\t* int x = sc.nextInt();\n* C:案例演示\n\t* 键盘录入1个整数，并输出到控制台。\n\t* 键盘录入2个整数，并输出到控制台。\n\n## 03.09 键盘录入的练习1 (掌握)\n\n* A:案例演示\n\t* 键盘录入练习：键盘录入两个数据，并对这两个数据求和，输出其结果\n* B:案例演示\n\t* 键盘录入练习：键盘录入两个数据，获取这两个数据中的最大值\n\n## 03.10 键盘录入的练习2 (掌握)\n\n* A:案例演示\n\t* 键盘录入练习：键盘录入两个数据，比较这两个数据是否相等\n* B:案例演示\n\t* 键盘录入练习：键盘录入三个数据，获取这三个数据中的最大值\n\n## 03.11 顺序结构语句 (了解)\n\n* A:什么是流程控制语句\n\t* 流程控制语句：可以控制程序的执行流程。\n* B:流程控制语句的分类\n\t* 顺序结构\n\t* 选择结构\n\t* 循环结构\n* C:执行流程：\n\t* 从上往下，依次执行。\n* D:案例演示\n\t* 输出几句话看效果即可\n\n## 03.12 选择结构if语句格式1及其使用 (掌握)\n\n* A:选择结构的分类\n\t* if语句\n\t* switch语句\n* B:if语句有几种格式\n\t* 格式1\n\t* 格式2\n\t* 格式3\n* C:if语句的格式1\n* \n\t\tif(比较表达式) {\n\t\t\t语句体;\n\t\t}\n* D:执行流程：\n\t* 先计算比较表达式的值，看其返回值是true还是false。\n\t* 如果是true，就执行语句体；\n\t* 如果是false，就不执行语句体；\n\n## 03.13 选择结构if语句注意事项 (掌握)\n\n* A:案例演示\n\t* a:比较表达式无论简单还是复杂，结果必须是boolean类型\n\t* b:if语句控制的语句体如果是一条语句，大括号可以省略；\n\t  * 如果是多条语句，就不能省略。建议永远不要省略。\n\t* c:一般来说：有左大括号就没有分号，有分号就没有左大括号\n\n## 03.14 选择结构if语句格式2及其使用 (掌握)\n\n* A:if语句的格式2\n* \n\t\tif(比较表达式) {\n\t\t\t语句体1;\n\t\t}else {\n\t\t\t语句体2;\n\t\t}\n* B:执行流程：\n\t* 首先计算比较表达式的值，看其返回值是true还是false。\n\t* 如果是true，就执行语句体1；\n\t* 如果是false，就执行语句体2；\n* C:案例演示\n\t* a:获取两个数据中较大的值\n\t* b:判断一个数据是奇数还是偶数,并输出是奇数还是偶数\n\n\t* 注意事项：else后面是没有比较表达式的，只有if后面有。\n\n## 03.15if语句的格式2和三元的相互转换问题 (掌握)\n\n* A:案例演示\n\t* if语句和三元运算符完成同一个效果\n* B:案例演示\n\t* if语句和三元运算符的区别\n\t\n\t* 三元运算符实现的，都可以采用if语句实现。反之不成立。\n\t\n\t* 什么时候if语句实现不能用三元改进呢?\n\t\t* 当if语句控制的操作是一个输出语句的时候就不能。\n\t\t* 为什么呢?因为三元运算符是一个运算符，运算符操作完毕就应该有一个结果，而不是一个输出。\n\n## 03.16 选择结构if语句格式3及其使用 (掌握)\n\n* A:if语句的格式3：\n* \n\t\tif(比较表达式1) {\n\t\t\t语句体1;\n\t\t}else if(比较表达式2) {\n\t\t\t语句体2;\n\t\t}else if(比较表达式3) {\n\t\t\t语句体3;\n\t\t}\n\t\t...\n\t\telse {\n\t\t\t语句体n+1;\n\t\t}\n* B:执行流程：\n\t* 首先计算比较表达式1看其返回值是true还是false，\n\t* 如果是true，就执行语句体1，if语句结束。\n\t* 如果是false，接着计算比较表达式2看其返回值是true还是false，\n\t\n\t* 如果是true，就执行语句体2，if语句结束。\n\t* 如果是false，接着计算比较表达式3看其返回值是true还是false，\n\t\n\t* 如果都是false，就执行语句体n+1。\n* C:注意事项:最后一个else可以省略,但是建议不要省略,可以对范围外的错误值提示 \n\n## 03.17 选择结构if语句格式3练习 (掌握)\n\n* A:练习1\n* \n\t\t需求：键盘录入一个成绩，判断并输出成绩的等级。\n\t\t90-100 优\n\t\t80-89  良\n\t\t70-79  中\n\t\t60-69  及\n\t\t0-59   差\n\t\t\n* B:练习2\n\t* 需求：\n\t\t* 键盘录入x的值，计算出y的并输出。\n\t\t\n\t\t* x>=3\ty = 2 * x + 1;\n\t\t* -1<x<3\ty = 2 * x;\n\t\t* x<=-1\ty = 2 * x - 1;\n\n## 03.18 选择结构if语句的嵌套使用 (掌握)\n\n* A:案例演示\n\t* 需求：获取三个数据中的最大值\n\t* if语句的嵌套使用。\n\n## 03.19 选择结构switch语句的格式及其解释 (掌握)\n\n* A:switch语句的格式\n* \n\t\tswitch(表达式) {\n\t\t      case 值1：\n\t\t\t\t语句体1;\n\t\t\t\tbreak;\n\t\t\t    case 值2：\n\t\t\t\t语句体2;\n\t\t\t\tbreak;\n\t\t\t    …\n\t\t\t    default：\t\n\t\t\t\t语句体n+1;\n\t\t\t\tbreak;\n\t    }\n \n* B:switch语句的格式解释\n* C:面试题\n\t* byte可以作为switch的表达式吗?\n\t* long可以作为switch的表达式吗?\n\t* String可以作为switch的表达式吗?\n\n\t>char，byte，short，int以及它们的包装类都可以。JAVA SE 7以后，String 类型也可以。\n\n* C:执行流程\n\t* 先计算表达式的值\n\t* 然后和case后面的匹配，如果有就执行对应的语句，否则执行default控制的语句\n\n## 03.20 选择结构switch语句的练习 (掌握)\n\n* A:整数(给定一个值,输出对应星期几)\n\n## 03.21 选择结构switch语句的注意事项 (掌握)\n\n* A:案例演示\n\t* a:case后面只能是常量，不能是变量，而且，多个case后面的值不能出现相同的\n\t* b:default可以省略吗?\n\t\t* 可以省略，但是不建议，因为它的作用是对不正确的情况给出提示。\n\t\t* 特殊情况：\n\t\t\t* case就可以把值固定。\n\t\t\t* A,B,C,D\n\t* c:break可以省略吗?\n\t\t* 最后一个可以省略,其他最好不要省略\n\t\t* 会出现一个现象：case穿透。\n\t\t* 最终我们建议不要省略\n\t* d:default一定要在最后吗?\n\t\t* 不是，可以在任意位置。但是建议在最后。\n\t* e:switch语句的结束条件\n\t\t* a:遇到break就结束了\n\t\t* b:执行到switch的右大括号就结束了\n\n## 03.22 选择结构switch语句练习 (掌握)\n\n* A:看程序写结果：\n\n```java\n\t\tint x = 2;\n\t\tint y = 3;\n\t\tswitch(x){\n\t\t\tdefault:\n\t\t\t\ty++;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\ty++;\n\t\t\tcase 4:\n\t\t\t\ty++;\n\t\t}\n\t\tSystem.out.println(\"y=\"+y);  // y=4\n```\n\n* B:看程序写结果：\n\n```java\n\t\tint x = 2;\n\t\tint y = 3;\n\t\tswitch(x){\n\t\t\tdefault:\n\t\t\t\ty++;\n\t\t\tcase 3:\n\t\t\t\ty++;\n\t\t\tcase 4:\n\t\t\t\ty++;\n\t\t}\n\t\tSystem.out.println(\"y=\"+y); //y=6\n```\n\n## 03.23 选择结构if语句和switch语句的区别 (掌握)\n\n* A:总结switch语句和if语句的各自使用场景\n* \tswitch建议判断固定值的时候用\n* \tif建议判断区间或范围的时候用\n\n* B:案例演示\n\t* 分别用switch语句和if语句实现下列需求：\n\t\t* 键盘录入月份，输出对应的季节\n\n## 03.24_day03总结\n\n把今天的知识点总结一遍。","source":"_posts/Java学习笔记（day03）.md","raw":"---\ntitle: Java学习笔记（day03）\ncopyright: true\nabbrlink: a2c12ad6\nnotshow: true\ntags:\n  - Java\ncategories: Java\ndate: 2018-09-15 18:11:00\npassword:\ndescription:\nimage:\nphotos:\nsticky:\n---\n\n## 03.01 逻辑运算符的基本用法(掌握)\n\n* A:逻辑运算符有哪些\n\t* &,|,^,!\n\t* &&,|| \n* B:案例演示\n* 逻辑运算符的基本用法\n\t\n* 注意事项：\n\t* a:逻辑运算符一般用于连接boolean类型的表达式或者值。\n\t* b:表达式：就是用运算符把常量或者变量连接起来的符合java语法的式子。\n\t\t* 算术表达式：a + b\n\t\t* 比较表达式：a == b(条件表达式)\n* C:结论：\n* &逻辑与:有false则false。\n* |逻辑或:有true则true。\n* ^逻辑异或:相同为false，不同为true。\n* !逻辑非:非false则true，非true则false。\n\t* 特点：偶数个不改变本身。\n\n## 03.02 逻辑运算符&&和&的区别(掌握)\n\n* A:案例演示\n\t* &&和&的区别?\n\t\t* a:最终结果一样。\n\t\t* b:&&具有短路效果。左边是false，右边不执行。\n\t\t* \t&是无论左边是false还是true,右边都会执行\n* B:同理||和|的区别?(学生自学)\n* C:开发中常用谁?\n\t* &&,||,!\n\n## 03.03 位运算符的基本用法1(了解)\n\n* A:位运算符有哪些\n\t* &,|,^,~ ,>>,>>>,<<\n* B:案例演示\n\t* 位运算符的基本用法1\n\t\n\t* &,|,^,~ 的用法\n\t* &:有0则0\n\t* |:有1则1\n\t* ^:相同则0，不同则1\n\t* ~:按位取反\n\n## 03.04 位异或运算符的特点及面试题 (掌握)\n\n* A:案例演示\n\t* 位异或运算符的特点\n\n\t* ^的特点：一个数据对另一个数据位异或两次，该数本身不变。\n\t\n* B:面试题：\n\t* 请自己实现两个整数变量的交换\n\t* 注意：以后讲课的过程中，我没有明确指定数据的类型，默认int类型。\n\n## 03.05 位运算符的基本用法2及面试题 (了解)\n\n* A:案例演示 >>,>>>,<<的用法:\n\t*  <<:左移\t左边最高位丢弃，右边补齐0\n\t*  >>:右移\t最高位是0，左边补齐0;最高为是1，左边补齐1\n\t*  >>>:无符号右移 无论最高位是0还是1，左边补齐0\n\t*  最有效率的算出2 * 8的结果\n\n## 03.06 三元运算符的基本用法 (掌握)\n\n* A:三元运算符的格式\n* \t\t(关系表达式) ? 表达式1 : 表达式2;\n* B:三元运算符的执行流程 \n* C:案例演示\n\t* 获取两个数中的最大值\n\n## 03.07 三元运算符的练习 (掌握)\n\n* A:案例演示\n\t* 比较两个整数是否相同\n* B:案例演示\n\t* 获取三个整数中的最大值\n\n## 03.08 键盘录入的基本格式讲解 (掌握)\n\n* A:为什么要使用键盘录入数据\n\t* a:为了让程序的数据更符合开发的数据\n\t* b:让程序更灵活一下\n* B:如何实现键盘录入呢?\n\t* 先照格式来。\n\t* a:导包\n\t\t* 格式：\n\t\t\t* import java.util.Scanner; \n\t\t* 位置：\n\t\t\t* 在class上面。\n\t* b:创建键盘录入对象\n\t\t* 格式：\n\t\t\t* Scanner sc = new Scanner(System.in);\n\t* c:通过对象获取数据\t\n\t\t* 格式：\n\t\t\t* int x = sc.nextInt();\n* C:案例演示\n\t* 键盘录入1个整数，并输出到控制台。\n\t* 键盘录入2个整数，并输出到控制台。\n\n## 03.09 键盘录入的练习1 (掌握)\n\n* A:案例演示\n\t* 键盘录入练习：键盘录入两个数据，并对这两个数据求和，输出其结果\n* B:案例演示\n\t* 键盘录入练习：键盘录入两个数据，获取这两个数据中的最大值\n\n## 03.10 键盘录入的练习2 (掌握)\n\n* A:案例演示\n\t* 键盘录入练习：键盘录入两个数据，比较这两个数据是否相等\n* B:案例演示\n\t* 键盘录入练习：键盘录入三个数据，获取这三个数据中的最大值\n\n## 03.11 顺序结构语句 (了解)\n\n* A:什么是流程控制语句\n\t* 流程控制语句：可以控制程序的执行流程。\n* B:流程控制语句的分类\n\t* 顺序结构\n\t* 选择结构\n\t* 循环结构\n* C:执行流程：\n\t* 从上往下，依次执行。\n* D:案例演示\n\t* 输出几句话看效果即可\n\n## 03.12 选择结构if语句格式1及其使用 (掌握)\n\n* A:选择结构的分类\n\t* if语句\n\t* switch语句\n* B:if语句有几种格式\n\t* 格式1\n\t* 格式2\n\t* 格式3\n* C:if语句的格式1\n* \n\t\tif(比较表达式) {\n\t\t\t语句体;\n\t\t}\n* D:执行流程：\n\t* 先计算比较表达式的值，看其返回值是true还是false。\n\t* 如果是true，就执行语句体；\n\t* 如果是false，就不执行语句体；\n\n## 03.13 选择结构if语句注意事项 (掌握)\n\n* A:案例演示\n\t* a:比较表达式无论简单还是复杂，结果必须是boolean类型\n\t* b:if语句控制的语句体如果是一条语句，大括号可以省略；\n\t  * 如果是多条语句，就不能省略。建议永远不要省略。\n\t* c:一般来说：有左大括号就没有分号，有分号就没有左大括号\n\n## 03.14 选择结构if语句格式2及其使用 (掌握)\n\n* A:if语句的格式2\n* \n\t\tif(比较表达式) {\n\t\t\t语句体1;\n\t\t}else {\n\t\t\t语句体2;\n\t\t}\n* B:执行流程：\n\t* 首先计算比较表达式的值，看其返回值是true还是false。\n\t* 如果是true，就执行语句体1；\n\t* 如果是false，就执行语句体2；\n* C:案例演示\n\t* a:获取两个数据中较大的值\n\t* b:判断一个数据是奇数还是偶数,并输出是奇数还是偶数\n\n\t* 注意事项：else后面是没有比较表达式的，只有if后面有。\n\n## 03.15if语句的格式2和三元的相互转换问题 (掌握)\n\n* A:案例演示\n\t* if语句和三元运算符完成同一个效果\n* B:案例演示\n\t* if语句和三元运算符的区别\n\t\n\t* 三元运算符实现的，都可以采用if语句实现。反之不成立。\n\t\n\t* 什么时候if语句实现不能用三元改进呢?\n\t\t* 当if语句控制的操作是一个输出语句的时候就不能。\n\t\t* 为什么呢?因为三元运算符是一个运算符，运算符操作完毕就应该有一个结果，而不是一个输出。\n\n## 03.16 选择结构if语句格式3及其使用 (掌握)\n\n* A:if语句的格式3：\n* \n\t\tif(比较表达式1) {\n\t\t\t语句体1;\n\t\t}else if(比较表达式2) {\n\t\t\t语句体2;\n\t\t}else if(比较表达式3) {\n\t\t\t语句体3;\n\t\t}\n\t\t...\n\t\telse {\n\t\t\t语句体n+1;\n\t\t}\n* B:执行流程：\n\t* 首先计算比较表达式1看其返回值是true还是false，\n\t* 如果是true，就执行语句体1，if语句结束。\n\t* 如果是false，接着计算比较表达式2看其返回值是true还是false，\n\t\n\t* 如果是true，就执行语句体2，if语句结束。\n\t* 如果是false，接着计算比较表达式3看其返回值是true还是false，\n\t\n\t* 如果都是false，就执行语句体n+1。\n* C:注意事项:最后一个else可以省略,但是建议不要省略,可以对范围外的错误值提示 \n\n## 03.17 选择结构if语句格式3练习 (掌握)\n\n* A:练习1\n* \n\t\t需求：键盘录入一个成绩，判断并输出成绩的等级。\n\t\t90-100 优\n\t\t80-89  良\n\t\t70-79  中\n\t\t60-69  及\n\t\t0-59   差\n\t\t\n* B:练习2\n\t* 需求：\n\t\t* 键盘录入x的值，计算出y的并输出。\n\t\t\n\t\t* x>=3\ty = 2 * x + 1;\n\t\t* -1<x<3\ty = 2 * x;\n\t\t* x<=-1\ty = 2 * x - 1;\n\n## 03.18 选择结构if语句的嵌套使用 (掌握)\n\n* A:案例演示\n\t* 需求：获取三个数据中的最大值\n\t* if语句的嵌套使用。\n\n## 03.19 选择结构switch语句的格式及其解释 (掌握)\n\n* A:switch语句的格式\n* \n\t\tswitch(表达式) {\n\t\t      case 值1：\n\t\t\t\t语句体1;\n\t\t\t\tbreak;\n\t\t\t    case 值2：\n\t\t\t\t语句体2;\n\t\t\t\tbreak;\n\t\t\t    …\n\t\t\t    default：\t\n\t\t\t\t语句体n+1;\n\t\t\t\tbreak;\n\t    }\n \n* B:switch语句的格式解释\n* C:面试题\n\t* byte可以作为switch的表达式吗?\n\t* long可以作为switch的表达式吗?\n\t* String可以作为switch的表达式吗?\n\n\t>char，byte，short，int以及它们的包装类都可以。JAVA SE 7以后，String 类型也可以。\n\n* C:执行流程\n\t* 先计算表达式的值\n\t* 然后和case后面的匹配，如果有就执行对应的语句，否则执行default控制的语句\n\n## 03.20 选择结构switch语句的练习 (掌握)\n\n* A:整数(给定一个值,输出对应星期几)\n\n## 03.21 选择结构switch语句的注意事项 (掌握)\n\n* A:案例演示\n\t* a:case后面只能是常量，不能是变量，而且，多个case后面的值不能出现相同的\n\t* b:default可以省略吗?\n\t\t* 可以省略，但是不建议，因为它的作用是对不正确的情况给出提示。\n\t\t* 特殊情况：\n\t\t\t* case就可以把值固定。\n\t\t\t* A,B,C,D\n\t* c:break可以省略吗?\n\t\t* 最后一个可以省略,其他最好不要省略\n\t\t* 会出现一个现象：case穿透。\n\t\t* 最终我们建议不要省略\n\t* d:default一定要在最后吗?\n\t\t* 不是，可以在任意位置。但是建议在最后。\n\t* e:switch语句的结束条件\n\t\t* a:遇到break就结束了\n\t\t* b:执行到switch的右大括号就结束了\n\n## 03.22 选择结构switch语句练习 (掌握)\n\n* A:看程序写结果：\n\n```java\n\t\tint x = 2;\n\t\tint y = 3;\n\t\tswitch(x){\n\t\t\tdefault:\n\t\t\t\ty++;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\ty++;\n\t\t\tcase 4:\n\t\t\t\ty++;\n\t\t}\n\t\tSystem.out.println(\"y=\"+y);  // y=4\n```\n\n* B:看程序写结果：\n\n```java\n\t\tint x = 2;\n\t\tint y = 3;\n\t\tswitch(x){\n\t\t\tdefault:\n\t\t\t\ty++;\n\t\t\tcase 3:\n\t\t\t\ty++;\n\t\t\tcase 4:\n\t\t\t\ty++;\n\t\t}\n\t\tSystem.out.println(\"y=\"+y); //y=6\n```\n\n## 03.23 选择结构if语句和switch语句的区别 (掌握)\n\n* A:总结switch语句和if语句的各自使用场景\n* \tswitch建议判断固定值的时候用\n* \tif建议判断区间或范围的时候用\n\n* B:案例演示\n\t* 分别用switch语句和if语句实现下列需求：\n\t\t* 键盘录入月份，输出对应的季节\n\n## 03.24_day03总结\n\n把今天的知识点总结一遍。","slug":"Java学习笔记（day03）","published":1,"updated":"2020-02-20T06:06:59.379Z","comments":1,"layout":"post","link":"","_id":"ckec2td28000afkuptovvpo7c","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"03-01-逻辑运算符的基本用法-掌握\"><a class=\"header-anchor\" href=\"#03-01-逻辑运算符的基本用法-掌握\">☆</a>03.01 逻辑运算符的基本用法(掌握)</h2>\n<ul>\n<li>\n<p>A:逻辑运算符有哪些</p>\n<ul>\n<li>&amp;,|,^,!</li>\n<li>&amp;&amp;,||</li>\n</ul>\n</li>\n<li>\n<p>B:案例演示</p>\n</li>\n<li>\n<p>逻辑运算符的基本用法</p>\n</li>\n<li>\n<p>注意事项：</p>\n<ul>\n<li>a:逻辑运算符一般用于连接boolean类型的表达式或者值。</li>\n<li>b:表达式：就是用运算符把常量或者变量连接起来的符合java语法的式子。\n<ul>\n<li>算术表达式：a + b</li>\n<li>比较表达式：a == b(条件表达式)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>C:结论：</p>\n</li>\n<li>\n<p>&amp;逻辑与:有false则false。</p>\n</li>\n<li>\n<p>|逻辑或:有true则true。</p>\n</li>\n<li>\n<p>^逻辑异或:相同为false，不同为true。</p>\n</li>\n<li>\n<p>!逻辑非:非false则true，非true则false。</p>\n<ul>\n<li>特点：偶数个不改变本身。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-02-逻辑运算符-和-的区别-掌握\"><a class=\"header-anchor\" href=\"#03-02-逻辑运算符-和-的区别-掌握\">☆</a>03.02 逻辑运算符&amp;&amp;和&amp;的区别(掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>&amp;&amp;和&amp;的区别?\n<ul>\n<li>a:最终结果一样。</li>\n<li>b:&amp;&amp;具有短路效果。左边是false，右边不执行。</li>\n<li>&amp;是无论左边是false还是true,右边都会执行</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:同理||和|的区别?(学生自学)</li>\n<li>C:开发中常用谁?\n<ul>\n<li>&amp;&amp;,||,!</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-03-位运算符的基本用法1-了解\"><a class=\"header-anchor\" href=\"#03-03-位运算符的基本用法1-了解\">☆</a>03.03 位运算符的基本用法1(了解)</h2>\n<ul>\n<li>A:位运算符有哪些\n<ul>\n<li>&amp;,|,^,~ ,&gt;&gt;,&gt;&gt;&gt;,&lt;&lt;</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>\n<p>位运算符的基本用法1</p>\n</li>\n<li>\n<p>&amp;,|,^,~ 的用法</p>\n</li>\n<li>\n<p>&amp;:有0则0</p>\n</li>\n<li>\n<p>|:有1则1</p>\n</li>\n<li>\n<p>^:相同则0，不同则1</p>\n</li>\n<li>\n<p>~:按位取反</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-04-位异或运算符的特点及面试题-掌握\"><a class=\"header-anchor\" href=\"#03-04-位异或运算符的特点及面试题-掌握\">☆</a>03.04 位异或运算符的特点及面试题 (掌握)</h2>\n<ul>\n<li>\n<p>A:案例演示</p>\n<ul>\n<li>\n<p>位异或运算符的特点</p>\n</li>\n<li>\n<p>^的特点：一个数据对另一个数据位异或两次，该数本身不变。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>B:面试题：</p>\n<ul>\n<li>请自己实现两个整数变量的交换</li>\n<li>注意：以后讲课的过程中，我没有明确指定数据的类型，默认int类型。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-05-位运算符的基本用法2及面试题-了解\"><a class=\"header-anchor\" href=\"#03-05-位运算符的基本用法2及面试题-了解\">☆</a>03.05 位运算符的基本用法2及面试题 (了解)</h2>\n<ul>\n<li>A:案例演示 &gt;&gt;,&gt;&gt;&gt;,&lt;&lt;的用法:\n<ul>\n<li>&lt;&lt;:左移\t左边最高位丢弃，右边补齐0</li>\n<li>\n<blockquote>\n<blockquote>\n<p>:右移\t最高位是0，左边补齐0;最高为是1，左边补齐1<br>\n\t*  &gt;&gt;&gt;:无符号右移 无论最高位是0还是1，左边补齐0<br>\n\t*  最有效率的算出2 * 8的结果</p>\n</blockquote>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-06-三元运算符的基本用法-掌握\"><a class=\"header-anchor\" href=\"#03-06-三元运算符的基本用法-掌握\">☆</a>03.06 三元运算符的基本用法 (掌握)</h2>\n<ul>\n<li>A:三元运算符的格式</li>\n<li>\n<pre><code>(关系表达式) ? 表达式1 : 表达式2;\n</code></pre>\n</li>\n<li>B:三元运算符的执行流程</li>\n<li>C:案例演示\n<ul>\n<li>获取两个数中的最大值</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-07-三元运算符的练习-掌握\"><a class=\"header-anchor\" href=\"#03-07-三元运算符的练习-掌握\">☆</a>03.07 三元运算符的练习 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>比较两个整数是否相同</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>获取三个整数中的最大值</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-08-键盘录入的基本格式讲解-掌握\"><a class=\"header-anchor\" href=\"#03-08-键盘录入的基本格式讲解-掌握\">☆</a>03.08 键盘录入的基本格式讲解 (掌握)</h2>\n<ul>\n<li>A:为什么要使用键盘录入数据\n<ul>\n<li>a:为了让程序的数据更符合开发的数据</li>\n<li>b:让程序更灵活一下</li>\n</ul>\n</li>\n<li>B:如何实现键盘录入呢?\n<ul>\n<li>先照格式来。</li>\n<li>a:导包\n<ul>\n<li>格式：\n<ul>\n<li>import java.util.Scanner;</li>\n</ul>\n</li>\n<li>位置：\n<ul>\n<li>在class上面。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>b:创建键盘录入对象\n<ul>\n<li>格式：\n<ul>\n<li>Scanner sc = new Scanner(<a href=\"http://System.in\" target=\"_blank\" rel=\"noopener\">System.in</a>);</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>c:通过对象获取数据\n<ul>\n<li>格式：\n<ul>\n<li>int x = sc.nextInt();</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>键盘录入1个整数，并输出到控制台。</li>\n<li>键盘录入2个整数，并输出到控制台。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-09-键盘录入的练习1-掌握\"><a class=\"header-anchor\" href=\"#03-09-键盘录入的练习1-掌握\">☆</a>03.09 键盘录入的练习1 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>键盘录入练习：键盘录入两个数据，并对这两个数据求和，输出其结果</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>键盘录入练习：键盘录入两个数据，获取这两个数据中的最大值</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-10-键盘录入的练习2-掌握\"><a class=\"header-anchor\" href=\"#03-10-键盘录入的练习2-掌握\">☆</a>03.10 键盘录入的练习2 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>键盘录入练习：键盘录入两个数据，比较这两个数据是否相等</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>键盘录入练习：键盘录入三个数据，获取这三个数据中的最大值</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-11-顺序结构语句-了解\"><a class=\"header-anchor\" href=\"#03-11-顺序结构语句-了解\">☆</a>03.11 顺序结构语句 (了解)</h2>\n<ul>\n<li>A:什么是流程控制语句\n<ul>\n<li>流程控制语句：可以控制程序的执行流程。</li>\n</ul>\n</li>\n<li>B:流程控制语句的分类\n<ul>\n<li>顺序结构</li>\n<li>选择结构</li>\n<li>循环结构</li>\n</ul>\n</li>\n<li>C:执行流程：\n<ul>\n<li>从上往下，依次执行。</li>\n</ul>\n</li>\n<li>D:案例演示\n<ul>\n<li>输出几句话看效果即可</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-12-选择结构if语句格式1及其使用-掌握\"><a class=\"header-anchor\" href=\"#03-12-选择结构if语句格式1及其使用-掌握\">☆</a>03.12 选择结构if语句格式1及其使用 (掌握)</h2>\n<ul>\n<li>A:选择结构的分类\n<ul>\n<li>if语句</li>\n<li>switch语句</li>\n</ul>\n</li>\n<li>B:if语句有几种格式\n<ul>\n<li>格式1</li>\n<li>格式2</li>\n<li>格式3</li>\n</ul>\n</li>\n<li>C:if语句的格式1</li>\n<li>\n<pre><code>if(比较表达式) {\n\t语句体;\n}\n</code></pre>\n</li>\n<li>D:执行流程：\n<ul>\n<li>先计算比较表达式的值，看其返回值是true还是false。</li>\n<li>如果是true，就执行语句体；</li>\n<li>如果是false，就不执行语句体；</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-13-选择结构if语句注意事项-掌握\"><a class=\"header-anchor\" href=\"#03-13-选择结构if语句注意事项-掌握\">☆</a>03.13 选择结构if语句注意事项 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>a:比较表达式无论简单还是复杂，结果必须是boolean类型</li>\n<li>b:if语句控制的语句体如果是一条语句，大括号可以省略；\n<ul>\n<li>如果是多条语句，就不能省略。建议永远不要省略。</li>\n</ul>\n</li>\n<li>c:一般来说：有左大括号就没有分号，有分号就没有左大括号</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-14-选择结构if语句格式2及其使用-掌握\"><a class=\"header-anchor\" href=\"#03-14-选择结构if语句格式2及其使用-掌握\">☆</a>03.14 选择结构if语句格式2及其使用 (掌握)</h2>\n<ul>\n<li>A:if语句的格式2</li>\n<li>\n<pre><code>if(比较表达式) {\n\t语句体1;\n}else {\n\t语句体2;\n}\n</code></pre>\n</li>\n<li>B:执行流程：\n<ul>\n<li>首先计算比较表达式的值，看其返回值是true还是false。</li>\n<li>如果是true，就执行语句体1；</li>\n<li>如果是false，就执行语句体2；</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>\n<p>a:获取两个数据中较大的值</p>\n</li>\n<li>\n<p>b:判断一个数据是奇数还是偶数,并输出是奇数还是偶数</p>\n</li>\n<li>\n<p>注意事项：else后面是没有比较表达式的，只有if后面有。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-15if语句的格式2和三元的相互转换问题-掌握\"><a class=\"header-anchor\" href=\"#03-15if语句的格式2和三元的相互转换问题-掌握\">☆</a>03.15if语句的格式2和三元的相互转换问题 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>if语句和三元运算符完成同一个效果</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>\n<p>if语句和三元运算符的区别</p>\n</li>\n<li>\n<p>三元运算符实现的，都可以采用if语句实现。反之不成立。</p>\n</li>\n<li>\n<p>什么时候if语句实现不能用三元改进呢?</p>\n<ul>\n<li>当if语句控制的操作是一个输出语句的时候就不能。</li>\n<li>为什么呢?因为三元运算符是一个运算符，运算符操作完毕就应该有一个结果，而不是一个输出。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-16-选择结构if语句格式3及其使用-掌握\"><a class=\"header-anchor\" href=\"#03-16-选择结构if语句格式3及其使用-掌握\">☆</a>03.16 选择结构if语句格式3及其使用 (掌握)</h2>\n<ul>\n<li>A:if语句的格式3：</li>\n<li>\n<pre><code>if(比较表达式1) {\n\t语句体1;\n}else if(比较表达式2) {\n\t语句体2;\n}else if(比较表达式3) {\n\t语句体3;\n}\n...\nelse {\n\t语句体n+1;\n}\n</code></pre>\n</li>\n<li>B:执行流程：\n<ul>\n<li>\n<p>首先计算比较表达式1看其返回值是true还是false，</p>\n</li>\n<li>\n<p>如果是true，就执行语句体1，if语句结束。</p>\n</li>\n<li>\n<p>如果是false，接着计算比较表达式2看其返回值是true还是false，</p>\n</li>\n<li>\n<p>如果是true，就执行语句体2，if语句结束。</p>\n</li>\n<li>\n<p>如果是false，接着计算比较表达式3看其返回值是true还是false，</p>\n</li>\n<li>\n<p>如果都是false，就执行语句体n+1。</p>\n</li>\n</ul>\n</li>\n<li>C:注意事项:最后一个else可以省略,但是建议不要省略,可以对范围外的错误值提示</li>\n</ul>\n<h2 id=\"03-17-选择结构if语句格式3练习-掌握\"><a class=\"header-anchor\" href=\"#03-17-选择结构if语句格式3练习-掌握\">☆</a>03.17 选择结构if语句格式3练习 (掌握)</h2>\n<ul>\n<li>\n<p>A:练习1</p>\n</li>\n<li>\n<pre><code>需求：键盘录入一个成绩，判断并输出成绩的等级。\n90-100 优\n80-89  良\n70-79  中\n60-69  及\n0-59   差\n</code></pre>\n</li>\n<li>\n<p>B:练习2</p>\n<ul>\n<li>需求：\n<ul>\n<li>\n<p>键盘录入x的值，计算出y的并输出。</p>\n</li>\n<li>\n<p>x&gt;=3\ty = 2 * x + 1;</p>\n</li>\n<li>\n<p>-1&lt;x&lt;3\ty = 2 * x;</p>\n</li>\n<li>\n<p>x&lt;=-1\ty = 2 * x - 1;</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-18-选择结构if语句的嵌套使用-掌握\"><a class=\"header-anchor\" href=\"#03-18-选择结构if语句的嵌套使用-掌握\">☆</a>03.18 选择结构if语句的嵌套使用 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：获取三个数据中的最大值</li>\n<li>if语句的嵌套使用。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-19-选择结构switch语句的格式及其解释-掌握\"><a class=\"header-anchor\" href=\"#03-19-选择结构switch语句的格式及其解释-掌握\">☆</a>03.19 选择结构switch语句的格式及其解释 (掌握)</h2>\n<ul>\n<li>\n<p>A:switch语句的格式</p>\n</li>\n<li>\n<pre><code>switch(表达式) {\n      case 值1：\n\t\t语句体1;\n\t\tbreak;\n\t    case 值2：\n\t\t语句体2;\n\t\tbreak;\n\t    …\n\t    default：\t\n\t\t语句体n+1;\n\t\tbreak;\n  }\n</code></pre>\n</li>\n<li>\n<p>B:switch语句的格式解释</p>\n</li>\n<li>\n<p>C:面试题</p>\n<ul>\n<li>byte可以作为switch的表达式吗?</li>\n<li>long可以作为switch的表达式吗?</li>\n<li>String可以作为switch的表达式吗?</li>\n</ul>\n<blockquote>\n<p>char，byte，short，int以及它们的包装类都可以。JAVA SE 7以后，String 类型也可以。</p>\n</blockquote>\n</li>\n<li>\n<p>C:执行流程</p>\n<ul>\n<li>先计算表达式的值</li>\n<li>然后和case后面的匹配，如果有就执行对应的语句，否则执行default控制的语句</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-20-选择结构switch语句的练习-掌握\"><a class=\"header-anchor\" href=\"#03-20-选择结构switch语句的练习-掌握\">☆</a>03.20 选择结构switch语句的练习 (掌握)</h2>\n<ul>\n<li>A:整数(给定一个值,输出对应星期几)</li>\n</ul>\n<h2 id=\"03-21-选择结构switch语句的注意事项-掌握\"><a class=\"header-anchor\" href=\"#03-21-选择结构switch语句的注意事项-掌握\">☆</a>03.21 选择结构switch语句的注意事项 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>a:case后面只能是常量，不能是变量，而且，多个case后面的值不能出现相同的</li>\n<li>b:default可以省略吗?\n<ul>\n<li>可以省略，但是不建议，因为它的作用是对不正确的情况给出提示。</li>\n<li>特殊情况：\n<ul>\n<li>case就可以把值固定。</li>\n<li>A,B,C,D</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>c:break可以省略吗?\n<ul>\n<li>最后一个可以省略,其他最好不要省略</li>\n<li>会出现一个现象：case穿透。</li>\n<li>最终我们建议不要省略</li>\n</ul>\n</li>\n<li>d:default一定要在最后吗?\n<ul>\n<li>不是，可以在任意位置。但是建议在最后。</li>\n</ul>\n</li>\n<li>e:switch语句的结束条件\n<ul>\n<li>a:遇到break就结束了</li>\n<li>b:执行到switch的右大括号就结束了</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-22-选择结构switch语句练习-掌握\"><a class=\"header-anchor\" href=\"#03-22-选择结构switch语句练习-掌握\">☆</a>03.22 选择结构switch语句练习 (掌握)</h2>\n<ul>\n<li>A:看程序写结果：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> x = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> y = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">switch</span>(x)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\ty++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">\t\ty++;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">\t\ty++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"y=\"</span>+y);  <span class=\"comment\">// y=4</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>B:看程序写结果：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> x = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> y = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">switch</span>(x)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\ty++;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">\t\ty++;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">\t\ty++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"y=\"</span>+y); <span class=\"comment\">//y=6</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"03-23-选择结构if语句和switch语句的区别-掌握\"><a class=\"header-anchor\" href=\"#03-23-选择结构if语句和switch语句的区别-掌握\">☆</a>03.23 选择结构if语句和switch语句的区别 (掌握)</h2>\n<ul>\n<li>\n<p>A:总结switch语句和if语句的各自使用场景</p>\n</li>\n<li>\n<p>switch建议判断固定值的时候用</p>\n</li>\n<li>\n<p>if建议判断区间或范围的时候用</p>\n</li>\n<li>\n<p>B:案例演示</p>\n<ul>\n<li>分别用switch语句和if语句实现下列需求：\n<ul>\n<li>键盘录入月份，输出对应的季节</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-24-day03总结\"><a class=\"header-anchor\" href=\"#03-24-day03总结\">☆</a>03.24_day03总结</h2>\n<p>把今天的知识点总结一遍。</p>\n","site":{"data":{}},"length":3983,"excerpt":"","more":"<h2 id=\"03-01-逻辑运算符的基本用法-掌握\"><a class=\"header-anchor\" href=\"#03-01-逻辑运算符的基本用法-掌握\">☆</a>03.01 逻辑运算符的基本用法(掌握)</h2>\n<ul>\n<li>\n<p>A:逻辑运算符有哪些</p>\n<ul>\n<li>&amp;,|,^,!</li>\n<li>&amp;&amp;,||</li>\n</ul>\n</li>\n<li>\n<p>B:案例演示</p>\n</li>\n<li>\n<p>逻辑运算符的基本用法</p>\n</li>\n<li>\n<p>注意事项：</p>\n<ul>\n<li>a:逻辑运算符一般用于连接boolean类型的表达式或者值。</li>\n<li>b:表达式：就是用运算符把常量或者变量连接起来的符合java语法的式子。\n<ul>\n<li>算术表达式：a + b</li>\n<li>比较表达式：a == b(条件表达式)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>C:结论：</p>\n</li>\n<li>\n<p>&amp;逻辑与:有false则false。</p>\n</li>\n<li>\n<p>|逻辑或:有true则true。</p>\n</li>\n<li>\n<p>^逻辑异或:相同为false，不同为true。</p>\n</li>\n<li>\n<p>!逻辑非:非false则true，非true则false。</p>\n<ul>\n<li>特点：偶数个不改变本身。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-02-逻辑运算符-和-的区别-掌握\"><a class=\"header-anchor\" href=\"#03-02-逻辑运算符-和-的区别-掌握\">☆</a>03.02 逻辑运算符&amp;&amp;和&amp;的区别(掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>&amp;&amp;和&amp;的区别?\n<ul>\n<li>a:最终结果一样。</li>\n<li>b:&amp;&amp;具有短路效果。左边是false，右边不执行。</li>\n<li>&amp;是无论左边是false还是true,右边都会执行</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:同理||和|的区别?(学生自学)</li>\n<li>C:开发中常用谁?\n<ul>\n<li>&amp;&amp;,||,!</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-03-位运算符的基本用法1-了解\"><a class=\"header-anchor\" href=\"#03-03-位运算符的基本用法1-了解\">☆</a>03.03 位运算符的基本用法1(了解)</h2>\n<ul>\n<li>A:位运算符有哪些\n<ul>\n<li>&amp;,|,^,~ ,&gt;&gt;,&gt;&gt;&gt;,&lt;&lt;</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>\n<p>位运算符的基本用法1</p>\n</li>\n<li>\n<p>&amp;,|,^,~ 的用法</p>\n</li>\n<li>\n<p>&amp;:有0则0</p>\n</li>\n<li>\n<p>|:有1则1</p>\n</li>\n<li>\n<p>^:相同则0，不同则1</p>\n</li>\n<li>\n<p>~:按位取反</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-04-位异或运算符的特点及面试题-掌握\"><a class=\"header-anchor\" href=\"#03-04-位异或运算符的特点及面试题-掌握\">☆</a>03.04 位异或运算符的特点及面试题 (掌握)</h2>\n<ul>\n<li>\n<p>A:案例演示</p>\n<ul>\n<li>\n<p>位异或运算符的特点</p>\n</li>\n<li>\n<p>^的特点：一个数据对另一个数据位异或两次，该数本身不变。</p>\n</li>\n</ul>\n</li>\n<li>\n<p>B:面试题：</p>\n<ul>\n<li>请自己实现两个整数变量的交换</li>\n<li>注意：以后讲课的过程中，我没有明确指定数据的类型，默认int类型。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-05-位运算符的基本用法2及面试题-了解\"><a class=\"header-anchor\" href=\"#03-05-位运算符的基本用法2及面试题-了解\">☆</a>03.05 位运算符的基本用法2及面试题 (了解)</h2>\n<ul>\n<li>A:案例演示 &gt;&gt;,&gt;&gt;&gt;,&lt;&lt;的用法:\n<ul>\n<li>&lt;&lt;:左移\t左边最高位丢弃，右边补齐0</li>\n<li>\n<blockquote>\n<blockquote>\n<p>:右移\t最高位是0，左边补齐0;最高为是1，左边补齐1<br>\n\t*  &gt;&gt;&gt;:无符号右移 无论最高位是0还是1，左边补齐0<br>\n\t*  最有效率的算出2 * 8的结果</p>\n</blockquote>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-06-三元运算符的基本用法-掌握\"><a class=\"header-anchor\" href=\"#03-06-三元运算符的基本用法-掌握\">☆</a>03.06 三元运算符的基本用法 (掌握)</h2>\n<ul>\n<li>A:三元运算符的格式</li>\n<li>\n<pre><code>(关系表达式) ? 表达式1 : 表达式2;\n</code></pre>\n</li>\n<li>B:三元运算符的执行流程</li>\n<li>C:案例演示\n<ul>\n<li>获取两个数中的最大值</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-07-三元运算符的练习-掌握\"><a class=\"header-anchor\" href=\"#03-07-三元运算符的练习-掌握\">☆</a>03.07 三元运算符的练习 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>比较两个整数是否相同</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>获取三个整数中的最大值</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-08-键盘录入的基本格式讲解-掌握\"><a class=\"header-anchor\" href=\"#03-08-键盘录入的基本格式讲解-掌握\">☆</a>03.08 键盘录入的基本格式讲解 (掌握)</h2>\n<ul>\n<li>A:为什么要使用键盘录入数据\n<ul>\n<li>a:为了让程序的数据更符合开发的数据</li>\n<li>b:让程序更灵活一下</li>\n</ul>\n</li>\n<li>B:如何实现键盘录入呢?\n<ul>\n<li>先照格式来。</li>\n<li>a:导包\n<ul>\n<li>格式：\n<ul>\n<li>import java.util.Scanner;</li>\n</ul>\n</li>\n<li>位置：\n<ul>\n<li>在class上面。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>b:创建键盘录入对象\n<ul>\n<li>格式：\n<ul>\n<li>Scanner sc = new Scanner(<a href=\"http://System.in\" target=\"_blank\" rel=\"noopener\">System.in</a>);</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>c:通过对象获取数据\n<ul>\n<li>格式：\n<ul>\n<li>int x = sc.nextInt();</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>键盘录入1个整数，并输出到控制台。</li>\n<li>键盘录入2个整数，并输出到控制台。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-09-键盘录入的练习1-掌握\"><a class=\"header-anchor\" href=\"#03-09-键盘录入的练习1-掌握\">☆</a>03.09 键盘录入的练习1 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>键盘录入练习：键盘录入两个数据，并对这两个数据求和，输出其结果</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>键盘录入练习：键盘录入两个数据，获取这两个数据中的最大值</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-10-键盘录入的练习2-掌握\"><a class=\"header-anchor\" href=\"#03-10-键盘录入的练习2-掌握\">☆</a>03.10 键盘录入的练习2 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>键盘录入练习：键盘录入两个数据，比较这两个数据是否相等</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>键盘录入练习：键盘录入三个数据，获取这三个数据中的最大值</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-11-顺序结构语句-了解\"><a class=\"header-anchor\" href=\"#03-11-顺序结构语句-了解\">☆</a>03.11 顺序结构语句 (了解)</h2>\n<ul>\n<li>A:什么是流程控制语句\n<ul>\n<li>流程控制语句：可以控制程序的执行流程。</li>\n</ul>\n</li>\n<li>B:流程控制语句的分类\n<ul>\n<li>顺序结构</li>\n<li>选择结构</li>\n<li>循环结构</li>\n</ul>\n</li>\n<li>C:执行流程：\n<ul>\n<li>从上往下，依次执行。</li>\n</ul>\n</li>\n<li>D:案例演示\n<ul>\n<li>输出几句话看效果即可</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-12-选择结构if语句格式1及其使用-掌握\"><a class=\"header-anchor\" href=\"#03-12-选择结构if语句格式1及其使用-掌握\">☆</a>03.12 选择结构if语句格式1及其使用 (掌握)</h2>\n<ul>\n<li>A:选择结构的分类\n<ul>\n<li>if语句</li>\n<li>switch语句</li>\n</ul>\n</li>\n<li>B:if语句有几种格式\n<ul>\n<li>格式1</li>\n<li>格式2</li>\n<li>格式3</li>\n</ul>\n</li>\n<li>C:if语句的格式1</li>\n<li>\n<pre><code>if(比较表达式) {\n\t语句体;\n}\n</code></pre>\n</li>\n<li>D:执行流程：\n<ul>\n<li>先计算比较表达式的值，看其返回值是true还是false。</li>\n<li>如果是true，就执行语句体；</li>\n<li>如果是false，就不执行语句体；</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-13-选择结构if语句注意事项-掌握\"><a class=\"header-anchor\" href=\"#03-13-选择结构if语句注意事项-掌握\">☆</a>03.13 选择结构if语句注意事项 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>a:比较表达式无论简单还是复杂，结果必须是boolean类型</li>\n<li>b:if语句控制的语句体如果是一条语句，大括号可以省略；\n<ul>\n<li>如果是多条语句，就不能省略。建议永远不要省略。</li>\n</ul>\n</li>\n<li>c:一般来说：有左大括号就没有分号，有分号就没有左大括号</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-14-选择结构if语句格式2及其使用-掌握\"><a class=\"header-anchor\" href=\"#03-14-选择结构if语句格式2及其使用-掌握\">☆</a>03.14 选择结构if语句格式2及其使用 (掌握)</h2>\n<ul>\n<li>A:if语句的格式2</li>\n<li>\n<pre><code>if(比较表达式) {\n\t语句体1;\n}else {\n\t语句体2;\n}\n</code></pre>\n</li>\n<li>B:执行流程：\n<ul>\n<li>首先计算比较表达式的值，看其返回值是true还是false。</li>\n<li>如果是true，就执行语句体1；</li>\n<li>如果是false，就执行语句体2；</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>\n<p>a:获取两个数据中较大的值</p>\n</li>\n<li>\n<p>b:判断一个数据是奇数还是偶数,并输出是奇数还是偶数</p>\n</li>\n<li>\n<p>注意事项：else后面是没有比较表达式的，只有if后面有。</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-15if语句的格式2和三元的相互转换问题-掌握\"><a class=\"header-anchor\" href=\"#03-15if语句的格式2和三元的相互转换问题-掌握\">☆</a>03.15if语句的格式2和三元的相互转换问题 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>if语句和三元运算符完成同一个效果</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>\n<p>if语句和三元运算符的区别</p>\n</li>\n<li>\n<p>三元运算符实现的，都可以采用if语句实现。反之不成立。</p>\n</li>\n<li>\n<p>什么时候if语句实现不能用三元改进呢?</p>\n<ul>\n<li>当if语句控制的操作是一个输出语句的时候就不能。</li>\n<li>为什么呢?因为三元运算符是一个运算符，运算符操作完毕就应该有一个结果，而不是一个输出。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-16-选择结构if语句格式3及其使用-掌握\"><a class=\"header-anchor\" href=\"#03-16-选择结构if语句格式3及其使用-掌握\">☆</a>03.16 选择结构if语句格式3及其使用 (掌握)</h2>\n<ul>\n<li>A:if语句的格式3：</li>\n<li>\n<pre><code>if(比较表达式1) {\n\t语句体1;\n}else if(比较表达式2) {\n\t语句体2;\n}else if(比较表达式3) {\n\t语句体3;\n}\n...\nelse {\n\t语句体n+1;\n}\n</code></pre>\n</li>\n<li>B:执行流程：\n<ul>\n<li>\n<p>首先计算比较表达式1看其返回值是true还是false，</p>\n</li>\n<li>\n<p>如果是true，就执行语句体1，if语句结束。</p>\n</li>\n<li>\n<p>如果是false，接着计算比较表达式2看其返回值是true还是false，</p>\n</li>\n<li>\n<p>如果是true，就执行语句体2，if语句结束。</p>\n</li>\n<li>\n<p>如果是false，接着计算比较表达式3看其返回值是true还是false，</p>\n</li>\n<li>\n<p>如果都是false，就执行语句体n+1。</p>\n</li>\n</ul>\n</li>\n<li>C:注意事项:最后一个else可以省略,但是建议不要省略,可以对范围外的错误值提示</li>\n</ul>\n<h2 id=\"03-17-选择结构if语句格式3练习-掌握\"><a class=\"header-anchor\" href=\"#03-17-选择结构if语句格式3练习-掌握\">☆</a>03.17 选择结构if语句格式3练习 (掌握)</h2>\n<ul>\n<li>\n<p>A:练习1</p>\n</li>\n<li>\n<pre><code>需求：键盘录入一个成绩，判断并输出成绩的等级。\n90-100 优\n80-89  良\n70-79  中\n60-69  及\n0-59   差\n</code></pre>\n</li>\n<li>\n<p>B:练习2</p>\n<ul>\n<li>需求：\n<ul>\n<li>\n<p>键盘录入x的值，计算出y的并输出。</p>\n</li>\n<li>\n<p>x&gt;=3\ty = 2 * x + 1;</p>\n</li>\n<li>\n<p>-1&lt;x&lt;3\ty = 2 * x;</p>\n</li>\n<li>\n<p>x&lt;=-1\ty = 2 * x - 1;</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-18-选择结构if语句的嵌套使用-掌握\"><a class=\"header-anchor\" href=\"#03-18-选择结构if语句的嵌套使用-掌握\">☆</a>03.18 选择结构if语句的嵌套使用 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：获取三个数据中的最大值</li>\n<li>if语句的嵌套使用。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-19-选择结构switch语句的格式及其解释-掌握\"><a class=\"header-anchor\" href=\"#03-19-选择结构switch语句的格式及其解释-掌握\">☆</a>03.19 选择结构switch语句的格式及其解释 (掌握)</h2>\n<ul>\n<li>\n<p>A:switch语句的格式</p>\n</li>\n<li>\n<pre><code>switch(表达式) {\n      case 值1：\n\t\t语句体1;\n\t\tbreak;\n\t    case 值2：\n\t\t语句体2;\n\t\tbreak;\n\t    …\n\t    default：\t\n\t\t语句体n+1;\n\t\tbreak;\n  }\n</code></pre>\n</li>\n<li>\n<p>B:switch语句的格式解释</p>\n</li>\n<li>\n<p>C:面试题</p>\n<ul>\n<li>byte可以作为switch的表达式吗?</li>\n<li>long可以作为switch的表达式吗?</li>\n<li>String可以作为switch的表达式吗?</li>\n</ul>\n<blockquote>\n<p>char，byte，short，int以及它们的包装类都可以。JAVA SE 7以后，String 类型也可以。</p>\n</blockquote>\n</li>\n<li>\n<p>C:执行流程</p>\n<ul>\n<li>先计算表达式的值</li>\n<li>然后和case后面的匹配，如果有就执行对应的语句，否则执行default控制的语句</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-20-选择结构switch语句的练习-掌握\"><a class=\"header-anchor\" href=\"#03-20-选择结构switch语句的练习-掌握\">☆</a>03.20 选择结构switch语句的练习 (掌握)</h2>\n<ul>\n<li>A:整数(给定一个值,输出对应星期几)</li>\n</ul>\n<h2 id=\"03-21-选择结构switch语句的注意事项-掌握\"><a class=\"header-anchor\" href=\"#03-21-选择结构switch语句的注意事项-掌握\">☆</a>03.21 选择结构switch语句的注意事项 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>a:case后面只能是常量，不能是变量，而且，多个case后面的值不能出现相同的</li>\n<li>b:default可以省略吗?\n<ul>\n<li>可以省略，但是不建议，因为它的作用是对不正确的情况给出提示。</li>\n<li>特殊情况：\n<ul>\n<li>case就可以把值固定。</li>\n<li>A,B,C,D</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>c:break可以省略吗?\n<ul>\n<li>最后一个可以省略,其他最好不要省略</li>\n<li>会出现一个现象：case穿透。</li>\n<li>最终我们建议不要省略</li>\n</ul>\n</li>\n<li>d:default一定要在最后吗?\n<ul>\n<li>不是，可以在任意位置。但是建议在最后。</li>\n</ul>\n</li>\n<li>e:switch语句的结束条件\n<ul>\n<li>a:遇到break就结束了</li>\n<li>b:执行到switch的右大括号就结束了</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-22-选择结构switch语句练习-掌握\"><a class=\"header-anchor\" href=\"#03-22-选择结构switch语句练习-掌握\">☆</a>03.22 选择结构switch语句练习 (掌握)</h2>\n<ul>\n<li>A:看程序写结果：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> x = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> y = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">switch</span>(x)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\ty++;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">\t\ty++;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">\t\ty++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"y=\"</span>+y);  <span class=\"comment\">// y=4</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>B:看程序写结果：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> x = <span class=\"number\">2</span>;</span><br><span class=\"line\"><span class=\"keyword\">int</span> y = <span class=\"number\">3</span>;</span><br><span class=\"line\"><span class=\"keyword\">switch</span>(x)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t\ty++;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">\t\ty++;</span><br><span class=\"line\">\t<span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">\t\ty++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">System.out.println(<span class=\"string\">\"y=\"</span>+y); <span class=\"comment\">//y=6</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"03-23-选择结构if语句和switch语句的区别-掌握\"><a class=\"header-anchor\" href=\"#03-23-选择结构if语句和switch语句的区别-掌握\">☆</a>03.23 选择结构if语句和switch语句的区别 (掌握)</h2>\n<ul>\n<li>\n<p>A:总结switch语句和if语句的各自使用场景</p>\n</li>\n<li>\n<p>switch建议判断固定值的时候用</p>\n</li>\n<li>\n<p>if建议判断区间或范围的时候用</p>\n</li>\n<li>\n<p>B:案例演示</p>\n<ul>\n<li>分别用switch语句和if语句实现下列需求：\n<ul>\n<li>键盘录入月份，输出对应的季节</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"03-24-day03总结\"><a class=\"header-anchor\" href=\"#03-24-day03总结\">☆</a>03.24_day03总结</h2>\n<p>把今天的知识点总结一遍。</p>\n"},{"title":"Java学习笔记（day06）","copyright":true,"abbrlink":"951fdae4","notshow":true,"description":"面向对象","date":"2018-10-08T10:00:00.000Z","password":null,"image":null,"photos":[],"sticky":null,"_content":"## 06.01 面向对象思想概述 (了解)\n\n* A:面向过程思想概述\n\t* 第一步\n\t* 第二步 \n* B:面向对象思想概述\n\t* 找对象(第一步,第二步) \n* C:举例\n\t* 买煎饼果子\n\t* 洗衣服 \n* D:面向对象思想特点\n\t* a:是一种更符合我们思想习惯的思想\n\t* b:可以将复杂的事情简单化\n\t* c:将我们从执行者变成了指挥者\n\t\t* 角色发生了转换\n* E:面向对象开发\n\t* 就是不断的创建对象，使用对象，指挥对象做事情。\n* F:面向对象设计\n\t* 其实就是在管理和维护对象之间的关系。\n* G:面向对象特征\n\t* 封装(encapsulation)\n\t* 继承(inheritance)\n\t* 多态(polymorphism)\n\n## 06.02 类与对象概述 (掌握)\n\n* A:我们学习编程是为了什么\n\t* 为了把我们日常生活中实物用学习语言描述出来\n* B:我们如何描述现实世界事物\n\t* 属性\t就是该事物的描述信息(事物身上的名词)\n\t* 行为\t就是该事物能够做什么(事物身上的动词)\n* C:Java中最基本的单位是类,Java中用class描述事物也是如此\n\t* 成员变量\t就是事物的属性\n\t* 成员方法\t就是事物的行为\n* D:定义类其实就是定义类的成员(成员变量和成员方法)\n\t* a:成员变量\t和以前定义变量是一样的，只不过位置发生了改变。在类中，方法外。\n\t* b:成员方法\t和以前定义方法是一样的，只不过把static去掉，后面在详细讲解static的作用。\n* E:类和对象的概念\n\t* a:类：是一组相关的属性和行为的集合\n\t* b:对象：是该类事物的具体体现\n\t* c:举例：\n\t\t* 类\t 学生\n\t\t* 对象\t具体的某个学生就是一个对象\n\n## 06.03 学生类的定义 (掌握)\n\n* A:学生事物\n* B:学生类\n* C:案例演示\n\t* 属性:姓名,年龄,性别\n\t* 行为:学习,睡觉\n\n## 06.04 手机类的定义 (掌握)\n\n* 模仿学生类，让学生自己完成\n\t* 属性:品牌(brand)价格(price)\n\t* 行为:打电话(call),发信息(sendMessage)玩游戏(playGame)\n\n## 06.05 学生类的使用 (掌握)\n\n* A:文件名问题\n\t* 在一个java文件中写两个类：一个基本的类，一个测试类。\n\t* 建议：文件名称和测试类名称一致。\n* B:如何使用对象?\n\t* 创建对象并使用\n\t* 格式：类名 对象名 = new 类名();\n* D:如何使用成员变量呢?\n\t* 对象名.变量名\n* E:如何使用成员方法呢?\n\t* 对象名.方法名(...)\n\n## 06.06 手机类的使用 (掌握)\n\n* A:学生自己完成\n\t* 模仿学生类，让学生自己完成\n\t\n## 06.07 一个对象的内存图 (掌握)\n\n* A:画图演示\n\t* 一个对象\n\n## 06.08 二个对象的内存图 (了解)\n\n* A:画图演示\n\t* 二个不同的对象\n\n## 06.09 三个引用两个对象的内存图 (了解)\n\n* A:画图演示\n\t* 三个引用，有两个对象的引用指向同一个地址\n\n## 06.10 成员变量和局部变量的区别 (掌握)\n\n* A:在类中的位置不同\n\t* 成员变量：在类中方法外\n\t* 局部变量：在方法定义中或者方法声明上\n* B:在内存中的位置不同\n\t* 成员变量：在堆内存(成员变量属于对象,对象进堆内存)\n\t* 局部变量：在栈内存(局部变量属于方法,方法进栈内存)\n* C:生命周期不同\n\t* 成员变量：随着对象的创建而存在，随着对象的消失而消失\n\t* 局部变量：随着方法的调用而存在，随着方法的调用完毕而消失\n* D:初始化值不同\n\t* 成员变量：有默认初始化值\n\t* 局部变量：没有默认初始化值，必须定义，赋值，然后才能使用。\n\t\n* 注意事项：\n\t* 局部变量名称可以和成员变量名称一样，在方法中使用的时候，采用的是就近原则。\n\t* 基本数据类型变量包括哪些:byte,short,int,long,float,double,boolean,char\n\t* 引用数据类型变量包括哪些:数组,类,接口,枚举\n\t\n## 06.11 方法的形式参数是类名的时候如何调用 (掌握)\n\n* A:方法的参数是类名public void print(Student s){}//print(new Student());\n\t* 如果你看到了一个方法的形式参数是一个类类型(引用类型)，这里其实需要的是该类的对象。\n\n## 06.12 匿名对象的概述和应用 (掌握)\n\n* A:什么是匿名对象\n\t* 没有名字的对象 \n* B:匿名对象应用场景\n\t* a:调用方法，仅仅只调用一次的时候。\n\t\t* 那么，这种匿名调用有什么好处吗?\n\t\t\t* 节省代码 \n\t\t* 注意：调用多次的时候，不适合。匿名对象调用完毕就是垃圾。可以被垃圾回收器回收。\n\t* b:匿名对象可以作为实际参数传递\n* C:案例演示\n\t* 匿名对象应用场景\n\n## 06.13 封装的概述 (掌握)\n\n* A:封装概述\n\t* 是指隐藏对象的属性和实现细节，仅对外提供公共访问方式。\n\n* B:封装好处\n\t* 隐藏实现细节，提供公共的访问方式\n\t* 提高了代码的复用性\n\t* 提高安全性。\n* C:封装原则\n\t* 将不需要对外提供的内容都隐藏起来。\n\t* 把属性隐藏，提供公共方法对其访问。\n\n## 06.14 private关键字的概述和特点 (掌握)\n\n* A:人类赋值年龄的问题\n* B:private关键字特点\n\t* a:是一个权限修饰符\n\t* b:可以修饰成员变量和成员方法\n\t* c:被其修饰的成员只能在本类中被访问\n* C:案例演示\n\t* 封装和private的应用：\n\t* A:把成员变量用private修饰\n\t* B:提供对应的getXxx()和setXxx()方法\n\t* private仅仅是封装的一种体现形式,不能说封装就是私有\n\n## 06.15 this关键字的概述和应用 (掌握)\n\n* A:this关键字特点\n\t* 代表当前对象的引用 \n* B:案例演示\n\t* this的应用场景\n\t* 用来区分成员变量和局部变量重名\n\n## 06.16 手机类代码及其测试 (掌握)\n\n* A:学生练习\n\t* 请把手机类写成一个标准类，然后创建对象测试功能。\n```java\nclass Demo2_Phone {\n\tpublic static void main(String[] args) {\n\t\tPhone p1 = new Phone();\n\t\tp1.setBrand(\"三星\");\n\t\tp1.setPrice(5288);\n\n\t\tSystem.out.println(p1.getBrand() + \"...\" + p1.getPrice());\n\t\tp1.call();\n\t\tp1.sendMessage();\n\t\tp1.playGame();\n\t}\n}\n/*\n手机类\n\t属性:品牌brand,价格price\n\t行为:打电话call,发短信sendMessage,玩游戏,playGame\n*/\nclass Phone {\t\t\t\t\t\t\t\t//java bean\n\tprivate String brand;\t\t\t\t\t//品牌\n\tprivate int price;\t\t\t\t\t\t//价格\n\n\tpublic void setBrand(String brand) {\t//设置品牌\n\t\tthis.brand = brand;\n\t}\n\n\tpublic String getBrand() {\t\t\t\t//获取品牌\n\t\treturn this.brand;\t\t\t\t\t//this.可以省略,你不加系统会默认给你加\n\t}\n\n\tpublic void setPrice(int price) {\t\t//设置价格\n\t\tthis.price = price;\n\t}\n\n\tpublic int getPrice() {\t\t\t\t\t//获取价格\n\t\treturn price;\n\t}\n\n\tpublic void call() {\t\t\t\t\t//打电话\n\t\tSystem.out.println(\"打电话\");\n\t}\n\n\tpublic void sendMessage() {\t\t\t\t//发短信\n\t\tSystem.out.println(\"发短信\");\n\t}\n\n\tpublic void playGame() {\t\t\t\t//玩游戏\n\t\tSystem.out.println(\"玩游戏\");\n\t}\n}\n```\n\n## 06.17_day06总结\n\n* 把今天的知识点总结一遍。","source":"_posts/Java学习笔记（day06）.md","raw":"---\ntitle: Java学习笔记（day06）\ncopyright: true\nabbrlink: 951fdae4\nnotshow: true\ntags:\n  - Java\ncategories: Java\ndescription: 面向对象\ndate: 2018-10-08 18:00:00\npassword:\nimage:\nphotos:\nsticky:\n---\n## 06.01 面向对象思想概述 (了解)\n\n* A:面向过程思想概述\n\t* 第一步\n\t* 第二步 \n* B:面向对象思想概述\n\t* 找对象(第一步,第二步) \n* C:举例\n\t* 买煎饼果子\n\t* 洗衣服 \n* D:面向对象思想特点\n\t* a:是一种更符合我们思想习惯的思想\n\t* b:可以将复杂的事情简单化\n\t* c:将我们从执行者变成了指挥者\n\t\t* 角色发生了转换\n* E:面向对象开发\n\t* 就是不断的创建对象，使用对象，指挥对象做事情。\n* F:面向对象设计\n\t* 其实就是在管理和维护对象之间的关系。\n* G:面向对象特征\n\t* 封装(encapsulation)\n\t* 继承(inheritance)\n\t* 多态(polymorphism)\n\n## 06.02 类与对象概述 (掌握)\n\n* A:我们学习编程是为了什么\n\t* 为了把我们日常生活中实物用学习语言描述出来\n* B:我们如何描述现实世界事物\n\t* 属性\t就是该事物的描述信息(事物身上的名词)\n\t* 行为\t就是该事物能够做什么(事物身上的动词)\n* C:Java中最基本的单位是类,Java中用class描述事物也是如此\n\t* 成员变量\t就是事物的属性\n\t* 成员方法\t就是事物的行为\n* D:定义类其实就是定义类的成员(成员变量和成员方法)\n\t* a:成员变量\t和以前定义变量是一样的，只不过位置发生了改变。在类中，方法外。\n\t* b:成员方法\t和以前定义方法是一样的，只不过把static去掉，后面在详细讲解static的作用。\n* E:类和对象的概念\n\t* a:类：是一组相关的属性和行为的集合\n\t* b:对象：是该类事物的具体体现\n\t* c:举例：\n\t\t* 类\t 学生\n\t\t* 对象\t具体的某个学生就是一个对象\n\n## 06.03 学生类的定义 (掌握)\n\n* A:学生事物\n* B:学生类\n* C:案例演示\n\t* 属性:姓名,年龄,性别\n\t* 行为:学习,睡觉\n\n## 06.04 手机类的定义 (掌握)\n\n* 模仿学生类，让学生自己完成\n\t* 属性:品牌(brand)价格(price)\n\t* 行为:打电话(call),发信息(sendMessage)玩游戏(playGame)\n\n## 06.05 学生类的使用 (掌握)\n\n* A:文件名问题\n\t* 在一个java文件中写两个类：一个基本的类，一个测试类。\n\t* 建议：文件名称和测试类名称一致。\n* B:如何使用对象?\n\t* 创建对象并使用\n\t* 格式：类名 对象名 = new 类名();\n* D:如何使用成员变量呢?\n\t* 对象名.变量名\n* E:如何使用成员方法呢?\n\t* 对象名.方法名(...)\n\n## 06.06 手机类的使用 (掌握)\n\n* A:学生自己完成\n\t* 模仿学生类，让学生自己完成\n\t\n## 06.07 一个对象的内存图 (掌握)\n\n* A:画图演示\n\t* 一个对象\n\n## 06.08 二个对象的内存图 (了解)\n\n* A:画图演示\n\t* 二个不同的对象\n\n## 06.09 三个引用两个对象的内存图 (了解)\n\n* A:画图演示\n\t* 三个引用，有两个对象的引用指向同一个地址\n\n## 06.10 成员变量和局部变量的区别 (掌握)\n\n* A:在类中的位置不同\n\t* 成员变量：在类中方法外\n\t* 局部变量：在方法定义中或者方法声明上\n* B:在内存中的位置不同\n\t* 成员变量：在堆内存(成员变量属于对象,对象进堆内存)\n\t* 局部变量：在栈内存(局部变量属于方法,方法进栈内存)\n* C:生命周期不同\n\t* 成员变量：随着对象的创建而存在，随着对象的消失而消失\n\t* 局部变量：随着方法的调用而存在，随着方法的调用完毕而消失\n* D:初始化值不同\n\t* 成员变量：有默认初始化值\n\t* 局部变量：没有默认初始化值，必须定义，赋值，然后才能使用。\n\t\n* 注意事项：\n\t* 局部变量名称可以和成员变量名称一样，在方法中使用的时候，采用的是就近原则。\n\t* 基本数据类型变量包括哪些:byte,short,int,long,float,double,boolean,char\n\t* 引用数据类型变量包括哪些:数组,类,接口,枚举\n\t\n## 06.11 方法的形式参数是类名的时候如何调用 (掌握)\n\n* A:方法的参数是类名public void print(Student s){}//print(new Student());\n\t* 如果你看到了一个方法的形式参数是一个类类型(引用类型)，这里其实需要的是该类的对象。\n\n## 06.12 匿名对象的概述和应用 (掌握)\n\n* A:什么是匿名对象\n\t* 没有名字的对象 \n* B:匿名对象应用场景\n\t* a:调用方法，仅仅只调用一次的时候。\n\t\t* 那么，这种匿名调用有什么好处吗?\n\t\t\t* 节省代码 \n\t\t* 注意：调用多次的时候，不适合。匿名对象调用完毕就是垃圾。可以被垃圾回收器回收。\n\t* b:匿名对象可以作为实际参数传递\n* C:案例演示\n\t* 匿名对象应用场景\n\n## 06.13 封装的概述 (掌握)\n\n* A:封装概述\n\t* 是指隐藏对象的属性和实现细节，仅对外提供公共访问方式。\n\n* B:封装好处\n\t* 隐藏实现细节，提供公共的访问方式\n\t* 提高了代码的复用性\n\t* 提高安全性。\n* C:封装原则\n\t* 将不需要对外提供的内容都隐藏起来。\n\t* 把属性隐藏，提供公共方法对其访问。\n\n## 06.14 private关键字的概述和特点 (掌握)\n\n* A:人类赋值年龄的问题\n* B:private关键字特点\n\t* a:是一个权限修饰符\n\t* b:可以修饰成员变量和成员方法\n\t* c:被其修饰的成员只能在本类中被访问\n* C:案例演示\n\t* 封装和private的应用：\n\t* A:把成员变量用private修饰\n\t* B:提供对应的getXxx()和setXxx()方法\n\t* private仅仅是封装的一种体现形式,不能说封装就是私有\n\n## 06.15 this关键字的概述和应用 (掌握)\n\n* A:this关键字特点\n\t* 代表当前对象的引用 \n* B:案例演示\n\t* this的应用场景\n\t* 用来区分成员变量和局部变量重名\n\n## 06.16 手机类代码及其测试 (掌握)\n\n* A:学生练习\n\t* 请把手机类写成一个标准类，然后创建对象测试功能。\n```java\nclass Demo2_Phone {\n\tpublic static void main(String[] args) {\n\t\tPhone p1 = new Phone();\n\t\tp1.setBrand(\"三星\");\n\t\tp1.setPrice(5288);\n\n\t\tSystem.out.println(p1.getBrand() + \"...\" + p1.getPrice());\n\t\tp1.call();\n\t\tp1.sendMessage();\n\t\tp1.playGame();\n\t}\n}\n/*\n手机类\n\t属性:品牌brand,价格price\n\t行为:打电话call,发短信sendMessage,玩游戏,playGame\n*/\nclass Phone {\t\t\t\t\t\t\t\t//java bean\n\tprivate String brand;\t\t\t\t\t//品牌\n\tprivate int price;\t\t\t\t\t\t//价格\n\n\tpublic void setBrand(String brand) {\t//设置品牌\n\t\tthis.brand = brand;\n\t}\n\n\tpublic String getBrand() {\t\t\t\t//获取品牌\n\t\treturn this.brand;\t\t\t\t\t//this.可以省略,你不加系统会默认给你加\n\t}\n\n\tpublic void setPrice(int price) {\t\t//设置价格\n\t\tthis.price = price;\n\t}\n\n\tpublic int getPrice() {\t\t\t\t\t//获取价格\n\t\treturn price;\n\t}\n\n\tpublic void call() {\t\t\t\t\t//打电话\n\t\tSystem.out.println(\"打电话\");\n\t}\n\n\tpublic void sendMessage() {\t\t\t\t//发短信\n\t\tSystem.out.println(\"发短信\");\n\t}\n\n\tpublic void playGame() {\t\t\t\t//玩游戏\n\t\tSystem.out.println(\"玩游戏\");\n\t}\n}\n```\n\n## 06.17_day06总结\n\n* 把今天的知识点总结一遍。","slug":"Java学习笔记（day06）","published":1,"updated":"2020-02-20T06:06:59.384Z","comments":1,"layout":"post","link":"","_id":"ckec2td29000bfkup0tssz4tw","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"06-01-面向对象思想概述-了解\"><a class=\"header-anchor\" href=\"#06-01-面向对象思想概述-了解\">☆</a>06.01 面向对象思想概述 (了解)</h2>\n<ul>\n<li>A:面向过程思想概述\n<ul>\n<li>第一步</li>\n<li>第二步</li>\n</ul>\n</li>\n<li>B:面向对象思想概述\n<ul>\n<li>找对象(第一步,第二步)</li>\n</ul>\n</li>\n<li>C:举例\n<ul>\n<li>买煎饼果子</li>\n<li>洗衣服</li>\n</ul>\n</li>\n<li>D:面向对象思想特点\n<ul>\n<li>a:是一种更符合我们思想习惯的思想</li>\n<li>b:可以将复杂的事情简单化</li>\n<li>c:将我们从执行者变成了指挥者\n<ul>\n<li>角色发生了转换</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>E:面向对象开发\n<ul>\n<li>就是不断的创建对象，使用对象，指挥对象做事情。</li>\n</ul>\n</li>\n<li>F:面向对象设计\n<ul>\n<li>其实就是在管理和维护对象之间的关系。</li>\n</ul>\n</li>\n<li>G:面向对象特征\n<ul>\n<li>封装(encapsulation)</li>\n<li>继承(inheritance)</li>\n<li>多态(polymorphism)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-02-类与对象概述-掌握\"><a class=\"header-anchor\" href=\"#06-02-类与对象概述-掌握\">☆</a>06.02 类与对象概述 (掌握)</h2>\n<ul>\n<li>A:我们学习编程是为了什么\n<ul>\n<li>为了把我们日常生活中实物用学习语言描述出来</li>\n</ul>\n</li>\n<li>B:我们如何描述现实世界事物\n<ul>\n<li>属性\t就是该事物的描述信息(事物身上的名词)</li>\n<li>行为\t就是该事物能够做什么(事物身上的动词)</li>\n</ul>\n</li>\n<li>C:Java中最基本的单位是类,Java中用class描述事物也是如此\n<ul>\n<li>成员变量\t就是事物的属性</li>\n<li>成员方法\t就是事物的行为</li>\n</ul>\n</li>\n<li>D:定义类其实就是定义类的成员(成员变量和成员方法)\n<ul>\n<li>a:成员变量\t和以前定义变量是一样的，只不过位置发生了改变。在类中，方法外。</li>\n<li>b:成员方法\t和以前定义方法是一样的，只不过把static去掉，后面在详细讲解static的作用。</li>\n</ul>\n</li>\n<li>E:类和对象的概念\n<ul>\n<li>a:类：是一组相关的属性和行为的集合</li>\n<li>b:对象：是该类事物的具体体现</li>\n<li>c:举例：\n<ul>\n<li>类\t 学生</li>\n<li>对象\t具体的某个学生就是一个对象</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-03-学生类的定义-掌握\"><a class=\"header-anchor\" href=\"#06-03-学生类的定义-掌握\">☆</a>06.03 学生类的定义 (掌握)</h2>\n<ul>\n<li>A:学生事物</li>\n<li>B:学生类</li>\n<li>C:案例演示\n<ul>\n<li>属性:姓名,年龄,性别</li>\n<li>行为:学习,睡觉</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-04-手机类的定义-掌握\"><a class=\"header-anchor\" href=\"#06-04-手机类的定义-掌握\">☆</a>06.04 手机类的定义 (掌握)</h2>\n<ul>\n<li>模仿学生类，让学生自己完成\n<ul>\n<li>属性:品牌(brand)价格(price)</li>\n<li>行为:打电话(call),发信息(sendMessage)玩游戏(playGame)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-05-学生类的使用-掌握\"><a class=\"header-anchor\" href=\"#06-05-学生类的使用-掌握\">☆</a>06.05 学生类的使用 (掌握)</h2>\n<ul>\n<li>A:文件名问题\n<ul>\n<li>在一个java文件中写两个类：一个基本的类，一个测试类。</li>\n<li>建议：文件名称和测试类名称一致。</li>\n</ul>\n</li>\n<li>B:如何使用对象?\n<ul>\n<li>创建对象并使用</li>\n<li>格式：类名 对象名 = new 类名();</li>\n</ul>\n</li>\n<li>D:如何使用成员变量呢?\n<ul>\n<li>对象名.变量名</li>\n</ul>\n</li>\n<li>E:如何使用成员方法呢?\n<ul>\n<li>对象名.方法名(…)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-06-手机类的使用-掌握\"><a class=\"header-anchor\" href=\"#06-06-手机类的使用-掌握\">☆</a>06.06 手机类的使用 (掌握)</h2>\n<ul>\n<li>A:学生自己完成\n<ul>\n<li>模仿学生类，让学生自己完成</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-07-一个对象的内存图-掌握\"><a class=\"header-anchor\" href=\"#06-07-一个对象的内存图-掌握\">☆</a>06.07 一个对象的内存图 (掌握)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>一个对象</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-08-二个对象的内存图-了解\"><a class=\"header-anchor\" href=\"#06-08-二个对象的内存图-了解\">☆</a>06.08 二个对象的内存图 (了解)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>二个不同的对象</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-09-三个引用两个对象的内存图-了解\"><a class=\"header-anchor\" href=\"#06-09-三个引用两个对象的内存图-了解\">☆</a>06.09 三个引用两个对象的内存图 (了解)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>三个引用，有两个对象的引用指向同一个地址</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-10-成员变量和局部变量的区别-掌握\"><a class=\"header-anchor\" href=\"#06-10-成员变量和局部变量的区别-掌握\">☆</a>06.10 成员变量和局部变量的区别 (掌握)</h2>\n<ul>\n<li>\n<p>A:在类中的位置不同</p>\n<ul>\n<li>成员变量：在类中方法外</li>\n<li>局部变量：在方法定义中或者方法声明上</li>\n</ul>\n</li>\n<li>\n<p>B:在内存中的位置不同</p>\n<ul>\n<li>成员变量：在堆内存(成员变量属于对象,对象进堆内存)</li>\n<li>局部变量：在栈内存(局部变量属于方法,方法进栈内存)</li>\n</ul>\n</li>\n<li>\n<p>C:生命周期不同</p>\n<ul>\n<li>成员变量：随着对象的创建而存在，随着对象的消失而消失</li>\n<li>局部变量：随着方法的调用而存在，随着方法的调用完毕而消失</li>\n</ul>\n</li>\n<li>\n<p>D:初始化值不同</p>\n<ul>\n<li>成员变量：有默认初始化值</li>\n<li>局部变量：没有默认初始化值，必须定义，赋值，然后才能使用。</li>\n</ul>\n</li>\n<li>\n<p>注意事项：</p>\n<ul>\n<li>局部变量名称可以和成员变量名称一样，在方法中使用的时候，采用的是就近原则。</li>\n<li>基本数据类型变量包括哪些:byte,short,int,long,float,double,boolean,char</li>\n<li>引用数据类型变量包括哪些:数组,类,接口,枚举</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-11-方法的形式参数是类名的时候如何调用-掌握\"><a class=\"header-anchor\" href=\"#06-11-方法的形式参数是类名的时候如何调用-掌握\">☆</a>06.11 方法的形式参数是类名的时候如何调用 (掌握)</h2>\n<ul>\n<li>A:方法的参数是类名public void print(Student s){}//print(new Student());\n<ul>\n<li>如果你看到了一个方法的形式参数是一个类类型(引用类型)，这里其实需要的是该类的对象。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-12-匿名对象的概述和应用-掌握\"><a class=\"header-anchor\" href=\"#06-12-匿名对象的概述和应用-掌握\">☆</a>06.12 匿名对象的概述和应用 (掌握)</h2>\n<ul>\n<li>A:什么是匿名对象\n<ul>\n<li>没有名字的对象</li>\n</ul>\n</li>\n<li>B:匿名对象应用场景\n<ul>\n<li>a:调用方法，仅仅只调用一次的时候。\n<ul>\n<li>那么，这种匿名调用有什么好处吗?\n<ul>\n<li>节省代码</li>\n</ul>\n</li>\n<li>注意：调用多次的时候，不适合。匿名对象调用完毕就是垃圾。可以被垃圾回收器回收。</li>\n</ul>\n</li>\n<li>b:匿名对象可以作为实际参数传递</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>匿名对象应用场景</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-13-封装的概述-掌握\"><a class=\"header-anchor\" href=\"#06-13-封装的概述-掌握\">☆</a>06.13 封装的概述 (掌握)</h2>\n<ul>\n<li>\n<p>A:封装概述</p>\n<ul>\n<li>是指隐藏对象的属性和实现细节，仅对外提供公共访问方式。</li>\n</ul>\n</li>\n<li>\n<p>B:封装好处</p>\n<ul>\n<li>隐藏实现细节，提供公共的访问方式</li>\n<li>提高了代码的复用性</li>\n<li>提高安全性。</li>\n</ul>\n</li>\n<li>\n<p>C:封装原则</p>\n<ul>\n<li>将不需要对外提供的内容都隐藏起来。</li>\n<li>把属性隐藏，提供公共方法对其访问。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-14-private关键字的概述和特点-掌握\"><a class=\"header-anchor\" href=\"#06-14-private关键字的概述和特点-掌握\">☆</a>06.14 private关键字的概述和特点 (掌握)</h2>\n<ul>\n<li>A:人类赋值年龄的问题</li>\n<li>B:private关键字特点\n<ul>\n<li>a:是一个权限修饰符</li>\n<li>b:可以修饰成员变量和成员方法</li>\n<li>c:被其修饰的成员只能在本类中被访问</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>封装和private的应用：</li>\n<li>A:把成员变量用private修饰</li>\n<li>B:提供对应的getXxx()和setXxx()方法</li>\n<li>private仅仅是封装的一种体现形式,不能说封装就是私有</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-15-this关键字的概述和应用-掌握\"><a class=\"header-anchor\" href=\"#06-15-this关键字的概述和应用-掌握\">☆</a>06.15 this关键字的概述和应用 (掌握)</h2>\n<ul>\n<li>A:this关键字特点\n<ul>\n<li>代表当前对象的引用</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>this的应用场景</li>\n<li>用来区分成员变量和局部变量重名</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-16-手机类代码及其测试-掌握\"><a class=\"header-anchor\" href=\"#06-16-手机类代码及其测试-掌握\">☆</a>06.16 手机类代码及其测试 (掌握)</h2>\n<ul>\n<li>A:学生练习\n<ul>\n<li>请把手机类写成一个标准类，然后创建对象测试功能。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2_Phone</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tPhone p1 = <span class=\"keyword\">new</span> Phone();</span><br><span class=\"line\">\t\tp1.setBrand(<span class=\"string\">\"三星\"</span>);</span><br><span class=\"line\">\t\tp1.setPrice(<span class=\"number\">5288</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.println(p1.getBrand() + <span class=\"string\">\"...\"</span> + p1.getPrice());</span><br><span class=\"line\">\t\tp1.call();</span><br><span class=\"line\">\t\tp1.sendMessage();</span><br><span class=\"line\">\t\tp1.playGame();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">手机类</span></span><br><span class=\"line\"><span class=\"comment\">\t属性:品牌brand,价格price</span></span><br><span class=\"line\"><span class=\"comment\">\t行为:打电话call,发短信sendMessage,玩游戏,playGame</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Phone</span> </span>&#123;\t\t\t\t\t\t\t\t<span class=\"comment\">//java bean</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String brand;\t\t\t\t\t<span class=\"comment\">//品牌</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> price;\t\t\t\t\t\t<span class=\"comment\">//价格</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBrand</span><span class=\"params\">(String brand)</span> </span>&#123;\t<span class=\"comment\">//设置品牌</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.brand = brand;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBrand</span><span class=\"params\">()</span> </span>&#123;\t\t\t\t<span class=\"comment\">//获取品牌</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.brand;\t\t\t\t\t<span class=\"comment\">//this.可以省略,你不加系统会默认给你加</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPrice</span><span class=\"params\">(<span class=\"keyword\">int</span> price)</span> </span>&#123;\t\t<span class=\"comment\">//设置价格</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.price = price;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getPrice</span><span class=\"params\">()</span> </span>&#123;\t\t\t\t\t<span class=\"comment\">//获取价格</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> price;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">call</span><span class=\"params\">()</span> </span>&#123;\t\t\t\t\t<span class=\"comment\">//打电话</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"打电话\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendMessage</span><span class=\"params\">()</span> </span>&#123;\t\t\t\t<span class=\"comment\">//发短信</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"发短信\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">playGame</span><span class=\"params\">()</span> </span>&#123;\t\t\t\t<span class=\"comment\">//玩游戏</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"玩游戏\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"06-17-day06总结\"><a class=\"header-anchor\" href=\"#06-17-day06总结\">☆</a>06.17_day06总结</h2>\n<ul>\n<li>把今天的知识点总结一遍。</li>\n</ul>\n","site":{"data":{}},"length":3203,"excerpt":"","more":"<h2 id=\"06-01-面向对象思想概述-了解\"><a class=\"header-anchor\" href=\"#06-01-面向对象思想概述-了解\">☆</a>06.01 面向对象思想概述 (了解)</h2>\n<ul>\n<li>A:面向过程思想概述\n<ul>\n<li>第一步</li>\n<li>第二步</li>\n</ul>\n</li>\n<li>B:面向对象思想概述\n<ul>\n<li>找对象(第一步,第二步)</li>\n</ul>\n</li>\n<li>C:举例\n<ul>\n<li>买煎饼果子</li>\n<li>洗衣服</li>\n</ul>\n</li>\n<li>D:面向对象思想特点\n<ul>\n<li>a:是一种更符合我们思想习惯的思想</li>\n<li>b:可以将复杂的事情简单化</li>\n<li>c:将我们从执行者变成了指挥者\n<ul>\n<li>角色发生了转换</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>E:面向对象开发\n<ul>\n<li>就是不断的创建对象，使用对象，指挥对象做事情。</li>\n</ul>\n</li>\n<li>F:面向对象设计\n<ul>\n<li>其实就是在管理和维护对象之间的关系。</li>\n</ul>\n</li>\n<li>G:面向对象特征\n<ul>\n<li>封装(encapsulation)</li>\n<li>继承(inheritance)</li>\n<li>多态(polymorphism)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-02-类与对象概述-掌握\"><a class=\"header-anchor\" href=\"#06-02-类与对象概述-掌握\">☆</a>06.02 类与对象概述 (掌握)</h2>\n<ul>\n<li>A:我们学习编程是为了什么\n<ul>\n<li>为了把我们日常生活中实物用学习语言描述出来</li>\n</ul>\n</li>\n<li>B:我们如何描述现实世界事物\n<ul>\n<li>属性\t就是该事物的描述信息(事物身上的名词)</li>\n<li>行为\t就是该事物能够做什么(事物身上的动词)</li>\n</ul>\n</li>\n<li>C:Java中最基本的单位是类,Java中用class描述事物也是如此\n<ul>\n<li>成员变量\t就是事物的属性</li>\n<li>成员方法\t就是事物的行为</li>\n</ul>\n</li>\n<li>D:定义类其实就是定义类的成员(成员变量和成员方法)\n<ul>\n<li>a:成员变量\t和以前定义变量是一样的，只不过位置发生了改变。在类中，方法外。</li>\n<li>b:成员方法\t和以前定义方法是一样的，只不过把static去掉，后面在详细讲解static的作用。</li>\n</ul>\n</li>\n<li>E:类和对象的概念\n<ul>\n<li>a:类：是一组相关的属性和行为的集合</li>\n<li>b:对象：是该类事物的具体体现</li>\n<li>c:举例：\n<ul>\n<li>类\t 学生</li>\n<li>对象\t具体的某个学生就是一个对象</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-03-学生类的定义-掌握\"><a class=\"header-anchor\" href=\"#06-03-学生类的定义-掌握\">☆</a>06.03 学生类的定义 (掌握)</h2>\n<ul>\n<li>A:学生事物</li>\n<li>B:学生类</li>\n<li>C:案例演示\n<ul>\n<li>属性:姓名,年龄,性别</li>\n<li>行为:学习,睡觉</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-04-手机类的定义-掌握\"><a class=\"header-anchor\" href=\"#06-04-手机类的定义-掌握\">☆</a>06.04 手机类的定义 (掌握)</h2>\n<ul>\n<li>模仿学生类，让学生自己完成\n<ul>\n<li>属性:品牌(brand)价格(price)</li>\n<li>行为:打电话(call),发信息(sendMessage)玩游戏(playGame)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-05-学生类的使用-掌握\"><a class=\"header-anchor\" href=\"#06-05-学生类的使用-掌握\">☆</a>06.05 学生类的使用 (掌握)</h2>\n<ul>\n<li>A:文件名问题\n<ul>\n<li>在一个java文件中写两个类：一个基本的类，一个测试类。</li>\n<li>建议：文件名称和测试类名称一致。</li>\n</ul>\n</li>\n<li>B:如何使用对象?\n<ul>\n<li>创建对象并使用</li>\n<li>格式：类名 对象名 = new 类名();</li>\n</ul>\n</li>\n<li>D:如何使用成员变量呢?\n<ul>\n<li>对象名.变量名</li>\n</ul>\n</li>\n<li>E:如何使用成员方法呢?\n<ul>\n<li>对象名.方法名(…)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-06-手机类的使用-掌握\"><a class=\"header-anchor\" href=\"#06-06-手机类的使用-掌握\">☆</a>06.06 手机类的使用 (掌握)</h2>\n<ul>\n<li>A:学生自己完成\n<ul>\n<li>模仿学生类，让学生自己完成</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-07-一个对象的内存图-掌握\"><a class=\"header-anchor\" href=\"#06-07-一个对象的内存图-掌握\">☆</a>06.07 一个对象的内存图 (掌握)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>一个对象</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-08-二个对象的内存图-了解\"><a class=\"header-anchor\" href=\"#06-08-二个对象的内存图-了解\">☆</a>06.08 二个对象的内存图 (了解)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>二个不同的对象</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-09-三个引用两个对象的内存图-了解\"><a class=\"header-anchor\" href=\"#06-09-三个引用两个对象的内存图-了解\">☆</a>06.09 三个引用两个对象的内存图 (了解)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>三个引用，有两个对象的引用指向同一个地址</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-10-成员变量和局部变量的区别-掌握\"><a class=\"header-anchor\" href=\"#06-10-成员变量和局部变量的区别-掌握\">☆</a>06.10 成员变量和局部变量的区别 (掌握)</h2>\n<ul>\n<li>\n<p>A:在类中的位置不同</p>\n<ul>\n<li>成员变量：在类中方法外</li>\n<li>局部变量：在方法定义中或者方法声明上</li>\n</ul>\n</li>\n<li>\n<p>B:在内存中的位置不同</p>\n<ul>\n<li>成员变量：在堆内存(成员变量属于对象,对象进堆内存)</li>\n<li>局部变量：在栈内存(局部变量属于方法,方法进栈内存)</li>\n</ul>\n</li>\n<li>\n<p>C:生命周期不同</p>\n<ul>\n<li>成员变量：随着对象的创建而存在，随着对象的消失而消失</li>\n<li>局部变量：随着方法的调用而存在，随着方法的调用完毕而消失</li>\n</ul>\n</li>\n<li>\n<p>D:初始化值不同</p>\n<ul>\n<li>成员变量：有默认初始化值</li>\n<li>局部变量：没有默认初始化值，必须定义，赋值，然后才能使用。</li>\n</ul>\n</li>\n<li>\n<p>注意事项：</p>\n<ul>\n<li>局部变量名称可以和成员变量名称一样，在方法中使用的时候，采用的是就近原则。</li>\n<li>基本数据类型变量包括哪些:byte,short,int,long,float,double,boolean,char</li>\n<li>引用数据类型变量包括哪些:数组,类,接口,枚举</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-11-方法的形式参数是类名的时候如何调用-掌握\"><a class=\"header-anchor\" href=\"#06-11-方法的形式参数是类名的时候如何调用-掌握\">☆</a>06.11 方法的形式参数是类名的时候如何调用 (掌握)</h2>\n<ul>\n<li>A:方法的参数是类名public void print(Student s){}//print(new Student());\n<ul>\n<li>如果你看到了一个方法的形式参数是一个类类型(引用类型)，这里其实需要的是该类的对象。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-12-匿名对象的概述和应用-掌握\"><a class=\"header-anchor\" href=\"#06-12-匿名对象的概述和应用-掌握\">☆</a>06.12 匿名对象的概述和应用 (掌握)</h2>\n<ul>\n<li>A:什么是匿名对象\n<ul>\n<li>没有名字的对象</li>\n</ul>\n</li>\n<li>B:匿名对象应用场景\n<ul>\n<li>a:调用方法，仅仅只调用一次的时候。\n<ul>\n<li>那么，这种匿名调用有什么好处吗?\n<ul>\n<li>节省代码</li>\n</ul>\n</li>\n<li>注意：调用多次的时候，不适合。匿名对象调用完毕就是垃圾。可以被垃圾回收器回收。</li>\n</ul>\n</li>\n<li>b:匿名对象可以作为实际参数传递</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>匿名对象应用场景</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-13-封装的概述-掌握\"><a class=\"header-anchor\" href=\"#06-13-封装的概述-掌握\">☆</a>06.13 封装的概述 (掌握)</h2>\n<ul>\n<li>\n<p>A:封装概述</p>\n<ul>\n<li>是指隐藏对象的属性和实现细节，仅对外提供公共访问方式。</li>\n</ul>\n</li>\n<li>\n<p>B:封装好处</p>\n<ul>\n<li>隐藏实现细节，提供公共的访问方式</li>\n<li>提高了代码的复用性</li>\n<li>提高安全性。</li>\n</ul>\n</li>\n<li>\n<p>C:封装原则</p>\n<ul>\n<li>将不需要对外提供的内容都隐藏起来。</li>\n<li>把属性隐藏，提供公共方法对其访问。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-14-private关键字的概述和特点-掌握\"><a class=\"header-anchor\" href=\"#06-14-private关键字的概述和特点-掌握\">☆</a>06.14 private关键字的概述和特点 (掌握)</h2>\n<ul>\n<li>A:人类赋值年龄的问题</li>\n<li>B:private关键字特点\n<ul>\n<li>a:是一个权限修饰符</li>\n<li>b:可以修饰成员变量和成员方法</li>\n<li>c:被其修饰的成员只能在本类中被访问</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>封装和private的应用：</li>\n<li>A:把成员变量用private修饰</li>\n<li>B:提供对应的getXxx()和setXxx()方法</li>\n<li>private仅仅是封装的一种体现形式,不能说封装就是私有</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-15-this关键字的概述和应用-掌握\"><a class=\"header-anchor\" href=\"#06-15-this关键字的概述和应用-掌握\">☆</a>06.15 this关键字的概述和应用 (掌握)</h2>\n<ul>\n<li>A:this关键字特点\n<ul>\n<li>代表当前对象的引用</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>this的应用场景</li>\n<li>用来区分成员变量和局部变量重名</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"06-16-手机类代码及其测试-掌握\"><a class=\"header-anchor\" href=\"#06-16-手机类代码及其测试-掌握\">☆</a>06.16 手机类代码及其测试 (掌握)</h2>\n<ul>\n<li>A:学生练习\n<ul>\n<li>请把手机类写成一个标准类，然后创建对象测试功能。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2_Phone</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tPhone p1 = <span class=\"keyword\">new</span> Phone();</span><br><span class=\"line\">\t\tp1.setBrand(<span class=\"string\">\"三星\"</span>);</span><br><span class=\"line\">\t\tp1.setPrice(<span class=\"number\">5288</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tSystem.out.println(p1.getBrand() + <span class=\"string\">\"...\"</span> + p1.getPrice());</span><br><span class=\"line\">\t\tp1.call();</span><br><span class=\"line\">\t\tp1.sendMessage();</span><br><span class=\"line\">\t\tp1.playGame();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">手机类</span></span><br><span class=\"line\"><span class=\"comment\">\t属性:品牌brand,价格price</span></span><br><span class=\"line\"><span class=\"comment\">\t行为:打电话call,发短信sendMessage,玩游戏,playGame</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Phone</span> </span>&#123;\t\t\t\t\t\t\t\t<span class=\"comment\">//java bean</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> String brand;\t\t\t\t\t<span class=\"comment\">//品牌</span></span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">int</span> price;\t\t\t\t\t\t<span class=\"comment\">//价格</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setBrand</span><span class=\"params\">(String brand)</span> </span>&#123;\t<span class=\"comment\">//设置品牌</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.brand = brand;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getBrand</span><span class=\"params\">()</span> </span>&#123;\t\t\t\t<span class=\"comment\">//获取品牌</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.brand;\t\t\t\t\t<span class=\"comment\">//this.可以省略,你不加系统会默认给你加</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPrice</span><span class=\"params\">(<span class=\"keyword\">int</span> price)</span> </span>&#123;\t\t<span class=\"comment\">//设置价格</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.price = price;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getPrice</span><span class=\"params\">()</span> </span>&#123;\t\t\t\t\t<span class=\"comment\">//获取价格</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> price;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">call</span><span class=\"params\">()</span> </span>&#123;\t\t\t\t\t<span class=\"comment\">//打电话</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"打电话\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">sendMessage</span><span class=\"params\">()</span> </span>&#123;\t\t\t\t<span class=\"comment\">//发短信</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"发短信\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">playGame</span><span class=\"params\">()</span> </span>&#123;\t\t\t\t<span class=\"comment\">//玩游戏</span></span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"玩游戏\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"06-17-day06总结\"><a class=\"header-anchor\" href=\"#06-17-day06总结\">☆</a>06.17_day06总结</h2>\n<ul>\n<li>把今天的知识点总结一遍。</li>\n</ul>\n"},{"title":"Java学习笔记（day04）","copyright":true,"abbrlink":"3f16126f","notshow":true,"date":"2018-09-25T10:11:00.000Z","password":null,"description":null,"image":null,"photos":[],"sticky":null,"_content":"\n## 04.01 循环结构概述和for语句的格式及其使用\n\n* A:循环结构的分类\n\t* for,while,do...while \n* B:循环结构for语句的格式：\n* \n\t\tfor(初始化表达式;条件表达式;循环后的操作表达式) {\n\t\t\t循环体;\n\t\t}\n* C执行流程：\n\t* a:执行初始化语句\n\t* b:执行判断条件语句,看其返回值是true还是false\n\t\t* 如果是true，就继续执行\n\t\t* 如果是false，就结束循环\n\t* c:执行循环体语句;\n\t* d:执行循环后的操作表达式\n\t* e:回到B继续。\n* D:案例演示\n\t* 在控制台输出10次\"helloworld\"\n\n## 04.02 循环结构for语句的练习之获取数据\n\n* A:案例演示\n\t* 需求：请在控制台输出数据1-10\n\t* 需求：请在控制台输出数据10-1\n* B:注意事项\n\t* a:判断条件语句无论简单还是复杂结果是boolean类型。\n\t* b:循环体语句如果是一条语句，大括号可以省略；如果是多条语句，大括号不能省略。建议永远不要省略。\n\t* c:一般来说：有左大括号就没有分号，有分号就没有左大括号\n\n## 04.03 循环结构for语句的练习之求和思想\n\n* A:案例演示\n\t* 需求：求出1-10之间数据之和\n* B:学生练习\n\t* 需求：求出1-100之间偶数和\n\t* 需求：求出1-100之间奇数和\n\n## 04.04 循环结构for语句的练习之水仙花\n\n* A:案例演示\n\t* 需求：在控制台输出所有的”水仙花数”\n\n\t* 所谓的水仙花数是指一个三位数，其各位数字的立方和等于该数本身。\n\t* 举例：153就是一个水仙花数。\n\t* 153 = 1*1*1 + 5*5*5 + 3*3*3 = 1 + 125 + 27 = 153\n\n## 04.05 循环结构for语句的练习之统计思想\n\n* A:案例演示\n\t* 需求：统计”水仙花数”共有多少个\n\n## 04.06 循环结构while语句的格式和基本使用\n\n* A:循环结构while语句的格式：\n* \t\t\n\t\twhile循环的基本格式：\n\t\twhile(判断条件语句) {\n\t\t\t循环体语句;\n\t\t}\n\t\t\n\t\t完整格式：\n\t\t\n\t\t初始化语句;\n\t    while(判断条件语句) {\n\t\t\t 循环体语句;\n\t\t\t 控制条件语句;\n\t\t}\n* B:执行流程：\n\t* a:执行初始化语句\n\t* b:执行判断条件语句,看其返回值是true还是false\n\t\t* 如果是true，就继续执行\n\t\t* 如果是false，就结束循环\n\t* c:执行循环体语句;\n\t* d:执行控制条件语句\n\t* e:回到B继续。\n* C:案例演示\n\t* 需求：请在控制台输出数据1-10\n\n## 04.07 循环结构while语句的练习\n\n* A:求和思想\n\t* 求1-100之和\n* B:统计思想\n\t* 统计”水仙花数”共有多少个\n\n## 04.08 循环结构do...while语句的格式和基本使用\n\n* A:循环结构do...while语句的格式：\n* \n\t\tdo {\n\t\t\t循环体语句;\n\t\t}while(判断条件语句);\n\t\t\n\t\t完整格式；\n\t\t初始化语句;\n\t\tdo {\n\t\t\t循环体语句;\n\t\t\t控制条件语句;\n\t\t}while(判断条件语句);\n* B:执行流程：\n\t* a:执行初始化语句\n\t* b:执行循环体语句;\n\t* c:执行控制条件语句\n\t* d:执行判断条件语句,看其返回值是true还是false\n\t\t* 如果是true，就继续执行\n\t\t* 如果是false，就结束循环\n\t* e:回到b继续。\n* C:案例演示\n\t* 需求：请在控制台输出数据1-10\n\n## 04.09 循环结构三种循环语句的区别\n\n* A:案例演示\n\t* 三种循环语句的区别:\n\t* do...while循环至少执行一次循环体。\n\t* 而for,while循环必须先判断条件是否成立，然后决定是否执行循环体语句。\n* B:案例演示\n\t* for循环和while循环的区别：\n\t\t* A:如果你想在循环结束后，继续使用控制条件的那个变量，用while循环，否则用for循环。不知道用谁就用for循环。因为变量及早的从内存中消失，可以提高内存的使用效率。\n\n## 04.10 循环结构注意事项之死循环\n\n* A:一定要注意控制条件语句控制的那个变量的问题，不要弄丢了，否则就容易死循环。\n* B:两种最简单的死循环格式\n\t* while(true){...}\n\t* for(;;){...}\n\n## 04.11 循环结构循环嵌套输出4行5列的星星\n\n* A:案例演示\n\t* 需求：请输出一个4行5列的星星(*)图案。\n\t* \n\t\t\t如图：\n\t\t\t\t*****\n\t\t\t\t*****\n\t\t\t\t*****\n\t\t\t\t*****\n\t\t\t\t\n\t\t\t注意：\n\t\t\t\tSystem.out.println(\"*\");和System.out.print(\"*\");的区别\n* B:结论：\n\t* 外循环控制行数，内循环控制列数\n\n## 04.12 循环结构循环嵌套输出正三角形\n\n* A:案例演示\n* \n\t\t需求：请输出下列的形状\n\t\t*\n\t\t**\n\t\t***\n\t\t****\n\t\t*****\n\n## 04.13 循环结构九九乘法表\n\n* A:案例演示\n\t* 需求：在控制台输出九九乘法表。\n* B:代码优化\n* \n\t\t注意：\n\t\t'\\x' x表示任意，\\是转义符号,这种做法叫转移字符。\n\t\t\n\t\t'\\t'\ttab键的位置\n\t\t'\\r'\t回车\n\t\t'\\n'\t换行\n\t\t'\\\"'\n\t\t'\\''\n\n## 04.14 控制跳转语句break语句\n\n* A:break的使用场景\n\t* 只能在switch和循环中 \n\n## 04.15 控制跳转语句continue语句\n\n* A:continue的使用场景\n\t* 只能在循环中\n\n## 04.16 控制跳转语句标号\n\n* 标号:标记某个循环对其控制\n* 标号组成规则:其实就是合法的标识符\n\n## 04.17 控制调整语句练习\n\n* A:练习题\n* \n\t\tfor(int x=1; x<=10; x++) {\n\t\t\tif(x%3==0) {\n\t\t\t\t//在此处填写代码\n\t\t\t}\n\t\t\tSystem.out.println(“Java基础班”);\n\t\t}\n\t\t\n\t\t我想在控制台输出2次:“Java基础班“\n\t\t我想在控制台输出7次:“Java基础班“\n\t\t我想在控制台输出13次:“Java基础班“\t\n\n## 04.18 控制跳转语句return语句\n\n* A:return的作用\n\t* 返回\n\t* 其实它的作用不是结束循环的，而是结束方法的。\n* B:案例演示\n\t* return和break以及continue的区别?\n\t* return是结束方法\n\t* break是跳出循环\n\t* continue是终止本次循环继续下次循环\n\n## 04.19 方法概述和格式说明\n\n* A:为什么要有方法\n\t* 提高代码的复用性 \n* B:什么是方法\n\t* 完成特定功能的代码块。 \n* C:方法的格式\n* \n\t\t修饰符 返回值类型 方法名(参数类型 参数名1,参数类型 参数名2...) {\n\t\t\t方法体语句;\n\t\t\treturn 返回值; \n\t\t} \n* D:方法的格式说明\n\t* 修饰符：目前就用 public static。后面我们再详细的讲解其他的修饰符。\n\t* 返回值类型：就是功能结果的数据类型。\n\t* 方法名：符合命名规则即可。方便我们的调用。\n\t* 参数：\n\t\t* 实际参数：就是实际参与运算的。\n\t\t* 形式参数；就是方法定义上的，用于接收实际参数的。\n\t* 参数类型：就是参数的数据类型\n\t* 参数名：就是变量名\n\t* 方法体语句：就是完成功能的代码。\n\t* return：结束方法的。\n\t* 返回值：就是功能的结果，由return带给调用者。 \n\n## 04.20 方法之求和案例及其调用\n\n* A:如何写一个方法\n\t* 1,明确返回值类型\n\t* 2,明确参数列表 \n* B:案例演示\n\t* 需求：求两个数据之和的案例\n* C:方法调用图解\n\n## 04.21 方法的注意事项\n\n* A:方法调用(有具体返回值)\n\t* a:单独调用,一般来说没有意义，所以不推荐。\n\t* b:输出调用,但是不够好。因为我们可能需要针对结果进行进一步的操作。\n\t* c:赋值调用,推荐方案。\n* B:案例演示\n\t* a:方法不调用不执行\n\t* b:方法与方法是平级关系，不能嵌套定义\n\t* c:方法定义的时候参数之间用逗号隔开\n\t* d:方法调用的时候不用在传递数据类型\n\t* e:如果方法有明确的返回值，一定要有return带回一个值\n\n## 04.22 方法的练习\n\n* A:案例演示\n\t* 需求：键盘录入两个数据，返回两个数中的较大值\n* B:案例演示\n\t* 需求：键盘录入两个数据，比较两个数是否相等     \n\n\n## 04.23 方法之输出星形及其调用\n\n* A:案例演示\n\t* 需求：根据键盘录入的行数和列数，在控制台输出星形\n* B:方法调用：(无返回值,void)\n\t* 单独调用\n\t* 输出调用(错误)\n\t* 赋值调用(错误)\n\n## 04.24 方法的练习\n\n* A:案例演示\n\t* 需求：根据键盘录入的数据输出对应的乘法表\n\n## 04.25 方法重载概述和基本使用\n\n* A:方法重载概述\n\t* 求和案例\n\t\t* 2个整数\n\t\t* 3个整数\n\t\t* 4个整数\n* B:方法重载：\n\t* 在同一个类中，方法名相同，参数列表不同。与返回值类型无关。\n\t\n\t* 参数列表不同：\n\t\t* A:参数个数不同\n\t\t* B:参数类型不同\n\t\t* C:参数的顺序不同(算重载,但是在开发中不用)\n\n\n## 04.26 方法重载练习比较数据是否相等\n\n* A:案例演示\n\t* 需求：比较两个数据是否相等。\n\t* 参数类型分别为两个int类型，两个double类型，并在main方法中进行测试\n\n## 04.27_day04总结\n\n把今天的知识点总结一遍。","source":"_posts/Java学习笔记（day04）.md","raw":"---\ntitle: Java学习笔记（day04）\ncopyright: true\nabbrlink: 3f16126f\nnotshow: true\ntags:\n  - Java\ncategories: Java\ndate: 2018-09-25 18:11:00\npassword:\ndescription:\nimage:\nphotos:\nsticky:\n---\n\n## 04.01 循环结构概述和for语句的格式及其使用\n\n* A:循环结构的分类\n\t* for,while,do...while \n* B:循环结构for语句的格式：\n* \n\t\tfor(初始化表达式;条件表达式;循环后的操作表达式) {\n\t\t\t循环体;\n\t\t}\n* C执行流程：\n\t* a:执行初始化语句\n\t* b:执行判断条件语句,看其返回值是true还是false\n\t\t* 如果是true，就继续执行\n\t\t* 如果是false，就结束循环\n\t* c:执行循环体语句;\n\t* d:执行循环后的操作表达式\n\t* e:回到B继续。\n* D:案例演示\n\t* 在控制台输出10次\"helloworld\"\n\n## 04.02 循环结构for语句的练习之获取数据\n\n* A:案例演示\n\t* 需求：请在控制台输出数据1-10\n\t* 需求：请在控制台输出数据10-1\n* B:注意事项\n\t* a:判断条件语句无论简单还是复杂结果是boolean类型。\n\t* b:循环体语句如果是一条语句，大括号可以省略；如果是多条语句，大括号不能省略。建议永远不要省略。\n\t* c:一般来说：有左大括号就没有分号，有分号就没有左大括号\n\n## 04.03 循环结构for语句的练习之求和思想\n\n* A:案例演示\n\t* 需求：求出1-10之间数据之和\n* B:学生练习\n\t* 需求：求出1-100之间偶数和\n\t* 需求：求出1-100之间奇数和\n\n## 04.04 循环结构for语句的练习之水仙花\n\n* A:案例演示\n\t* 需求：在控制台输出所有的”水仙花数”\n\n\t* 所谓的水仙花数是指一个三位数，其各位数字的立方和等于该数本身。\n\t* 举例：153就是一个水仙花数。\n\t* 153 = 1*1*1 + 5*5*5 + 3*3*3 = 1 + 125 + 27 = 153\n\n## 04.05 循环结构for语句的练习之统计思想\n\n* A:案例演示\n\t* 需求：统计”水仙花数”共有多少个\n\n## 04.06 循环结构while语句的格式和基本使用\n\n* A:循环结构while语句的格式：\n* \t\t\n\t\twhile循环的基本格式：\n\t\twhile(判断条件语句) {\n\t\t\t循环体语句;\n\t\t}\n\t\t\n\t\t完整格式：\n\t\t\n\t\t初始化语句;\n\t    while(判断条件语句) {\n\t\t\t 循环体语句;\n\t\t\t 控制条件语句;\n\t\t}\n* B:执行流程：\n\t* a:执行初始化语句\n\t* b:执行判断条件语句,看其返回值是true还是false\n\t\t* 如果是true，就继续执行\n\t\t* 如果是false，就结束循环\n\t* c:执行循环体语句;\n\t* d:执行控制条件语句\n\t* e:回到B继续。\n* C:案例演示\n\t* 需求：请在控制台输出数据1-10\n\n## 04.07 循环结构while语句的练习\n\n* A:求和思想\n\t* 求1-100之和\n* B:统计思想\n\t* 统计”水仙花数”共有多少个\n\n## 04.08 循环结构do...while语句的格式和基本使用\n\n* A:循环结构do...while语句的格式：\n* \n\t\tdo {\n\t\t\t循环体语句;\n\t\t}while(判断条件语句);\n\t\t\n\t\t完整格式；\n\t\t初始化语句;\n\t\tdo {\n\t\t\t循环体语句;\n\t\t\t控制条件语句;\n\t\t}while(判断条件语句);\n* B:执行流程：\n\t* a:执行初始化语句\n\t* b:执行循环体语句;\n\t* c:执行控制条件语句\n\t* d:执行判断条件语句,看其返回值是true还是false\n\t\t* 如果是true，就继续执行\n\t\t* 如果是false，就结束循环\n\t* e:回到b继续。\n* C:案例演示\n\t* 需求：请在控制台输出数据1-10\n\n## 04.09 循环结构三种循环语句的区别\n\n* A:案例演示\n\t* 三种循环语句的区别:\n\t* do...while循环至少执行一次循环体。\n\t* 而for,while循环必须先判断条件是否成立，然后决定是否执行循环体语句。\n* B:案例演示\n\t* for循环和while循环的区别：\n\t\t* A:如果你想在循环结束后，继续使用控制条件的那个变量，用while循环，否则用for循环。不知道用谁就用for循环。因为变量及早的从内存中消失，可以提高内存的使用效率。\n\n## 04.10 循环结构注意事项之死循环\n\n* A:一定要注意控制条件语句控制的那个变量的问题，不要弄丢了，否则就容易死循环。\n* B:两种最简单的死循环格式\n\t* while(true){...}\n\t* for(;;){...}\n\n## 04.11 循环结构循环嵌套输出4行5列的星星\n\n* A:案例演示\n\t* 需求：请输出一个4行5列的星星(*)图案。\n\t* \n\t\t\t如图：\n\t\t\t\t*****\n\t\t\t\t*****\n\t\t\t\t*****\n\t\t\t\t*****\n\t\t\t\t\n\t\t\t注意：\n\t\t\t\tSystem.out.println(\"*\");和System.out.print(\"*\");的区别\n* B:结论：\n\t* 外循环控制行数，内循环控制列数\n\n## 04.12 循环结构循环嵌套输出正三角形\n\n* A:案例演示\n* \n\t\t需求：请输出下列的形状\n\t\t*\n\t\t**\n\t\t***\n\t\t****\n\t\t*****\n\n## 04.13 循环结构九九乘法表\n\n* A:案例演示\n\t* 需求：在控制台输出九九乘法表。\n* B:代码优化\n* \n\t\t注意：\n\t\t'\\x' x表示任意，\\是转义符号,这种做法叫转移字符。\n\t\t\n\t\t'\\t'\ttab键的位置\n\t\t'\\r'\t回车\n\t\t'\\n'\t换行\n\t\t'\\\"'\n\t\t'\\''\n\n## 04.14 控制跳转语句break语句\n\n* A:break的使用场景\n\t* 只能在switch和循环中 \n\n## 04.15 控制跳转语句continue语句\n\n* A:continue的使用场景\n\t* 只能在循环中\n\n## 04.16 控制跳转语句标号\n\n* 标号:标记某个循环对其控制\n* 标号组成规则:其实就是合法的标识符\n\n## 04.17 控制调整语句练习\n\n* A:练习题\n* \n\t\tfor(int x=1; x<=10; x++) {\n\t\t\tif(x%3==0) {\n\t\t\t\t//在此处填写代码\n\t\t\t}\n\t\t\tSystem.out.println(“Java基础班”);\n\t\t}\n\t\t\n\t\t我想在控制台输出2次:“Java基础班“\n\t\t我想在控制台输出7次:“Java基础班“\n\t\t我想在控制台输出13次:“Java基础班“\t\n\n## 04.18 控制跳转语句return语句\n\n* A:return的作用\n\t* 返回\n\t* 其实它的作用不是结束循环的，而是结束方法的。\n* B:案例演示\n\t* return和break以及continue的区别?\n\t* return是结束方法\n\t* break是跳出循环\n\t* continue是终止本次循环继续下次循环\n\n## 04.19 方法概述和格式说明\n\n* A:为什么要有方法\n\t* 提高代码的复用性 \n* B:什么是方法\n\t* 完成特定功能的代码块。 \n* C:方法的格式\n* \n\t\t修饰符 返回值类型 方法名(参数类型 参数名1,参数类型 参数名2...) {\n\t\t\t方法体语句;\n\t\t\treturn 返回值; \n\t\t} \n* D:方法的格式说明\n\t* 修饰符：目前就用 public static。后面我们再详细的讲解其他的修饰符。\n\t* 返回值类型：就是功能结果的数据类型。\n\t* 方法名：符合命名规则即可。方便我们的调用。\n\t* 参数：\n\t\t* 实际参数：就是实际参与运算的。\n\t\t* 形式参数；就是方法定义上的，用于接收实际参数的。\n\t* 参数类型：就是参数的数据类型\n\t* 参数名：就是变量名\n\t* 方法体语句：就是完成功能的代码。\n\t* return：结束方法的。\n\t* 返回值：就是功能的结果，由return带给调用者。 \n\n## 04.20 方法之求和案例及其调用\n\n* A:如何写一个方法\n\t* 1,明确返回值类型\n\t* 2,明确参数列表 \n* B:案例演示\n\t* 需求：求两个数据之和的案例\n* C:方法调用图解\n\n## 04.21 方法的注意事项\n\n* A:方法调用(有具体返回值)\n\t* a:单独调用,一般来说没有意义，所以不推荐。\n\t* b:输出调用,但是不够好。因为我们可能需要针对结果进行进一步的操作。\n\t* c:赋值调用,推荐方案。\n* B:案例演示\n\t* a:方法不调用不执行\n\t* b:方法与方法是平级关系，不能嵌套定义\n\t* c:方法定义的时候参数之间用逗号隔开\n\t* d:方法调用的时候不用在传递数据类型\n\t* e:如果方法有明确的返回值，一定要有return带回一个值\n\n## 04.22 方法的练习\n\n* A:案例演示\n\t* 需求：键盘录入两个数据，返回两个数中的较大值\n* B:案例演示\n\t* 需求：键盘录入两个数据，比较两个数是否相等     \n\n\n## 04.23 方法之输出星形及其调用\n\n* A:案例演示\n\t* 需求：根据键盘录入的行数和列数，在控制台输出星形\n* B:方法调用：(无返回值,void)\n\t* 单独调用\n\t* 输出调用(错误)\n\t* 赋值调用(错误)\n\n## 04.24 方法的练习\n\n* A:案例演示\n\t* 需求：根据键盘录入的数据输出对应的乘法表\n\n## 04.25 方法重载概述和基本使用\n\n* A:方法重载概述\n\t* 求和案例\n\t\t* 2个整数\n\t\t* 3个整数\n\t\t* 4个整数\n* B:方法重载：\n\t* 在同一个类中，方法名相同，参数列表不同。与返回值类型无关。\n\t\n\t* 参数列表不同：\n\t\t* A:参数个数不同\n\t\t* B:参数类型不同\n\t\t* C:参数的顺序不同(算重载,但是在开发中不用)\n\n\n## 04.26 方法重载练习比较数据是否相等\n\n* A:案例演示\n\t* 需求：比较两个数据是否相等。\n\t* 参数类型分别为两个int类型，两个double类型，并在main方法中进行测试\n\n## 04.27_day04总结\n\n把今天的知识点总结一遍。","slug":"Java学习笔记（day04）","published":1,"updated":"2020-02-20T06:06:59.381Z","comments":1,"layout":"post","link":"","_id":"ckec2td2a000cfkupx1evx561","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"04-01-循环结构概述和for语句的格式及其使用\"><a class=\"header-anchor\" href=\"#04-01-循环结构概述和for语句的格式及其使用\">☆</a>04.01 循环结构概述和for语句的格式及其使用</h2>\n<ul>\n<li>A:循环结构的分类\n<ul>\n<li>for,while,do…while</li>\n</ul>\n</li>\n<li>B:循环结构for语句的格式：</li>\n<li>\n<pre><code>for(初始化表达式;条件表达式;循环后的操作表达式) {\n\t循环体;\n}\n</code></pre>\n</li>\n<li>C执行流程：\n<ul>\n<li>a:执行初始化语句</li>\n<li>b:执行判断条件语句,看其返回值是true还是false\n<ul>\n<li>如果是true，就继续执行</li>\n<li>如果是false，就结束循环</li>\n</ul>\n</li>\n<li>c:执行循环体语句;</li>\n<li>d:执行循环后的操作表达式</li>\n<li>e:回到B继续。</li>\n</ul>\n</li>\n<li>D:案例演示\n<ul>\n<li>在控制台输出10次&quot;helloworld&quot;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-02-循环结构for语句的练习之获取数据\"><a class=\"header-anchor\" href=\"#04-02-循环结构for语句的练习之获取数据\">☆</a>04.02 循环结构for语句的练习之获取数据</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：请在控制台输出数据1-10</li>\n<li>需求：请在控制台输出数据10-1</li>\n</ul>\n</li>\n<li>B:注意事项\n<ul>\n<li>a:判断条件语句无论简单还是复杂结果是boolean类型。</li>\n<li>b:循环体语句如果是一条语句，大括号可以省略；如果是多条语句，大括号不能省略。建议永远不要省略。</li>\n<li>c:一般来说：有左大括号就没有分号，有分号就没有左大括号</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-03-循环结构for语句的练习之求和思想\"><a class=\"header-anchor\" href=\"#04-03-循环结构for语句的练习之求和思想\">☆</a>04.03 循环结构for语句的练习之求和思想</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：求出1-10之间数据之和</li>\n</ul>\n</li>\n<li>B:学生练习\n<ul>\n<li>需求：求出1-100之间偶数和</li>\n<li>需求：求出1-100之间奇数和</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-04-循环结构for语句的练习之水仙花\"><a class=\"header-anchor\" href=\"#04-04-循环结构for语句的练习之水仙花\">☆</a>04.04 循环结构for语句的练习之水仙花</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>\n<p>需求：在控制台输出所有的”水仙花数”</p>\n</li>\n<li>\n<p>所谓的水仙花数是指一个三位数，其各位数字的立方和等于该数本身。</p>\n</li>\n<li>\n<p>举例：153就是一个水仙花数。</p>\n</li>\n<li>\n<p>153 = 1<em>1</em>1 + 5<em>5</em>5 + 3<em>3</em>3 = 1 + 125 + 27 = 153</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-05-循环结构for语句的练习之统计思想\"><a class=\"header-anchor\" href=\"#04-05-循环结构for语句的练习之统计思想\">☆</a>04.05 循环结构for语句的练习之统计思想</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：统计”水仙花数”共有多少个</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-06-循环结构while语句的格式和基本使用\"><a class=\"header-anchor\" href=\"#04-06-循环结构while语句的格式和基本使用\">☆</a>04.06 循环结构while语句的格式和基本使用</h2>\n<ul>\n<li>A:循环结构while语句的格式：</li>\n<li>\n<pre><code>while循环的基本格式：\nwhile(判断条件语句) {\n\t循环体语句;\n}\n\n完整格式：\n\n初始化语句;\n  while(判断条件语句) {\n\t 循环体语句;\n\t 控制条件语句;\n}\n</code></pre>\n</li>\n<li>B:执行流程：\n<ul>\n<li>a:执行初始化语句</li>\n<li>b:执行判断条件语句,看其返回值是true还是false\n<ul>\n<li>如果是true，就继续执行</li>\n<li>如果是false，就结束循环</li>\n</ul>\n</li>\n<li>c:执行循环体语句;</li>\n<li>d:执行控制条件语句</li>\n<li>e:回到B继续。</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>需求：请在控制台输出数据1-10</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-07-循环结构while语句的练习\"><a class=\"header-anchor\" href=\"#04-07-循环结构while语句的练习\">☆</a>04.07 循环结构while语句的练习</h2>\n<ul>\n<li>A:求和思想\n<ul>\n<li>求1-100之和</li>\n</ul>\n</li>\n<li>B:统计思想\n<ul>\n<li>统计”水仙花数”共有多少个</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-08-循环结构do-while语句的格式和基本使用\"><a class=\"header-anchor\" href=\"#04-08-循环结构do-while语句的格式和基本使用\">☆</a>04.08 循环结构do…while语句的格式和基本使用</h2>\n<ul>\n<li>A:循环结构do…while语句的格式：</li>\n<li>\n<pre><code>do {\n\t循环体语句;\n}while(判断条件语句);\n\n完整格式；\n初始化语句;\ndo {\n\t循环体语句;\n\t控制条件语句;\n}while(判断条件语句);\n</code></pre>\n</li>\n<li>B:执行流程：\n<ul>\n<li>a:执行初始化语句</li>\n<li>b:执行循环体语句;</li>\n<li>c:执行控制条件语句</li>\n<li>d:执行判断条件语句,看其返回值是true还是false\n<ul>\n<li>如果是true，就继续执行</li>\n<li>如果是false，就结束循环</li>\n</ul>\n</li>\n<li>e:回到b继续。</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>需求：请在控制台输出数据1-10</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-09-循环结构三种循环语句的区别\"><a class=\"header-anchor\" href=\"#04-09-循环结构三种循环语句的区别\">☆</a>04.09 循环结构三种循环语句的区别</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>三种循环语句的区别:</li>\n<li>do…while循环至少执行一次循环体。</li>\n<li>而for,while循环必须先判断条件是否成立，然后决定是否执行循环体语句。</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>for循环和while循环的区别：\n<ul>\n<li>A:如果你想在循环结束后，继续使用控制条件的那个变量，用while循环，否则用for循环。不知道用谁就用for循环。因为变量及早的从内存中消失，可以提高内存的使用效率。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-10-循环结构注意事项之死循环\"><a class=\"header-anchor\" href=\"#04-10-循环结构注意事项之死循环\">☆</a>04.10 循环结构注意事项之死循环</h2>\n<ul>\n<li>A:一定要注意控制条件语句控制的那个变量的问题，不要弄丢了，否则就容易死循环。</li>\n<li>B:两种最简单的死循环格式\n<ul>\n<li>while(true){…}</li>\n<li>for(;😉{…}</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-11-循环结构循环嵌套输出4行5列的星星\"><a class=\"header-anchor\" href=\"#04-11-循环结构循环嵌套输出4行5列的星星\">☆</a>04.11 循环结构循环嵌套输出4行5列的星星</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：请输出一个4行5列的星星(*)图案。</li>\n<li>\n<pre><code>如图：\n\t*****\n\t*****\n\t*****\n\t*****\n\t\n注意：\n\tSystem.out.println(&quot;*&quot;);和System.out.print(&quot;*&quot;);的区别\n</code></pre>\n</li>\n</ul>\n</li>\n<li>B:结论：\n<ul>\n<li>外循环控制行数，内循环控制列数</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-12-循环结构循环嵌套输出正三角形\"><a class=\"header-anchor\" href=\"#04-12-循环结构循环嵌套输出正三角形\">☆</a>04.12 循环结构循环嵌套输出正三角形</h2>\n<ul>\n<li>A:案例演示</li>\n<li>\n<pre><code>需求：请输出下列的形状\n*\n**\n***\n****\n*****\n</code></pre>\n</li>\n</ul>\n<h2 id=\"04-13-循环结构九九乘法表\"><a class=\"header-anchor\" href=\"#04-13-循环结构九九乘法表\">☆</a>04.13 循环结构九九乘法表</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：在控制台输出九九乘法表。</li>\n</ul>\n</li>\n<li>B:代码优化</li>\n<li>\n<pre><code>注意：\n'\\x' x表示任意，\\是转义符号,这种做法叫转移字符。\n\n'\\t'\ttab键的位置\n'\\r'\t回车\n'\\n'\t换行\n'\\&quot;'\n'\\''\n</code></pre>\n</li>\n</ul>\n<h2 id=\"04-14-控制跳转语句break语句\"><a class=\"header-anchor\" href=\"#04-14-控制跳转语句break语句\">☆</a>04.14 控制跳转语句break语句</h2>\n<ul>\n<li>A:break的使用场景\n<ul>\n<li>只能在switch和循环中</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-15-控制跳转语句continue语句\"><a class=\"header-anchor\" href=\"#04-15-控制跳转语句continue语句\">☆</a>04.15 控制跳转语句continue语句</h2>\n<ul>\n<li>A:continue的使用场景\n<ul>\n<li>只能在循环中</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-16-控制跳转语句标号\"><a class=\"header-anchor\" href=\"#04-16-控制跳转语句标号\">☆</a>04.16 控制跳转语句标号</h2>\n<ul>\n<li>标号:标记某个循环对其控制</li>\n<li>标号组成规则:其实就是合法的标识符</li>\n</ul>\n<h2 id=\"04-17-控制调整语句练习\"><a class=\"header-anchor\" href=\"#04-17-控制调整语句练习\">☆</a>04.17 控制调整语句练习</h2>\n<ul>\n<li>A:练习题</li>\n<li>\n<pre><code>for(int x=1; x&lt;=10; x++) {\n\tif(x%3==0) {\n\t\t//在此处填写代码\n\t}\n\tSystem.out.println(“Java基础班”);\n}\n\n我想在控制台输出2次:“Java基础班“\n我想在控制台输出7次:“Java基础班“\n我想在控制台输出13次:“Java基础班“\t\n</code></pre>\n</li>\n</ul>\n<h2 id=\"04-18-控制跳转语句return语句\"><a class=\"header-anchor\" href=\"#04-18-控制跳转语句return语句\">☆</a>04.18 控制跳转语句return语句</h2>\n<ul>\n<li>A:return的作用\n<ul>\n<li>返回</li>\n<li>其实它的作用不是结束循环的，而是结束方法的。</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>return和break以及continue的区别?</li>\n<li>return是结束方法</li>\n<li>break是跳出循环</li>\n<li>continue是终止本次循环继续下次循环</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-19-方法概述和格式说明\"><a class=\"header-anchor\" href=\"#04-19-方法概述和格式说明\">☆</a>04.19 方法概述和格式说明</h2>\n<ul>\n<li>A:为什么要有方法\n<ul>\n<li>提高代码的复用性</li>\n</ul>\n</li>\n<li>B:什么是方法\n<ul>\n<li>完成特定功能的代码块。</li>\n</ul>\n</li>\n<li>C:方法的格式</li>\n<li>\n<pre><code>修饰符 返回值类型 方法名(参数类型 参数名1,参数类型 参数名2...) {\n\t方法体语句;\n\treturn 返回值; \n} \n</code></pre>\n</li>\n<li>D:方法的格式说明\n<ul>\n<li>修饰符：目前就用 public static。后面我们再详细的讲解其他的修饰符。</li>\n<li>返回值类型：就是功能结果的数据类型。</li>\n<li>方法名：符合命名规则即可。方便我们的调用。</li>\n<li>参数：\n<ul>\n<li>实际参数：就是实际参与运算的。</li>\n<li>形式参数；就是方法定义上的，用于接收实际参数的。</li>\n</ul>\n</li>\n<li>参数类型：就是参数的数据类型</li>\n<li>参数名：就是变量名</li>\n<li>方法体语句：就是完成功能的代码。</li>\n<li>return：结束方法的。</li>\n<li>返回值：就是功能的结果，由return带给调用者。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-20-方法之求和案例及其调用\"><a class=\"header-anchor\" href=\"#04-20-方法之求和案例及其调用\">☆</a>04.20 方法之求和案例及其调用</h2>\n<ul>\n<li>A:如何写一个方法\n<ul>\n<li>1,明确返回值类型</li>\n<li>2,明确参数列表</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>需求：求两个数据之和的案例</li>\n</ul>\n</li>\n<li>C:方法调用图解</li>\n</ul>\n<h2 id=\"04-21-方法的注意事项\"><a class=\"header-anchor\" href=\"#04-21-方法的注意事项\">☆</a>04.21 方法的注意事项</h2>\n<ul>\n<li>A:方法调用(有具体返回值)\n<ul>\n<li>a:单独调用,一般来说没有意义，所以不推荐。</li>\n<li>b:输出调用,但是不够好。因为我们可能需要针对结果进行进一步的操作。</li>\n<li>c:赋值调用,推荐方案。</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>a:方法不调用不执行</li>\n<li>b:方法与方法是平级关系，不能嵌套定义</li>\n<li>c:方法定义的时候参数之间用逗号隔开</li>\n<li>d:方法调用的时候不用在传递数据类型</li>\n<li>e:如果方法有明确的返回值，一定要有return带回一个值</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-22-方法的练习\"><a class=\"header-anchor\" href=\"#04-22-方法的练习\">☆</a>04.22 方法的练习</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：键盘录入两个数据，返回两个数中的较大值</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>需求：键盘录入两个数据，比较两个数是否相等</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-23-方法之输出星形及其调用\"><a class=\"header-anchor\" href=\"#04-23-方法之输出星形及其调用\">☆</a>04.23 方法之输出星形及其调用</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：根据键盘录入的行数和列数，在控制台输出星形</li>\n</ul>\n</li>\n<li>B:方法调用：(无返回值,void)\n<ul>\n<li>单独调用</li>\n<li>输出调用(错误)</li>\n<li>赋值调用(错误)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-24-方法的练习\"><a class=\"header-anchor\" href=\"#04-24-方法的练习\">☆</a>04.24 方法的练习</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：根据键盘录入的数据输出对应的乘法表</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-25-方法重载概述和基本使用\"><a class=\"header-anchor\" href=\"#04-25-方法重载概述和基本使用\">☆</a>04.25 方法重载概述和基本使用</h2>\n<ul>\n<li>A:方法重载概述\n<ul>\n<li>求和案例\n<ul>\n<li>2个整数</li>\n<li>3个整数</li>\n<li>4个整数</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:方法重载：\n<ul>\n<li>\n<p>在同一个类中，方法名相同，参数列表不同。与返回值类型无关。</p>\n</li>\n<li>\n<p>参数列表不同：</p>\n<ul>\n<li>A:参数个数不同</li>\n<li>B:参数类型不同</li>\n<li>C:参数的顺序不同(算重载,但是在开发中不用)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-26-方法重载练习比较数据是否相等\"><a class=\"header-anchor\" href=\"#04-26-方法重载练习比较数据是否相等\">☆</a>04.26 方法重载练习比较数据是否相等</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：比较两个数据是否相等。</li>\n<li>参数类型分别为两个int类型，两个double类型，并在main方法中进行测试</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-27-day04总结\"><a class=\"header-anchor\" href=\"#04-27-day04总结\">☆</a>04.27_day04总结</h2>\n<p>把今天的知识点总结一遍。</p>\n","site":{"data":{}},"length":3299,"excerpt":"","more":"<h2 id=\"04-01-循环结构概述和for语句的格式及其使用\"><a class=\"header-anchor\" href=\"#04-01-循环结构概述和for语句的格式及其使用\">☆</a>04.01 循环结构概述和for语句的格式及其使用</h2>\n<ul>\n<li>A:循环结构的分类\n<ul>\n<li>for,while,do…while</li>\n</ul>\n</li>\n<li>B:循环结构for语句的格式：</li>\n<li>\n<pre><code>for(初始化表达式;条件表达式;循环后的操作表达式) {\n\t循环体;\n}\n</code></pre>\n</li>\n<li>C执行流程：\n<ul>\n<li>a:执行初始化语句</li>\n<li>b:执行判断条件语句,看其返回值是true还是false\n<ul>\n<li>如果是true，就继续执行</li>\n<li>如果是false，就结束循环</li>\n</ul>\n</li>\n<li>c:执行循环体语句;</li>\n<li>d:执行循环后的操作表达式</li>\n<li>e:回到B继续。</li>\n</ul>\n</li>\n<li>D:案例演示\n<ul>\n<li>在控制台输出10次&quot;helloworld&quot;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-02-循环结构for语句的练习之获取数据\"><a class=\"header-anchor\" href=\"#04-02-循环结构for语句的练习之获取数据\">☆</a>04.02 循环结构for语句的练习之获取数据</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：请在控制台输出数据1-10</li>\n<li>需求：请在控制台输出数据10-1</li>\n</ul>\n</li>\n<li>B:注意事项\n<ul>\n<li>a:判断条件语句无论简单还是复杂结果是boolean类型。</li>\n<li>b:循环体语句如果是一条语句，大括号可以省略；如果是多条语句，大括号不能省略。建议永远不要省略。</li>\n<li>c:一般来说：有左大括号就没有分号，有分号就没有左大括号</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-03-循环结构for语句的练习之求和思想\"><a class=\"header-anchor\" href=\"#04-03-循环结构for语句的练习之求和思想\">☆</a>04.03 循环结构for语句的练习之求和思想</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：求出1-10之间数据之和</li>\n</ul>\n</li>\n<li>B:学生练习\n<ul>\n<li>需求：求出1-100之间偶数和</li>\n<li>需求：求出1-100之间奇数和</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-04-循环结构for语句的练习之水仙花\"><a class=\"header-anchor\" href=\"#04-04-循环结构for语句的练习之水仙花\">☆</a>04.04 循环结构for语句的练习之水仙花</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>\n<p>需求：在控制台输出所有的”水仙花数”</p>\n</li>\n<li>\n<p>所谓的水仙花数是指一个三位数，其各位数字的立方和等于该数本身。</p>\n</li>\n<li>\n<p>举例：153就是一个水仙花数。</p>\n</li>\n<li>\n<p>153 = 1<em>1</em>1 + 5<em>5</em>5 + 3<em>3</em>3 = 1 + 125 + 27 = 153</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-05-循环结构for语句的练习之统计思想\"><a class=\"header-anchor\" href=\"#04-05-循环结构for语句的练习之统计思想\">☆</a>04.05 循环结构for语句的练习之统计思想</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：统计”水仙花数”共有多少个</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-06-循环结构while语句的格式和基本使用\"><a class=\"header-anchor\" href=\"#04-06-循环结构while语句的格式和基本使用\">☆</a>04.06 循环结构while语句的格式和基本使用</h2>\n<ul>\n<li>A:循环结构while语句的格式：</li>\n<li>\n<pre><code>while循环的基本格式：\nwhile(判断条件语句) {\n\t循环体语句;\n}\n\n完整格式：\n\n初始化语句;\n  while(判断条件语句) {\n\t 循环体语句;\n\t 控制条件语句;\n}\n</code></pre>\n</li>\n<li>B:执行流程：\n<ul>\n<li>a:执行初始化语句</li>\n<li>b:执行判断条件语句,看其返回值是true还是false\n<ul>\n<li>如果是true，就继续执行</li>\n<li>如果是false，就结束循环</li>\n</ul>\n</li>\n<li>c:执行循环体语句;</li>\n<li>d:执行控制条件语句</li>\n<li>e:回到B继续。</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>需求：请在控制台输出数据1-10</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-07-循环结构while语句的练习\"><a class=\"header-anchor\" href=\"#04-07-循环结构while语句的练习\">☆</a>04.07 循环结构while语句的练习</h2>\n<ul>\n<li>A:求和思想\n<ul>\n<li>求1-100之和</li>\n</ul>\n</li>\n<li>B:统计思想\n<ul>\n<li>统计”水仙花数”共有多少个</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-08-循环结构do-while语句的格式和基本使用\"><a class=\"header-anchor\" href=\"#04-08-循环结构do-while语句的格式和基本使用\">☆</a>04.08 循环结构do…while语句的格式和基本使用</h2>\n<ul>\n<li>A:循环结构do…while语句的格式：</li>\n<li>\n<pre><code>do {\n\t循环体语句;\n}while(判断条件语句);\n\n完整格式；\n初始化语句;\ndo {\n\t循环体语句;\n\t控制条件语句;\n}while(判断条件语句);\n</code></pre>\n</li>\n<li>B:执行流程：\n<ul>\n<li>a:执行初始化语句</li>\n<li>b:执行循环体语句;</li>\n<li>c:执行控制条件语句</li>\n<li>d:执行判断条件语句,看其返回值是true还是false\n<ul>\n<li>如果是true，就继续执行</li>\n<li>如果是false，就结束循环</li>\n</ul>\n</li>\n<li>e:回到b继续。</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>需求：请在控制台输出数据1-10</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-09-循环结构三种循环语句的区别\"><a class=\"header-anchor\" href=\"#04-09-循环结构三种循环语句的区别\">☆</a>04.09 循环结构三种循环语句的区别</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>三种循环语句的区别:</li>\n<li>do…while循环至少执行一次循环体。</li>\n<li>而for,while循环必须先判断条件是否成立，然后决定是否执行循环体语句。</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>for循环和while循环的区别：\n<ul>\n<li>A:如果你想在循环结束后，继续使用控制条件的那个变量，用while循环，否则用for循环。不知道用谁就用for循环。因为变量及早的从内存中消失，可以提高内存的使用效率。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-10-循环结构注意事项之死循环\"><a class=\"header-anchor\" href=\"#04-10-循环结构注意事项之死循环\">☆</a>04.10 循环结构注意事项之死循环</h2>\n<ul>\n<li>A:一定要注意控制条件语句控制的那个变量的问题，不要弄丢了，否则就容易死循环。</li>\n<li>B:两种最简单的死循环格式\n<ul>\n<li>while(true){…}</li>\n<li>for(;😉{…}</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-11-循环结构循环嵌套输出4行5列的星星\"><a class=\"header-anchor\" href=\"#04-11-循环结构循环嵌套输出4行5列的星星\">☆</a>04.11 循环结构循环嵌套输出4行5列的星星</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：请输出一个4行5列的星星(*)图案。</li>\n<li>\n<pre><code>如图：\n\t*****\n\t*****\n\t*****\n\t*****\n\t\n注意：\n\tSystem.out.println(&quot;*&quot;);和System.out.print(&quot;*&quot;);的区别\n</code></pre>\n</li>\n</ul>\n</li>\n<li>B:结论：\n<ul>\n<li>外循环控制行数，内循环控制列数</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-12-循环结构循环嵌套输出正三角形\"><a class=\"header-anchor\" href=\"#04-12-循环结构循环嵌套输出正三角形\">☆</a>04.12 循环结构循环嵌套输出正三角形</h2>\n<ul>\n<li>A:案例演示</li>\n<li>\n<pre><code>需求：请输出下列的形状\n*\n**\n***\n****\n*****\n</code></pre>\n</li>\n</ul>\n<h2 id=\"04-13-循环结构九九乘法表\"><a class=\"header-anchor\" href=\"#04-13-循环结构九九乘法表\">☆</a>04.13 循环结构九九乘法表</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：在控制台输出九九乘法表。</li>\n</ul>\n</li>\n<li>B:代码优化</li>\n<li>\n<pre><code>注意：\n'\\x' x表示任意，\\是转义符号,这种做法叫转移字符。\n\n'\\t'\ttab键的位置\n'\\r'\t回车\n'\\n'\t换行\n'\\&quot;'\n'\\''\n</code></pre>\n</li>\n</ul>\n<h2 id=\"04-14-控制跳转语句break语句\"><a class=\"header-anchor\" href=\"#04-14-控制跳转语句break语句\">☆</a>04.14 控制跳转语句break语句</h2>\n<ul>\n<li>A:break的使用场景\n<ul>\n<li>只能在switch和循环中</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-15-控制跳转语句continue语句\"><a class=\"header-anchor\" href=\"#04-15-控制跳转语句continue语句\">☆</a>04.15 控制跳转语句continue语句</h2>\n<ul>\n<li>A:continue的使用场景\n<ul>\n<li>只能在循环中</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-16-控制跳转语句标号\"><a class=\"header-anchor\" href=\"#04-16-控制跳转语句标号\">☆</a>04.16 控制跳转语句标号</h2>\n<ul>\n<li>标号:标记某个循环对其控制</li>\n<li>标号组成规则:其实就是合法的标识符</li>\n</ul>\n<h2 id=\"04-17-控制调整语句练习\"><a class=\"header-anchor\" href=\"#04-17-控制调整语句练习\">☆</a>04.17 控制调整语句练习</h2>\n<ul>\n<li>A:练习题</li>\n<li>\n<pre><code>for(int x=1; x&lt;=10; x++) {\n\tif(x%3==0) {\n\t\t//在此处填写代码\n\t}\n\tSystem.out.println(“Java基础班”);\n}\n\n我想在控制台输出2次:“Java基础班“\n我想在控制台输出7次:“Java基础班“\n我想在控制台输出13次:“Java基础班“\t\n</code></pre>\n</li>\n</ul>\n<h2 id=\"04-18-控制跳转语句return语句\"><a class=\"header-anchor\" href=\"#04-18-控制跳转语句return语句\">☆</a>04.18 控制跳转语句return语句</h2>\n<ul>\n<li>A:return的作用\n<ul>\n<li>返回</li>\n<li>其实它的作用不是结束循环的，而是结束方法的。</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>return和break以及continue的区别?</li>\n<li>return是结束方法</li>\n<li>break是跳出循环</li>\n<li>continue是终止本次循环继续下次循环</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-19-方法概述和格式说明\"><a class=\"header-anchor\" href=\"#04-19-方法概述和格式说明\">☆</a>04.19 方法概述和格式说明</h2>\n<ul>\n<li>A:为什么要有方法\n<ul>\n<li>提高代码的复用性</li>\n</ul>\n</li>\n<li>B:什么是方法\n<ul>\n<li>完成特定功能的代码块。</li>\n</ul>\n</li>\n<li>C:方法的格式</li>\n<li>\n<pre><code>修饰符 返回值类型 方法名(参数类型 参数名1,参数类型 参数名2...) {\n\t方法体语句;\n\treturn 返回值; \n} \n</code></pre>\n</li>\n<li>D:方法的格式说明\n<ul>\n<li>修饰符：目前就用 public static。后面我们再详细的讲解其他的修饰符。</li>\n<li>返回值类型：就是功能结果的数据类型。</li>\n<li>方法名：符合命名规则即可。方便我们的调用。</li>\n<li>参数：\n<ul>\n<li>实际参数：就是实际参与运算的。</li>\n<li>形式参数；就是方法定义上的，用于接收实际参数的。</li>\n</ul>\n</li>\n<li>参数类型：就是参数的数据类型</li>\n<li>参数名：就是变量名</li>\n<li>方法体语句：就是完成功能的代码。</li>\n<li>return：结束方法的。</li>\n<li>返回值：就是功能的结果，由return带给调用者。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-20-方法之求和案例及其调用\"><a class=\"header-anchor\" href=\"#04-20-方法之求和案例及其调用\">☆</a>04.20 方法之求和案例及其调用</h2>\n<ul>\n<li>A:如何写一个方法\n<ul>\n<li>1,明确返回值类型</li>\n<li>2,明确参数列表</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>需求：求两个数据之和的案例</li>\n</ul>\n</li>\n<li>C:方法调用图解</li>\n</ul>\n<h2 id=\"04-21-方法的注意事项\"><a class=\"header-anchor\" href=\"#04-21-方法的注意事项\">☆</a>04.21 方法的注意事项</h2>\n<ul>\n<li>A:方法调用(有具体返回值)\n<ul>\n<li>a:单独调用,一般来说没有意义，所以不推荐。</li>\n<li>b:输出调用,但是不够好。因为我们可能需要针对结果进行进一步的操作。</li>\n<li>c:赋值调用,推荐方案。</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>a:方法不调用不执行</li>\n<li>b:方法与方法是平级关系，不能嵌套定义</li>\n<li>c:方法定义的时候参数之间用逗号隔开</li>\n<li>d:方法调用的时候不用在传递数据类型</li>\n<li>e:如果方法有明确的返回值，一定要有return带回一个值</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-22-方法的练习\"><a class=\"header-anchor\" href=\"#04-22-方法的练习\">☆</a>04.22 方法的练习</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：键盘录入两个数据，返回两个数中的较大值</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>需求：键盘录入两个数据，比较两个数是否相等</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-23-方法之输出星形及其调用\"><a class=\"header-anchor\" href=\"#04-23-方法之输出星形及其调用\">☆</a>04.23 方法之输出星形及其调用</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：根据键盘录入的行数和列数，在控制台输出星形</li>\n</ul>\n</li>\n<li>B:方法调用：(无返回值,void)\n<ul>\n<li>单独调用</li>\n<li>输出调用(错误)</li>\n<li>赋值调用(错误)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-24-方法的练习\"><a class=\"header-anchor\" href=\"#04-24-方法的练习\">☆</a>04.24 方法的练习</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：根据键盘录入的数据输出对应的乘法表</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-25-方法重载概述和基本使用\"><a class=\"header-anchor\" href=\"#04-25-方法重载概述和基本使用\">☆</a>04.25 方法重载概述和基本使用</h2>\n<ul>\n<li>A:方法重载概述\n<ul>\n<li>求和案例\n<ul>\n<li>2个整数</li>\n<li>3个整数</li>\n<li>4个整数</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:方法重载：\n<ul>\n<li>\n<p>在同一个类中，方法名相同，参数列表不同。与返回值类型无关。</p>\n</li>\n<li>\n<p>参数列表不同：</p>\n<ul>\n<li>A:参数个数不同</li>\n<li>B:参数类型不同</li>\n<li>C:参数的顺序不同(算重载,但是在开发中不用)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-26-方法重载练习比较数据是否相等\"><a class=\"header-anchor\" href=\"#04-26-方法重载练习比较数据是否相等\">☆</a>04.26 方法重载练习比较数据是否相等</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：比较两个数据是否相等。</li>\n<li>参数类型分别为两个int类型，两个double类型，并在main方法中进行测试</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"04-27-day04总结\"><a class=\"header-anchor\" href=\"#04-27-day04总结\">☆</a>04.27_day04总结</h2>\n<p>把今天的知识点总结一遍。</p>\n"},{"title":"Java学习笔记（day07）","copyright":false,"abbrlink":"2da3bd81","notshow":true,"date":"2018-10-09T07:15:55.000Z","password":null,"description":"面向对象","image":null,"photos":[],"sticky":null,"_content":"## 07.01 构造方法Constructor概述和格式 (掌握)\n\n* A:构造方法概述和作用\n\t* 给对象的数据(属性)进行初始化\n* B:构造方法格式特点\n\t* a:方法名与类名相同(大小也要与类名一致)\n\t* b:没有返回值类型，连void都没有\n\t* c:没有具体的返回值return;\n\n## 07.02 构造方法的重载及注意事项 (掌握)\n\n* A:案例演示\n\t* 构造方法的重载\n\t* 重载:方法名相同,与返回值类型无关(构造方法没有返回值),只看参数列表\n* B:构造方法注意事项\n\t* a:如果我们没有给出构造方法，系统将自动提供一个无参构造方法。\n\t* b:如果我们给出了构造方法，系统将不再提供默认的无参构造方法。\n\t\t* 注意：这个时候，如果我们还想使用无参构造方法，就必须自己给出。建议永远自己给出无参构造方法\n\n## 07.03 给成员变量赋值的两种方式的区别\n\n* A:setXxx()方法\n\t* 修改属性值 \n* B:构造方法\n\t* 给对象中属性进行初始化 \n\n## 07.04 学生类的代码及测试 (掌握)\n\n* A:案例演示\n\t* 学生类：\n\t\t* 成员变量：\n\t\t\t* name，age\n\t\t* 构造方法：\n\t\t\t* 无参，带两个参\n\t\t* 成员方法：\n\t\t\t* getXxx()/setXxx()\n\t\t\t* show()：输出该类的所有成员变量值\n* B:给成员变量赋值：\n\t* a:setXxx()方法\n\t* b:构造方法\n\t\n* C:输出成员变量值的方式：\n\t* a:通过getXxx()分别获取然后拼接\n\t* b:通过调用show()方法搞定\n\n## 07.05 手机类的代码及测试 (掌握)\n\n* A:案例演示\n\t* 模仿学生类，完成手机类代码\n\n## 07.06 创建一个对象的步骤 (掌握)\n\n* A:画图演示\n\t* 画图说明一个对象的创建过程做了哪些事情?\n\t* Student s = new Student();\n\t* 1,Student.class加载进内存\n\t* 2,声明一个Student类型引用s\n\t* 3,在堆内存创建对象,\n\t* 4,给对象中属性默认初始化值\n\t* 5,属性进行显示初始化\n\t* 6,构造方法进栈,对对象中的属性赋值,构造方法弹栈\n\t* 7,将对象的地址值赋值给s\n\n## 07.07 长方形案例练习 (掌握)\n\n* A:案例演示\n\t* 需求：\n\t\t* 定义一个长方形类,定义 求周长和面积的方法，\n\t\t* 然后定义一个测试类进行测试。\n\n## 07.08 员工类案例练习 (掌握)\n\n* A:案例演示\n\t* 需求：定义一个员工类Employee\n\t* 自己分析出几个成员，然后给出成员变量\n\t\t* 姓名name,工号id,工资salary \n\t* 构造方法，\n\t\t* 空参和有参的\n\t* getXxx()setXxx()方法，\n\t* 以及一个显示所有成员信息的方法。并测试。\n\t\t* work \n\n## 07.09 static关键字及内存图 (了解)\n\n* A:案例演示\n\t* 通过一个案例引入static关键字。\n\t* 人类：Person。每个人都有国籍，中国。\n\n* B:画图演示\n\t* 带有static的内存图\n \n## 07.10 static关键字的特点 (掌握)\n\n* A:static关键字的特点\n\t* a:随着类的加载而加载\n\t* b:优先于对象存在\n\t* c:被类的所有对象共享\n\t\t* 举例：咱们班级的学生应该共用同一个班级编号。\n\t\t* 其实这个特点也是在告诉我们什么时候使用静态?\n\t\t\t* 如果某个成员变量是被所有对象共享的，那么它就应该定义为静态的。\n\t\t* 举例：\n\t\t\t* 饮水机(用静态修饰)\n\t\t\t* 水杯(不能用静态修饰)\n\t\t\t* 共性用静态,特性用非静态\n\t* d:可以通过类名调用\n\t\t* 其实它本身也可以通过对象名调用。\n\t\t* 推荐使用类名调用。\n\t\t* 静态修饰的内容一般我们称其为：与类相关的，类成员\n* B:案例演示\n\t* static关键字的特点\n\n\n## 07.11 static的注意事项 (掌握)\n\n* A:static的注意事项\n\t* a:在静态方法中是没有this关键字的\n\t\t* 如何理解呢?\n\t\t\t* 静态是随着类的加载而加载，this是随着对象的创建而存在。\n\t\t\t* 静态比对象先存在。\n\t* b:静态方法只能访问静态的成员变量和静态的成员方法\n\t\t* 静态方法：\n\t\t\t* 成员变量：只能访问静态变量\n\t\t\t* 成员方法：只能访问静态成员方法\n\t\t* 非静态方法：\n\t\t\t* 成员变量：可以是静态的，也可以是非静态的\n\t\t\t* 成员方法：可是是静态的成员方法，也可以是非静态的成员方法。\n\t\t* 简单记：\n\t\t\t* 静态只能访问静态。\n* B:案例演示\n\t* static的注意事项\n\n## 07.12 静态变量和成员变量的区别 (掌握)\n\n* 静态变量也叫类变量  成员变量也叫对象变量\n* A:所属不同\n\t* 静态变量属于类，所以也称为为类变量\n\t* 成员变量属于对象，所以也称为实例变量(对象变量)\n* B:内存中位置不同\n\t* 静态变量存储于方法区的静态区\n\t* 成员变量存储于堆内存\n* C:内存出现时间不同\n\t* 静态变量随着类的加载而加载，随着类的消失而消失\n\t* 成员变量随着对象的创建而存在，随着对象的消失而消失\n* D:调用不同\n\t* 静态变量可以通过类名调用，也可以通过对象调用\n\t* 成员变量只能通过对 象名调用\n\n## 07.13 main方法的格式详细解释 (了解)\n\n* A:格式\n\t* public static void main(String[] args) {}\n* B:针对格式的解释\n\t* public 被jvm调用，访问权限足够大。\n\t* static 被jvm调用，不用创建对象，直接类名访问\n\t* void被jvm调用，不需要给jvm返回值\n\t* main 一个通用的名称，虽然不是关键字，但是被jvm识别\n\t* String[] args 以前用于接收键盘录入的\n* C:演示案例\n\t* 通过args接收键盘例如数据\n\n## 07.14 工具类中使用静态 (了解)\n\n* A:制作一个工具类\n\t* ArrayTool\n\t* 1,获取最大值\n\t* 2,数组的遍历\n\t* 3,数组的反转\n\t\n\n## 07.15 说明书的制作过程 (了解)\n\n* A:对工具类加入文档注释\n* B:通过javadoc命令生成说明书\n\t* @author(提取作者内容)\n\t* @version(提取版本内容)\n\t* javadoc -d 指定的文件目录 -author -version ArrayTool.java\n\t* @param 参数名称//形式参数的变量名称@return 函数运行完返回的数据\n\n## 07.16 如何使用JDK提供的帮助文档 (了解)\n\n* A:找到文档，打开文档\n* B:点击显示，找到索引，出现输入框\n* C:你应该知道你找谁?举例：Scanner\n* D:看这个类的结构(需不需要导包)\n\t* 成员变量\t字段\n\t* 构造方法\t构造方法\n\t* 成员方法\t方法\n\n## 07.17 学习Math类的随机数功能 (了解)\n\n* 打开JDK提供的帮助文档学习\n* A:Math类概述\n\t* 类包含用于执行基本数学运算的方法\n* B:Math类特点\n\t* 由于Math类在java.lang包下，所以不需要导包。\n\t* 因为它的成员全部是静态的,所以私有了构造方法\n* C:获取随机数的方法\n\t* public static double random():返回带正号的 double 值，该值大于等于 0.0 且小于 1.0。\n* D:我要获取一个1-100之间的随机数，肿么办?\n\t* int number = (int)(Math.random()*100)+1;\n\n## 07.18 猜数字小游戏案例 (了解)\n\n* A:案例演示\n\t* 需求：猜数字小游戏(数据在1-100之间)\n\n## 07.19_day07总结\n把今天的知识点总结一遍。","source":"_posts/Java学习笔记（day07）.md","raw":"---\ntitle: Java学习笔记（day07）\ncopyright: false\nabbrlink: 2da3bd81\nnotshow: true\ntags:\n  - Java\ncategories: Java\ndate: 2018-10-09 15:15:55\npassword:\ndescription: 面向对象\nimage:\nphotos:\nsticky:\n---\n## 07.01 构造方法Constructor概述和格式 (掌握)\n\n* A:构造方法概述和作用\n\t* 给对象的数据(属性)进行初始化\n* B:构造方法格式特点\n\t* a:方法名与类名相同(大小也要与类名一致)\n\t* b:没有返回值类型，连void都没有\n\t* c:没有具体的返回值return;\n\n## 07.02 构造方法的重载及注意事项 (掌握)\n\n* A:案例演示\n\t* 构造方法的重载\n\t* 重载:方法名相同,与返回值类型无关(构造方法没有返回值),只看参数列表\n* B:构造方法注意事项\n\t* a:如果我们没有给出构造方法，系统将自动提供一个无参构造方法。\n\t* b:如果我们给出了构造方法，系统将不再提供默认的无参构造方法。\n\t\t* 注意：这个时候，如果我们还想使用无参构造方法，就必须自己给出。建议永远自己给出无参构造方法\n\n## 07.03 给成员变量赋值的两种方式的区别\n\n* A:setXxx()方法\n\t* 修改属性值 \n* B:构造方法\n\t* 给对象中属性进行初始化 \n\n## 07.04 学生类的代码及测试 (掌握)\n\n* A:案例演示\n\t* 学生类：\n\t\t* 成员变量：\n\t\t\t* name，age\n\t\t* 构造方法：\n\t\t\t* 无参，带两个参\n\t\t* 成员方法：\n\t\t\t* getXxx()/setXxx()\n\t\t\t* show()：输出该类的所有成员变量值\n* B:给成员变量赋值：\n\t* a:setXxx()方法\n\t* b:构造方法\n\t\n* C:输出成员变量值的方式：\n\t* a:通过getXxx()分别获取然后拼接\n\t* b:通过调用show()方法搞定\n\n## 07.05 手机类的代码及测试 (掌握)\n\n* A:案例演示\n\t* 模仿学生类，完成手机类代码\n\n## 07.06 创建一个对象的步骤 (掌握)\n\n* A:画图演示\n\t* 画图说明一个对象的创建过程做了哪些事情?\n\t* Student s = new Student();\n\t* 1,Student.class加载进内存\n\t* 2,声明一个Student类型引用s\n\t* 3,在堆内存创建对象,\n\t* 4,给对象中属性默认初始化值\n\t* 5,属性进行显示初始化\n\t* 6,构造方法进栈,对对象中的属性赋值,构造方法弹栈\n\t* 7,将对象的地址值赋值给s\n\n## 07.07 长方形案例练习 (掌握)\n\n* A:案例演示\n\t* 需求：\n\t\t* 定义一个长方形类,定义 求周长和面积的方法，\n\t\t* 然后定义一个测试类进行测试。\n\n## 07.08 员工类案例练习 (掌握)\n\n* A:案例演示\n\t* 需求：定义一个员工类Employee\n\t* 自己分析出几个成员，然后给出成员变量\n\t\t* 姓名name,工号id,工资salary \n\t* 构造方法，\n\t\t* 空参和有参的\n\t* getXxx()setXxx()方法，\n\t* 以及一个显示所有成员信息的方法。并测试。\n\t\t* work \n\n## 07.09 static关键字及内存图 (了解)\n\n* A:案例演示\n\t* 通过一个案例引入static关键字。\n\t* 人类：Person。每个人都有国籍，中国。\n\n* B:画图演示\n\t* 带有static的内存图\n \n## 07.10 static关键字的特点 (掌握)\n\n* A:static关键字的特点\n\t* a:随着类的加载而加载\n\t* b:优先于对象存在\n\t* c:被类的所有对象共享\n\t\t* 举例：咱们班级的学生应该共用同一个班级编号。\n\t\t* 其实这个特点也是在告诉我们什么时候使用静态?\n\t\t\t* 如果某个成员变量是被所有对象共享的，那么它就应该定义为静态的。\n\t\t* 举例：\n\t\t\t* 饮水机(用静态修饰)\n\t\t\t* 水杯(不能用静态修饰)\n\t\t\t* 共性用静态,特性用非静态\n\t* d:可以通过类名调用\n\t\t* 其实它本身也可以通过对象名调用。\n\t\t* 推荐使用类名调用。\n\t\t* 静态修饰的内容一般我们称其为：与类相关的，类成员\n* B:案例演示\n\t* static关键字的特点\n\n\n## 07.11 static的注意事项 (掌握)\n\n* A:static的注意事项\n\t* a:在静态方法中是没有this关键字的\n\t\t* 如何理解呢?\n\t\t\t* 静态是随着类的加载而加载，this是随着对象的创建而存在。\n\t\t\t* 静态比对象先存在。\n\t* b:静态方法只能访问静态的成员变量和静态的成员方法\n\t\t* 静态方法：\n\t\t\t* 成员变量：只能访问静态变量\n\t\t\t* 成员方法：只能访问静态成员方法\n\t\t* 非静态方法：\n\t\t\t* 成员变量：可以是静态的，也可以是非静态的\n\t\t\t* 成员方法：可是是静态的成员方法，也可以是非静态的成员方法。\n\t\t* 简单记：\n\t\t\t* 静态只能访问静态。\n* B:案例演示\n\t* static的注意事项\n\n## 07.12 静态变量和成员变量的区别 (掌握)\n\n* 静态变量也叫类变量  成员变量也叫对象变量\n* A:所属不同\n\t* 静态变量属于类，所以也称为为类变量\n\t* 成员变量属于对象，所以也称为实例变量(对象变量)\n* B:内存中位置不同\n\t* 静态变量存储于方法区的静态区\n\t* 成员变量存储于堆内存\n* C:内存出现时间不同\n\t* 静态变量随着类的加载而加载，随着类的消失而消失\n\t* 成员变量随着对象的创建而存在，随着对象的消失而消失\n* D:调用不同\n\t* 静态变量可以通过类名调用，也可以通过对象调用\n\t* 成员变量只能通过对 象名调用\n\n## 07.13 main方法的格式详细解释 (了解)\n\n* A:格式\n\t* public static void main(String[] args) {}\n* B:针对格式的解释\n\t* public 被jvm调用，访问权限足够大。\n\t* static 被jvm调用，不用创建对象，直接类名访问\n\t* void被jvm调用，不需要给jvm返回值\n\t* main 一个通用的名称，虽然不是关键字，但是被jvm识别\n\t* String[] args 以前用于接收键盘录入的\n* C:演示案例\n\t* 通过args接收键盘例如数据\n\n## 07.14 工具类中使用静态 (了解)\n\n* A:制作一个工具类\n\t* ArrayTool\n\t* 1,获取最大值\n\t* 2,数组的遍历\n\t* 3,数组的反转\n\t\n\n## 07.15 说明书的制作过程 (了解)\n\n* A:对工具类加入文档注释\n* B:通过javadoc命令生成说明书\n\t* @author(提取作者内容)\n\t* @version(提取版本内容)\n\t* javadoc -d 指定的文件目录 -author -version ArrayTool.java\n\t* @param 参数名称//形式参数的变量名称@return 函数运行完返回的数据\n\n## 07.16 如何使用JDK提供的帮助文档 (了解)\n\n* A:找到文档，打开文档\n* B:点击显示，找到索引，出现输入框\n* C:你应该知道你找谁?举例：Scanner\n* D:看这个类的结构(需不需要导包)\n\t* 成员变量\t字段\n\t* 构造方法\t构造方法\n\t* 成员方法\t方法\n\n## 07.17 学习Math类的随机数功能 (了解)\n\n* 打开JDK提供的帮助文档学习\n* A:Math类概述\n\t* 类包含用于执行基本数学运算的方法\n* B:Math类特点\n\t* 由于Math类在java.lang包下，所以不需要导包。\n\t* 因为它的成员全部是静态的,所以私有了构造方法\n* C:获取随机数的方法\n\t* public static double random():返回带正号的 double 值，该值大于等于 0.0 且小于 1.0。\n* D:我要获取一个1-100之间的随机数，肿么办?\n\t* int number = (int)(Math.random()*100)+1;\n\n## 07.18 猜数字小游戏案例 (了解)\n\n* A:案例演示\n\t* 需求：猜数字小游戏(数据在1-100之间)\n\n## 07.19_day07总结\n把今天的知识点总结一遍。","slug":"Java学习笔记（day07）","published":1,"updated":"2020-02-20T06:06:59.386Z","comments":1,"layout":"post","link":"","_id":"ckec2td2c000dfkupbyatng7p","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"07-01-构造方法constructor概述和格式-掌握\"><a class=\"header-anchor\" href=\"#07-01-构造方法constructor概述和格式-掌握\">☆</a>07.01 构造方法Constructor概述和格式 (掌握)</h2>\n<ul>\n<li>A:构造方法概述和作用\n<ul>\n<li>给对象的数据(属性)进行初始化</li>\n</ul>\n</li>\n<li>B:构造方法格式特点\n<ul>\n<li>a:方法名与类名相同(大小也要与类名一致)</li>\n<li>b:没有返回值类型，连void都没有</li>\n<li>c:没有具体的返回值return;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-02-构造方法的重载及注意事项-掌握\"><a class=\"header-anchor\" href=\"#07-02-构造方法的重载及注意事项-掌握\">☆</a>07.02 构造方法的重载及注意事项 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>构造方法的重载</li>\n<li>重载:方法名相同,与返回值类型无关(构造方法没有返回值),只看参数列表</li>\n</ul>\n</li>\n<li>B:构造方法注意事项\n<ul>\n<li>a:如果我们没有给出构造方法，系统将自动提供一个无参构造方法。</li>\n<li>b:如果我们给出了构造方法，系统将不再提供默认的无参构造方法。\n<ul>\n<li>注意：这个时候，如果我们还想使用无参构造方法，就必须自己给出。建议永远自己给出无参构造方法</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-03-给成员变量赋值的两种方式的区别\"><a class=\"header-anchor\" href=\"#07-03-给成员变量赋值的两种方式的区别\">☆</a>07.03 给成员变量赋值的两种方式的区别</h2>\n<ul>\n<li>A:setXxx()方法\n<ul>\n<li>修改属性值</li>\n</ul>\n</li>\n<li>B:构造方法\n<ul>\n<li>给对象中属性进行初始化</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-04-学生类的代码及测试-掌握\"><a class=\"header-anchor\" href=\"#07-04-学生类的代码及测试-掌握\">☆</a>07.04 学生类的代码及测试 (掌握)</h2>\n<ul>\n<li>\n<p>A:案例演示</p>\n<ul>\n<li>学生类：\n<ul>\n<li>成员变量：\n<ul>\n<li>name，age</li>\n</ul>\n</li>\n<li>构造方法：\n<ul>\n<li>无参，带两个参</li>\n</ul>\n</li>\n<li>成员方法：\n<ul>\n<li>getXxx()/setXxx()</li>\n<li>show()：输出该类的所有成员变量值</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>B:给成员变量赋值：</p>\n<ul>\n<li>a:setXxx()方法</li>\n<li>b:构造方法</li>\n</ul>\n</li>\n<li>\n<p>C:输出成员变量值的方式：</p>\n<ul>\n<li>a:通过getXxx()分别获取然后拼接</li>\n<li>b:通过调用show()方法搞定</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-05-手机类的代码及测试-掌握\"><a class=\"header-anchor\" href=\"#07-05-手机类的代码及测试-掌握\">☆</a>07.05 手机类的代码及测试 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>模仿学生类，完成手机类代码</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-06-创建一个对象的步骤-掌握\"><a class=\"header-anchor\" href=\"#07-06-创建一个对象的步骤-掌握\">☆</a>07.06 创建一个对象的步骤 (掌握)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>画图说明一个对象的创建过程做了哪些事情?</li>\n<li>Student s = new Student();</li>\n<li>1,Student.class加载进内存</li>\n<li>2,声明一个Student类型引用s</li>\n<li>3,在堆内存创建对象,</li>\n<li>4,给对象中属性默认初始化值</li>\n<li>5,属性进行显示初始化</li>\n<li>6,构造方法进栈,对对象中的属性赋值,构造方法弹栈</li>\n<li>7,将对象的地址值赋值给s</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-07-长方形案例练习-掌握\"><a class=\"header-anchor\" href=\"#07-07-长方形案例练习-掌握\">☆</a>07.07 长方形案例练习 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：\n<ul>\n<li>定义一个长方形类,定义 求周长和面积的方法，</li>\n<li>然后定义一个测试类进行测试。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-08-员工类案例练习-掌握\"><a class=\"header-anchor\" href=\"#07-08-员工类案例练习-掌握\">☆</a>07.08 员工类案例练习 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：定义一个员工类Employee</li>\n<li>自己分析出几个成员，然后给出成员变量\n<ul>\n<li>姓名name,工号id,工资salary</li>\n</ul>\n</li>\n<li>构造方法，\n<ul>\n<li>空参和有参的</li>\n</ul>\n</li>\n<li>getXxx()setXxx()方法，</li>\n<li>以及一个显示所有成员信息的方法。并测试。\n<ul>\n<li>work</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-09-static关键字及内存图-了解\"><a class=\"header-anchor\" href=\"#07-09-static关键字及内存图-了解\">☆</a>07.09 static关键字及内存图 (了解)</h2>\n<ul>\n<li>\n<p>A:案例演示</p>\n<ul>\n<li>通过一个案例引入static关键字。</li>\n<li>人类：Person。每个人都有国籍，中国。</li>\n</ul>\n</li>\n<li>\n<p>B:画图演示</p>\n<ul>\n<li>带有static的内存图</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-10-static关键字的特点-掌握\"><a class=\"header-anchor\" href=\"#07-10-static关键字的特点-掌握\">☆</a>07.10 static关键字的特点 (掌握)</h2>\n<ul>\n<li>A:static关键字的特点\n<ul>\n<li>a:随着类的加载而加载</li>\n<li>b:优先于对象存在</li>\n<li>c:被类的所有对象共享\n<ul>\n<li>举例：咱们班级的学生应该共用同一个班级编号。</li>\n<li>其实这个特点也是在告诉我们什么时候使用静态?\n<ul>\n<li>如果某个成员变量是被所有对象共享的，那么它就应该定义为静态的。</li>\n</ul>\n</li>\n<li>举例：\n<ul>\n<li>饮水机(用静态修饰)</li>\n<li>水杯(不能用静态修饰)</li>\n<li>共性用静态,特性用非静态</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>d:可以通过类名调用\n<ul>\n<li>其实它本身也可以通过对象名调用。</li>\n<li>推荐使用类名调用。</li>\n<li>静态修饰的内容一般我们称其为：与类相关的，类成员</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>static关键字的特点</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-11-static的注意事项-掌握\"><a class=\"header-anchor\" href=\"#07-11-static的注意事项-掌握\">☆</a>07.11 static的注意事项 (掌握)</h2>\n<ul>\n<li>A:static的注意事项\n<ul>\n<li>a:在静态方法中是没有this关键字的\n<ul>\n<li>如何理解呢?\n<ul>\n<li>静态是随着类的加载而加载，this是随着对象的创建而存在。</li>\n<li>静态比对象先存在。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>b:静态方法只能访问静态的成员变量和静态的成员方法\n<ul>\n<li>静态方法：\n<ul>\n<li>成员变量：只能访问静态变量</li>\n<li>成员方法：只能访问静态成员方法</li>\n</ul>\n</li>\n<li>非静态方法：\n<ul>\n<li>成员变量：可以是静态的，也可以是非静态的</li>\n<li>成员方法：可是是静态的成员方法，也可以是非静态的成员方法。</li>\n</ul>\n</li>\n<li>简单记：\n<ul>\n<li>静态只能访问静态。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>static的注意事项</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-12-静态变量和成员变量的区别-掌握\"><a class=\"header-anchor\" href=\"#07-12-静态变量和成员变量的区别-掌握\">☆</a>07.12 静态变量和成员变量的区别 (掌握)</h2>\n<ul>\n<li>静态变量也叫类变量  成员变量也叫对象变量</li>\n<li>A:所属不同\n<ul>\n<li>静态变量属于类，所以也称为为类变量</li>\n<li>成员变量属于对象，所以也称为实例变量(对象变量)</li>\n</ul>\n</li>\n<li>B:内存中位置不同\n<ul>\n<li>静态变量存储于方法区的静态区</li>\n<li>成员变量存储于堆内存</li>\n</ul>\n</li>\n<li>C:内存出现时间不同\n<ul>\n<li>静态变量随着类的加载而加载，随着类的消失而消失</li>\n<li>成员变量随着对象的创建而存在，随着对象的消失而消失</li>\n</ul>\n</li>\n<li>D:调用不同\n<ul>\n<li>静态变量可以通过类名调用，也可以通过对象调用</li>\n<li>成员变量只能通过对 象名调用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-13-main方法的格式详细解释-了解\"><a class=\"header-anchor\" href=\"#07-13-main方法的格式详细解释-了解\">☆</a>07.13 main方法的格式详细解释 (了解)</h2>\n<ul>\n<li>A:格式\n<ul>\n<li>public static void main(String[] args) {}</li>\n</ul>\n</li>\n<li>B:针对格式的解释\n<ul>\n<li>public 被jvm调用，访问权限足够大。</li>\n<li>static 被jvm调用，不用创建对象，直接类名访问</li>\n<li>void被jvm调用，不需要给jvm返回值</li>\n<li>main 一个通用的名称，虽然不是关键字，但是被jvm识别</li>\n<li>String[] args 以前用于接收键盘录入的</li>\n</ul>\n</li>\n<li>C:演示案例\n<ul>\n<li>通过args接收键盘例如数据</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-14-工具类中使用静态-了解\"><a class=\"header-anchor\" href=\"#07-14-工具类中使用静态-了解\">☆</a>07.14 工具类中使用静态 (了解)</h2>\n<ul>\n<li>A:制作一个工具类\n<ul>\n<li>ArrayTool</li>\n<li>1,获取最大值</li>\n<li>2,数组的遍历</li>\n<li>3,数组的反转</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-15-说明书的制作过程-了解\"><a class=\"header-anchor\" href=\"#07-15-说明书的制作过程-了解\">☆</a>07.15 说明书的制作过程 (了解)</h2>\n<ul>\n<li>A:对工具类加入文档注释</li>\n<li>B:通过javadoc命令生成说明书\n<ul>\n<li>@author(提取作者内容)</li>\n<li>@version(提取版本内容)</li>\n<li>javadoc -d 指定的文件目录 -author -version ArrayTool.java</li>\n<li>@param 参数名称//形式参数的变量名称@return 函数运行完返回的数据</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-16-如何使用jdk提供的帮助文档-了解\"><a class=\"header-anchor\" href=\"#07-16-如何使用jdk提供的帮助文档-了解\">☆</a>07.16 如何使用JDK提供的帮助文档 (了解)</h2>\n<ul>\n<li>A:找到文档，打开文档</li>\n<li>B:点击显示，找到索引，出现输入框</li>\n<li>C:你应该知道你找谁?举例：Scanner</li>\n<li>D:看这个类的结构(需不需要导包)\n<ul>\n<li>成员变量\t字段</li>\n<li>构造方法\t构造方法</li>\n<li>成员方法\t方法</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-17-学习math类的随机数功能-了解\"><a class=\"header-anchor\" href=\"#07-17-学习math类的随机数功能-了解\">☆</a>07.17 学习Math类的随机数功能 (了解)</h2>\n<ul>\n<li>打开JDK提供的帮助文档学习</li>\n<li>A:Math类概述\n<ul>\n<li>类包含用于执行基本数学运算的方法</li>\n</ul>\n</li>\n<li>B:Math类特点\n<ul>\n<li>由于Math类在java.lang包下，所以不需要导包。</li>\n<li>因为它的成员全部是静态的,所以私有了构造方法</li>\n</ul>\n</li>\n<li>C:获取随机数的方法\n<ul>\n<li>public static double random():返回带正号的 double 值，该值大于等于 0.0 且小于 1.0。</li>\n</ul>\n</li>\n<li>D:我要获取一个1-100之间的随机数，肿么办?\n<ul>\n<li>int number = (int)(Math.random()*100)+1;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-18-猜数字小游戏案例-了解\"><a class=\"header-anchor\" href=\"#07-18-猜数字小游戏案例-了解\">☆</a>07.18 猜数字小游戏案例 (了解)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：猜数字小游戏(数据在1-100之间)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-19-day07总结\"><a class=\"header-anchor\" href=\"#07-19-day07总结\">☆</a>07.19_day07总结</h2>\n<p>把今天的知识点总结一遍。</p>\n","site":{"data":{}},"length":2682,"excerpt":"","more":"<h2 id=\"07-01-构造方法constructor概述和格式-掌握\"><a class=\"header-anchor\" href=\"#07-01-构造方法constructor概述和格式-掌握\">☆</a>07.01 构造方法Constructor概述和格式 (掌握)</h2>\n<ul>\n<li>A:构造方法概述和作用\n<ul>\n<li>给对象的数据(属性)进行初始化</li>\n</ul>\n</li>\n<li>B:构造方法格式特点\n<ul>\n<li>a:方法名与类名相同(大小也要与类名一致)</li>\n<li>b:没有返回值类型，连void都没有</li>\n<li>c:没有具体的返回值return;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-02-构造方法的重载及注意事项-掌握\"><a class=\"header-anchor\" href=\"#07-02-构造方法的重载及注意事项-掌握\">☆</a>07.02 构造方法的重载及注意事项 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>构造方法的重载</li>\n<li>重载:方法名相同,与返回值类型无关(构造方法没有返回值),只看参数列表</li>\n</ul>\n</li>\n<li>B:构造方法注意事项\n<ul>\n<li>a:如果我们没有给出构造方法，系统将自动提供一个无参构造方法。</li>\n<li>b:如果我们给出了构造方法，系统将不再提供默认的无参构造方法。\n<ul>\n<li>注意：这个时候，如果我们还想使用无参构造方法，就必须自己给出。建议永远自己给出无参构造方法</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-03-给成员变量赋值的两种方式的区别\"><a class=\"header-anchor\" href=\"#07-03-给成员变量赋值的两种方式的区别\">☆</a>07.03 给成员变量赋值的两种方式的区别</h2>\n<ul>\n<li>A:setXxx()方法\n<ul>\n<li>修改属性值</li>\n</ul>\n</li>\n<li>B:构造方法\n<ul>\n<li>给对象中属性进行初始化</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-04-学生类的代码及测试-掌握\"><a class=\"header-anchor\" href=\"#07-04-学生类的代码及测试-掌握\">☆</a>07.04 学生类的代码及测试 (掌握)</h2>\n<ul>\n<li>\n<p>A:案例演示</p>\n<ul>\n<li>学生类：\n<ul>\n<li>成员变量：\n<ul>\n<li>name，age</li>\n</ul>\n</li>\n<li>构造方法：\n<ul>\n<li>无参，带两个参</li>\n</ul>\n</li>\n<li>成员方法：\n<ul>\n<li>getXxx()/setXxx()</li>\n<li>show()：输出该类的所有成员变量值</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>B:给成员变量赋值：</p>\n<ul>\n<li>a:setXxx()方法</li>\n<li>b:构造方法</li>\n</ul>\n</li>\n<li>\n<p>C:输出成员变量值的方式：</p>\n<ul>\n<li>a:通过getXxx()分别获取然后拼接</li>\n<li>b:通过调用show()方法搞定</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-05-手机类的代码及测试-掌握\"><a class=\"header-anchor\" href=\"#07-05-手机类的代码及测试-掌握\">☆</a>07.05 手机类的代码及测试 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>模仿学生类，完成手机类代码</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-06-创建一个对象的步骤-掌握\"><a class=\"header-anchor\" href=\"#07-06-创建一个对象的步骤-掌握\">☆</a>07.06 创建一个对象的步骤 (掌握)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>画图说明一个对象的创建过程做了哪些事情?</li>\n<li>Student s = new Student();</li>\n<li>1,Student.class加载进内存</li>\n<li>2,声明一个Student类型引用s</li>\n<li>3,在堆内存创建对象,</li>\n<li>4,给对象中属性默认初始化值</li>\n<li>5,属性进行显示初始化</li>\n<li>6,构造方法进栈,对对象中的属性赋值,构造方法弹栈</li>\n<li>7,将对象的地址值赋值给s</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-07-长方形案例练习-掌握\"><a class=\"header-anchor\" href=\"#07-07-长方形案例练习-掌握\">☆</a>07.07 长方形案例练习 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：\n<ul>\n<li>定义一个长方形类,定义 求周长和面积的方法，</li>\n<li>然后定义一个测试类进行测试。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-08-员工类案例练习-掌握\"><a class=\"header-anchor\" href=\"#07-08-员工类案例练习-掌握\">☆</a>07.08 员工类案例练习 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：定义一个员工类Employee</li>\n<li>自己分析出几个成员，然后给出成员变量\n<ul>\n<li>姓名name,工号id,工资salary</li>\n</ul>\n</li>\n<li>构造方法，\n<ul>\n<li>空参和有参的</li>\n</ul>\n</li>\n<li>getXxx()setXxx()方法，</li>\n<li>以及一个显示所有成员信息的方法。并测试。\n<ul>\n<li>work</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-09-static关键字及内存图-了解\"><a class=\"header-anchor\" href=\"#07-09-static关键字及内存图-了解\">☆</a>07.09 static关键字及内存图 (了解)</h2>\n<ul>\n<li>\n<p>A:案例演示</p>\n<ul>\n<li>通过一个案例引入static关键字。</li>\n<li>人类：Person。每个人都有国籍，中国。</li>\n</ul>\n</li>\n<li>\n<p>B:画图演示</p>\n<ul>\n<li>带有static的内存图</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-10-static关键字的特点-掌握\"><a class=\"header-anchor\" href=\"#07-10-static关键字的特点-掌握\">☆</a>07.10 static关键字的特点 (掌握)</h2>\n<ul>\n<li>A:static关键字的特点\n<ul>\n<li>a:随着类的加载而加载</li>\n<li>b:优先于对象存在</li>\n<li>c:被类的所有对象共享\n<ul>\n<li>举例：咱们班级的学生应该共用同一个班级编号。</li>\n<li>其实这个特点也是在告诉我们什么时候使用静态?\n<ul>\n<li>如果某个成员变量是被所有对象共享的，那么它就应该定义为静态的。</li>\n</ul>\n</li>\n<li>举例：\n<ul>\n<li>饮水机(用静态修饰)</li>\n<li>水杯(不能用静态修饰)</li>\n<li>共性用静态,特性用非静态</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>d:可以通过类名调用\n<ul>\n<li>其实它本身也可以通过对象名调用。</li>\n<li>推荐使用类名调用。</li>\n<li>静态修饰的内容一般我们称其为：与类相关的，类成员</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>static关键字的特点</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-11-static的注意事项-掌握\"><a class=\"header-anchor\" href=\"#07-11-static的注意事项-掌握\">☆</a>07.11 static的注意事项 (掌握)</h2>\n<ul>\n<li>A:static的注意事项\n<ul>\n<li>a:在静态方法中是没有this关键字的\n<ul>\n<li>如何理解呢?\n<ul>\n<li>静态是随着类的加载而加载，this是随着对象的创建而存在。</li>\n<li>静态比对象先存在。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>b:静态方法只能访问静态的成员变量和静态的成员方法\n<ul>\n<li>静态方法：\n<ul>\n<li>成员变量：只能访问静态变量</li>\n<li>成员方法：只能访问静态成员方法</li>\n</ul>\n</li>\n<li>非静态方法：\n<ul>\n<li>成员变量：可以是静态的，也可以是非静态的</li>\n<li>成员方法：可是是静态的成员方法，也可以是非静态的成员方法。</li>\n</ul>\n</li>\n<li>简单记：\n<ul>\n<li>静态只能访问静态。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>static的注意事项</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-12-静态变量和成员变量的区别-掌握\"><a class=\"header-anchor\" href=\"#07-12-静态变量和成员变量的区别-掌握\">☆</a>07.12 静态变量和成员变量的区别 (掌握)</h2>\n<ul>\n<li>静态变量也叫类变量  成员变量也叫对象变量</li>\n<li>A:所属不同\n<ul>\n<li>静态变量属于类，所以也称为为类变量</li>\n<li>成员变量属于对象，所以也称为实例变量(对象变量)</li>\n</ul>\n</li>\n<li>B:内存中位置不同\n<ul>\n<li>静态变量存储于方法区的静态区</li>\n<li>成员变量存储于堆内存</li>\n</ul>\n</li>\n<li>C:内存出现时间不同\n<ul>\n<li>静态变量随着类的加载而加载，随着类的消失而消失</li>\n<li>成员变量随着对象的创建而存在，随着对象的消失而消失</li>\n</ul>\n</li>\n<li>D:调用不同\n<ul>\n<li>静态变量可以通过类名调用，也可以通过对象调用</li>\n<li>成员变量只能通过对 象名调用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-13-main方法的格式详细解释-了解\"><a class=\"header-anchor\" href=\"#07-13-main方法的格式详细解释-了解\">☆</a>07.13 main方法的格式详细解释 (了解)</h2>\n<ul>\n<li>A:格式\n<ul>\n<li>public static void main(String[] args) {}</li>\n</ul>\n</li>\n<li>B:针对格式的解释\n<ul>\n<li>public 被jvm调用，访问权限足够大。</li>\n<li>static 被jvm调用，不用创建对象，直接类名访问</li>\n<li>void被jvm调用，不需要给jvm返回值</li>\n<li>main 一个通用的名称，虽然不是关键字，但是被jvm识别</li>\n<li>String[] args 以前用于接收键盘录入的</li>\n</ul>\n</li>\n<li>C:演示案例\n<ul>\n<li>通过args接收键盘例如数据</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-14-工具类中使用静态-了解\"><a class=\"header-anchor\" href=\"#07-14-工具类中使用静态-了解\">☆</a>07.14 工具类中使用静态 (了解)</h2>\n<ul>\n<li>A:制作一个工具类\n<ul>\n<li>ArrayTool</li>\n<li>1,获取最大值</li>\n<li>2,数组的遍历</li>\n<li>3,数组的反转</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-15-说明书的制作过程-了解\"><a class=\"header-anchor\" href=\"#07-15-说明书的制作过程-了解\">☆</a>07.15 说明书的制作过程 (了解)</h2>\n<ul>\n<li>A:对工具类加入文档注释</li>\n<li>B:通过javadoc命令生成说明书\n<ul>\n<li>@author(提取作者内容)</li>\n<li>@version(提取版本内容)</li>\n<li>javadoc -d 指定的文件目录 -author -version ArrayTool.java</li>\n<li>@param 参数名称//形式参数的变量名称@return 函数运行完返回的数据</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-16-如何使用jdk提供的帮助文档-了解\"><a class=\"header-anchor\" href=\"#07-16-如何使用jdk提供的帮助文档-了解\">☆</a>07.16 如何使用JDK提供的帮助文档 (了解)</h2>\n<ul>\n<li>A:找到文档，打开文档</li>\n<li>B:点击显示，找到索引，出现输入框</li>\n<li>C:你应该知道你找谁?举例：Scanner</li>\n<li>D:看这个类的结构(需不需要导包)\n<ul>\n<li>成员变量\t字段</li>\n<li>构造方法\t构造方法</li>\n<li>成员方法\t方法</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-17-学习math类的随机数功能-了解\"><a class=\"header-anchor\" href=\"#07-17-学习math类的随机数功能-了解\">☆</a>07.17 学习Math类的随机数功能 (了解)</h2>\n<ul>\n<li>打开JDK提供的帮助文档学习</li>\n<li>A:Math类概述\n<ul>\n<li>类包含用于执行基本数学运算的方法</li>\n</ul>\n</li>\n<li>B:Math类特点\n<ul>\n<li>由于Math类在java.lang包下，所以不需要导包。</li>\n<li>因为它的成员全部是静态的,所以私有了构造方法</li>\n</ul>\n</li>\n<li>C:获取随机数的方法\n<ul>\n<li>public static double random():返回带正号的 double 值，该值大于等于 0.0 且小于 1.0。</li>\n</ul>\n</li>\n<li>D:我要获取一个1-100之间的随机数，肿么办?\n<ul>\n<li>int number = (int)(Math.random()*100)+1;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-18-猜数字小游戏案例-了解\"><a class=\"header-anchor\" href=\"#07-18-猜数字小游戏案例-了解\">☆</a>07.18 猜数字小游戏案例 (了解)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>需求：猜数字小游戏(数据在1-100之间)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"07-19-day07总结\"><a class=\"header-anchor\" href=\"#07-19-day07总结\">☆</a>07.19_day07总结</h2>\n<p>把今天的知识点总结一遍。</p>\n"},{"title":"Java学习笔记（day05）","copyright":true,"abbrlink":"87aa750a","notshow":true,"date":"2018-10-05T10:00:00.000Z","password":null,"description":"Java基础","image":null,"photos":[],"sticky":null,"_content":"\n## 05.01 数组概述和定义格式说明 (了解)\n\n* A:为什么要有数组(容器)\n\t* 为了存储同种数据类型的多个值\n* B:数组概念\n\t* 数组是存储同一种数据类型多个元素的集合。也可以看成是一个容器。\n\t* 数组既可以存储基本数据类型，也可以存储引用数据类型。\n\n* C:数组定义格式\n\t数据类型[] 数组名 = new 数据类型[数组的长度];\n\n## 05.02 数组的初始化动态初始化 (掌握)\n\n* A:什么是数组的初始化\n\t* 就是为数组开辟连续的内存空间，并为每个数组元素赋予值 \n* B:如何对数组进行初始化\n\t* a:动态初始化 只指定长度，由系统给出初始化值\n\t\t* int[] arr = new int[5]; \t\n\t* b:静态初始化 给出初始化值，由系统决定长度\t\n* C:动态初始化的格式：\n\t* 数据类型[] 数组名 = new 数据类型[数组长度];\n* D:案例演示\n\t* 输出数组名称和数组元素\n\n## 05.03 Java中的内存分配以及栈和堆的区别\n\n* A:栈(掌握)\n\t* 存储局部变量 \n* B:堆(掌握)\n\t* 存储new出来的数组或对象 \n* C:方法区\n\t* 面向对象部分讲解 \n* D:本地方法区\n\t* 和系统相关 \n* E:寄存器\n\t* 给CPU使用\n\n## 05.04 数组的内存图解1一个数组 (掌握)\n\n* A:画图演示\n\t* 一个数组\n\n## 05.05 数组的内存图解2二个数组 (了解)\n\n* A:画图演示\n\t* 二个不同的数组\n\n## 05.06 数组的内存图解3三个引用两个数组 (了解)\n\n* A:画图演示\n\t* 三个引用，有两个数组的引用指向同一个地址\n\n## 05.07 数组的初始化静态初始化及内存图 (掌握)\n\n* A:静态初始化的格式：\n\t* 格式：数据类型[] 数组名 = new 数据类型[]{元素1,元素2,…};\n\t* 简化格式：\n\t\t* 数据类型[] 数组名 = {元素1,元素2,…};\n* B:案例演示\n\t* 对数组的解释\n\t* 输出数组名称和数组元素\n* C:画图演示\n\t* 一个数组\n\n## 05.08 数组操作的两个常见小问题越界和空指针 (掌握)\n\n* A:案例演示\n\t* a:ArrayIndexOutOfBoundsException:数组索引越界异常\n\t\t* 原因：你访问了不存在的索引。\n\t* b:NullPointerException:空指针异常\n\t\t* 原因：数组已经不在指向堆内存了。而你还用数组名去访问元素。\n\n```java\n int[] arr = {1,2,3};\n arr = null;\n System.out.println(arr[0]);\n```\n\n## 05.09 数组的操作1遍历 (掌握)\n\n* A:案例演示\n\t* 数组遍历：就是依次输出数组中的每一个元素。\n\t* 数组的属性:arr.length数组的长度\n\t* 数组的最大索引:arr.length - 1;\n\n```java\n\t\t\tpublic static void print(int[] arr) {\n\t\t\t\tfor (int i = 0;i < arr.length ;i++ ) {\n\t\t\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t\t\t}\n\t\t\t}\n```\n\n## 05.10 数组的操作2获取最值 (掌握)\n\n* A:案例演示\n\t* 数组获取最值(获取数组中的最大值最小值)\n\n```java\npublic static int getMax(int[] arr) {\n\tint max = arr[0];\n\tfor (int i = 1;i < arr.length ;i++ ) {\t\t\t//从数组的第二个元素开始遍历\n\t\tif (max < arr[i]) {\t\t\t\t\t\t\t//如果max记录的值小于的数组中的元素\n\t\t\tmax = arr[i];\t\t\t\t\t\t\t//max记录住较大的\n\t\t}\n\t}\n\n\treturn max;\n}\n```\n\n## 05.11 数组的操作3反转 (掌握)\n\n* A:案例演示\n\t* 数组元素反转(就是把元素对调)\n\n```java\npublic static void reverseArray(int[] arr) {\n\tfor (int i = 0;i < arr.length / 2 ; i++) {\n\t\t//arr[0]和arr[arr.length-1-0]交换\n\t\t//arr[1]和arr[arr.length-1-1]交换\n\t\t//arr[2]和arr[arr.lentth-1-2]\n\t\t//...\n\n\t\tint temp = arr[i];\n\t\tarr[i] = arr[arr.length-1-i];\n\t\tarr[arr.length-1-i] = temp;\n\t}\n}\n```\n\n## 05.12 数组的操作4查表法 (掌握)\n\n* A:案例演示\n\t* 数组查表法(根据键盘录入索引,查找对应星期)\n\n```java\npublic static char getWeek(int week) {\n\tchar[] arr = {' ','一','二','三','四','五','六','日'};\t\t//定义了一张星期表\n\treturn arr[week];\t\t\t\t\t\t\t\t\t\t\t//通过索引获取表中的元素\n}\n```\n\n## 05.13 数组的操作5基本查找 (掌握)\n\n* A:案例演示\n\t* 数组元素查找(查找指定元素第一次在数组中出现的索引)\n\n```java\npublic static int getIndex(int[] arr,int value) {\n\tfor (int i = 0;i < arr.length ;i++ ) {\t\t\t\t//数组的遍历\n\t\tif (arr[i] == value) {\t\t\t\t\t\t\t//如果数组中的元素与查找的元素匹配\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n```\n\n## 05.14 二维数组概述和格式1的讲解 (了解)\n\n* A:二维数组概述\n* B:二维数组格式1\n\t* int[][] arr = new int[3][2]; \n* C:二维数组格式1的解释\n* D:注意事项\n\t* a:以下格式也可以表示二维数组\n\t\t* 1:数据类型 数组名[][] = new 数据类型[m][n];\n\t\t* 2:数据类型[] 数组名[] = new 数据类型[m][n];\n\t* B:注意下面定义的区别\n\t* \n\t\t\tint x;\n\t\t\tint y;\n\t\t\tint x,y;\n\t\t\t\n\t\t\tint[] x;\n\t\t\tint[] y[];\n\t\t\t\n\t\t\tint[] x,y[];\tx是一维数组,y是二维数组\n\n* E:案例演示\n\t* 定义二维数组，输出二维数组名称，一维数组名称，一个元素\n\n## 05.15 二维数组格式1的内存图解 (了解)\n\n* A:画图演示\n\t* 画图讲解上面的二维数组名称，一维数组名称，一个元素的值的问题\n\n## 05.16 二维数组格式2的讲解及其内存图解 (了解)\n\n* A:二维数组格式2\n\t* int[][] arr = new int[3][]; \n* B:二维数组格式2的解释\n* C:案例演示\n\t* 讲解格式，输出数据，并画内存图\n\n## 05.17 二维数组格式3的讲解及其内存图解 (了解)\n\n* A:二维数组格式3\n\t* int[][] arr = /{/{1,2,3},{4,5},{6,7,8,9/}/};\n* B:二维数组格式3的解释\n* C:案例演示\n\t* 讲解格式，输出数据，并画内存图\n\n## 05.18 二维数组练习1遍历 (掌握)\n\n* A:案例演示\n\t* 需求：二维数组遍历\n\n\t* 外循环控制的是二维数组的长度，其实就是一维数组的个数。\n\t* 内循环控制的是一维数组的长度。\n\n```java\nint[][] arr = {{1,2,3},{4,5},{6,7,8,9}};\n\nfor (int i = 0;i < arr.length ;i++ ) {          //获取到每个二维数组中的一维数组\n\tfor (int j = 0;j < arr[i].length ;j++ ) {\t//获取每个一维数组中的元素\n\t\tSystem.out.print(arr[i][j] + \" \");\n\t}\n\n\tSystem.out.println();\n}\n```\n\n## 05.19 二维数组练习2求和 (掌握)\n\n* A:案例演示\n* \n\t\t需求：公司年销售额求和\n\t\t某公司按照季度和月份统计的数据如下：单位(万元)\n\t\t第一季度：22,66,44\n\t\t第二季度：77,33,88\n\t\t第三季度：25,45,65\n\t\t第四季度：11,66,99\n\n```java\nint[][] arr = {{22,66,44},{77,33,88},{25,45,65},{11,66,99}};\n\nint sum = 0;\t\t\t\t\t\t\t\t\t//定义变量,记录每次相加的结果\nfor (int i = 0;i < arr.length ;i++ ) {\t\t\t//获取每一个一维数组\n\tfor (int j = 0;j < arr[i].length ;j++ ) {\t//获取每一个一维数组中的元素\n\t\tsum = sum + arr[i][j];\t\t\t\t\t//累加\n\t}\n}\n\nSystem.out.println(sum);\n```\n\n## 05.20 思考题Java中的参数传递问题及图解 (掌握)\n\n* A:案例演示\n* \n看程序写结果，并画内存图解释\n\n```java\npublic static void main(String[] args) {\n\tint a = 10;\n\tint b = 20;\n\tSystem.out.println(\"a:\"+a+\",b:\"+b);\n\tchange(a,b);\n\tSystem.out.println(\"a:\"+a+\",b:\"+b);\n\n\tint[] arr = {1,2,3,4,5};\n\tchange(arr);\n\tSystem.out.println(arr[1]);\n}\n\npublic static void change(int a,int b) {\n\tSystem.out.println(\"a:\"+a+\",b:\"+b);\n\ta = b;\n\tb = a + b;\n\tSystem.out.println(\"a:\"+a+\",b:\"+b);\n}\n\npublic static void change(int[] arr) {\n\tfor(int x=0; x<arr.length; x++) {\n\t\tif(arr[x]%2==0) {\n\t\t\tarr[x]*=2;\n\t\t}\n\t}\n}\n```\n\n## 05.21_day05总结\n\n* 把今天的知识点总结一遍。","source":"_posts/Java学习笔记（day05）.md","raw":"---\ntitle: Java学习笔记（day05）\ncopyright: true\nabbrlink: 87aa750a\nnotshow: true\ntags:\n  - Java\ncategories: Java\ndate: 2018-10-05 18:00:00\npassword:\ndescription: Java基础\nimage:\nphotos:\nsticky:\n---\n\n## 05.01 数组概述和定义格式说明 (了解)\n\n* A:为什么要有数组(容器)\n\t* 为了存储同种数据类型的多个值\n* B:数组概念\n\t* 数组是存储同一种数据类型多个元素的集合。也可以看成是一个容器。\n\t* 数组既可以存储基本数据类型，也可以存储引用数据类型。\n\n* C:数组定义格式\n\t数据类型[] 数组名 = new 数据类型[数组的长度];\n\n## 05.02 数组的初始化动态初始化 (掌握)\n\n* A:什么是数组的初始化\n\t* 就是为数组开辟连续的内存空间，并为每个数组元素赋予值 \n* B:如何对数组进行初始化\n\t* a:动态初始化 只指定长度，由系统给出初始化值\n\t\t* int[] arr = new int[5]; \t\n\t* b:静态初始化 给出初始化值，由系统决定长度\t\n* C:动态初始化的格式：\n\t* 数据类型[] 数组名 = new 数据类型[数组长度];\n* D:案例演示\n\t* 输出数组名称和数组元素\n\n## 05.03 Java中的内存分配以及栈和堆的区别\n\n* A:栈(掌握)\n\t* 存储局部变量 \n* B:堆(掌握)\n\t* 存储new出来的数组或对象 \n* C:方法区\n\t* 面向对象部分讲解 \n* D:本地方法区\n\t* 和系统相关 \n* E:寄存器\n\t* 给CPU使用\n\n## 05.04 数组的内存图解1一个数组 (掌握)\n\n* A:画图演示\n\t* 一个数组\n\n## 05.05 数组的内存图解2二个数组 (了解)\n\n* A:画图演示\n\t* 二个不同的数组\n\n## 05.06 数组的内存图解3三个引用两个数组 (了解)\n\n* A:画图演示\n\t* 三个引用，有两个数组的引用指向同一个地址\n\n## 05.07 数组的初始化静态初始化及内存图 (掌握)\n\n* A:静态初始化的格式：\n\t* 格式：数据类型[] 数组名 = new 数据类型[]{元素1,元素2,…};\n\t* 简化格式：\n\t\t* 数据类型[] 数组名 = {元素1,元素2,…};\n* B:案例演示\n\t* 对数组的解释\n\t* 输出数组名称和数组元素\n* C:画图演示\n\t* 一个数组\n\n## 05.08 数组操作的两个常见小问题越界和空指针 (掌握)\n\n* A:案例演示\n\t* a:ArrayIndexOutOfBoundsException:数组索引越界异常\n\t\t* 原因：你访问了不存在的索引。\n\t* b:NullPointerException:空指针异常\n\t\t* 原因：数组已经不在指向堆内存了。而你还用数组名去访问元素。\n\n```java\n int[] arr = {1,2,3};\n arr = null;\n System.out.println(arr[0]);\n```\n\n## 05.09 数组的操作1遍历 (掌握)\n\n* A:案例演示\n\t* 数组遍历：就是依次输出数组中的每一个元素。\n\t* 数组的属性:arr.length数组的长度\n\t* 数组的最大索引:arr.length - 1;\n\n```java\n\t\t\tpublic static void print(int[] arr) {\n\t\t\t\tfor (int i = 0;i < arr.length ;i++ ) {\n\t\t\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t\t\t}\n\t\t\t}\n```\n\n## 05.10 数组的操作2获取最值 (掌握)\n\n* A:案例演示\n\t* 数组获取最值(获取数组中的最大值最小值)\n\n```java\npublic static int getMax(int[] arr) {\n\tint max = arr[0];\n\tfor (int i = 1;i < arr.length ;i++ ) {\t\t\t//从数组的第二个元素开始遍历\n\t\tif (max < arr[i]) {\t\t\t\t\t\t\t//如果max记录的值小于的数组中的元素\n\t\t\tmax = arr[i];\t\t\t\t\t\t\t//max记录住较大的\n\t\t}\n\t}\n\n\treturn max;\n}\n```\n\n## 05.11 数组的操作3反转 (掌握)\n\n* A:案例演示\n\t* 数组元素反转(就是把元素对调)\n\n```java\npublic static void reverseArray(int[] arr) {\n\tfor (int i = 0;i < arr.length / 2 ; i++) {\n\t\t//arr[0]和arr[arr.length-1-0]交换\n\t\t//arr[1]和arr[arr.length-1-1]交换\n\t\t//arr[2]和arr[arr.lentth-1-2]\n\t\t//...\n\n\t\tint temp = arr[i];\n\t\tarr[i] = arr[arr.length-1-i];\n\t\tarr[arr.length-1-i] = temp;\n\t}\n}\n```\n\n## 05.12 数组的操作4查表法 (掌握)\n\n* A:案例演示\n\t* 数组查表法(根据键盘录入索引,查找对应星期)\n\n```java\npublic static char getWeek(int week) {\n\tchar[] arr = {' ','一','二','三','四','五','六','日'};\t\t//定义了一张星期表\n\treturn arr[week];\t\t\t\t\t\t\t\t\t\t\t//通过索引获取表中的元素\n}\n```\n\n## 05.13 数组的操作5基本查找 (掌握)\n\n* A:案例演示\n\t* 数组元素查找(查找指定元素第一次在数组中出现的索引)\n\n```java\npublic static int getIndex(int[] arr,int value) {\n\tfor (int i = 0;i < arr.length ;i++ ) {\t\t\t\t//数组的遍历\n\t\tif (arr[i] == value) {\t\t\t\t\t\t\t//如果数组中的元素与查找的元素匹配\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n```\n\n## 05.14 二维数组概述和格式1的讲解 (了解)\n\n* A:二维数组概述\n* B:二维数组格式1\n\t* int[][] arr = new int[3][2]; \n* C:二维数组格式1的解释\n* D:注意事项\n\t* a:以下格式也可以表示二维数组\n\t\t* 1:数据类型 数组名[][] = new 数据类型[m][n];\n\t\t* 2:数据类型[] 数组名[] = new 数据类型[m][n];\n\t* B:注意下面定义的区别\n\t* \n\t\t\tint x;\n\t\t\tint y;\n\t\t\tint x,y;\n\t\t\t\n\t\t\tint[] x;\n\t\t\tint[] y[];\n\t\t\t\n\t\t\tint[] x,y[];\tx是一维数组,y是二维数组\n\n* E:案例演示\n\t* 定义二维数组，输出二维数组名称，一维数组名称，一个元素\n\n## 05.15 二维数组格式1的内存图解 (了解)\n\n* A:画图演示\n\t* 画图讲解上面的二维数组名称，一维数组名称，一个元素的值的问题\n\n## 05.16 二维数组格式2的讲解及其内存图解 (了解)\n\n* A:二维数组格式2\n\t* int[][] arr = new int[3][]; \n* B:二维数组格式2的解释\n* C:案例演示\n\t* 讲解格式，输出数据，并画内存图\n\n## 05.17 二维数组格式3的讲解及其内存图解 (了解)\n\n* A:二维数组格式3\n\t* int[][] arr = /{/{1,2,3},{4,5},{6,7,8,9/}/};\n* B:二维数组格式3的解释\n* C:案例演示\n\t* 讲解格式，输出数据，并画内存图\n\n## 05.18 二维数组练习1遍历 (掌握)\n\n* A:案例演示\n\t* 需求：二维数组遍历\n\n\t* 外循环控制的是二维数组的长度，其实就是一维数组的个数。\n\t* 内循环控制的是一维数组的长度。\n\n```java\nint[][] arr = {{1,2,3},{4,5},{6,7,8,9}};\n\nfor (int i = 0;i < arr.length ;i++ ) {          //获取到每个二维数组中的一维数组\n\tfor (int j = 0;j < arr[i].length ;j++ ) {\t//获取每个一维数组中的元素\n\t\tSystem.out.print(arr[i][j] + \" \");\n\t}\n\n\tSystem.out.println();\n}\n```\n\n## 05.19 二维数组练习2求和 (掌握)\n\n* A:案例演示\n* \n\t\t需求：公司年销售额求和\n\t\t某公司按照季度和月份统计的数据如下：单位(万元)\n\t\t第一季度：22,66,44\n\t\t第二季度：77,33,88\n\t\t第三季度：25,45,65\n\t\t第四季度：11,66,99\n\n```java\nint[][] arr = {{22,66,44},{77,33,88},{25,45,65},{11,66,99}};\n\nint sum = 0;\t\t\t\t\t\t\t\t\t//定义变量,记录每次相加的结果\nfor (int i = 0;i < arr.length ;i++ ) {\t\t\t//获取每一个一维数组\n\tfor (int j = 0;j < arr[i].length ;j++ ) {\t//获取每一个一维数组中的元素\n\t\tsum = sum + arr[i][j];\t\t\t\t\t//累加\n\t}\n}\n\nSystem.out.println(sum);\n```\n\n## 05.20 思考题Java中的参数传递问题及图解 (掌握)\n\n* A:案例演示\n* \n看程序写结果，并画内存图解释\n\n```java\npublic static void main(String[] args) {\n\tint a = 10;\n\tint b = 20;\n\tSystem.out.println(\"a:\"+a+\",b:\"+b);\n\tchange(a,b);\n\tSystem.out.println(\"a:\"+a+\",b:\"+b);\n\n\tint[] arr = {1,2,3,4,5};\n\tchange(arr);\n\tSystem.out.println(arr[1]);\n}\n\npublic static void change(int a,int b) {\n\tSystem.out.println(\"a:\"+a+\",b:\"+b);\n\ta = b;\n\tb = a + b;\n\tSystem.out.println(\"a:\"+a+\",b:\"+b);\n}\n\npublic static void change(int[] arr) {\n\tfor(int x=0; x<arr.length; x++) {\n\t\tif(arr[x]%2==0) {\n\t\t\tarr[x]*=2;\n\t\t}\n\t}\n}\n```\n\n## 05.21_day05总结\n\n* 把今天的知识点总结一遍。","slug":"Java学习笔记（day05）","published":1,"updated":"2020-02-20T06:06:59.382Z","comments":1,"layout":"post","link":"","_id":"ckec2td2d000efkupbxb95k2e","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"05-01-数组概述和定义格式说明-了解\"><a class=\"header-anchor\" href=\"#05-01-数组概述和定义格式说明-了解\">☆</a>05.01 数组概述和定义格式说明 (了解)</h2>\n<ul>\n<li>\n<p>A:为什么要有数组(容器)</p>\n<ul>\n<li>为了存储同种数据类型的多个值</li>\n</ul>\n</li>\n<li>\n<p>B:数组概念</p>\n<ul>\n<li>数组是存储同一种数据类型多个元素的集合。也可以看成是一个容器。</li>\n<li>数组既可以存储基本数据类型，也可以存储引用数据类型。</li>\n</ul>\n</li>\n<li>\n<p>C:数组定义格式<br>\n数据类型[] 数组名 = new 数据类型[数组的长度];</p>\n</li>\n</ul>\n<h2 id=\"05-02-数组的初始化动态初始化-掌握\"><a class=\"header-anchor\" href=\"#05-02-数组的初始化动态初始化-掌握\">☆</a>05.02 数组的初始化动态初始化 (掌握)</h2>\n<ul>\n<li>A:什么是数组的初始化\n<ul>\n<li>就是为数组开辟连续的内存空间，并为每个数组元素赋予值</li>\n</ul>\n</li>\n<li>B:如何对数组进行初始化\n<ul>\n<li>a:动态初始化 只指定长度，由系统给出初始化值\n<ul>\n<li>int[] arr = new int[5];</li>\n</ul>\n</li>\n<li>b:静态初始化 给出初始化值，由系统决定长度</li>\n</ul>\n</li>\n<li>C:动态初始化的格式：\n<ul>\n<li>数据类型[] 数组名 = new 数据类型[数组长度];</li>\n</ul>\n</li>\n<li>D:案例演示\n<ul>\n<li>输出数组名称和数组元素</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-03-java中的内存分配以及栈和堆的区别\"><a class=\"header-anchor\" href=\"#05-03-java中的内存分配以及栈和堆的区别\">☆</a>05.03 Java中的内存分配以及栈和堆的区别</h2>\n<ul>\n<li>A:栈(掌握)\n<ul>\n<li>存储局部变量</li>\n</ul>\n</li>\n<li>B:堆(掌握)\n<ul>\n<li>存储new出来的数组或对象</li>\n</ul>\n</li>\n<li>C:方法区\n<ul>\n<li>面向对象部分讲解</li>\n</ul>\n</li>\n<li>D:本地方法区\n<ul>\n<li>和系统相关</li>\n</ul>\n</li>\n<li>E:寄存器\n<ul>\n<li>给CPU使用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-04-数组的内存图解1一个数组-掌握\"><a class=\"header-anchor\" href=\"#05-04-数组的内存图解1一个数组-掌握\">☆</a>05.04 数组的内存图解1一个数组 (掌握)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>一个数组</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-05-数组的内存图解2二个数组-了解\"><a class=\"header-anchor\" href=\"#05-05-数组的内存图解2二个数组-了解\">☆</a>05.05 数组的内存图解2二个数组 (了解)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>二个不同的数组</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-06-数组的内存图解3三个引用两个数组-了解\"><a class=\"header-anchor\" href=\"#05-06-数组的内存图解3三个引用两个数组-了解\">☆</a>05.06 数组的内存图解3三个引用两个数组 (了解)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>三个引用，有两个数组的引用指向同一个地址</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-07-数组的初始化静态初始化及内存图-掌握\"><a class=\"header-anchor\" href=\"#05-07-数组的初始化静态初始化及内存图-掌握\">☆</a>05.07 数组的初始化静态初始化及内存图 (掌握)</h2>\n<ul>\n<li>A:静态初始化的格式：\n<ul>\n<li>格式：数据类型[] 数组名 = new 数据类型[]{元素1,元素2,…};</li>\n<li>简化格式：\n<ul>\n<li>数据类型[] 数组名 = {元素1,元素2,…};</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>对数组的解释</li>\n<li>输出数组名称和数组元素</li>\n</ul>\n</li>\n<li>C:画图演示\n<ul>\n<li>一个数组</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-08-数组操作的两个常见小问题越界和空指针-掌握\"><a class=\"header-anchor\" href=\"#05-08-数组操作的两个常见小问题越界和空指针-掌握\">☆</a>05.08 数组操作的两个常见小问题越界和空指针 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>a:ArrayIndexOutOfBoundsException:数组索引越界异常\n<ul>\n<li>原因：你访问了不存在的索引。</li>\n</ul>\n</li>\n<li>b:NullPointerException:空指针异常\n<ul>\n<li>原因：数组已经不在指向堆内存了。而你还用数组名去访问元素。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;;</span><br><span class=\"line\">arr = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">System.out.println(arr[<span class=\"number\">0</span>]);</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-09-数组的操作1遍历-掌握\"><a class=\"header-anchor\" href=\"#05-09-数组的操作1遍历-掌握\">☆</a>05.09 数组的操作1遍历 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>数组遍历：就是依次输出数组中的每一个元素。</li>\n<li>数组的属性:arr.length数组的长度</li>\n<li>数组的最大索引:arr.length - 1;</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; arr.length ;i++ ) &#123;</span><br><span class=\"line\">\t\tSystem.out.print(arr[i] + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-10-数组的操作2获取最值-掌握\"><a class=\"header-anchor\" href=\"#05-10-数组的操作2获取最值-掌握\">☆</a>05.10 数组的操作2获取最值 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>数组获取最值(获取数组中的最大值最小值)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">getMax</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> max = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i &lt; arr.length ;i++ ) &#123;\t\t\t<span class=\"comment\">//从数组的第二个元素开始遍历</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (max &lt; arr[i]) &#123;\t\t\t\t\t\t\t<span class=\"comment\">//如果max记录的值小于的数组中的元素</span></span><br><span class=\"line\">\t\t\tmax = arr[i];\t\t\t\t\t\t\t<span class=\"comment\">//max记录住较大的</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-11-数组的操作3反转-掌握\"><a class=\"header-anchor\" href=\"#05-11-数组的操作3反转-掌握\">☆</a>05.11 数组的操作3反转 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>数组元素反转(就是把元素对调)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">reverseArray</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; arr.length / <span class=\"number\">2</span> ; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//arr[0]和arr[arr.length-1-0]交换</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//arr[1]和arr[arr.length-1-1]交换</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//arr[2]和arr[arr.lentth-1-2]</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//...</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> temp = arr[i];</span><br><span class=\"line\">\t\tarr[i] = arr[arr.length-<span class=\"number\">1</span>-i];</span><br><span class=\"line\">\t\tarr[arr.length-<span class=\"number\">1</span>-i] = temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-12-数组的操作4查表法-掌握\"><a class=\"header-anchor\" href=\"#05-12-数组的操作4查表法-掌握\">☆</a>05.12 数组的操作4查表法 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>数组查表法(根据键盘录入索引,查找对应星期)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">char</span> <span class=\"title\">getWeek</span><span class=\"params\">(<span class=\"keyword\">int</span> week)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span>[] arr = &#123;<span class=\"string\">' '</span>,<span class=\"string\">'一'</span>,<span class=\"string\">'二'</span>,<span class=\"string\">'三'</span>,<span class=\"string\">'四'</span>,<span class=\"string\">'五'</span>,<span class=\"string\">'六'</span>,<span class=\"string\">'日'</span>&#125;;\t\t<span class=\"comment\">//定义了一张星期表</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> arr[week];\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//通过索引获取表中的元素</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-13-数组的操作5基本查找-掌握\"><a class=\"header-anchor\" href=\"#05-13-数组的操作5基本查找-掌握\">☆</a>05.13 数组的操作5基本查找 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>数组元素查找(查找指定元素第一次在数组中出现的索引)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">getIndex</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr,<span class=\"keyword\">int</span> value)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; arr.length ;i++ ) &#123;\t\t\t\t<span class=\"comment\">//数组的遍历</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (arr[i] == value) &#123;\t\t\t\t\t\t\t<span class=\"comment\">//如果数组中的元素与查找的元素匹配</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> i;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-14-二维数组概述和格式1的讲解-了解\"><a class=\"header-anchor\" href=\"#05-14-二维数组概述和格式1的讲解-了解\">☆</a>05.14 二维数组概述和格式1的讲解 (了解)</h2>\n<ul>\n<li>\n<p>A:二维数组概述</p>\n</li>\n<li>\n<p>B:二维数组格式1</p>\n<ul>\n<li>int[][] arr = new int[3][2];</li>\n</ul>\n</li>\n<li>\n<p>C:二维数组格式1的解释</p>\n</li>\n<li>\n<p>D:注意事项</p>\n<ul>\n<li>a:以下格式也可以表示二维数组\n<ul>\n<li>1:数据类型 数组名[][] = new 数据类型[m][n];</li>\n<li>2:数据类型[] 数组名[] = new 数据类型[m][n];</li>\n</ul>\n</li>\n<li>B:注意下面定义的区别</li>\n<li>\n<pre><code>int x;\nint y;\nint x,y;\n\nint[] x;\nint[] y[];\n\nint[] x,y[];\tx是一维数组,y是二维数组\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>E:案例演示</p>\n<ul>\n<li>定义二维数组，输出二维数组名称，一维数组名称，一个元素</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-15-二维数组格式1的内存图解-了解\"><a class=\"header-anchor\" href=\"#05-15-二维数组格式1的内存图解-了解\">☆</a>05.15 二维数组格式1的内存图解 (了解)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>画图讲解上面的二维数组名称，一维数组名称，一个元素的值的问题</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-16-二维数组格式2的讲解及其内存图解-了解\"><a class=\"header-anchor\" href=\"#05-16-二维数组格式2的讲解及其内存图解-了解\">☆</a>05.16 二维数组格式2的讲解及其内存图解 (了解)</h2>\n<ul>\n<li>A:二维数组格式2\n<ul>\n<li>int[][] arr = new int[3][];</li>\n</ul>\n</li>\n<li>B:二维数组格式2的解释</li>\n<li>C:案例演示\n<ul>\n<li>讲解格式，输出数据，并画内存图</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-17-二维数组格式3的讲解及其内存图解-了解\"><a class=\"header-anchor\" href=\"#05-17-二维数组格式3的讲解及其内存图解-了解\">☆</a>05.17 二维数组格式3的讲解及其内存图解 (了解)</h2>\n<ul>\n<li>A:二维数组格式3\n<ul>\n<li>int[][] arr = /{/{1,2,3},{4,5},{6,7,8,9/}/};</li>\n</ul>\n</li>\n<li>B:二维数组格式3的解释</li>\n<li>C:案例演示\n<ul>\n<li>讲解格式，输出数据，并画内存图</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-18-二维数组练习1遍历-掌握\"><a class=\"header-anchor\" href=\"#05-18-二维数组练习1遍历-掌握\">☆</a>05.18 二维数组练习1遍历 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>\n<p>需求：二维数组遍历</p>\n</li>\n<li>\n<p>外循环控制的是二维数组的长度，其实就是一维数组的个数。</p>\n</li>\n<li>\n<p>内循环控制的是一维数组的长度。</p>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[][] arr = &#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;,&#123;<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; arr.length ;i++ ) &#123;          <span class=\"comment\">//获取到每个二维数组中的一维数组</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j &lt; arr[i].length ;j++ ) &#123;\t<span class=\"comment\">//获取每个一维数组中的元素</span></span><br><span class=\"line\">\t\tSystem.out.print(arr[i][j] + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tSystem.out.println();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-19-二维数组练习2求和-掌握\"><a class=\"header-anchor\" href=\"#05-19-二维数组练习2求和-掌握\">☆</a>05.19 二维数组练习2求和 (掌握)</h2>\n<ul>\n<li>A:案例演示</li>\n<li>\n<pre><code>需求：公司年销售额求和\n某公司按照季度和月份统计的数据如下：单位(万元)\n第一季度：22,66,44\n第二季度：77,33,88\n第三季度：25,45,65\n第四季度：11,66,99\n</code></pre>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[][] arr = &#123;&#123;<span class=\"number\">22</span>,<span class=\"number\">66</span>,<span class=\"number\">44</span>&#125;,&#123;<span class=\"number\">77</span>,<span class=\"number\">33</span>,<span class=\"number\">88</span>&#125;,&#123;<span class=\"number\">25</span>,<span class=\"number\">45</span>,<span class=\"number\">65</span>&#125;,&#123;<span class=\"number\">11</span>,<span class=\"number\">66</span>,<span class=\"number\">99</span>&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;\t\t\t\t\t\t\t\t\t<span class=\"comment\">//定义变量,记录每次相加的结果</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; arr.length ;i++ ) &#123;\t\t\t<span class=\"comment\">//获取每一个一维数组</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j &lt; arr[i].length ;j++ ) &#123;\t<span class=\"comment\">//获取每一个一维数组中的元素</span></span><br><span class=\"line\">\t\tsum = sum + arr[i][j];\t\t\t\t\t<span class=\"comment\">//累加</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(sum);</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-20-思考题java中的参数传递问题及图解-掌握\"><a class=\"header-anchor\" href=\"#05-20-思考题java中的参数传递问题及图解-掌握\">☆</a>05.20 思考题Java中的参数传递问题及图解 (掌握)</h2>\n<ul>\n<li>A:案例演示</li>\n<li></li>\n</ul>\n<p>看程序写结果，并画内存图解释</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> b = <span class=\"number\">20</span>;</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">\"a:\"</span>+a+<span class=\"string\">\",b:\"</span>+b);</span><br><span class=\"line\">\tchange(a,b);</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">\"a:\"</span>+a+<span class=\"string\">\",b:\"</span>+b);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">\tchange(arr);</span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">change</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">\"a:\"</span>+a+<span class=\"string\">\",b:\"</span>+b);</span><br><span class=\"line\">\ta = b;</span><br><span class=\"line\">\tb = a + b;</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">\"a:\"</span>+a+<span class=\"string\">\",b:\"</span>+b);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">change</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x=<span class=\"number\">0</span>; x&lt;arr.length; x++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(arr[x]%<span class=\"number\">2</span>==<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\tarr[x]*=<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-21-day05总结\"><a class=\"header-anchor\" href=\"#05-21-day05总结\">☆</a>05.21_day05总结</h2>\n<ul>\n<li>把今天的知识点总结一遍。</li>\n</ul>\n","site":{"data":{}},"length":4326,"excerpt":"","more":"<h2 id=\"05-01-数组概述和定义格式说明-了解\"><a class=\"header-anchor\" href=\"#05-01-数组概述和定义格式说明-了解\">☆</a>05.01 数组概述和定义格式说明 (了解)</h2>\n<ul>\n<li>\n<p>A:为什么要有数组(容器)</p>\n<ul>\n<li>为了存储同种数据类型的多个值</li>\n</ul>\n</li>\n<li>\n<p>B:数组概念</p>\n<ul>\n<li>数组是存储同一种数据类型多个元素的集合。也可以看成是一个容器。</li>\n<li>数组既可以存储基本数据类型，也可以存储引用数据类型。</li>\n</ul>\n</li>\n<li>\n<p>C:数组定义格式<br>\n数据类型[] 数组名 = new 数据类型[数组的长度];</p>\n</li>\n</ul>\n<h2 id=\"05-02-数组的初始化动态初始化-掌握\"><a class=\"header-anchor\" href=\"#05-02-数组的初始化动态初始化-掌握\">☆</a>05.02 数组的初始化动态初始化 (掌握)</h2>\n<ul>\n<li>A:什么是数组的初始化\n<ul>\n<li>就是为数组开辟连续的内存空间，并为每个数组元素赋予值</li>\n</ul>\n</li>\n<li>B:如何对数组进行初始化\n<ul>\n<li>a:动态初始化 只指定长度，由系统给出初始化值\n<ul>\n<li>int[] arr = new int[5];</li>\n</ul>\n</li>\n<li>b:静态初始化 给出初始化值，由系统决定长度</li>\n</ul>\n</li>\n<li>C:动态初始化的格式：\n<ul>\n<li>数据类型[] 数组名 = new 数据类型[数组长度];</li>\n</ul>\n</li>\n<li>D:案例演示\n<ul>\n<li>输出数组名称和数组元素</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-03-java中的内存分配以及栈和堆的区别\"><a class=\"header-anchor\" href=\"#05-03-java中的内存分配以及栈和堆的区别\">☆</a>05.03 Java中的内存分配以及栈和堆的区别</h2>\n<ul>\n<li>A:栈(掌握)\n<ul>\n<li>存储局部变量</li>\n</ul>\n</li>\n<li>B:堆(掌握)\n<ul>\n<li>存储new出来的数组或对象</li>\n</ul>\n</li>\n<li>C:方法区\n<ul>\n<li>面向对象部分讲解</li>\n</ul>\n</li>\n<li>D:本地方法区\n<ul>\n<li>和系统相关</li>\n</ul>\n</li>\n<li>E:寄存器\n<ul>\n<li>给CPU使用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-04-数组的内存图解1一个数组-掌握\"><a class=\"header-anchor\" href=\"#05-04-数组的内存图解1一个数组-掌握\">☆</a>05.04 数组的内存图解1一个数组 (掌握)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>一个数组</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-05-数组的内存图解2二个数组-了解\"><a class=\"header-anchor\" href=\"#05-05-数组的内存图解2二个数组-了解\">☆</a>05.05 数组的内存图解2二个数组 (了解)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>二个不同的数组</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-06-数组的内存图解3三个引用两个数组-了解\"><a class=\"header-anchor\" href=\"#05-06-数组的内存图解3三个引用两个数组-了解\">☆</a>05.06 数组的内存图解3三个引用两个数组 (了解)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>三个引用，有两个数组的引用指向同一个地址</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-07-数组的初始化静态初始化及内存图-掌握\"><a class=\"header-anchor\" href=\"#05-07-数组的初始化静态初始化及内存图-掌握\">☆</a>05.07 数组的初始化静态初始化及内存图 (掌握)</h2>\n<ul>\n<li>A:静态初始化的格式：\n<ul>\n<li>格式：数据类型[] 数组名 = new 数据类型[]{元素1,元素2,…};</li>\n<li>简化格式：\n<ul>\n<li>数据类型[] 数组名 = {元素1,元素2,…};</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>对数组的解释</li>\n<li>输出数组名称和数组元素</li>\n</ul>\n</li>\n<li>C:画图演示\n<ul>\n<li>一个数组</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-08-数组操作的两个常见小问题越界和空指针-掌握\"><a class=\"header-anchor\" href=\"#05-08-数组操作的两个常见小问题越界和空指针-掌握\">☆</a>05.08 数组操作的两个常见小问题越界和空指针 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>a:ArrayIndexOutOfBoundsException:数组索引越界异常\n<ul>\n<li>原因：你访问了不存在的索引。</li>\n</ul>\n</li>\n<li>b:NullPointerException:空指针异常\n<ul>\n<li>原因：数组已经不在指向堆内存了。而你还用数组名去访问元素。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;;</span><br><span class=\"line\">arr = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">System.out.println(arr[<span class=\"number\">0</span>]);</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-09-数组的操作1遍历-掌握\"><a class=\"header-anchor\" href=\"#05-09-数组的操作1遍历-掌握\">☆</a>05.09 数组的操作1遍历 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>数组遍历：就是依次输出数组中的每一个元素。</li>\n<li>数组的属性:arr.length数组的长度</li>\n<li>数组的最大索引:arr.length - 1;</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; arr.length ;i++ ) &#123;</span><br><span class=\"line\">\t\tSystem.out.print(arr[i] + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-10-数组的操作2获取最值-掌握\"><a class=\"header-anchor\" href=\"#05-10-数组的操作2获取最值-掌握\">☆</a>05.10 数组的操作2获取最值 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>数组获取最值(获取数组中的最大值最小值)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">getMax</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> max = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>;i &lt; arr.length ;i++ ) &#123;\t\t\t<span class=\"comment\">//从数组的第二个元素开始遍历</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (max &lt; arr[i]) &#123;\t\t\t\t\t\t\t<span class=\"comment\">//如果max记录的值小于的数组中的元素</span></span><br><span class=\"line\">\t\t\tmax = arr[i];\t\t\t\t\t\t\t<span class=\"comment\">//max记录住较大的</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-11-数组的操作3反转-掌握\"><a class=\"header-anchor\" href=\"#05-11-数组的操作3反转-掌握\">☆</a>05.11 数组的操作3反转 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>数组元素反转(就是把元素对调)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">reverseArray</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; arr.length / <span class=\"number\">2</span> ; i++) &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//arr[0]和arr[arr.length-1-0]交换</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//arr[1]和arr[arr.length-1-1]交换</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//arr[2]和arr[arr.lentth-1-2]</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//...</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> temp = arr[i];</span><br><span class=\"line\">\t\tarr[i] = arr[arr.length-<span class=\"number\">1</span>-i];</span><br><span class=\"line\">\t\tarr[arr.length-<span class=\"number\">1</span>-i] = temp;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-12-数组的操作4查表法-掌握\"><a class=\"header-anchor\" href=\"#05-12-数组的操作4查表法-掌握\">☆</a>05.12 数组的操作4查表法 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>数组查表法(根据键盘录入索引,查找对应星期)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">char</span> <span class=\"title\">getWeek</span><span class=\"params\">(<span class=\"keyword\">int</span> week)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span>[] arr = &#123;<span class=\"string\">' '</span>,<span class=\"string\">'一'</span>,<span class=\"string\">'二'</span>,<span class=\"string\">'三'</span>,<span class=\"string\">'四'</span>,<span class=\"string\">'五'</span>,<span class=\"string\">'六'</span>,<span class=\"string\">'日'</span>&#125;;\t\t<span class=\"comment\">//定义了一张星期表</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> arr[week];\t\t\t\t\t\t\t\t\t\t\t<span class=\"comment\">//通过索引获取表中的元素</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-13-数组的操作5基本查找-掌握\"><a class=\"header-anchor\" href=\"#05-13-数组的操作5基本查找-掌握\">☆</a>05.13 数组的操作5基本查找 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>数组元素查找(查找指定元素第一次在数组中出现的索引)</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">getIndex</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr,<span class=\"keyword\">int</span> value)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; arr.length ;i++ ) &#123;\t\t\t\t<span class=\"comment\">//数组的遍历</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (arr[i] == value) &#123;\t\t\t\t\t\t\t<span class=\"comment\">//如果数组中的元素与查找的元素匹配</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> i;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-14-二维数组概述和格式1的讲解-了解\"><a class=\"header-anchor\" href=\"#05-14-二维数组概述和格式1的讲解-了解\">☆</a>05.14 二维数组概述和格式1的讲解 (了解)</h2>\n<ul>\n<li>\n<p>A:二维数组概述</p>\n</li>\n<li>\n<p>B:二维数组格式1</p>\n<ul>\n<li>int[][] arr = new int[3][2];</li>\n</ul>\n</li>\n<li>\n<p>C:二维数组格式1的解释</p>\n</li>\n<li>\n<p>D:注意事项</p>\n<ul>\n<li>a:以下格式也可以表示二维数组\n<ul>\n<li>1:数据类型 数组名[][] = new 数据类型[m][n];</li>\n<li>2:数据类型[] 数组名[] = new 数据类型[m][n];</li>\n</ul>\n</li>\n<li>B:注意下面定义的区别</li>\n<li>\n<pre><code>int x;\nint y;\nint x,y;\n\nint[] x;\nint[] y[];\n\nint[] x,y[];\tx是一维数组,y是二维数组\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>E:案例演示</p>\n<ul>\n<li>定义二维数组，输出二维数组名称，一维数组名称，一个元素</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-15-二维数组格式1的内存图解-了解\"><a class=\"header-anchor\" href=\"#05-15-二维数组格式1的内存图解-了解\">☆</a>05.15 二维数组格式1的内存图解 (了解)</h2>\n<ul>\n<li>A:画图演示\n<ul>\n<li>画图讲解上面的二维数组名称，一维数组名称，一个元素的值的问题</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-16-二维数组格式2的讲解及其内存图解-了解\"><a class=\"header-anchor\" href=\"#05-16-二维数组格式2的讲解及其内存图解-了解\">☆</a>05.16 二维数组格式2的讲解及其内存图解 (了解)</h2>\n<ul>\n<li>A:二维数组格式2\n<ul>\n<li>int[][] arr = new int[3][];</li>\n</ul>\n</li>\n<li>B:二维数组格式2的解释</li>\n<li>C:案例演示\n<ul>\n<li>讲解格式，输出数据，并画内存图</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-17-二维数组格式3的讲解及其内存图解-了解\"><a class=\"header-anchor\" href=\"#05-17-二维数组格式3的讲解及其内存图解-了解\">☆</a>05.17 二维数组格式3的讲解及其内存图解 (了解)</h2>\n<ul>\n<li>A:二维数组格式3\n<ul>\n<li>int[][] arr = /{/{1,2,3},{4,5},{6,7,8,9/}/};</li>\n</ul>\n</li>\n<li>B:二维数组格式3的解释</li>\n<li>C:案例演示\n<ul>\n<li>讲解格式，输出数据，并画内存图</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"05-18-二维数组练习1遍历-掌握\"><a class=\"header-anchor\" href=\"#05-18-二维数组练习1遍历-掌握\">☆</a>05.18 二维数组练习1遍历 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>\n<p>需求：二维数组遍历</p>\n</li>\n<li>\n<p>外循环控制的是二维数组的长度，其实就是一维数组的个数。</p>\n</li>\n<li>\n<p>内循环控制的是一维数组的长度。</p>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[][] arr = &#123;&#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>&#125;,&#123;<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;,&#123;<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; arr.length ;i++ ) &#123;          <span class=\"comment\">//获取到每个二维数组中的一维数组</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j &lt; arr[i].length ;j++ ) &#123;\t<span class=\"comment\">//获取每个一维数组中的元素</span></span><br><span class=\"line\">\t\tSystem.out.print(arr[i][j] + <span class=\"string\">\" \"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tSystem.out.println();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-19-二维数组练习2求和-掌握\"><a class=\"header-anchor\" href=\"#05-19-二维数组练习2求和-掌握\">☆</a>05.19 二维数组练习2求和 (掌握)</h2>\n<ul>\n<li>A:案例演示</li>\n<li>\n<pre><code>需求：公司年销售额求和\n某公司按照季度和月份统计的数据如下：单位(万元)\n第一季度：22,66,44\n第二季度：77,33,88\n第三季度：25,45,65\n第四季度：11,66,99\n</code></pre>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span>[][] arr = &#123;&#123;<span class=\"number\">22</span>,<span class=\"number\">66</span>,<span class=\"number\">44</span>&#125;,&#123;<span class=\"number\">77</span>,<span class=\"number\">33</span>,<span class=\"number\">88</span>&#125;,&#123;<span class=\"number\">25</span>,<span class=\"number\">45</span>,<span class=\"number\">65</span>&#125;,&#123;<span class=\"number\">11</span>,<span class=\"number\">66</span>,<span class=\"number\">99</span>&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> sum = <span class=\"number\">0</span>;\t\t\t\t\t\t\t\t\t<span class=\"comment\">//定义变量,记录每次相加的结果</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;i &lt; arr.length ;i++ ) &#123;\t\t\t<span class=\"comment\">//获取每一个一维数组</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;j &lt; arr[i].length ;j++ ) &#123;\t<span class=\"comment\">//获取每一个一维数组中的元素</span></span><br><span class=\"line\">\t\tsum = sum + arr[i][j];\t\t\t\t\t<span class=\"comment\">//累加</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">System.out.println(sum);</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-20-思考题java中的参数传递问题及图解-掌握\"><a class=\"header-anchor\" href=\"#05-20-思考题java中的参数传递问题及图解-掌握\">☆</a>05.20 思考题Java中的参数传递问题及图解 (掌握)</h2>\n<ul>\n<li>A:案例演示</li>\n<li></li>\n</ul>\n<p>看程序写结果，并画内存图解释</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> b = <span class=\"number\">20</span>;</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">\"a:\"</span>+a+<span class=\"string\">\",b:\"</span>+b);</span><br><span class=\"line\">\tchange(a,b);</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">\"a:\"</span>+a+<span class=\"string\">\",b:\"</span>+b);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span>[] arr = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">\tchange(arr);</span><br><span class=\"line\">\tSystem.out.println(arr[<span class=\"number\">1</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">change</span><span class=\"params\">(<span class=\"keyword\">int</span> a,<span class=\"keyword\">int</span> b)</span> </span>&#123;</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">\"a:\"</span>+a+<span class=\"string\">\",b:\"</span>+b);</span><br><span class=\"line\">\ta = b;</span><br><span class=\"line\">\tb = a + b;</span><br><span class=\"line\">\tSystem.out.println(<span class=\"string\">\"a:\"</span>+a+<span class=\"string\">\",b:\"</span>+b);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">change</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arr)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> x=<span class=\"number\">0</span>; x&lt;arr.length; x++) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(arr[x]%<span class=\"number\">2</span>==<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\tarr[x]*=<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"05-21-day05总结\"><a class=\"header-anchor\" href=\"#05-21-day05总结\">☆</a>05.21_day05总结</h2>\n<ul>\n<li>把今天的知识点总结一遍。</li>\n</ul>\n"},{"title":"Java学习笔记（day08）","copyright":false,"abbrlink":"75c0add7","notshow":true,"description":"面向对象","date":"2018-10-09T15:35:55.000Z","password":null,"image":null,"photos":[],"sticky":null,"_content":"## 08.01 代码块的概述和分类(了解)(面试的时候会问,开发不用或者很少用)\n\n* A:代码块概述\n\t* 在Java中，使用{}括起来的代码被称为代码块。\n* B:代码块分类\n\t* 根据其位置和声明的不同，可以分为局部代码块，构造代码块，静态代码块，同步代码块(多线程讲解)。\n* C:常见代码块的应用\n\t* a:局部代码块 \n\t\t* 在方法中出现；限定变量生命周期，及早释放，提高内存利用率\n\t* b:构造代码块 (初始化块)\n\t\t* 在类中方法外出现；多个构造方法方法中相同的代码存放到一起，每次调用构造都执行，并且在构造方法前执行\n\t* c:静态代码块 \n\t\t* 在类中方法外出现，并加上static修饰；用于给类进行初始化，在加载的时候就执行，并且只执行一次。\n\t\t* 一般用于加载驱动\n\n## 08.02 代码块的面试题 (掌握)\n\n* A:看程序写结果\n\n```java\nclass Student {\n\tstatic {\n\t\tSystem.out.println(\"Student 静态代码块\");\n\t}\n\t\n\t{\n\t\tSystem.out.println(\"Student 构造代码块\");\n\t}\n\t\n\tpublic Student() {\n\t\tSystem.out.println(\"Student 构造方法\");\n\t}\n}\n\nclass Demo2_Student {\n\tstatic {\n\t\tSystem.out.println(\"Demo2_Student静态代码块\");\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"我是main方法\");\n\t\t\n\t\tStudent s1 = new Student();\n\t\tStudent s2 = new Student();\n\t}\n}\n\n/*Demo2_Student静态代码块\n            我是main方法\n    Student 静态代码块\n    Student 构造代码块\n    Student 构造方法\n\n    Student 构造代码块\n    Student 构造方法*/\n```\n\n## 08.03 继承案例演示 (掌握)\n\n* A:继承(extends)\n\t* 让类与类之间产生关系,子父类关系 \n* B:继承案例演示：\n\t* 动物类,猫类,狗类\n\t* 定义两个属性(颜色,腿的个数)两个功能(吃饭，睡觉)\n* C:案例演示\n\t* 使用继承前\n* D:案例演示\n\t* 使用继承后\n\n## 08.04 继承的好处和弊端 (掌握)\n\n* A:继承的好处\n\t* a:提高了代码的复用性\n\t* b:提高了代码的维护性\n\t* c:让类与类之间产生了关系，是多态的前提\n* B:继承的弊端\n\t* 类的耦合性增强了。\n\t\n\t* 开发的原则：高内聚，低耦合。\n\t* 耦合：类与类的关系\n\t* 内聚：就是自己完成某件事情的能力\n\n## 08.05 Java中类的继承特点 (掌握)\n\n* A:Java中类的继承特点\n\t* a:Java只支持单继承，不支持多继承。(一个儿子只能有一个爹)\n\t\t* 有些语言是支持多继承，格式：extends 类1,类2,...\n\t* b:Java支持多层继承(继承体系)\n* B:案例演示\n\t* Java中类的继承特点\n\t\t* 如果想用这个体系的所有功能用最底层的类创建对象\n\t\t* 如果想看这个体系的共性功能,看最顶层的类 \n\n## 08.06 继承的注意事项和什么时候使用继承 (掌握)\n\n* A:继承的注意事项\n\t* a:子类只能继承父类所有非私有的成员(成员方法和成员变量)\n\t* b:子类不能继承父类的构造方法，但是可以通过super(马上讲)关键字去访问父类构造方法。\n\t* c:不要为了部分功能而去继承\n\t* 项目经理 姓名 工号 工资 奖金\n\t* 程序员\t姓名 工号 工资\n* B:什么时候使用继承\n\t* 继承其实体现的是一种关系：\"is a\"。\n\t\tPerson\n\t\t\tStudent\n\t\t\tTeacher\n\t\t水果\n\t\t\t苹果\n\t\t\t香蕉\n\t\t\t橘子\n\t\t\t\n\t采用假设法。\n\t\t如果有两个类A,B。只有他们符合A是B的一种，或者B是A的一种，就可以考虑使用继承。\n\n## 08.07 继承中成员变量的关系 (掌握)\n\n* A:案例演示\n\t* a:不同名的变量\n\t* b:同名的变量\n\n## 08.08 this和super的区别和应用 (掌握)\n\n* A:this和super都代表什么\n\t* this:代表当前对象的引用,谁来调用我,我就代表谁\n\t* super:代表当前对象父类的引用\n* B:this和super的使用区别\n\t* a:调用成员变量\n\t\t* this.成员变量 调用本类的成员变量,也可以调用父类的成员变量\n\t\t* super.成员变量 调用父类的成员变量\n\t* b:调用构造方法\n\t\t* this(...)\t调用本类的构造方法\n\t\t* super(...)\t调用父类的构造方法\n\t* c:调用成员方法\n\t\t* this.成员方法 调用本类的成员方法,也可以调用父类的方法\n\t\t* super.成员方法 调用父类的成员方法\n\t\t\n\n## 08.09 继承中构造方法的关系 (掌握)\n\n* A:案例演示\n\t* 子类中所有的构造方法默认都会访问父类中空参数的构造方法\n* B:为什么呢?\n\t* 因为子类会继承父类中的数据，可能还会使用父类的数据。\n\t* 所以，子类初始化之前，一定要先完成父类数据的初始化。\n\t\n\t* 其实：\n\t\t* 每一个构造方法的第一条语句默认都是：super() Object类最顶层的父类。\n\n## 08.10 继承中构造方法的注意事项 (掌握)\n\n* A:案例演示\n\t* 父类没有无参构造方法,子类怎么办?\n\t* super解决\n\t* this解决\n* B:注意事项\n\t* super(…)或者this(….)必须出现在构造方法的第一条语句上\n\n## 08.11 继承中的面试题 (掌握)\n\n* A:案例演示\n\n```java\n\t\t看程序写结果1\n\t\tclass Fu{\n\t\t\tpublic int num = 10;\n\t\t\tpublic Fu(){\n\t\t\t\tSystem.out.println(\"fu\");\n\t\t\t}\n\t\t}\n\t\tclass Zi extends Fu{\n\t\t\tpublic int num = 20;\n\t\t\tpublic Zi(){\n\t\t\t\tSystem.out.println(\"zi\");\n\t\t\t}\n\t\t\tpublic void show(){\n\t\t\t\tint num = 30;\n\t\t\t\tSystem.out.println(num);\n\t\t\t\tSystem.out.println(this.num);\n\t\t\t\tSystem.out.println(super.num);\n\t\t\t}\n\t\t}\n\t\tclass Test1_Extends {\n\t\t\tpublic static void main(String[] args) {\n\t\t\t\tZi z = new Zi();\n\t\t\t\tz.show();\n\t\t\t}\n\t\t}\n\n\t\t看程序写结果2\n\t\tclass Fu {\n\t\t\tstatic {\n\t\t\t\tSystem.out.println(\"静态代码块Fu\");\n\t\t\t}\n\t\n\t\t\t{\n\t\t\t\tSystem.out.println(\"构造代码块Fu\");\n\t\t\t}\n\t\n\t\t\tpublic Fu() {\n\t\t\t\tSystem.out.println(\"构造方法Fu\");\n\t\t\t}\n\t\t}\n\t\n\t\tclass Zi extends Fu {\n\t\t\tstatic {\n\t\t\t\tSystem.out.println(\"静态代码块Zi\");\n\t\t\t}\n\t\n\t\t\t{\n\t\t\t\tSystem.out.println(\"构造代码块Zi\");\n\t\t\t}\n\t\n\t\t\tpublic Zi() {\n\t\t\t\tSystem.out.println(\"构造方法Zi\");\n\t\t\t}\n\t\t}\n\t\n\t\tZi z = new Zi(); 请执行结果。\n```\n\n## 08.12 继承中成员方法关系 (掌握)\n\n* A:案例演示\n\t* a:不同名的方法\n\t* b:同名的方法\n\n## 08.13 方法重写概述及其应用 (掌握)\n\n* A:什么是方法重写\n\t* 重写:子父类出现了一模一样的方法(注意:返回值类型可以是子父类,这个我们学完面向对象讲) \n* B:方法重写的应用：\n\t* 当子类需要父类的功能，而功能主体子类有自己特有内容时，可以重写父类中的方法。这样，即沿袭了父类的功能，又定义了子类特有的内容。\n* C:案例演示\n\t* a:定义一个手机类。\n\n## 08.14 方法重写的注意事项 (掌握)\n\n* A:方法重写注意事项\n\t* a:父类中私有方法不能被重写\n\t\t* 因为父类私有方法子类根本就无法继承\n\t* b:子类重写父类方法时，访问权限不能更低\n\t\t* 最好就一致\n\t* c:父类静态方法，子类也必须通过静态方法进行重写\n\t\t* 其实这个算不上方法重写，但是现象确实如此，至于为什么算不上方法重写，多态中我会讲解(静态只能覆盖静态)\n\t\t\n\t* 子类重写父类方法的时候，最好声明一模一样。\n* B:案例演示\n\t* 方法重写注意事项\n\n## 08.15 方法重写的面试题 (掌握)\n\n* A:方法重写的面试题\n\t* Override和Overload的区别?Overload能改变返回值类型吗?\n\t* overload可以改变返回值类型,只看参数列表\n\t* 方法重写：子类中出现了和父类中方法声明一模一样的方法。与返回值类型有关,返回值是一致(或者是子父类)的\n\t\n\t* 方法重载：本类中出现的方法名一样，参数列表不同的方法。与返回值类型无关。\n\n\t* 子类对象调用方法的时候：\n\t\t* 先找子类本身，再找父类。\n\n## 08.16 使用继承前的学生和老师案例 (掌握)\n\n* A:案例演示\n\t* 使用继承前的学生和老师案例\n\t* 属性:姓名,年龄\n\t* 行为:吃饭\n\t* 老师有特有的方法:讲课\n\t* 学生有特有的方法:学习\n\n## 08.17  使用继承后的学生和老师案例 (掌握)\n\n* A:案例演示\n\t* 使用继承后的学生和老师案例\n\n## 08.18  猫狗案例分析,实现及测试 (掌握)\n\n* A:猫狗案例分析\n* B:案例演示\n\t* 猫狗案例继承版\n\t* 属性:毛的颜色,腿的个数\n\t* 行为:吃饭\n\t* 猫特有行为:抓老鼠catchMouse\n\t* 狗特有行为:看家lookHome\n\n\n## 08.19 final关键字修饰类,方法以及变量的特点 (掌握)\n\n* A:final概述\n* B:final修饰特点\n\t* 修饰类，类不能被继承\n\t* 修饰变量，变量就变成了常量，只能被赋值一次\n\t* 修饰方法，方法不能被重写\n* C:案例演示\n\t* final修饰特点\n\n## 08.20 final关键字修饰局部变量 (掌握)\n\n* A:案例演示\n\t* 方法内部或者方法声明上都演示一下(了解)\n\n\t* 基本类型，是值不能被改变\n\t* 引用类型，是地址值不能被改变,对象中的属性可以改变\n\n## 08.21 final修饰变量的初始化时机 (掌握)\n\n* A:final修饰变量的初始化时机\n\t* 显示初始化 \n\t* 在对象构造完毕前即可\n\t\n## 08.22_day08总结\n\n* 把今天的知识点总结一遍。","source":"_posts/Java学习笔记（day08）.md","raw":"---\ntitle: Java学习笔记（day08）\ncopyright: false\nabbrlink: 75c0add7\nnotshow: true\ntags:\n  - Java\ncategories: Java\ndescription: 面向对象\ndate: 2018-10-09 23:35:55\npassword:\nimage:\nphotos:\nsticky:\n---\n## 08.01 代码块的概述和分类(了解)(面试的时候会问,开发不用或者很少用)\n\n* A:代码块概述\n\t* 在Java中，使用{}括起来的代码被称为代码块。\n* B:代码块分类\n\t* 根据其位置和声明的不同，可以分为局部代码块，构造代码块，静态代码块，同步代码块(多线程讲解)。\n* C:常见代码块的应用\n\t* a:局部代码块 \n\t\t* 在方法中出现；限定变量生命周期，及早释放，提高内存利用率\n\t* b:构造代码块 (初始化块)\n\t\t* 在类中方法外出现；多个构造方法方法中相同的代码存放到一起，每次调用构造都执行，并且在构造方法前执行\n\t* c:静态代码块 \n\t\t* 在类中方法外出现，并加上static修饰；用于给类进行初始化，在加载的时候就执行，并且只执行一次。\n\t\t* 一般用于加载驱动\n\n## 08.02 代码块的面试题 (掌握)\n\n* A:看程序写结果\n\n```java\nclass Student {\n\tstatic {\n\t\tSystem.out.println(\"Student 静态代码块\");\n\t}\n\t\n\t{\n\t\tSystem.out.println(\"Student 构造代码块\");\n\t}\n\t\n\tpublic Student() {\n\t\tSystem.out.println(\"Student 构造方法\");\n\t}\n}\n\nclass Demo2_Student {\n\tstatic {\n\t\tSystem.out.println(\"Demo2_Student静态代码块\");\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"我是main方法\");\n\t\t\n\t\tStudent s1 = new Student();\n\t\tStudent s2 = new Student();\n\t}\n}\n\n/*Demo2_Student静态代码块\n            我是main方法\n    Student 静态代码块\n    Student 构造代码块\n    Student 构造方法\n\n    Student 构造代码块\n    Student 构造方法*/\n```\n\n## 08.03 继承案例演示 (掌握)\n\n* A:继承(extends)\n\t* 让类与类之间产生关系,子父类关系 \n* B:继承案例演示：\n\t* 动物类,猫类,狗类\n\t* 定义两个属性(颜色,腿的个数)两个功能(吃饭，睡觉)\n* C:案例演示\n\t* 使用继承前\n* D:案例演示\n\t* 使用继承后\n\n## 08.04 继承的好处和弊端 (掌握)\n\n* A:继承的好处\n\t* a:提高了代码的复用性\n\t* b:提高了代码的维护性\n\t* c:让类与类之间产生了关系，是多态的前提\n* B:继承的弊端\n\t* 类的耦合性增强了。\n\t\n\t* 开发的原则：高内聚，低耦合。\n\t* 耦合：类与类的关系\n\t* 内聚：就是自己完成某件事情的能力\n\n## 08.05 Java中类的继承特点 (掌握)\n\n* A:Java中类的继承特点\n\t* a:Java只支持单继承，不支持多继承。(一个儿子只能有一个爹)\n\t\t* 有些语言是支持多继承，格式：extends 类1,类2,...\n\t* b:Java支持多层继承(继承体系)\n* B:案例演示\n\t* Java中类的继承特点\n\t\t* 如果想用这个体系的所有功能用最底层的类创建对象\n\t\t* 如果想看这个体系的共性功能,看最顶层的类 \n\n## 08.06 继承的注意事项和什么时候使用继承 (掌握)\n\n* A:继承的注意事项\n\t* a:子类只能继承父类所有非私有的成员(成员方法和成员变量)\n\t* b:子类不能继承父类的构造方法，但是可以通过super(马上讲)关键字去访问父类构造方法。\n\t* c:不要为了部分功能而去继承\n\t* 项目经理 姓名 工号 工资 奖金\n\t* 程序员\t姓名 工号 工资\n* B:什么时候使用继承\n\t* 继承其实体现的是一种关系：\"is a\"。\n\t\tPerson\n\t\t\tStudent\n\t\t\tTeacher\n\t\t水果\n\t\t\t苹果\n\t\t\t香蕉\n\t\t\t橘子\n\t\t\t\n\t采用假设法。\n\t\t如果有两个类A,B。只有他们符合A是B的一种，或者B是A的一种，就可以考虑使用继承。\n\n## 08.07 继承中成员变量的关系 (掌握)\n\n* A:案例演示\n\t* a:不同名的变量\n\t* b:同名的变量\n\n## 08.08 this和super的区别和应用 (掌握)\n\n* A:this和super都代表什么\n\t* this:代表当前对象的引用,谁来调用我,我就代表谁\n\t* super:代表当前对象父类的引用\n* B:this和super的使用区别\n\t* a:调用成员变量\n\t\t* this.成员变量 调用本类的成员变量,也可以调用父类的成员变量\n\t\t* super.成员变量 调用父类的成员变量\n\t* b:调用构造方法\n\t\t* this(...)\t调用本类的构造方法\n\t\t* super(...)\t调用父类的构造方法\n\t* c:调用成员方法\n\t\t* this.成员方法 调用本类的成员方法,也可以调用父类的方法\n\t\t* super.成员方法 调用父类的成员方法\n\t\t\n\n## 08.09 继承中构造方法的关系 (掌握)\n\n* A:案例演示\n\t* 子类中所有的构造方法默认都会访问父类中空参数的构造方法\n* B:为什么呢?\n\t* 因为子类会继承父类中的数据，可能还会使用父类的数据。\n\t* 所以，子类初始化之前，一定要先完成父类数据的初始化。\n\t\n\t* 其实：\n\t\t* 每一个构造方法的第一条语句默认都是：super() Object类最顶层的父类。\n\n## 08.10 继承中构造方法的注意事项 (掌握)\n\n* A:案例演示\n\t* 父类没有无参构造方法,子类怎么办?\n\t* super解决\n\t* this解决\n* B:注意事项\n\t* super(…)或者this(….)必须出现在构造方法的第一条语句上\n\n## 08.11 继承中的面试题 (掌握)\n\n* A:案例演示\n\n```java\n\t\t看程序写结果1\n\t\tclass Fu{\n\t\t\tpublic int num = 10;\n\t\t\tpublic Fu(){\n\t\t\t\tSystem.out.println(\"fu\");\n\t\t\t}\n\t\t}\n\t\tclass Zi extends Fu{\n\t\t\tpublic int num = 20;\n\t\t\tpublic Zi(){\n\t\t\t\tSystem.out.println(\"zi\");\n\t\t\t}\n\t\t\tpublic void show(){\n\t\t\t\tint num = 30;\n\t\t\t\tSystem.out.println(num);\n\t\t\t\tSystem.out.println(this.num);\n\t\t\t\tSystem.out.println(super.num);\n\t\t\t}\n\t\t}\n\t\tclass Test1_Extends {\n\t\t\tpublic static void main(String[] args) {\n\t\t\t\tZi z = new Zi();\n\t\t\t\tz.show();\n\t\t\t}\n\t\t}\n\n\t\t看程序写结果2\n\t\tclass Fu {\n\t\t\tstatic {\n\t\t\t\tSystem.out.println(\"静态代码块Fu\");\n\t\t\t}\n\t\n\t\t\t{\n\t\t\t\tSystem.out.println(\"构造代码块Fu\");\n\t\t\t}\n\t\n\t\t\tpublic Fu() {\n\t\t\t\tSystem.out.println(\"构造方法Fu\");\n\t\t\t}\n\t\t}\n\t\n\t\tclass Zi extends Fu {\n\t\t\tstatic {\n\t\t\t\tSystem.out.println(\"静态代码块Zi\");\n\t\t\t}\n\t\n\t\t\t{\n\t\t\t\tSystem.out.println(\"构造代码块Zi\");\n\t\t\t}\n\t\n\t\t\tpublic Zi() {\n\t\t\t\tSystem.out.println(\"构造方法Zi\");\n\t\t\t}\n\t\t}\n\t\n\t\tZi z = new Zi(); 请执行结果。\n```\n\n## 08.12 继承中成员方法关系 (掌握)\n\n* A:案例演示\n\t* a:不同名的方法\n\t* b:同名的方法\n\n## 08.13 方法重写概述及其应用 (掌握)\n\n* A:什么是方法重写\n\t* 重写:子父类出现了一模一样的方法(注意:返回值类型可以是子父类,这个我们学完面向对象讲) \n* B:方法重写的应用：\n\t* 当子类需要父类的功能，而功能主体子类有自己特有内容时，可以重写父类中的方法。这样，即沿袭了父类的功能，又定义了子类特有的内容。\n* C:案例演示\n\t* a:定义一个手机类。\n\n## 08.14 方法重写的注意事项 (掌握)\n\n* A:方法重写注意事项\n\t* a:父类中私有方法不能被重写\n\t\t* 因为父类私有方法子类根本就无法继承\n\t* b:子类重写父类方法时，访问权限不能更低\n\t\t* 最好就一致\n\t* c:父类静态方法，子类也必须通过静态方法进行重写\n\t\t* 其实这个算不上方法重写，但是现象确实如此，至于为什么算不上方法重写，多态中我会讲解(静态只能覆盖静态)\n\t\t\n\t* 子类重写父类方法的时候，最好声明一模一样。\n* B:案例演示\n\t* 方法重写注意事项\n\n## 08.15 方法重写的面试题 (掌握)\n\n* A:方法重写的面试题\n\t* Override和Overload的区别?Overload能改变返回值类型吗?\n\t* overload可以改变返回值类型,只看参数列表\n\t* 方法重写：子类中出现了和父类中方法声明一模一样的方法。与返回值类型有关,返回值是一致(或者是子父类)的\n\t\n\t* 方法重载：本类中出现的方法名一样，参数列表不同的方法。与返回值类型无关。\n\n\t* 子类对象调用方法的时候：\n\t\t* 先找子类本身，再找父类。\n\n## 08.16 使用继承前的学生和老师案例 (掌握)\n\n* A:案例演示\n\t* 使用继承前的学生和老师案例\n\t* 属性:姓名,年龄\n\t* 行为:吃饭\n\t* 老师有特有的方法:讲课\n\t* 学生有特有的方法:学习\n\n## 08.17  使用继承后的学生和老师案例 (掌握)\n\n* A:案例演示\n\t* 使用继承后的学生和老师案例\n\n## 08.18  猫狗案例分析,实现及测试 (掌握)\n\n* A:猫狗案例分析\n* B:案例演示\n\t* 猫狗案例继承版\n\t* 属性:毛的颜色,腿的个数\n\t* 行为:吃饭\n\t* 猫特有行为:抓老鼠catchMouse\n\t* 狗特有行为:看家lookHome\n\n\n## 08.19 final关键字修饰类,方法以及变量的特点 (掌握)\n\n* A:final概述\n* B:final修饰特点\n\t* 修饰类，类不能被继承\n\t* 修饰变量，变量就变成了常量，只能被赋值一次\n\t* 修饰方法，方法不能被重写\n* C:案例演示\n\t* final修饰特点\n\n## 08.20 final关键字修饰局部变量 (掌握)\n\n* A:案例演示\n\t* 方法内部或者方法声明上都演示一下(了解)\n\n\t* 基本类型，是值不能被改变\n\t* 引用类型，是地址值不能被改变,对象中的属性可以改变\n\n## 08.21 final修饰变量的初始化时机 (掌握)\n\n* A:final修饰变量的初始化时机\n\t* 显示初始化 \n\t* 在对象构造完毕前即可\n\t\n## 08.22_day08总结\n\n* 把今天的知识点总结一遍。","slug":"Java学习笔记（day08）","published":1,"updated":"2020-02-20T06:06:59.388Z","comments":1,"layout":"post","link":"","_id":"ckec2td2e000ffkup5lcszwon","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"08-01-代码块的概述和分类-了解-面试的时候会问-开发不用或者很少用\"><a class=\"header-anchor\" href=\"#08-01-代码块的概述和分类-了解-面试的时候会问-开发不用或者很少用\">☆</a>08.01 代码块的概述和分类(了解)(面试的时候会问,开发不用或者很少用)</h2>\n<ul>\n<li>A:代码块概述\n<ul>\n<li>在Java中，使用{}括起来的代码被称为代码块。</li>\n</ul>\n</li>\n<li>B:代码块分类\n<ul>\n<li>根据其位置和声明的不同，可以分为局部代码块，构造代码块，静态代码块，同步代码块(多线程讲解)。</li>\n</ul>\n</li>\n<li>C:常见代码块的应用\n<ul>\n<li>a:局部代码块\n<ul>\n<li>在方法中出现；限定变量生命周期，及早释放，提高内存利用率</li>\n</ul>\n</li>\n<li>b:构造代码块 (初始化块)\n<ul>\n<li>在类中方法外出现；多个构造方法方法中相同的代码存放到一起，每次调用构造都执行，并且在构造方法前执行</li>\n</ul>\n</li>\n<li>c:静态代码块\n<ul>\n<li>在类中方法外出现，并加上static修饰；用于给类进行初始化，在加载的时候就执行，并且只执行一次。</li>\n<li>一般用于加载驱动</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-02-代码块的面试题-掌握\"><a class=\"header-anchor\" href=\"#08-02-代码块的面试题-掌握\">☆</a>08.02 代码块的面试题 (掌握)</h2>\n<ul>\n<li>A:看程序写结果</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Student 静态代码块\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Student 构造代码块\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Student 构造方法\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2_Student</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Demo2_Student静态代码块\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"我是main方法\"</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tStudent s1 = <span class=\"keyword\">new</span> Student();</span><br><span class=\"line\">\t\tStudent s2 = <span class=\"keyword\">new</span> Student();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*Demo2_Student静态代码块</span></span><br><span class=\"line\"><span class=\"comment\">            我是main方法</span></span><br><span class=\"line\"><span class=\"comment\">    Student 静态代码块</span></span><br><span class=\"line\"><span class=\"comment\">    Student 构造代码块</span></span><br><span class=\"line\"><span class=\"comment\">    Student 构造方法</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    Student 构造代码块</span></span><br><span class=\"line\"><span class=\"comment\">    Student 构造方法*/</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"08-03-继承案例演示-掌握\"><a class=\"header-anchor\" href=\"#08-03-继承案例演示-掌握\">☆</a>08.03 继承案例演示 (掌握)</h2>\n<ul>\n<li>A:继承(extends)\n<ul>\n<li>让类与类之间产生关系,子父类关系</li>\n</ul>\n</li>\n<li>B:继承案例演示：\n<ul>\n<li>动物类,猫类,狗类</li>\n<li>定义两个属性(颜色,腿的个数)两个功能(吃饭，睡觉)</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>使用继承前</li>\n</ul>\n</li>\n<li>D:案例演示\n<ul>\n<li>使用继承后</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-04-继承的好处和弊端-掌握\"><a class=\"header-anchor\" href=\"#08-04-继承的好处和弊端-掌握\">☆</a>08.04 继承的好处和弊端 (掌握)</h2>\n<ul>\n<li>A:继承的好处\n<ul>\n<li>a:提高了代码的复用性</li>\n<li>b:提高了代码的维护性</li>\n<li>c:让类与类之间产生了关系，是多态的前提</li>\n</ul>\n</li>\n<li>B:继承的弊端\n<ul>\n<li>\n<p>类的耦合性增强了。</p>\n</li>\n<li>\n<p>开发的原则：高内聚，低耦合。</p>\n</li>\n<li>\n<p>耦合：类与类的关系</p>\n</li>\n<li>\n<p>内聚：就是自己完成某件事情的能力</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-05-java中类的继承特点-掌握\"><a class=\"header-anchor\" href=\"#08-05-java中类的继承特点-掌握\">☆</a>08.05 Java中类的继承特点 (掌握)</h2>\n<ul>\n<li>A:Java中类的继承特点\n<ul>\n<li>a:Java只支持单继承，不支持多继承。(一个儿子只能有一个爹)\n<ul>\n<li>有些语言是支持多继承，格式：extends 类1,类2,…</li>\n</ul>\n</li>\n<li>b:Java支持多层继承(继承体系)</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>Java中类的继承特点\n<ul>\n<li>如果想用这个体系的所有功能用最底层的类创建对象</li>\n<li>如果想看这个体系的共性功能,看最顶层的类</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-06-继承的注意事项和什么时候使用继承-掌握\"><a class=\"header-anchor\" href=\"#08-06-继承的注意事项和什么时候使用继承-掌握\">☆</a>08.06 继承的注意事项和什么时候使用继承 (掌握)</h2>\n<ul>\n<li>\n<p>A:继承的注意事项</p>\n<ul>\n<li>a:子类只能继承父类所有非私有的成员(成员方法和成员变量)</li>\n<li>b:子类不能继承父类的构造方法，但是可以通过super(马上讲)关键字去访问父类构造方法。</li>\n<li>c:不要为了部分功能而去继承</li>\n<li>项目经理 姓名 工号 工资 奖金</li>\n<li>程序员\t姓名 工号 工资</li>\n</ul>\n</li>\n<li>\n<p>B:什么时候使用继承</p>\n<ul>\n<li>继承其实体现的是一种关系：“is a”。<br>\nPerson<br>\n\tStudent<br>\n\tTeacher<br>\n水果<br>\n\t苹果<br>\n\t香蕉<br>\n\t橘子</li>\n</ul>\n<p>采用假设法。<br>\n\t如果有两个类A,B。只有他们符合A是B的一种，或者B是A的一种，就可以考虑使用继承。</p>\n</li>\n</ul>\n<h2 id=\"08-07-继承中成员变量的关系-掌握\"><a class=\"header-anchor\" href=\"#08-07-继承中成员变量的关系-掌握\">☆</a>08.07 继承中成员变量的关系 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>a:不同名的变量</li>\n<li>b:同名的变量</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-08-this和super的区别和应用-掌握\"><a class=\"header-anchor\" href=\"#08-08-this和super的区别和应用-掌握\">☆</a>08.08 this和super的区别和应用 (掌握)</h2>\n<ul>\n<li>A:this和super都代表什么\n<ul>\n<li>this:代表当前对象的引用,谁来调用我,我就代表谁</li>\n<li>super:代表当前对象父类的引用</li>\n</ul>\n</li>\n<li>B:this和super的使用区别\n<ul>\n<li>a:调用成员变量\n<ul>\n<li>this.成员变量 调用本类的成员变量,也可以调用父类的成员变量</li>\n<li>super.成员变量 调用父类的成员变量</li>\n</ul>\n</li>\n<li>b:调用构造方法\n<ul>\n<li>this(…)\t调用本类的构造方法</li>\n<li>super(…)\t调用父类的构造方法</li>\n</ul>\n</li>\n<li>c:调用成员方法\n<ul>\n<li>this.成员方法 调用本类的成员方法,也可以调用父类的方法</li>\n<li>super.成员方法 调用父类的成员方法</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-09-继承中构造方法的关系-掌握\"><a class=\"header-anchor\" href=\"#08-09-继承中构造方法的关系-掌握\">☆</a>08.09 继承中构造方法的关系 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>子类中所有的构造方法默认都会访问父类中空参数的构造方法</li>\n</ul>\n</li>\n<li>B:为什么呢?\n<ul>\n<li>\n<p>因为子类会继承父类中的数据，可能还会使用父类的数据。</p>\n</li>\n<li>\n<p>所以，子类初始化之前，一定要先完成父类数据的初始化。</p>\n</li>\n<li>\n<p>其实：</p>\n<ul>\n<li>每一个构造方法的第一条语句默认都是：super() Object类最顶层的父类。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-10-继承中构造方法的注意事项-掌握\"><a class=\"header-anchor\" href=\"#08-10-继承中构造方法的注意事项-掌握\">☆</a>08.10 继承中构造方法的注意事项 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>父类没有无参构造方法,子类怎么办?</li>\n<li>super解决</li>\n<li>this解决</li>\n</ul>\n</li>\n<li>B:注意事项\n<ul>\n<li>super(…)或者this(….)必须出现在构造方法的第一条语句上</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-11-继承中的面试题-掌握\"><a class=\"header-anchor\" href=\"#08-11-继承中的面试题-掌握\">☆</a>08.11 继承中的面试题 (掌握)</h2>\n<ul>\n<li>A:案例演示</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">看程序写结果<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fu</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Fu</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"fu\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Zi</span> <span class=\"keyword\">extends</span> <span class=\"title\">Fu</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> num = <span class=\"number\">20</span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Zi</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"zi\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> num = <span class=\"number\">30</span>;</span><br><span class=\"line\">\t\tSystem.out.println(num);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"keyword\">this</span>.num);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"keyword\">super</span>.num);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test1_Extends</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tZi z = <span class=\"keyword\">new</span> Zi();</span><br><span class=\"line\">\t\tz.show();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">看程序写结果<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fu</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"静态代码块Fu\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"构造代码块Fu\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Fu</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"构造方法Fu\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Zi</span> <span class=\"keyword\">extends</span> <span class=\"title\">Fu</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"静态代码块Zi\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"构造代码块Zi\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Zi</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"构造方法Zi\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">Zi z = <span class=\"keyword\">new</span> Zi(); 请执行结果。</span><br></pre></td></tr></table></figure>\n<h2 id=\"08-12-继承中成员方法关系-掌握\"><a class=\"header-anchor\" href=\"#08-12-继承中成员方法关系-掌握\">☆</a>08.12 继承中成员方法关系 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>a:不同名的方法</li>\n<li>b:同名的方法</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-13-方法重写概述及其应用-掌握\"><a class=\"header-anchor\" href=\"#08-13-方法重写概述及其应用-掌握\">☆</a>08.13 方法重写概述及其应用 (掌握)</h2>\n<ul>\n<li>A:什么是方法重写\n<ul>\n<li>重写:子父类出现了一模一样的方法(注意:返回值类型可以是子父类,这个我们学完面向对象讲)</li>\n</ul>\n</li>\n<li>B:方法重写的应用：\n<ul>\n<li>当子类需要父类的功能，而功能主体子类有自己特有内容时，可以重写父类中的方法。这样，即沿袭了父类的功能，又定义了子类特有的内容。</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>a:定义一个手机类。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-14-方法重写的注意事项-掌握\"><a class=\"header-anchor\" href=\"#08-14-方法重写的注意事项-掌握\">☆</a>08.14 方法重写的注意事项 (掌握)</h2>\n<ul>\n<li>A:方法重写注意事项\n<ul>\n<li>\n<p>a:父类中私有方法不能被重写</p>\n<ul>\n<li>因为父类私有方法子类根本就无法继承</li>\n</ul>\n</li>\n<li>\n<p>b:子类重写父类方法时，访问权限不能更低</p>\n<ul>\n<li>最好就一致</li>\n</ul>\n</li>\n<li>\n<p>c:父类静态方法，子类也必须通过静态方法进行重写</p>\n<ul>\n<li>其实这个算不上方法重写，但是现象确实如此，至于为什么算不上方法重写，多态中我会讲解(静态只能覆盖静态)</li>\n</ul>\n</li>\n<li>\n<p>子类重写父类方法的时候，最好声明一模一样。</p>\n</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>方法重写注意事项</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-15-方法重写的面试题-掌握\"><a class=\"header-anchor\" href=\"#08-15-方法重写的面试题-掌握\">☆</a>08.15 方法重写的面试题 (掌握)</h2>\n<ul>\n<li>A:方法重写的面试题\n<ul>\n<li>\n<p>Override和Overload的区别?Overload能改变返回值类型吗?</p>\n</li>\n<li>\n<p>overload可以改变返回值类型,只看参数列表</p>\n</li>\n<li>\n<p>方法重写：子类中出现了和父类中方法声明一模一样的方法。与返回值类型有关,返回值是一致(或者是子父类)的</p>\n</li>\n<li>\n<p>方法重载：本类中出现的方法名一样，参数列表不同的方法。与返回值类型无关。</p>\n</li>\n<li>\n<p>子类对象调用方法的时候：</p>\n<ul>\n<li>先找子类本身，再找父类。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-16-使用继承前的学生和老师案例-掌握\"><a class=\"header-anchor\" href=\"#08-16-使用继承前的学生和老师案例-掌握\">☆</a>08.16 使用继承前的学生和老师案例 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>使用继承前的学生和老师案例</li>\n<li>属性:姓名,年龄</li>\n<li>行为:吃饭</li>\n<li>老师有特有的方法:讲课</li>\n<li>学生有特有的方法:学习</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-17-使用继承后的学生和老师案例-掌握\"><a class=\"header-anchor\" href=\"#08-17-使用继承后的学生和老师案例-掌握\">☆</a>08.17  使用继承后的学生和老师案例 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>使用继承后的学生和老师案例</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-18-猫狗案例分析-实现及测试-掌握\"><a class=\"header-anchor\" href=\"#08-18-猫狗案例分析-实现及测试-掌握\">☆</a>08.18  猫狗案例分析,实现及测试 (掌握)</h2>\n<ul>\n<li>A:猫狗案例分析</li>\n<li>B:案例演示\n<ul>\n<li>猫狗案例继承版</li>\n<li>属性:毛的颜色,腿的个数</li>\n<li>行为:吃饭</li>\n<li>猫特有行为:抓老鼠catchMouse</li>\n<li>狗特有行为:看家lookHome</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-19-final关键字修饰类-方法以及变量的特点-掌握\"><a class=\"header-anchor\" href=\"#08-19-final关键字修饰类-方法以及变量的特点-掌握\">☆</a>08.19 final关键字修饰类,方法以及变量的特点 (掌握)</h2>\n<ul>\n<li>A:final概述</li>\n<li>B:final修饰特点\n<ul>\n<li>修饰类，类不能被继承</li>\n<li>修饰变量，变量就变成了常量，只能被赋值一次</li>\n<li>修饰方法，方法不能被重写</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>final修饰特点</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-20-final关键字修饰局部变量-掌握\"><a class=\"header-anchor\" href=\"#08-20-final关键字修饰局部变量-掌握\">☆</a>08.20 final关键字修饰局部变量 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>\n<p>方法内部或者方法声明上都演示一下(了解)</p>\n</li>\n<li>\n<p>基本类型，是值不能被改变</p>\n</li>\n<li>\n<p>引用类型，是地址值不能被改变,对象中的属性可以改变</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-21-final修饰变量的初始化时机-掌握\"><a class=\"header-anchor\" href=\"#08-21-final修饰变量的初始化时机-掌握\">☆</a>08.21 final修饰变量的初始化时机 (掌握)</h2>\n<ul>\n<li>A:final修饰变量的初始化时机\n<ul>\n<li>显示初始化</li>\n<li>在对象构造完毕前即可</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-22-day08总结\"><a class=\"header-anchor\" href=\"#08-22-day08总结\">☆</a>08.22_day08总结</h2>\n<ul>\n<li>把今天的知识点总结一遍。</li>\n</ul>\n","site":{"data":{}},"length":4299,"excerpt":"","more":"<h2 id=\"08-01-代码块的概述和分类-了解-面试的时候会问-开发不用或者很少用\"><a class=\"header-anchor\" href=\"#08-01-代码块的概述和分类-了解-面试的时候会问-开发不用或者很少用\">☆</a>08.01 代码块的概述和分类(了解)(面试的时候会问,开发不用或者很少用)</h2>\n<ul>\n<li>A:代码块概述\n<ul>\n<li>在Java中，使用{}括起来的代码被称为代码块。</li>\n</ul>\n</li>\n<li>B:代码块分类\n<ul>\n<li>根据其位置和声明的不同，可以分为局部代码块，构造代码块，静态代码块，同步代码块(多线程讲解)。</li>\n</ul>\n</li>\n<li>C:常见代码块的应用\n<ul>\n<li>a:局部代码块\n<ul>\n<li>在方法中出现；限定变量生命周期，及早释放，提高内存利用率</li>\n</ul>\n</li>\n<li>b:构造代码块 (初始化块)\n<ul>\n<li>在类中方法外出现；多个构造方法方法中相同的代码存放到一起，每次调用构造都执行，并且在构造方法前执行</li>\n</ul>\n</li>\n<li>c:静态代码块\n<ul>\n<li>在类中方法外出现，并加上static修饰；用于给类进行初始化，在加载的时候就执行，并且只执行一次。</li>\n<li>一般用于加载驱动</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-02-代码块的面试题-掌握\"><a class=\"header-anchor\" href=\"#08-02-代码块的面试题-掌握\">☆</a>08.02 代码块的面试题 (掌握)</h2>\n<ul>\n<li>A:看程序写结果</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Student 静态代码块\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Student 构造代码块\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Student</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Student 构造方法\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Demo2_Student</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"Demo2_Student静态代码块\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"我是main方法\"</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tStudent s1 = <span class=\"keyword\">new</span> Student();</span><br><span class=\"line\">\t\tStudent s2 = <span class=\"keyword\">new</span> Student();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*Demo2_Student静态代码块</span></span><br><span class=\"line\"><span class=\"comment\">            我是main方法</span></span><br><span class=\"line\"><span class=\"comment\">    Student 静态代码块</span></span><br><span class=\"line\"><span class=\"comment\">    Student 构造代码块</span></span><br><span class=\"line\"><span class=\"comment\">    Student 构造方法</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">    Student 构造代码块</span></span><br><span class=\"line\"><span class=\"comment\">    Student 构造方法*/</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"08-03-继承案例演示-掌握\"><a class=\"header-anchor\" href=\"#08-03-继承案例演示-掌握\">☆</a>08.03 继承案例演示 (掌握)</h2>\n<ul>\n<li>A:继承(extends)\n<ul>\n<li>让类与类之间产生关系,子父类关系</li>\n</ul>\n</li>\n<li>B:继承案例演示：\n<ul>\n<li>动物类,猫类,狗类</li>\n<li>定义两个属性(颜色,腿的个数)两个功能(吃饭，睡觉)</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>使用继承前</li>\n</ul>\n</li>\n<li>D:案例演示\n<ul>\n<li>使用继承后</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-04-继承的好处和弊端-掌握\"><a class=\"header-anchor\" href=\"#08-04-继承的好处和弊端-掌握\">☆</a>08.04 继承的好处和弊端 (掌握)</h2>\n<ul>\n<li>A:继承的好处\n<ul>\n<li>a:提高了代码的复用性</li>\n<li>b:提高了代码的维护性</li>\n<li>c:让类与类之间产生了关系，是多态的前提</li>\n</ul>\n</li>\n<li>B:继承的弊端\n<ul>\n<li>\n<p>类的耦合性增强了。</p>\n</li>\n<li>\n<p>开发的原则：高内聚，低耦合。</p>\n</li>\n<li>\n<p>耦合：类与类的关系</p>\n</li>\n<li>\n<p>内聚：就是自己完成某件事情的能力</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-05-java中类的继承特点-掌握\"><a class=\"header-anchor\" href=\"#08-05-java中类的继承特点-掌握\">☆</a>08.05 Java中类的继承特点 (掌握)</h2>\n<ul>\n<li>A:Java中类的继承特点\n<ul>\n<li>a:Java只支持单继承，不支持多继承。(一个儿子只能有一个爹)\n<ul>\n<li>有些语言是支持多继承，格式：extends 类1,类2,…</li>\n</ul>\n</li>\n<li>b:Java支持多层继承(继承体系)</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>Java中类的继承特点\n<ul>\n<li>如果想用这个体系的所有功能用最底层的类创建对象</li>\n<li>如果想看这个体系的共性功能,看最顶层的类</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-06-继承的注意事项和什么时候使用继承-掌握\"><a class=\"header-anchor\" href=\"#08-06-继承的注意事项和什么时候使用继承-掌握\">☆</a>08.06 继承的注意事项和什么时候使用继承 (掌握)</h2>\n<ul>\n<li>\n<p>A:继承的注意事项</p>\n<ul>\n<li>a:子类只能继承父类所有非私有的成员(成员方法和成员变量)</li>\n<li>b:子类不能继承父类的构造方法，但是可以通过super(马上讲)关键字去访问父类构造方法。</li>\n<li>c:不要为了部分功能而去继承</li>\n<li>项目经理 姓名 工号 工资 奖金</li>\n<li>程序员\t姓名 工号 工资</li>\n</ul>\n</li>\n<li>\n<p>B:什么时候使用继承</p>\n<ul>\n<li>继承其实体现的是一种关系：“is a”。<br>\nPerson<br>\n\tStudent<br>\n\tTeacher<br>\n水果<br>\n\t苹果<br>\n\t香蕉<br>\n\t橘子</li>\n</ul>\n<p>采用假设法。<br>\n\t如果有两个类A,B。只有他们符合A是B的一种，或者B是A的一种，就可以考虑使用继承。</p>\n</li>\n</ul>\n<h2 id=\"08-07-继承中成员变量的关系-掌握\"><a class=\"header-anchor\" href=\"#08-07-继承中成员变量的关系-掌握\">☆</a>08.07 继承中成员变量的关系 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>a:不同名的变量</li>\n<li>b:同名的变量</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-08-this和super的区别和应用-掌握\"><a class=\"header-anchor\" href=\"#08-08-this和super的区别和应用-掌握\">☆</a>08.08 this和super的区别和应用 (掌握)</h2>\n<ul>\n<li>A:this和super都代表什么\n<ul>\n<li>this:代表当前对象的引用,谁来调用我,我就代表谁</li>\n<li>super:代表当前对象父类的引用</li>\n</ul>\n</li>\n<li>B:this和super的使用区别\n<ul>\n<li>a:调用成员变量\n<ul>\n<li>this.成员变量 调用本类的成员变量,也可以调用父类的成员变量</li>\n<li>super.成员变量 调用父类的成员变量</li>\n</ul>\n</li>\n<li>b:调用构造方法\n<ul>\n<li>this(…)\t调用本类的构造方法</li>\n<li>super(…)\t调用父类的构造方法</li>\n</ul>\n</li>\n<li>c:调用成员方法\n<ul>\n<li>this.成员方法 调用本类的成员方法,也可以调用父类的方法</li>\n<li>super.成员方法 调用父类的成员方法</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-09-继承中构造方法的关系-掌握\"><a class=\"header-anchor\" href=\"#08-09-继承中构造方法的关系-掌握\">☆</a>08.09 继承中构造方法的关系 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>子类中所有的构造方法默认都会访问父类中空参数的构造方法</li>\n</ul>\n</li>\n<li>B:为什么呢?\n<ul>\n<li>\n<p>因为子类会继承父类中的数据，可能还会使用父类的数据。</p>\n</li>\n<li>\n<p>所以，子类初始化之前，一定要先完成父类数据的初始化。</p>\n</li>\n<li>\n<p>其实：</p>\n<ul>\n<li>每一个构造方法的第一条语句默认都是：super() Object类最顶层的父类。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-10-继承中构造方法的注意事项-掌握\"><a class=\"header-anchor\" href=\"#08-10-继承中构造方法的注意事项-掌握\">☆</a>08.10 继承中构造方法的注意事项 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>父类没有无参构造方法,子类怎么办?</li>\n<li>super解决</li>\n<li>this解决</li>\n</ul>\n</li>\n<li>B:注意事项\n<ul>\n<li>super(…)或者this(….)必须出现在构造方法的第一条语句上</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-11-继承中的面试题-掌握\"><a class=\"header-anchor\" href=\"#08-11-继承中的面试题-掌握\">☆</a>08.11 继承中的面试题 (掌握)</h2>\n<ul>\n<li>A:案例演示</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">看程序写结果<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fu</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Fu</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"fu\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Zi</span> <span class=\"keyword\">extends</span> <span class=\"title\">Fu</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> num = <span class=\"number\">20</span>;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Zi</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"zi\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> num = <span class=\"number\">30</span>;</span><br><span class=\"line\">\t\tSystem.out.println(num);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"keyword\">this</span>.num);</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"keyword\">super</span>.num);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test1_Extends</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tZi z = <span class=\"keyword\">new</span> Zi();</span><br><span class=\"line\">\t\tz.show();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">看程序写结果<span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Fu</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"静态代码块Fu\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"构造代码块Fu\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Fu</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"构造方法Fu\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Zi</span> <span class=\"keyword\">extends</span> <span class=\"title\">Fu</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"静态代码块Zi\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"构造代码块Zi\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Zi</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">\"构造方法Zi\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">Zi z = <span class=\"keyword\">new</span> Zi(); 请执行结果。</span><br></pre></td></tr></table></figure>\n<h2 id=\"08-12-继承中成员方法关系-掌握\"><a class=\"header-anchor\" href=\"#08-12-继承中成员方法关系-掌握\">☆</a>08.12 继承中成员方法关系 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>a:不同名的方法</li>\n<li>b:同名的方法</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-13-方法重写概述及其应用-掌握\"><a class=\"header-anchor\" href=\"#08-13-方法重写概述及其应用-掌握\">☆</a>08.13 方法重写概述及其应用 (掌握)</h2>\n<ul>\n<li>A:什么是方法重写\n<ul>\n<li>重写:子父类出现了一模一样的方法(注意:返回值类型可以是子父类,这个我们学完面向对象讲)</li>\n</ul>\n</li>\n<li>B:方法重写的应用：\n<ul>\n<li>当子类需要父类的功能，而功能主体子类有自己特有内容时，可以重写父类中的方法。这样，即沿袭了父类的功能，又定义了子类特有的内容。</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>a:定义一个手机类。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-14-方法重写的注意事项-掌握\"><a class=\"header-anchor\" href=\"#08-14-方法重写的注意事项-掌握\">☆</a>08.14 方法重写的注意事项 (掌握)</h2>\n<ul>\n<li>A:方法重写注意事项\n<ul>\n<li>\n<p>a:父类中私有方法不能被重写</p>\n<ul>\n<li>因为父类私有方法子类根本就无法继承</li>\n</ul>\n</li>\n<li>\n<p>b:子类重写父类方法时，访问权限不能更低</p>\n<ul>\n<li>最好就一致</li>\n</ul>\n</li>\n<li>\n<p>c:父类静态方法，子类也必须通过静态方法进行重写</p>\n<ul>\n<li>其实这个算不上方法重写，但是现象确实如此，至于为什么算不上方法重写，多态中我会讲解(静态只能覆盖静态)</li>\n</ul>\n</li>\n<li>\n<p>子类重写父类方法的时候，最好声明一模一样。</p>\n</li>\n</ul>\n</li>\n<li>B:案例演示\n<ul>\n<li>方法重写注意事项</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-15-方法重写的面试题-掌握\"><a class=\"header-anchor\" href=\"#08-15-方法重写的面试题-掌握\">☆</a>08.15 方法重写的面试题 (掌握)</h2>\n<ul>\n<li>A:方法重写的面试题\n<ul>\n<li>\n<p>Override和Overload的区别?Overload能改变返回值类型吗?</p>\n</li>\n<li>\n<p>overload可以改变返回值类型,只看参数列表</p>\n</li>\n<li>\n<p>方法重写：子类中出现了和父类中方法声明一模一样的方法。与返回值类型有关,返回值是一致(或者是子父类)的</p>\n</li>\n<li>\n<p>方法重载：本类中出现的方法名一样，参数列表不同的方法。与返回值类型无关。</p>\n</li>\n<li>\n<p>子类对象调用方法的时候：</p>\n<ul>\n<li>先找子类本身，再找父类。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-16-使用继承前的学生和老师案例-掌握\"><a class=\"header-anchor\" href=\"#08-16-使用继承前的学生和老师案例-掌握\">☆</a>08.16 使用继承前的学生和老师案例 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>使用继承前的学生和老师案例</li>\n<li>属性:姓名,年龄</li>\n<li>行为:吃饭</li>\n<li>老师有特有的方法:讲课</li>\n<li>学生有特有的方法:学习</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-17-使用继承后的学生和老师案例-掌握\"><a class=\"header-anchor\" href=\"#08-17-使用继承后的学生和老师案例-掌握\">☆</a>08.17  使用继承后的学生和老师案例 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>使用继承后的学生和老师案例</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-18-猫狗案例分析-实现及测试-掌握\"><a class=\"header-anchor\" href=\"#08-18-猫狗案例分析-实现及测试-掌握\">☆</a>08.18  猫狗案例分析,实现及测试 (掌握)</h2>\n<ul>\n<li>A:猫狗案例分析</li>\n<li>B:案例演示\n<ul>\n<li>猫狗案例继承版</li>\n<li>属性:毛的颜色,腿的个数</li>\n<li>行为:吃饭</li>\n<li>猫特有行为:抓老鼠catchMouse</li>\n<li>狗特有行为:看家lookHome</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-19-final关键字修饰类-方法以及变量的特点-掌握\"><a class=\"header-anchor\" href=\"#08-19-final关键字修饰类-方法以及变量的特点-掌握\">☆</a>08.19 final关键字修饰类,方法以及变量的特点 (掌握)</h2>\n<ul>\n<li>A:final概述</li>\n<li>B:final修饰特点\n<ul>\n<li>修饰类，类不能被继承</li>\n<li>修饰变量，变量就变成了常量，只能被赋值一次</li>\n<li>修饰方法，方法不能被重写</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>final修饰特点</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-20-final关键字修饰局部变量-掌握\"><a class=\"header-anchor\" href=\"#08-20-final关键字修饰局部变量-掌握\">☆</a>08.20 final关键字修饰局部变量 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>\n<p>方法内部或者方法声明上都演示一下(了解)</p>\n</li>\n<li>\n<p>基本类型，是值不能被改变</p>\n</li>\n<li>\n<p>引用类型，是地址值不能被改变,对象中的属性可以改变</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-21-final修饰变量的初始化时机-掌握\"><a class=\"header-anchor\" href=\"#08-21-final修饰变量的初始化时机-掌握\">☆</a>08.21 final修饰变量的初始化时机 (掌握)</h2>\n<ul>\n<li>A:final修饰变量的初始化时机\n<ul>\n<li>显示初始化</li>\n<li>在对象构造完毕前即可</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"08-22-day08总结\"><a class=\"header-anchor\" href=\"#08-22-day08总结\">☆</a>08.22_day08总结</h2>\n<ul>\n<li>把今天的知识点总结一遍。</li>\n</ul>\n"},{"title":"Java学习笔记（day10）","copyright":false,"abbrlink":"8d14ac88","notshow":true,"description":"面向对象","date":"2018-10-29T10:24:00.000Z","password":null,"image":null,"photos":[],"sticky":null,"_content":"\n## 10.01 package关键字的概述及作用 (了解)\n\n* A:为什么要有包\n\t* 将字节码(.class)进行分类存放 \n\t* 包其实就是文件夹\n* B:包的概述\n* \n\t举例：\n\n\t* 学生：增加，删除，修改，查询\n\t* 老师：增加，删除，修改，查询\n\n```\n方案1：按照功能分\n\tcom.heima.add\n\t\tAddStudent\n\t\tAddTeacher\n\tcom.heima.delete\n\t\tDeleteStudent\n\t\tDeleteTeacher\n\tcom.heima.update\n\t\tUpdateStudent\n\t\tUpdateTeacher\n\tcom.heima.find\n\t\tFindStudent\n\t\tFindTeacher\n\n方案2：按照模块分\n\tcom.heima.teacher\n\t\tAddTeacher\n\t\tDeleteTeacher\n\t\tUpdateTeacher\n\t\tFindTeacher\n\tcom.heima.student\n\t\tAddStudent\n\t\tDeleteStudent\n\t\tUpdateStudent\n\t\tFindStudent\n```\n\n## 10.02 包的定义及注意事项 (掌握)\n\n* A:定义包的格式\n\t* package 包名;\n\t* 多级包用.分开即可\n* B:定义包的注意事项\n\t* A:package语句必须是程序的第一条可执行的代码\n\t* B:package语句在一个java文件中只能有一个\n\t* C:如果没有package，默认表示无包名\n* C:案例演示\n\t* 包的定义及注意事项\n\n## 10.03 带包的类编译和运行 (掌握)\n\n* A:如何编译运行带包的类\n\t* a:javac编译的时候带上-d即可\n\t\t* javac -d . HelloWorld.java\n\t* b:通过java命令执行。\n\t\t* java 包名.HellWord\n\n## 10.04 不同包下类之间的访问 (掌握)\n\n* A:案例演示\n\t* 不同包下类之间的访问\n\n## 10.05 import关键字的概述和使用 (掌握)\n\n* A:案例演示\n\t* 为什么要有import\n\t\t* 其实就是让有包的类对调用者可见,不用写全类名了 \n* B:导包格式\n\t* import 包名;\n\t* 注意：\n\t* 这种方式导入是到类的名称。\n\t* 虽然可以最后写*，但是不建议。\n* C:package,import,class有没有顺序关系(面试题)\n\n## 10.06 四种权限修饰符的测试 (掌握)\n\n* A:案例演示\n\t* 四种权限修饰符\n* B:结论\n* \n| 本类 |  同一个包下(子类和无关类) | 不同包下(子类) | 不同包下(无关类) |\n| ------ | ------ | ------ | ------ |\n| private |\tY |\t\t\n| 默认 | Y | Y |\n| protected | Y | Y | Y |\n| public\t| Y | Y | Y | Y |\n\n## 10.07 类及其组成所使用的常见修饰符 (掌握)\n\n* A:修饰符：\n\t* 权限修饰符：private，默认的，protected，public\n\t* 状态修饰符：static，final\n\t* 抽象修饰符：abstract\n* B:类：\n\t* 权限修饰符：默认修饰符，public\n\t* 状态修饰符：final\n\t* 抽象修饰符：abstract\n\t\n\t* 用的最多的就是：public\n\t\n* C:成员变量：\n\t* 权限修饰符：private，默认的，protected，public\n\t* 状态修饰符：static，final\n\t\n\t* 用的最多的就是：private\n\t\n* D:构造方法：\n\t* 权限修饰符：private，默认的，protected，public\n\t\n\t* 用的最多的就是：public\n\t\n* E:成员方法：\n\t* 权限修饰符：private，默认的，protected，public\n\t* 状态修饰符：static，final\n\t* 抽象修饰符：abstract\n\t\n\t* 用的最多的就是：public\n\t\n* F:除此以外的组合规则：\n\t* 成员变量：public static final\n\t* 成员方法：\n\t\t* public static \n\t    * public abstract\n\t\t* public final\n\n## 10.08 内部类概述和访问特点 (了解)\n\n* A:内部类概述\n* B:内部类访问特点\n\t* a:内部类可以直接访问外部类的成员，包括私有。\n\t* b:外部类要访问内部类的成员，必须创建对象。\n\t* 外部类名.内部类名 对象名 = 外部类对象.内部类对象;\n* C:案例演示\n\t* 内部类极其访问特点\n\t\n## 10.09 成员内部类私有使用 (了解)\n\n* private\n\n## 10.10 静态成员内部类 (了解)\n\n* static\n* B:成员内部类被静态修饰后的访问方式是:\n\t* 外部类名.内部类名 对象名 = 外部类名.内部类对象;\n\n## 10.11 成员内部类的面试题 (掌握)\n\n* A:面试题\n\n要求：使用已知的变量，在控制台输出30，20，10。\n\n//内部类之所以能访问外部类，是能获取到外部类的引用：外部类名.this\n\n```java\nclass Outer {\n\tpublic int num = 10;\n\tclass Inner {\n\t\tpublic int num = 20;\n\t\tpublic void show() {\n\t\t\tint num = 30;\n\t\t\tSystem.out.println(num);\n\t\t\tSystem.out.println(this.num);\n\t\t\tSystem.out.println(Outer.this.num);\n\t\t}\n\t}\n}\nclass InnerClassTest {\n\tpublic static void main(String[] args) {\n\t\tOuter.Inner oi = new Outer().new Inner();\n\t\toi.show();\n\t}\t\n}\n```\n\n## 10.12 局部内部类访问局部变量的问题 (掌握)\n\n* A:案例演示\n\t* 局部内部类访问局部变量必须用final修饰\n\t* 局部内部类在访问他所在方法中的局部变量必须用final修饰,为什么?\n\t\t因为当调用这个方法时,局部变量如果没有用final修饰,他的生命周期和方法的生命周期是一样的,当方法弹栈,这个局部变量也会消失,那么如果局部内部类对象还没有马上消失想用这个局部变量,就没有了,如果用final修饰会在类加载的时候进入常量池,即使方法弹栈,常量池的常量还在,也可以继续使用\n\n\t\t但是jdk1.8取消了这个事情,所以我认为这是个bug\n\n## 10.13 匿名内部类的格式和理解\n\n* A:匿名内部类\n\t* 就是内部类的简化写法。\n* B:前提：存在一个类或者接口\n\t* 这里的类可以是具体类也可以是抽象类。\n* C:格式：\n```\n\tnew 类名或者接口名(){\n\t\t重写方法;\n\t}\n```\n* D:本质是什么呢?\n\t* 是一个继承了该类或者实现了该接口的子类匿名对象。\n    * 匿名内部类当做参数传递\n* E:案例演示\n\t* 按照要求来一个匿名内部类\n\t\t\n## 10.14 匿名内部类重写多个方法调用\n\n* A:案例演示\n\t* 匿名内部类的方法调用\n\n## 10.15 匿名内部类在开发中的应用\n\n\n* A:代码如下\n\n```java\n\t//这里写抽象类，接口都行\n\tabstract class Person {\n\t\tpublic abstract void show();\n\t}\n\n\tclass PersonDemo {\n\t\tpublic void method(Person p) {\n\t\t\tp.show();\n\t\t}\n\t}\n\n\tclass PersonTest {\n\t\tpublic static void main(String[] args) {\n\t\t\t//如何调用PersonDemo中的method方法呢?\n\t\t\tPersonDemo pd = new PersonDemo ();\n\t\t\t\n\t\t}\n\t}\n```\n\n## 10.16 匿名内部类的面试题\n\n* A:面试题 \n按照要求，补齐代码\n要求在控制台输出”HelloWorld”\n\n```java\ninterface Inter {\n\tvoid show();\n}\nclass Outer { \n\tpublic static Inter method(){\n\t\treturn new Inner(){\n\t\t\tpublic void show(){\n\t\t\t\tSystem.out.println(\"HelloWorld\");\n\t\t\t}\n\t\t}\n\t}\n}\nclass OuterDemo {\n\tpublic static void main(String[] args) {\n\t\tOuter.method().show();\n\t}\n}\n```\n\n## 10.17_day10总结\n* 把今天的知识点总结一遍。","source":"_posts/Java学习笔记（day10）.md","raw":"---\ntitle: Java学习笔记（day10）\ncopyright: false\nabbrlink: 8d14ac88\nnotshow: true\ntags:\n  - Java\ncategories: Java\ndescription: 面向对象\ndate: 2018-10-29 18:24:00\npassword:\nimage:\nphotos:\nsticky:\n---\n\n## 10.01 package关键字的概述及作用 (了解)\n\n* A:为什么要有包\n\t* 将字节码(.class)进行分类存放 \n\t* 包其实就是文件夹\n* B:包的概述\n* \n\t举例：\n\n\t* 学生：增加，删除，修改，查询\n\t* 老师：增加，删除，修改，查询\n\n```\n方案1：按照功能分\n\tcom.heima.add\n\t\tAddStudent\n\t\tAddTeacher\n\tcom.heima.delete\n\t\tDeleteStudent\n\t\tDeleteTeacher\n\tcom.heima.update\n\t\tUpdateStudent\n\t\tUpdateTeacher\n\tcom.heima.find\n\t\tFindStudent\n\t\tFindTeacher\n\n方案2：按照模块分\n\tcom.heima.teacher\n\t\tAddTeacher\n\t\tDeleteTeacher\n\t\tUpdateTeacher\n\t\tFindTeacher\n\tcom.heima.student\n\t\tAddStudent\n\t\tDeleteStudent\n\t\tUpdateStudent\n\t\tFindStudent\n```\n\n## 10.02 包的定义及注意事项 (掌握)\n\n* A:定义包的格式\n\t* package 包名;\n\t* 多级包用.分开即可\n* B:定义包的注意事项\n\t* A:package语句必须是程序的第一条可执行的代码\n\t* B:package语句在一个java文件中只能有一个\n\t* C:如果没有package，默认表示无包名\n* C:案例演示\n\t* 包的定义及注意事项\n\n## 10.03 带包的类编译和运行 (掌握)\n\n* A:如何编译运行带包的类\n\t* a:javac编译的时候带上-d即可\n\t\t* javac -d . HelloWorld.java\n\t* b:通过java命令执行。\n\t\t* java 包名.HellWord\n\n## 10.04 不同包下类之间的访问 (掌握)\n\n* A:案例演示\n\t* 不同包下类之间的访问\n\n## 10.05 import关键字的概述和使用 (掌握)\n\n* A:案例演示\n\t* 为什么要有import\n\t\t* 其实就是让有包的类对调用者可见,不用写全类名了 \n* B:导包格式\n\t* import 包名;\n\t* 注意：\n\t* 这种方式导入是到类的名称。\n\t* 虽然可以最后写*，但是不建议。\n* C:package,import,class有没有顺序关系(面试题)\n\n## 10.06 四种权限修饰符的测试 (掌握)\n\n* A:案例演示\n\t* 四种权限修饰符\n* B:结论\n* \n| 本类 |  同一个包下(子类和无关类) | 不同包下(子类) | 不同包下(无关类) |\n| ------ | ------ | ------ | ------ |\n| private |\tY |\t\t\n| 默认 | Y | Y |\n| protected | Y | Y | Y |\n| public\t| Y | Y | Y | Y |\n\n## 10.07 类及其组成所使用的常见修饰符 (掌握)\n\n* A:修饰符：\n\t* 权限修饰符：private，默认的，protected，public\n\t* 状态修饰符：static，final\n\t* 抽象修饰符：abstract\n* B:类：\n\t* 权限修饰符：默认修饰符，public\n\t* 状态修饰符：final\n\t* 抽象修饰符：abstract\n\t\n\t* 用的最多的就是：public\n\t\n* C:成员变量：\n\t* 权限修饰符：private，默认的，protected，public\n\t* 状态修饰符：static，final\n\t\n\t* 用的最多的就是：private\n\t\n* D:构造方法：\n\t* 权限修饰符：private，默认的，protected，public\n\t\n\t* 用的最多的就是：public\n\t\n* E:成员方法：\n\t* 权限修饰符：private，默认的，protected，public\n\t* 状态修饰符：static，final\n\t* 抽象修饰符：abstract\n\t\n\t* 用的最多的就是：public\n\t\n* F:除此以外的组合规则：\n\t* 成员变量：public static final\n\t* 成员方法：\n\t\t* public static \n\t    * public abstract\n\t\t* public final\n\n## 10.08 内部类概述和访问特点 (了解)\n\n* A:内部类概述\n* B:内部类访问特点\n\t* a:内部类可以直接访问外部类的成员，包括私有。\n\t* b:外部类要访问内部类的成员，必须创建对象。\n\t* 外部类名.内部类名 对象名 = 外部类对象.内部类对象;\n* C:案例演示\n\t* 内部类极其访问特点\n\t\n## 10.09 成员内部类私有使用 (了解)\n\n* private\n\n## 10.10 静态成员内部类 (了解)\n\n* static\n* B:成员内部类被静态修饰后的访问方式是:\n\t* 外部类名.内部类名 对象名 = 外部类名.内部类对象;\n\n## 10.11 成员内部类的面试题 (掌握)\n\n* A:面试题\n\n要求：使用已知的变量，在控制台输出30，20，10。\n\n//内部类之所以能访问外部类，是能获取到外部类的引用：外部类名.this\n\n```java\nclass Outer {\n\tpublic int num = 10;\n\tclass Inner {\n\t\tpublic int num = 20;\n\t\tpublic void show() {\n\t\t\tint num = 30;\n\t\t\tSystem.out.println(num);\n\t\t\tSystem.out.println(this.num);\n\t\t\tSystem.out.println(Outer.this.num);\n\t\t}\n\t}\n}\nclass InnerClassTest {\n\tpublic static void main(String[] args) {\n\t\tOuter.Inner oi = new Outer().new Inner();\n\t\toi.show();\n\t}\t\n}\n```\n\n## 10.12 局部内部类访问局部变量的问题 (掌握)\n\n* A:案例演示\n\t* 局部内部类访问局部变量必须用final修饰\n\t* 局部内部类在访问他所在方法中的局部变量必须用final修饰,为什么?\n\t\t因为当调用这个方法时,局部变量如果没有用final修饰,他的生命周期和方法的生命周期是一样的,当方法弹栈,这个局部变量也会消失,那么如果局部内部类对象还没有马上消失想用这个局部变量,就没有了,如果用final修饰会在类加载的时候进入常量池,即使方法弹栈,常量池的常量还在,也可以继续使用\n\n\t\t但是jdk1.8取消了这个事情,所以我认为这是个bug\n\n## 10.13 匿名内部类的格式和理解\n\n* A:匿名内部类\n\t* 就是内部类的简化写法。\n* B:前提：存在一个类或者接口\n\t* 这里的类可以是具体类也可以是抽象类。\n* C:格式：\n```\n\tnew 类名或者接口名(){\n\t\t重写方法;\n\t}\n```\n* D:本质是什么呢?\n\t* 是一个继承了该类或者实现了该接口的子类匿名对象。\n    * 匿名内部类当做参数传递\n* E:案例演示\n\t* 按照要求来一个匿名内部类\n\t\t\n## 10.14 匿名内部类重写多个方法调用\n\n* A:案例演示\n\t* 匿名内部类的方法调用\n\n## 10.15 匿名内部类在开发中的应用\n\n\n* A:代码如下\n\n```java\n\t//这里写抽象类，接口都行\n\tabstract class Person {\n\t\tpublic abstract void show();\n\t}\n\n\tclass PersonDemo {\n\t\tpublic void method(Person p) {\n\t\t\tp.show();\n\t\t}\n\t}\n\n\tclass PersonTest {\n\t\tpublic static void main(String[] args) {\n\t\t\t//如何调用PersonDemo中的method方法呢?\n\t\t\tPersonDemo pd = new PersonDemo ();\n\t\t\t\n\t\t}\n\t}\n```\n\n## 10.16 匿名内部类的面试题\n\n* A:面试题 \n按照要求，补齐代码\n要求在控制台输出”HelloWorld”\n\n```java\ninterface Inter {\n\tvoid show();\n}\nclass Outer { \n\tpublic static Inter method(){\n\t\treturn new Inner(){\n\t\t\tpublic void show(){\n\t\t\t\tSystem.out.println(\"HelloWorld\");\n\t\t\t}\n\t\t}\n\t}\n}\nclass OuterDemo {\n\tpublic static void main(String[] args) {\n\t\tOuter.method().show();\n\t}\n}\n```\n\n## 10.17_day10总结\n* 把今天的知识点总结一遍。","slug":"Java学习笔记（day10）","published":1,"updated":"2020-02-20T06:06:59.390Z","comments":1,"layout":"post","link":"","_id":"ckec2td2g000gfkuptewcjuc7","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"10-01-package关键字的概述及作用-了解\"><a class=\"header-anchor\" href=\"#10-01-package关键字的概述及作用-了解\">☆</a>10.01 package关键字的概述及作用 (了解)</h2>\n<ul>\n<li>\n<p>A:为什么要有包</p>\n<ul>\n<li>将字节码(.class)进行分类存放</li>\n<li>包其实就是文件夹</li>\n</ul>\n</li>\n<li>\n<p>B:包的概述</p>\n</li>\n<li>\n<p>举例：</p>\n<ul>\n<li>学生：增加，删除，修改，查询</li>\n<li>老师：增加，删除，修改，查询</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方案1：按照功能分</span><br><span class=\"line\">\tcom.heima.add</span><br><span class=\"line\">\t\tAddStudent</span><br><span class=\"line\">\t\tAddTeacher</span><br><span class=\"line\">\tcom.heima.delete</span><br><span class=\"line\">\t\tDeleteStudent</span><br><span class=\"line\">\t\tDeleteTeacher</span><br><span class=\"line\">\tcom.heima.update</span><br><span class=\"line\">\t\tUpdateStudent</span><br><span class=\"line\">\t\tUpdateTeacher</span><br><span class=\"line\">\tcom.heima.find</span><br><span class=\"line\">\t\tFindStudent</span><br><span class=\"line\">\t\tFindTeacher</span><br><span class=\"line\"></span><br><span class=\"line\">方案2：按照模块分</span><br><span class=\"line\">\tcom.heima.teacher</span><br><span class=\"line\">\t\tAddTeacher</span><br><span class=\"line\">\t\tDeleteTeacher</span><br><span class=\"line\">\t\tUpdateTeacher</span><br><span class=\"line\">\t\tFindTeacher</span><br><span class=\"line\">\tcom.heima.student</span><br><span class=\"line\">\t\tAddStudent</span><br><span class=\"line\">\t\tDeleteStudent</span><br><span class=\"line\">\t\tUpdateStudent</span><br><span class=\"line\">\t\tFindStudent</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-02-包的定义及注意事项-掌握\"><a class=\"header-anchor\" href=\"#10-02-包的定义及注意事项-掌握\">☆</a>10.02 包的定义及注意事项 (掌握)</h2>\n<ul>\n<li>A:定义包的格式\n<ul>\n<li>package 包名;</li>\n<li>多级包用.分开即可</li>\n</ul>\n</li>\n<li>B:定义包的注意事项\n<ul>\n<li>A:package语句必须是程序的第一条可执行的代码</li>\n<li>B:package语句在一个java文件中只能有一个</li>\n<li>C:如果没有package，默认表示无包名</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>包的定义及注意事项</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-03-带包的类编译和运行-掌握\"><a class=\"header-anchor\" href=\"#10-03-带包的类编译和运行-掌握\">☆</a>10.03 带包的类编译和运行 (掌握)</h2>\n<ul>\n<li>A:如何编译运行带包的类\n<ul>\n<li>a:javac编译的时候带上-d即可\n<ul>\n<li>javac -d . HelloWorld.java</li>\n</ul>\n</li>\n<li>b:通过java命令执行。\n<ul>\n<li>java 包名.HellWord</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-04-不同包下类之间的访问-掌握\"><a class=\"header-anchor\" href=\"#10-04-不同包下类之间的访问-掌握\">☆</a>10.04 不同包下类之间的访问 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>不同包下类之间的访问</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-05-import关键字的概述和使用-掌握\"><a class=\"header-anchor\" href=\"#10-05-import关键字的概述和使用-掌握\">☆</a>10.05 import关键字的概述和使用 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>为什么要有import\n<ul>\n<li>其实就是让有包的类对调用者可见,不用写全类名了</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:导包格式\n<ul>\n<li>import 包名;</li>\n<li>注意：</li>\n<li>这种方式导入是到类的名称。</li>\n<li>虽然可以最后写*，但是不建议。</li>\n</ul>\n</li>\n<li>C:package,import,class有没有顺序关系(面试题)</li>\n</ul>\n<h2 id=\"10-06-四种权限修饰符的测试-掌握\"><a class=\"header-anchor\" href=\"#10-06-四种权限修饰符的测试-掌握\">☆</a>10.06 四种权限修饰符的测试 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>四种权限修饰符</li>\n</ul>\n</li>\n<li>B:结论</li>\n<li></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>本类</th>\n<th>同一个包下(子类和无关类)</th>\n<th>不同包下(子类)</th>\n<th>不同包下(无关类)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>private</td>\n<td>Y</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>默认</td>\n<td>Y</td>\n<td>Y</td>\n<td></td>\n</tr>\n<tr>\n<td>protected</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>public</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"10-07-类及其组成所使用的常见修饰符-掌握\"><a class=\"header-anchor\" href=\"#10-07-类及其组成所使用的常见修饰符-掌握\">☆</a>10.07 类及其组成所使用的常见修饰符 (掌握)</h2>\n<ul>\n<li>\n<p>A:修饰符：</p>\n<ul>\n<li>权限修饰符：private，默认的，protected，public</li>\n<li>状态修饰符：static，final</li>\n<li>抽象修饰符：abstract</li>\n</ul>\n</li>\n<li>\n<p>B:类：</p>\n<ul>\n<li>\n<p>权限修饰符：默认修饰符，public</p>\n</li>\n<li>\n<p>状态修饰符：final</p>\n</li>\n<li>\n<p>抽象修饰符：abstract</p>\n</li>\n<li>\n<p>用的最多的就是：public</p>\n</li>\n</ul>\n</li>\n<li>\n<p>C:成员变量：</p>\n<ul>\n<li>\n<p>权限修饰符：private，默认的，protected，public</p>\n</li>\n<li>\n<p>状态修饰符：static，final</p>\n</li>\n<li>\n<p>用的最多的就是：private</p>\n</li>\n</ul>\n</li>\n<li>\n<p>D:构造方法：</p>\n<ul>\n<li>\n<p>权限修饰符：private，默认的，protected，public</p>\n</li>\n<li>\n<p>用的最多的就是：public</p>\n</li>\n</ul>\n</li>\n<li>\n<p>E:成员方法：</p>\n<ul>\n<li>\n<p>权限修饰符：private，默认的，protected，public</p>\n</li>\n<li>\n<p>状态修饰符：static，final</p>\n</li>\n<li>\n<p>抽象修饰符：abstract</p>\n</li>\n<li>\n<p>用的最多的就是：public</p>\n</li>\n</ul>\n</li>\n<li>\n<p>F:除此以外的组合规则：</p>\n<ul>\n<li>成员变量：public static final</li>\n<li>成员方法：\n<ul>\n<li>public static</li>\n<li>public abstract</li>\n<li>public final</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-08-内部类概述和访问特点-了解\"><a class=\"header-anchor\" href=\"#10-08-内部类概述和访问特点-了解\">☆</a>10.08 内部类概述和访问特点 (了解)</h2>\n<ul>\n<li>A:内部类概述</li>\n<li>B:内部类访问特点\n<ul>\n<li>a:内部类可以直接访问外部类的成员，包括私有。</li>\n<li>b:外部类要访问内部类的成员，必须创建对象。</li>\n<li>外部类名.内部类名 对象名 = 外部类对象.内部类对象;</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>内部类极其访问特点</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-09-成员内部类私有使用-了解\"><a class=\"header-anchor\" href=\"#10-09-成员内部类私有使用-了解\">☆</a>10.09 成员内部类私有使用 (了解)</h2>\n<ul>\n<li>private</li>\n</ul>\n<h2 id=\"10-10-静态成员内部类-了解\"><a class=\"header-anchor\" href=\"#10-10-静态成员内部类-了解\">☆</a>10.10 静态成员内部类 (了解)</h2>\n<ul>\n<li>static</li>\n<li>B:成员内部类被静态修饰后的访问方式是:\n<ul>\n<li>外部类名.内部类名 对象名 = 外部类名.内部类对象;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-11-成员内部类的面试题-掌握\"><a class=\"header-anchor\" href=\"#10-11-成员内部类的面试题-掌握\">☆</a>10.11 成员内部类的面试题 (掌握)</h2>\n<ul>\n<li>A:面试题</li>\n</ul>\n<p>要求：使用已知的变量，在控制台输出30，20，10。</p>\n<p>//内部类之所以能访问外部类，是能获取到外部类的引用：外部类名.this</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Outer</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Inner</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> num = <span class=\"number\">20</span>;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> num = <span class=\"number\">30</span>;</span><br><span class=\"line\">\t\t\tSystem.out.println(num);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"keyword\">this</span>.num);</span><br><span class=\"line\">\t\t\tSystem.out.println(Outer.<span class=\"keyword\">this</span>.num);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InnerClassTest</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tOuter.Inner oi = <span class=\"keyword\">new</span> Outer().new Inner();</span><br><span class=\"line\">\t\toi.show();</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-12-局部内部类访问局部变量的问题-掌握\"><a class=\"header-anchor\" href=\"#10-12-局部内部类访问局部变量的问题-掌握\">☆</a>10.12 局部内部类访问局部变量的问题 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>\n<p>局部内部类访问局部变量必须用final修饰</p>\n</li>\n<li>\n<p>局部内部类在访问他所在方法中的局部变量必须用final修饰,为什么?<br>\n因为当调用这个方法时,局部变量如果没有用final修饰,他的生命周期和方法的生命周期是一样的,当方法弹栈,这个局部变量也会消失,那么如果局部内部类对象还没有马上消失想用这个局部变量,就没有了,如果用final修饰会在类加载的时候进入常量池,即使方法弹栈,常量池的常量还在,也可以继续使用</p>\n<p>但是jdk1.8取消了这个事情,所以我认为这是个bug</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-13-匿名内部类的格式和理解\"><a class=\"header-anchor\" href=\"#10-13-匿名内部类的格式和理解\">☆</a>10.13 匿名内部类的格式和理解</h2>\n<ul>\n<li>A:匿名内部类\n<ul>\n<li>就是内部类的简化写法。</li>\n</ul>\n</li>\n<li>B:前提：存在一个类或者接口\n<ul>\n<li>这里的类可以是具体类也可以是抽象类。</li>\n</ul>\n</li>\n<li>C:格式：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new 类名或者接口名()&#123;</span><br><span class=\"line\">\t重写方法;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>D:本质是什么呢?\n<ul>\n<li>是一个继承了该类或者实现了该接口的子类匿名对象。</li>\n<li>匿名内部类当做参数传递</li>\n</ul>\n</li>\n<li>E:案例演示\n<ul>\n<li>按照要求来一个匿名内部类</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-14-匿名内部类重写多个方法调用\"><a class=\"header-anchor\" href=\"#10-14-匿名内部类重写多个方法调用\">☆</a>10.14 匿名内部类重写多个方法调用</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>匿名内部类的方法调用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-15-匿名内部类在开发中的应用\"><a class=\"header-anchor\" href=\"#10-15-匿名内部类在开发中的应用\">☆</a>10.15 匿名内部类在开发中的应用</h2>\n<ul>\n<li>A:代码如下</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//这里写抽象类，接口都行</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PersonDemo</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">method</span><span class=\"params\">(Person p)</span> </span>&#123;</span><br><span class=\"line\">\t\tp.show();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PersonTest</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//如何调用PersonDemo中的method方法呢?</span></span><br><span class=\"line\">\t\tPersonDemo pd = <span class=\"keyword\">new</span> PersonDemo ();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-16-匿名内部类的面试题\"><a class=\"header-anchor\" href=\"#10-16-匿名内部类的面试题\">☆</a>10.16 匿名内部类的面试题</h2>\n<ul>\n<li>A:面试题<br>\n按照要求，补齐代码<br>\n要求在控制台输出”HelloWorld”</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Inter</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Outer</span> </span>&#123; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Inter <span class=\"title\">method</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Inner()&#123;</span><br><span class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"HelloWorld\"</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OuterDemo</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tOuter.method().show();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-17-day10总结\"><a class=\"header-anchor\" href=\"#10-17-day10总结\">☆</a>10.17_day10总结</h2>\n<ul>\n<li>把今天的知识点总结一遍。</li>\n</ul>\n","site":{"data":{}},"length":3444,"excerpt":"","more":"<h2 id=\"10-01-package关键字的概述及作用-了解\"><a class=\"header-anchor\" href=\"#10-01-package关键字的概述及作用-了解\">☆</a>10.01 package关键字的概述及作用 (了解)</h2>\n<ul>\n<li>\n<p>A:为什么要有包</p>\n<ul>\n<li>将字节码(.class)进行分类存放</li>\n<li>包其实就是文件夹</li>\n</ul>\n</li>\n<li>\n<p>B:包的概述</p>\n</li>\n<li>\n<p>举例：</p>\n<ul>\n<li>学生：增加，删除，修改，查询</li>\n<li>老师：增加，删除，修改，查询</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">方案1：按照功能分</span><br><span class=\"line\">\tcom.heima.add</span><br><span class=\"line\">\t\tAddStudent</span><br><span class=\"line\">\t\tAddTeacher</span><br><span class=\"line\">\tcom.heima.delete</span><br><span class=\"line\">\t\tDeleteStudent</span><br><span class=\"line\">\t\tDeleteTeacher</span><br><span class=\"line\">\tcom.heima.update</span><br><span class=\"line\">\t\tUpdateStudent</span><br><span class=\"line\">\t\tUpdateTeacher</span><br><span class=\"line\">\tcom.heima.find</span><br><span class=\"line\">\t\tFindStudent</span><br><span class=\"line\">\t\tFindTeacher</span><br><span class=\"line\"></span><br><span class=\"line\">方案2：按照模块分</span><br><span class=\"line\">\tcom.heima.teacher</span><br><span class=\"line\">\t\tAddTeacher</span><br><span class=\"line\">\t\tDeleteTeacher</span><br><span class=\"line\">\t\tUpdateTeacher</span><br><span class=\"line\">\t\tFindTeacher</span><br><span class=\"line\">\tcom.heima.student</span><br><span class=\"line\">\t\tAddStudent</span><br><span class=\"line\">\t\tDeleteStudent</span><br><span class=\"line\">\t\tUpdateStudent</span><br><span class=\"line\">\t\tFindStudent</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-02-包的定义及注意事项-掌握\"><a class=\"header-anchor\" href=\"#10-02-包的定义及注意事项-掌握\">☆</a>10.02 包的定义及注意事项 (掌握)</h2>\n<ul>\n<li>A:定义包的格式\n<ul>\n<li>package 包名;</li>\n<li>多级包用.分开即可</li>\n</ul>\n</li>\n<li>B:定义包的注意事项\n<ul>\n<li>A:package语句必须是程序的第一条可执行的代码</li>\n<li>B:package语句在一个java文件中只能有一个</li>\n<li>C:如果没有package，默认表示无包名</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>包的定义及注意事项</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-03-带包的类编译和运行-掌握\"><a class=\"header-anchor\" href=\"#10-03-带包的类编译和运行-掌握\">☆</a>10.03 带包的类编译和运行 (掌握)</h2>\n<ul>\n<li>A:如何编译运行带包的类\n<ul>\n<li>a:javac编译的时候带上-d即可\n<ul>\n<li>javac -d . HelloWorld.java</li>\n</ul>\n</li>\n<li>b:通过java命令执行。\n<ul>\n<li>java 包名.HellWord</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-04-不同包下类之间的访问-掌握\"><a class=\"header-anchor\" href=\"#10-04-不同包下类之间的访问-掌握\">☆</a>10.04 不同包下类之间的访问 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>不同包下类之间的访问</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-05-import关键字的概述和使用-掌握\"><a class=\"header-anchor\" href=\"#10-05-import关键字的概述和使用-掌握\">☆</a>10.05 import关键字的概述和使用 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>为什么要有import\n<ul>\n<li>其实就是让有包的类对调用者可见,不用写全类名了</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:导包格式\n<ul>\n<li>import 包名;</li>\n<li>注意：</li>\n<li>这种方式导入是到类的名称。</li>\n<li>虽然可以最后写*，但是不建议。</li>\n</ul>\n</li>\n<li>C:package,import,class有没有顺序关系(面试题)</li>\n</ul>\n<h2 id=\"10-06-四种权限修饰符的测试-掌握\"><a class=\"header-anchor\" href=\"#10-06-四种权限修饰符的测试-掌握\">☆</a>10.06 四种权限修饰符的测试 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>四种权限修饰符</li>\n</ul>\n</li>\n<li>B:结论</li>\n<li></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>本类</th>\n<th>同一个包下(子类和无关类)</th>\n<th>不同包下(子类)</th>\n<th>不同包下(无关类)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>private</td>\n<td>Y</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>默认</td>\n<td>Y</td>\n<td>Y</td>\n<td></td>\n</tr>\n<tr>\n<td>protected</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>public</td>\n<td>Y</td>\n<td>Y</td>\n<td>Y</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"10-07-类及其组成所使用的常见修饰符-掌握\"><a class=\"header-anchor\" href=\"#10-07-类及其组成所使用的常见修饰符-掌握\">☆</a>10.07 类及其组成所使用的常见修饰符 (掌握)</h2>\n<ul>\n<li>\n<p>A:修饰符：</p>\n<ul>\n<li>权限修饰符：private，默认的，protected，public</li>\n<li>状态修饰符：static，final</li>\n<li>抽象修饰符：abstract</li>\n</ul>\n</li>\n<li>\n<p>B:类：</p>\n<ul>\n<li>\n<p>权限修饰符：默认修饰符，public</p>\n</li>\n<li>\n<p>状态修饰符：final</p>\n</li>\n<li>\n<p>抽象修饰符：abstract</p>\n</li>\n<li>\n<p>用的最多的就是：public</p>\n</li>\n</ul>\n</li>\n<li>\n<p>C:成员变量：</p>\n<ul>\n<li>\n<p>权限修饰符：private，默认的，protected，public</p>\n</li>\n<li>\n<p>状态修饰符：static，final</p>\n</li>\n<li>\n<p>用的最多的就是：private</p>\n</li>\n</ul>\n</li>\n<li>\n<p>D:构造方法：</p>\n<ul>\n<li>\n<p>权限修饰符：private，默认的，protected，public</p>\n</li>\n<li>\n<p>用的最多的就是：public</p>\n</li>\n</ul>\n</li>\n<li>\n<p>E:成员方法：</p>\n<ul>\n<li>\n<p>权限修饰符：private，默认的，protected，public</p>\n</li>\n<li>\n<p>状态修饰符：static，final</p>\n</li>\n<li>\n<p>抽象修饰符：abstract</p>\n</li>\n<li>\n<p>用的最多的就是：public</p>\n</li>\n</ul>\n</li>\n<li>\n<p>F:除此以外的组合规则：</p>\n<ul>\n<li>成员变量：public static final</li>\n<li>成员方法：\n<ul>\n<li>public static</li>\n<li>public abstract</li>\n<li>public final</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-08-内部类概述和访问特点-了解\"><a class=\"header-anchor\" href=\"#10-08-内部类概述和访问特点-了解\">☆</a>10.08 内部类概述和访问特点 (了解)</h2>\n<ul>\n<li>A:内部类概述</li>\n<li>B:内部类访问特点\n<ul>\n<li>a:内部类可以直接访问外部类的成员，包括私有。</li>\n<li>b:外部类要访问内部类的成员，必须创建对象。</li>\n<li>外部类名.内部类名 对象名 = 外部类对象.内部类对象;</li>\n</ul>\n</li>\n<li>C:案例演示\n<ul>\n<li>内部类极其访问特点</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-09-成员内部类私有使用-了解\"><a class=\"header-anchor\" href=\"#10-09-成员内部类私有使用-了解\">☆</a>10.09 成员内部类私有使用 (了解)</h2>\n<ul>\n<li>private</li>\n</ul>\n<h2 id=\"10-10-静态成员内部类-了解\"><a class=\"header-anchor\" href=\"#10-10-静态成员内部类-了解\">☆</a>10.10 静态成员内部类 (了解)</h2>\n<ul>\n<li>static</li>\n<li>B:成员内部类被静态修饰后的访问方式是:\n<ul>\n<li>外部类名.内部类名 对象名 = 外部类名.内部类对象;</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-11-成员内部类的面试题-掌握\"><a class=\"header-anchor\" href=\"#10-11-成员内部类的面试题-掌握\">☆</a>10.11 成员内部类的面试题 (掌握)</h2>\n<ul>\n<li>A:面试题</li>\n</ul>\n<p>要求：使用已知的变量，在控制台输出30，20，10。</p>\n<p>//内部类之所以能访问外部类，是能获取到外部类的引用：外部类名.this</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Outer</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> num = <span class=\"number\">10</span>;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Inner</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">public</span> <span class=\"keyword\">int</span> num = <span class=\"number\">20</span>;</span><br><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> num = <span class=\"number\">30</span>;</span><br><span class=\"line\">\t\t\tSystem.out.println(num);</span><br><span class=\"line\">\t\t\tSystem.out.println(<span class=\"keyword\">this</span>.num);</span><br><span class=\"line\">\t\t\tSystem.out.println(Outer.<span class=\"keyword\">this</span>.num);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InnerClassTest</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tOuter.Inner oi = <span class=\"keyword\">new</span> Outer().new Inner();</span><br><span class=\"line\">\t\toi.show();</span><br><span class=\"line\">\t&#125;\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-12-局部内部类访问局部变量的问题-掌握\"><a class=\"header-anchor\" href=\"#10-12-局部内部类访问局部变量的问题-掌握\">☆</a>10.12 局部内部类访问局部变量的问题 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>\n<p>局部内部类访问局部变量必须用final修饰</p>\n</li>\n<li>\n<p>局部内部类在访问他所在方法中的局部变量必须用final修饰,为什么?<br>\n因为当调用这个方法时,局部变量如果没有用final修饰,他的生命周期和方法的生命周期是一样的,当方法弹栈,这个局部变量也会消失,那么如果局部内部类对象还没有马上消失想用这个局部变量,就没有了,如果用final修饰会在类加载的时候进入常量池,即使方法弹栈,常量池的常量还在,也可以继续使用</p>\n<p>但是jdk1.8取消了这个事情,所以我认为这是个bug</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-13-匿名内部类的格式和理解\"><a class=\"header-anchor\" href=\"#10-13-匿名内部类的格式和理解\">☆</a>10.13 匿名内部类的格式和理解</h2>\n<ul>\n<li>A:匿名内部类\n<ul>\n<li>就是内部类的简化写法。</li>\n</ul>\n</li>\n<li>B:前提：存在一个类或者接口\n<ul>\n<li>这里的类可以是具体类也可以是抽象类。</li>\n</ul>\n</li>\n<li>C:格式：</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">new 类名或者接口名()&#123;</span><br><span class=\"line\">\t重写方法;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>D:本质是什么呢?\n<ul>\n<li>是一个继承了该类或者实现了该接口的子类匿名对象。</li>\n<li>匿名内部类当做参数传递</li>\n</ul>\n</li>\n<li>E:案例演示\n<ul>\n<li>按照要求来一个匿名内部类</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-14-匿名内部类重写多个方法调用\"><a class=\"header-anchor\" href=\"#10-14-匿名内部类重写多个方法调用\">☆</a>10.14 匿名内部类重写多个方法调用</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>匿名内部类的方法调用</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"10-15-匿名内部类在开发中的应用\"><a class=\"header-anchor\" href=\"#10-15-匿名内部类在开发中的应用\">☆</a>10.15 匿名内部类在开发中的应用</h2>\n<ul>\n<li>A:代码如下</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//这里写抽象类，接口都行</span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PersonDemo</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">method</span><span class=\"params\">(Person p)</span> </span>&#123;</span><br><span class=\"line\">\t\tp.show();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PersonTest</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//如何调用PersonDemo中的method方法呢?</span></span><br><span class=\"line\">\t\tPersonDemo pd = <span class=\"keyword\">new</span> PersonDemo ();</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-16-匿名内部类的面试题\"><a class=\"header-anchor\" href=\"#10-16-匿名内部类的面试题\">☆</a>10.16 匿名内部类的面试题</h2>\n<ul>\n<li>A:面试题<br>\n按照要求，补齐代码<br>\n要求在控制台输出”HelloWorld”</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Inter</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Outer</span> </span>&#123; </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Inter <span class=\"title\">method</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Inner()&#123;</span><br><span class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">show</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t\t\tSystem.out.println(<span class=\"string\">\"HelloWorld\"</span>);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OuterDemo</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tOuter.method().show();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-17-day10总结\"><a class=\"header-anchor\" href=\"#10-17-day10总结\">☆</a>10.17_day10总结</h2>\n<ul>\n<li>把今天的知识点总结一遍。</li>\n</ul>\n"},{"title":"Java学习笔记（day11）","copyright":true,"abbrlink":"35a8cbed","notshow":true,"description":"Java开发工具、常见对象","date":"2018-11-04T10:00:00.000Z","password":null,"image":null,"photos":[],"sticky":null,"_content":"\n## 11.01 常见开发工具介绍 (了解)\n\n* A:操作系统自带的记事本软件\n* B:高级记事本软件\n* C:集成开发环境 IDE\n\t* (Integrated Development Environment)\n* D:Eclipse和MyEclipse的区别\n\t* a:Eclipse是一种可扩展的开放源代码的IDE。\n\t* b:Eclipse的特点描述\n\t\t* 免费\n\t\t* 纯Java语言编写\n\t\t* 免安装\n\t\t* 扩展性强\n\t* c:MyEclipse\n\t\t* 在Eclipse基础上追加的功能性插件，对插件收费\n\t\t* 在WEB开发中提供强大的系统架构平台\n* E:下载 http://eclipse.org/\n\t* org是非盈利团体 \n* F:安装\n\t* 绿色版\t解压就可以使用(Eclipse)\n\t* 安装版   双击运行,一路next即可(JDK)\n* G:卸载\n\t* 绿色版\t直接删除文件夹即可\n\t* 安装版 专业卸载软件或者控制面板添加删除程序\n\n## 11.02 Eclipse中HelloWorld案例以及汉化 (了解)\n\n* A:选择工作空间\n\t* 工作空间  其实就是我们写的源代码所在的目录\n* B:用Eclipse来完成一个HelloWorld案例\n\t* 代码以项目为基本单位\n\t* 创建项目\n\t* 创建包\n\t* 创建类\n\t* 编写代码\n* C:编译和运行\n* D:Eclipse的汉化\n\t* 从Eclipse3.5开始，安装目录下就多了一个dropins目录,只要将插件解压后放到到该目录即可。\n\t* 同理，这种方式卸载插件也是特别的方便，推荐这种方式\n* E:语法检查提示\n\t* 红色波浪线\n\t\t* 必须处理,否则编译通不过\n\t* 黄色波浪线\t\n\t\t* 可以不搭理他 \n\n## 11.03 Eclipse的视窗和视图概述 (了解)\n\n* A:视窗  每一个基本的窗体被称为视窗\n\t* PackageExplorer  显示项目结构，包，类，及资源\n\t* Outline   显示类的结构，方便查找，识别，修改\n\t* Console  程序运行的结果在该窗口显示\n\t* Hierarchy 显示Java继承层次结构，选中类后F4\n* B:视图  是由某些视窗的组合而成的\n\t* Java视图\n\t* Debug视图\n\n## 11.04 Eclipse工作空间的基本配置 (掌握)\n\n* A:程序的编译和运行的环境配置(一般不改)\n\t* window -- Preferences -- Java\n\t* 编译环境：Compiler\t默认选中的就是最高版本。\n\t* 运行环境：Installed JREs\t默认会找你安装的那个JDK。建议配置了Java的环境变量。\n\t* 问题：\n\t\t* 低编译，高运行。可以。\n\t\t* 高编译，低运行。不可以。\n\t\t* 建议，编译和运行的版本一致。\n* B:如何去掉默认注释?\n\t* window -- Preferences -- Java -- Code Style -- Code Templates\n\t* 选择你不想要的内容，通过右边Edit编辑。\n\t* 注意：请只删除注释部分，不是注释部分的不要删除。\n* C:行号的显示和隐藏\n\t* 显示：在代码区域的最左边的空白区域，右键 -- Show Line Numbers即可。\n\t* 隐藏：把上面的动作再做一次。\n* D:字体大小及颜色\n\t* a:Java代码区域的字体大小和颜色：\n\t\t* window -- Preferences -- General -- Appearance -- Colors And Fonts --Java修改 -- Java Edit Text Font\n\t* b:控制台\n\t\t* window -- Preferences -- General -- Appearance -- Colors And Fonts -- Debug -- Console font\n\t* c:其他文件\n\t\t* window -- Preferences -- General -- Appearance -- Colors And Fonts -- Basic -- Text Font\n* E:窗体给弄乱了，怎么办?\n\t* window -- Reset Perspective\n* F:控制台找不到了，怎么办?\n\t* Window--Show View—Console\n* G:取消悬浮提示\n\t* window -- Preferences -- Java--Editor--Hovers。右边将Combined Hover勾去掉。\n\t* 这样代码的悬浮框就不会自动出现了。如果想看提示，将光标悬浮在代码上，按F2即可。\n \n## 11.05 Eclipse中内容辅助键的使用 (掌握)\n\n* A:Alt+/ 起提示作用\n* B:main+alt+/,syso+alt+/,给出其他提示\n* C:补充输出语句,选中需要输出的部分,alt+/选择最后一项即可\n* C:定义自己的alt + /\n\t* windows--perference-Java-Editor-Templates--New\n\n## 11.06 Eclipse中快捷键的使用 (掌握)\n\n* A:新建 ctrl + n\n* B:格式化  ctrl+shift+f\n* C:导入包  ctrl+shift+o \n* D:注释  ctrl+/,ctrl+shift+/,ctrl+shift+\\\n* E:代码上下移动 选中代码alt+上/下箭头\n* F:查看源码  选中类名(F3或者Ctrl+鼠标点击)\n* G:查找具体的类 ctrl + shift + t\n* H:查找具体类的具体方法 ctrl + o\n* I:给建议 ctrl+1,根据右边生成左边的数据类型,生成方法\n* J:删除代码 ctrl + d\n* K:抽取方法alt + shift + m \n* L:改名alt + shift + r \n* \n\n## 11.07 Eclipse中如何提高开发效率 (掌握)\n\n* alt + shift + s\n* A:自动生成构造方法\n* B:自动生成get/set方法\n\n## 11.08 Eclipse中一个标准学生类及其测试 (掌握)\n\n* A:案例演示\n\t* 用Eclipse实现标准学生类及其测试\n\n## 11.09 Eclipse中接口抽象类具体类代码体现 (掌握)\n\n* A:案例演示\n\t* 用Eclipse实现接口抽象类具体类代码\n\n## 11.10 Eclipse中如何生成jar包并导入到项目中 (了解)\n\n* A:jar是什么?\n\t* jar是多个class文件的压缩包。\n* B:jar有什么用?\n\t* 用别人写好的东西\t\n* C:打jar包\n\t* 选中项目--右键--Export--Java--Jar--自己指定一个路径和一个名称--Finish\n* D:导入jar包\n\t* 复制到项目路径下并添加至构建路径。\n\n## 11.11 Eclipse中如何删除项目和导入项目 (掌握)\n\n* A:删除项目\n\t* 选中项目 – 右键 – 删除\n\t\t* 从项目区域中删除\n\t\t* 从硬盘上删除\n* B:导入项目\n\t* 在项目区域右键找到import\n\t* 找到General，展开，并找到\n\t* Existing Projects into Workspace\n\t* 点击next,然后选择你要导入的项目\n\t* 注意：这里选择的是项目名称\n\n## 11.12 Eclipse中断点调试的基本使用 (了解)\n\n* A:Debug的作用\n\t* 调试程序\n\t* 查看程序执行流程\n* B:如何查看程序执行流程\t\t\n\t* 什么是断点：\n\t\t* 就是一个标记，从哪里开始。\n\t\t\n\t* 如何设置断点：\n\t\t* 你想看哪里的程序，你就在那个有效程序的左边双击即可。\n\t\t\n\t* 在哪里设置断点：\n\t\t* 哪里不会点哪里。\n\t\t* 目前：我们就在每个方法的第一条有效语句上都加。\n\t\t\n\t* 如何运行设置断点后的程序：\n\t\t* 右键 -- Debug as -- Java Application\n\t\t\n\t* 看哪些地方：\n\t\t* Debug：断点测试的地方\n\t\t\t* 在这个地方，记住F6，或者点击也可以。一次看一行的执行过程。\n\t\t* Variables：查看程序的变量变化\n\t\t* ForDemo：被查看的源文件\n\t\t* Console：控制台\n\t\t\n\t* 如何去断点：\n\t\t* a:再次双击即可\n\t\t* b:找到Debug视图，Variables界面，找到Breakpoints，并点击，然后看到所有的断点，最后点击那个双叉。\n\n## 11.13 Eclipse查看Java中参数传递问题 (了解)\n\n* A:断点演示\n\t* 断点查看Java中参数传递问题\n\n## 11.14 API概述 (了解)\n\n* A:API(Application Programming Interface) \n\t* 应用程序编程接口\n* B:Java API\n\t* 就是Java提供给我们使用的类，这些类将底层的实现封装了起来，\n\t* 我们不需要关心这些类是如何实现的，只需要学习这些类如何使用。\n\n## 11.15 Object类的概述 (了解)\n\n* A:Object类概述\n\t* 类层次结构的根类\n\t* 所有类都直接或者间接的继承自该类\n* B:构造方法\n\t* public Object()\n\t* 回想面向对象中为什么说：\n\t* 子类的构造方法默认访问的是父类的无参构造方法\n\n## 11.16 Object类的hashCode()方法 (了解)\n\n* A:案例演示\n\t* public int hashCode()\n\t* a:返回该对象的哈希码值。默认情况下，该方法会根据对象的地址来计算。\n\t* b:不同对象的，hashCode()一般来说不会相同。但是，同一个对象的hashCode()值肯定相同。\n\n## 11.17 Object类的getClass()方法 (在反射的时候掌握)\n\n* A:案例演示\n\t* public final Class getClass()\n\t* a:返回此 Object 的运行时类。\n\t* b:可以通过Class类中的一个方法，获取对象的真实类的全名称。\t\n\t\t* public String getName()\n\n## 11.18 Object类的toString()方法 (掌握)\n\n* A:案例演示\n\t* public String toString()\n\t* a:返回该对象的字符串表示。\n* \n\t\t\n\t\tpublic Stirng toString() {\n\t\t\treturn name + \",\" + age;\n\t\t}\n\t* b:它的值等于： \n\t\t* getClass().getName() + \"@\" + Integer.toHexString(hashCode()) \n\t* c:由于默认情况下的数据对我们来说没有意义，一般建议重写该方法。\n* B:最终版\n\t* 自动生成\n\n## 11.19 Object类的equals()方法 (掌握)\n\n* A:案例演示：\n\n```Java\nclass Studnet {\n\t private String name;\n\t private int age;\n\t \n\tpublic Studnet(String name, int age) {\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object obj) {\n\t\t Studnet s = (Studnet)obj;\n\t\treturn this.name.equals(s.name) && this.age == s.age;\n\t}\n\t \n\t \n}\n\npublic class EqualsTest {\n\n\tpublic static void main(String[] args) {\n\t\tStudnet s1 = new Studnet(\"张三\",23);\n\t\tStudnet s2 = new Studnet(\"张三\", 23);\n\t\tboolean b = s1.equals(s2);\n\t\t\n\t\tSystem.out.println(s1 == s2);\n\t\tSystem.out.println(b);\n\t}\n\n}\n```\n\t* a:指示其他某个对象是否与此对象“相等”。 \n\t* b:默认情况下比较的是对象的引用是否相同。\n\t* c:由于比较对象的引用没有意义，一般建议重写该方法。\n\n## 11.20 ==号和equals方法的区别 (掌握)\n\n* ==是一个比较运算符号,既可以比较基本数据类型,也可以比较引用数据类型,基本数据类型比较的是值,引用数据类型比较的是地址值\n* equals方法是一个方法,只能比较引用数据类型,所有的对象都会继承Object类中的方法,如果没有重写Object类中的equals方法,equals方法和==号比较引用数据类型无区别,重写后的equals方法比较的是对象中的属性\n\n## 11.21_day11总结\n\n* 把今天的知识点总结一遍。","source":"_posts/Java学习笔记（day11）.md","raw":"---\ntitle: Java学习笔记（day11）\ncopyright: true\nabbrlink: 35a8cbed\nnotshow: true\ntags:\n  - Java\n  - Java开发工具\ncategories: Java\ndescription: Java开发工具、常见对象\ndate: 2018-11-04 18:00:00\npassword:\nimage:\nphotos:\nsticky:\n---\n\n## 11.01 常见开发工具介绍 (了解)\n\n* A:操作系统自带的记事本软件\n* B:高级记事本软件\n* C:集成开发环境 IDE\n\t* (Integrated Development Environment)\n* D:Eclipse和MyEclipse的区别\n\t* a:Eclipse是一种可扩展的开放源代码的IDE。\n\t* b:Eclipse的特点描述\n\t\t* 免费\n\t\t* 纯Java语言编写\n\t\t* 免安装\n\t\t* 扩展性强\n\t* c:MyEclipse\n\t\t* 在Eclipse基础上追加的功能性插件，对插件收费\n\t\t* 在WEB开发中提供强大的系统架构平台\n* E:下载 http://eclipse.org/\n\t* org是非盈利团体 \n* F:安装\n\t* 绿色版\t解压就可以使用(Eclipse)\n\t* 安装版   双击运行,一路next即可(JDK)\n* G:卸载\n\t* 绿色版\t直接删除文件夹即可\n\t* 安装版 专业卸载软件或者控制面板添加删除程序\n\n## 11.02 Eclipse中HelloWorld案例以及汉化 (了解)\n\n* A:选择工作空间\n\t* 工作空间  其实就是我们写的源代码所在的目录\n* B:用Eclipse来完成一个HelloWorld案例\n\t* 代码以项目为基本单位\n\t* 创建项目\n\t* 创建包\n\t* 创建类\n\t* 编写代码\n* C:编译和运行\n* D:Eclipse的汉化\n\t* 从Eclipse3.5开始，安装目录下就多了一个dropins目录,只要将插件解压后放到到该目录即可。\n\t* 同理，这种方式卸载插件也是特别的方便，推荐这种方式\n* E:语法检查提示\n\t* 红色波浪线\n\t\t* 必须处理,否则编译通不过\n\t* 黄色波浪线\t\n\t\t* 可以不搭理他 \n\n## 11.03 Eclipse的视窗和视图概述 (了解)\n\n* A:视窗  每一个基本的窗体被称为视窗\n\t* PackageExplorer  显示项目结构，包，类，及资源\n\t* Outline   显示类的结构，方便查找，识别，修改\n\t* Console  程序运行的结果在该窗口显示\n\t* Hierarchy 显示Java继承层次结构，选中类后F4\n* B:视图  是由某些视窗的组合而成的\n\t* Java视图\n\t* Debug视图\n\n## 11.04 Eclipse工作空间的基本配置 (掌握)\n\n* A:程序的编译和运行的环境配置(一般不改)\n\t* window -- Preferences -- Java\n\t* 编译环境：Compiler\t默认选中的就是最高版本。\n\t* 运行环境：Installed JREs\t默认会找你安装的那个JDK。建议配置了Java的环境变量。\n\t* 问题：\n\t\t* 低编译，高运行。可以。\n\t\t* 高编译，低运行。不可以。\n\t\t* 建议，编译和运行的版本一致。\n* B:如何去掉默认注释?\n\t* window -- Preferences -- Java -- Code Style -- Code Templates\n\t* 选择你不想要的内容，通过右边Edit编辑。\n\t* 注意：请只删除注释部分，不是注释部分的不要删除。\n* C:行号的显示和隐藏\n\t* 显示：在代码区域的最左边的空白区域，右键 -- Show Line Numbers即可。\n\t* 隐藏：把上面的动作再做一次。\n* D:字体大小及颜色\n\t* a:Java代码区域的字体大小和颜色：\n\t\t* window -- Preferences -- General -- Appearance -- Colors And Fonts --Java修改 -- Java Edit Text Font\n\t* b:控制台\n\t\t* window -- Preferences -- General -- Appearance -- Colors And Fonts -- Debug -- Console font\n\t* c:其他文件\n\t\t* window -- Preferences -- General -- Appearance -- Colors And Fonts -- Basic -- Text Font\n* E:窗体给弄乱了，怎么办?\n\t* window -- Reset Perspective\n* F:控制台找不到了，怎么办?\n\t* Window--Show View—Console\n* G:取消悬浮提示\n\t* window -- Preferences -- Java--Editor--Hovers。右边将Combined Hover勾去掉。\n\t* 这样代码的悬浮框就不会自动出现了。如果想看提示，将光标悬浮在代码上，按F2即可。\n \n## 11.05 Eclipse中内容辅助键的使用 (掌握)\n\n* A:Alt+/ 起提示作用\n* B:main+alt+/,syso+alt+/,给出其他提示\n* C:补充输出语句,选中需要输出的部分,alt+/选择最后一项即可\n* C:定义自己的alt + /\n\t* windows--perference-Java-Editor-Templates--New\n\n## 11.06 Eclipse中快捷键的使用 (掌握)\n\n* A:新建 ctrl + n\n* B:格式化  ctrl+shift+f\n* C:导入包  ctrl+shift+o \n* D:注释  ctrl+/,ctrl+shift+/,ctrl+shift+\\\n* E:代码上下移动 选中代码alt+上/下箭头\n* F:查看源码  选中类名(F3或者Ctrl+鼠标点击)\n* G:查找具体的类 ctrl + shift + t\n* H:查找具体类的具体方法 ctrl + o\n* I:给建议 ctrl+1,根据右边生成左边的数据类型,生成方法\n* J:删除代码 ctrl + d\n* K:抽取方法alt + shift + m \n* L:改名alt + shift + r \n* \n\n## 11.07 Eclipse中如何提高开发效率 (掌握)\n\n* alt + shift + s\n* A:自动生成构造方法\n* B:自动生成get/set方法\n\n## 11.08 Eclipse中一个标准学生类及其测试 (掌握)\n\n* A:案例演示\n\t* 用Eclipse实现标准学生类及其测试\n\n## 11.09 Eclipse中接口抽象类具体类代码体现 (掌握)\n\n* A:案例演示\n\t* 用Eclipse实现接口抽象类具体类代码\n\n## 11.10 Eclipse中如何生成jar包并导入到项目中 (了解)\n\n* A:jar是什么?\n\t* jar是多个class文件的压缩包。\n* B:jar有什么用?\n\t* 用别人写好的东西\t\n* C:打jar包\n\t* 选中项目--右键--Export--Java--Jar--自己指定一个路径和一个名称--Finish\n* D:导入jar包\n\t* 复制到项目路径下并添加至构建路径。\n\n## 11.11 Eclipse中如何删除项目和导入项目 (掌握)\n\n* A:删除项目\n\t* 选中项目 – 右键 – 删除\n\t\t* 从项目区域中删除\n\t\t* 从硬盘上删除\n* B:导入项目\n\t* 在项目区域右键找到import\n\t* 找到General，展开，并找到\n\t* Existing Projects into Workspace\n\t* 点击next,然后选择你要导入的项目\n\t* 注意：这里选择的是项目名称\n\n## 11.12 Eclipse中断点调试的基本使用 (了解)\n\n* A:Debug的作用\n\t* 调试程序\n\t* 查看程序执行流程\n* B:如何查看程序执行流程\t\t\n\t* 什么是断点：\n\t\t* 就是一个标记，从哪里开始。\n\t\t\n\t* 如何设置断点：\n\t\t* 你想看哪里的程序，你就在那个有效程序的左边双击即可。\n\t\t\n\t* 在哪里设置断点：\n\t\t* 哪里不会点哪里。\n\t\t* 目前：我们就在每个方法的第一条有效语句上都加。\n\t\t\n\t* 如何运行设置断点后的程序：\n\t\t* 右键 -- Debug as -- Java Application\n\t\t\n\t* 看哪些地方：\n\t\t* Debug：断点测试的地方\n\t\t\t* 在这个地方，记住F6，或者点击也可以。一次看一行的执行过程。\n\t\t* Variables：查看程序的变量变化\n\t\t* ForDemo：被查看的源文件\n\t\t* Console：控制台\n\t\t\n\t* 如何去断点：\n\t\t* a:再次双击即可\n\t\t* b:找到Debug视图，Variables界面，找到Breakpoints，并点击，然后看到所有的断点，最后点击那个双叉。\n\n## 11.13 Eclipse查看Java中参数传递问题 (了解)\n\n* A:断点演示\n\t* 断点查看Java中参数传递问题\n\n## 11.14 API概述 (了解)\n\n* A:API(Application Programming Interface) \n\t* 应用程序编程接口\n* B:Java API\n\t* 就是Java提供给我们使用的类，这些类将底层的实现封装了起来，\n\t* 我们不需要关心这些类是如何实现的，只需要学习这些类如何使用。\n\n## 11.15 Object类的概述 (了解)\n\n* A:Object类概述\n\t* 类层次结构的根类\n\t* 所有类都直接或者间接的继承自该类\n* B:构造方法\n\t* public Object()\n\t* 回想面向对象中为什么说：\n\t* 子类的构造方法默认访问的是父类的无参构造方法\n\n## 11.16 Object类的hashCode()方法 (了解)\n\n* A:案例演示\n\t* public int hashCode()\n\t* a:返回该对象的哈希码值。默认情况下，该方法会根据对象的地址来计算。\n\t* b:不同对象的，hashCode()一般来说不会相同。但是，同一个对象的hashCode()值肯定相同。\n\n## 11.17 Object类的getClass()方法 (在反射的时候掌握)\n\n* A:案例演示\n\t* public final Class getClass()\n\t* a:返回此 Object 的运行时类。\n\t* b:可以通过Class类中的一个方法，获取对象的真实类的全名称。\t\n\t\t* public String getName()\n\n## 11.18 Object类的toString()方法 (掌握)\n\n* A:案例演示\n\t* public String toString()\n\t* a:返回该对象的字符串表示。\n* \n\t\t\n\t\tpublic Stirng toString() {\n\t\t\treturn name + \",\" + age;\n\t\t}\n\t* b:它的值等于： \n\t\t* getClass().getName() + \"@\" + Integer.toHexString(hashCode()) \n\t* c:由于默认情况下的数据对我们来说没有意义，一般建议重写该方法。\n* B:最终版\n\t* 自动生成\n\n## 11.19 Object类的equals()方法 (掌握)\n\n* A:案例演示：\n\n```Java\nclass Studnet {\n\t private String name;\n\t private int age;\n\t \n\tpublic Studnet(String name, int age) {\n\t\tthis.name = name;\n\t\tthis.age = age;\n\t}\n\n\t@Override\n\tpublic boolean equals(Object obj) {\n\t\t Studnet s = (Studnet)obj;\n\t\treturn this.name.equals(s.name) && this.age == s.age;\n\t}\n\t \n\t \n}\n\npublic class EqualsTest {\n\n\tpublic static void main(String[] args) {\n\t\tStudnet s1 = new Studnet(\"张三\",23);\n\t\tStudnet s2 = new Studnet(\"张三\", 23);\n\t\tboolean b = s1.equals(s2);\n\t\t\n\t\tSystem.out.println(s1 == s2);\n\t\tSystem.out.println(b);\n\t}\n\n}\n```\n\t* a:指示其他某个对象是否与此对象“相等”。 \n\t* b:默认情况下比较的是对象的引用是否相同。\n\t* c:由于比较对象的引用没有意义，一般建议重写该方法。\n\n## 11.20 ==号和equals方法的区别 (掌握)\n\n* ==是一个比较运算符号,既可以比较基本数据类型,也可以比较引用数据类型,基本数据类型比较的是值,引用数据类型比较的是地址值\n* equals方法是一个方法,只能比较引用数据类型,所有的对象都会继承Object类中的方法,如果没有重写Object类中的equals方法,equals方法和==号比较引用数据类型无区别,重写后的equals方法比较的是对象中的属性\n\n## 11.21_day11总结\n\n* 把今天的知识点总结一遍。","slug":"Java学习笔记（day11）","published":1,"updated":"2020-02-20T06:06:59.391Z","comments":1,"layout":"post","link":"","_id":"ckec2td2h000hfkup58nawfgt","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"11-01-常见开发工具介绍-了解\"><a class=\"header-anchor\" href=\"#11-01-常见开发工具介绍-了解\">☆</a>11.01 常见开发工具介绍 (了解)</h2>\n<ul>\n<li>A:操作系统自带的记事本软件</li>\n<li>B:高级记事本软件</li>\n<li>C:集成开发环境 IDE\n<ul>\n<li>(Integrated Development Environment)</li>\n</ul>\n</li>\n<li>D:Eclipse和MyEclipse的区别\n<ul>\n<li>a:Eclipse是一种可扩展的开放源代码的IDE。</li>\n<li>b:Eclipse的特点描述\n<ul>\n<li>免费</li>\n<li>纯Java语言编写</li>\n<li>免安装</li>\n<li>扩展性强</li>\n</ul>\n</li>\n<li>c:MyEclipse\n<ul>\n<li>在Eclipse基础上追加的功能性插件，对插件收费</li>\n<li>在WEB开发中提供强大的系统架构平台</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>E:下载 <a href=\"http://eclipse.org/\" target=\"_blank\" rel=\"noopener\">http://eclipse.org/</a>\n<ul>\n<li>org是非盈利团体</li>\n</ul>\n</li>\n<li>F:安装\n<ul>\n<li>绿色版\t解压就可以使用(Eclipse)</li>\n<li>安装版   双击运行,一路next即可(JDK)</li>\n</ul>\n</li>\n<li>G:卸载\n<ul>\n<li>绿色版\t直接删除文件夹即可</li>\n<li>安装版 专业卸载软件或者控制面板添加删除程序</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-02-eclipse中helloworld案例以及汉化-了解\"><a class=\"header-anchor\" href=\"#11-02-eclipse中helloworld案例以及汉化-了解\">☆</a>11.02 Eclipse中HelloWorld案例以及汉化 (了解)</h2>\n<ul>\n<li>A:选择工作空间\n<ul>\n<li>工作空间  其实就是我们写的源代码所在的目录</li>\n</ul>\n</li>\n<li>B:用Eclipse来完成一个HelloWorld案例\n<ul>\n<li>代码以项目为基本单位</li>\n<li>创建项目</li>\n<li>创建包</li>\n<li>创建类</li>\n<li>编写代码</li>\n</ul>\n</li>\n<li>C:编译和运行</li>\n<li>D:Eclipse的汉化\n<ul>\n<li>从Eclipse3.5开始，安装目录下就多了一个dropins目录,只要将插件解压后放到到该目录即可。</li>\n<li>同理，这种方式卸载插件也是特别的方便，推荐这种方式</li>\n</ul>\n</li>\n<li>E:语法检查提示\n<ul>\n<li>红色波浪线\n<ul>\n<li>必须处理,否则编译通不过</li>\n</ul>\n</li>\n<li>黄色波浪线\n<ul>\n<li>可以不搭理他</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-03-eclipse的视窗和视图概述-了解\"><a class=\"header-anchor\" href=\"#11-03-eclipse的视窗和视图概述-了解\">☆</a>11.03 Eclipse的视窗和视图概述 (了解)</h2>\n<ul>\n<li>A:视窗  每一个基本的窗体被称为视窗\n<ul>\n<li>PackageExplorer  显示项目结构，包，类，及资源</li>\n<li>Outline   显示类的结构，方便查找，识别，修改</li>\n<li>Console  程序运行的结果在该窗口显示</li>\n<li>Hierarchy 显示Java继承层次结构，选中类后F4</li>\n</ul>\n</li>\n<li>B:视图  是由某些视窗的组合而成的\n<ul>\n<li>Java视图</li>\n<li>Debug视图</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-04-eclipse工作空间的基本配置-掌握\"><a class=\"header-anchor\" href=\"#11-04-eclipse工作空间的基本配置-掌握\">☆</a>11.04 Eclipse工作空间的基本配置 (掌握)</h2>\n<ul>\n<li>A:程序的编译和运行的环境配置(一般不改)\n<ul>\n<li>window – Preferences – Java</li>\n<li>编译环境：Compiler\t默认选中的就是最高版本。</li>\n<li>运行环境：Installed JREs\t默认会找你安装的那个JDK。建议配置了Java的环境变量。</li>\n<li>问题：\n<ul>\n<li>低编译，高运行。可以。</li>\n<li>高编译，低运行。不可以。</li>\n<li>建议，编译和运行的版本一致。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:如何去掉默认注释?\n<ul>\n<li>window – Preferences – Java – Code Style – Code Templates</li>\n<li>选择你不想要的内容，通过右边Edit编辑。</li>\n<li>注意：请只删除注释部分，不是注释部分的不要删除。</li>\n</ul>\n</li>\n<li>C:行号的显示和隐藏\n<ul>\n<li>显示：在代码区域的最左边的空白区域，右键 – Show Line Numbers即可。</li>\n<li>隐藏：把上面的动作再做一次。</li>\n</ul>\n</li>\n<li>D:字体大小及颜色\n<ul>\n<li>a:Java代码区域的字体大小和颜色：\n<ul>\n<li>window – Preferences – General – Appearance – Colors And Fonts --Java修改 – Java Edit Text Font</li>\n</ul>\n</li>\n<li>b:控制台\n<ul>\n<li>window – Preferences – General – Appearance – Colors And Fonts – Debug – Console font</li>\n</ul>\n</li>\n<li>c:其他文件\n<ul>\n<li>window – Preferences – General – Appearance – Colors And Fonts – Basic – Text Font</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>E:窗体给弄乱了，怎么办?\n<ul>\n<li>window – Reset Perspective</li>\n</ul>\n</li>\n<li>F:控制台找不到了，怎么办?\n<ul>\n<li>Window–Show View—Console</li>\n</ul>\n</li>\n<li>G:取消悬浮提示\n<ul>\n<li>window – Preferences – Java–Editor–Hovers。右边将Combined Hover勾去掉。</li>\n<li>这样代码的悬浮框就不会自动出现了。如果想看提示，将光标悬浮在代码上，按F2即可。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-05-eclipse中内容辅助键的使用-掌握\"><a class=\"header-anchor\" href=\"#11-05-eclipse中内容辅助键的使用-掌握\">☆</a>11.05 Eclipse中内容辅助键的使用 (掌握)</h2>\n<ul>\n<li>A:Alt+/ 起提示作用</li>\n<li>B:main+alt+/,syso+alt+/,给出其他提示</li>\n<li>C:补充输出语句,选中需要输出的部分,alt+/选择最后一项即可</li>\n<li>C:定义自己的alt + /\n<ul>\n<li>windows–perference-Java-Editor-Templates–New</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-06-eclipse中快捷键的使用-掌握\"><a class=\"header-anchor\" href=\"#11-06-eclipse中快捷键的使用-掌握\">☆</a>11.06 Eclipse中快捷键的使用 (掌握)</h2>\n<ul>\n<li>A:新建 ctrl + n</li>\n<li>B:格式化  ctrl+shift+f</li>\n<li>C:导入包  ctrl+shift+o</li>\n<li>D:注释  ctrl+/,ctrl+shift+/,ctrl+shift+\\</li>\n<li>E:代码上下移动 选中代码alt+上/下箭头</li>\n<li>F:查看源码  选中类名(F3或者Ctrl+鼠标点击)</li>\n<li>G:查找具体的类 ctrl + shift + t</li>\n<li>H:查找具体类的具体方法 ctrl + o</li>\n<li>I:给建议 ctrl+1,根据右边生成左边的数据类型,生成方法</li>\n<li>J:删除代码 ctrl + d</li>\n<li>K:抽取方法alt + shift + m</li>\n<li>L:改名alt + shift + r</li>\n<li></li>\n</ul>\n<h2 id=\"11-07-eclipse中如何提高开发效率-掌握\"><a class=\"header-anchor\" href=\"#11-07-eclipse中如何提高开发效率-掌握\">☆</a>11.07 Eclipse中如何提高开发效率 (掌握)</h2>\n<ul>\n<li>alt + shift + s</li>\n<li>A:自动生成构造方法</li>\n<li>B:自动生成get/set方法</li>\n</ul>\n<h2 id=\"11-08-eclipse中一个标准学生类及其测试-掌握\"><a class=\"header-anchor\" href=\"#11-08-eclipse中一个标准学生类及其测试-掌握\">☆</a>11.08 Eclipse中一个标准学生类及其测试 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>用Eclipse实现标准学生类及其测试</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-09-eclipse中接口抽象类具体类代码体现-掌握\"><a class=\"header-anchor\" href=\"#11-09-eclipse中接口抽象类具体类代码体现-掌握\">☆</a>11.09 Eclipse中接口抽象类具体类代码体现 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>用Eclipse实现接口抽象类具体类代码</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-10-eclipse中如何生成jar包并导入到项目中-了解\"><a class=\"header-anchor\" href=\"#11-10-eclipse中如何生成jar包并导入到项目中-了解\">☆</a>11.10 Eclipse中如何生成jar包并导入到项目中 (了解)</h2>\n<ul>\n<li>A:jar是什么?\n<ul>\n<li>jar是多个class文件的压缩包。</li>\n</ul>\n</li>\n<li>B:jar有什么用?\n<ul>\n<li>用别人写好的东西</li>\n</ul>\n</li>\n<li>C:打jar包\n<ul>\n<li>选中项目–右键–Export–Java–Jar–自己指定一个路径和一个名称–Finish</li>\n</ul>\n</li>\n<li>D:导入jar包\n<ul>\n<li>复制到项目路径下并添加至构建路径。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-11-eclipse中如何删除项目和导入项目-掌握\"><a class=\"header-anchor\" href=\"#11-11-eclipse中如何删除项目和导入项目-掌握\">☆</a>11.11 Eclipse中如何删除项目和导入项目 (掌握)</h2>\n<ul>\n<li>A:删除项目\n<ul>\n<li>选中项目 – 右键 – 删除\n<ul>\n<li>从项目区域中删除</li>\n<li>从硬盘上删除</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:导入项目\n<ul>\n<li>在项目区域右键找到import</li>\n<li>找到General，展开，并找到</li>\n<li>Existing Projects into Workspace</li>\n<li>点击next,然后选择你要导入的项目</li>\n<li>注意：这里选择的是项目名称</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-12-eclipse中断点调试的基本使用-了解\"><a class=\"header-anchor\" href=\"#11-12-eclipse中断点调试的基本使用-了解\">☆</a>11.12 Eclipse中断点调试的基本使用 (了解)</h2>\n<ul>\n<li>A:Debug的作用\n<ul>\n<li>调试程序</li>\n<li>查看程序执行流程</li>\n</ul>\n</li>\n<li>B:如何查看程序执行流程\n<ul>\n<li>\n<p>什么是断点：</p>\n<ul>\n<li>就是一个标记，从哪里开始。</li>\n</ul>\n</li>\n<li>\n<p>如何设置断点：</p>\n<ul>\n<li>你想看哪里的程序，你就在那个有效程序的左边双击即可。</li>\n</ul>\n</li>\n<li>\n<p>在哪里设置断点：</p>\n<ul>\n<li>哪里不会点哪里。</li>\n<li>目前：我们就在每个方法的第一条有效语句上都加。</li>\n</ul>\n</li>\n<li>\n<p>如何运行设置断点后的程序：</p>\n<ul>\n<li>右键 – Debug as – Java Application</li>\n</ul>\n</li>\n<li>\n<p>看哪些地方：</p>\n<ul>\n<li>Debug：断点测试的地方\n<ul>\n<li>在这个地方，记住F6，或者点击也可以。一次看一行的执行过程。</li>\n</ul>\n</li>\n<li>Variables：查看程序的变量变化</li>\n<li>ForDemo：被查看的源文件</li>\n<li>Console：控制台</li>\n</ul>\n</li>\n<li>\n<p>如何去断点：</p>\n<ul>\n<li>a:再次双击即可</li>\n<li>b:找到Debug视图，Variables界面，找到Breakpoints，并点击，然后看到所有的断点，最后点击那个双叉。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-13-eclipse查看java中参数传递问题-了解\"><a class=\"header-anchor\" href=\"#11-13-eclipse查看java中参数传递问题-了解\">☆</a>11.13 Eclipse查看Java中参数传递问题 (了解)</h2>\n<ul>\n<li>A:断点演示\n<ul>\n<li>断点查看Java中参数传递问题</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-14-api概述-了解\"><a class=\"header-anchor\" href=\"#11-14-api概述-了解\">☆</a>11.14 API概述 (了解)</h2>\n<ul>\n<li>A:API(Application Programming Interface)\n<ul>\n<li>应用程序编程接口</li>\n</ul>\n</li>\n<li>B:Java API\n<ul>\n<li>就是Java提供给我们使用的类，这些类将底层的实现封装了起来，</li>\n<li>我们不需要关心这些类是如何实现的，只需要学习这些类如何使用。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-15-object类的概述-了解\"><a class=\"header-anchor\" href=\"#11-15-object类的概述-了解\">☆</a>11.15 Object类的概述 (了解)</h2>\n<ul>\n<li>A:Object类概述\n<ul>\n<li>类层次结构的根类</li>\n<li>所有类都直接或者间接的继承自该类</li>\n</ul>\n</li>\n<li>B:构造方法\n<ul>\n<li>public Object()</li>\n<li>回想面向对象中为什么说：</li>\n<li>子类的构造方法默认访问的是父类的无参构造方法</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-16-object类的hashcode-方法-了解\"><a class=\"header-anchor\" href=\"#11-16-object类的hashcode-方法-了解\">☆</a>11.16 Object类的hashCode()方法 (了解)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>public int hashCode()</li>\n<li>a:返回该对象的哈希码值。默认情况下，该方法会根据对象的地址来计算。</li>\n<li>b:不同对象的，hashCode()一般来说不会相同。但是，同一个对象的hashCode()值肯定相同。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-17-object类的getclass-方法-在反射的时候掌握\"><a class=\"header-anchor\" href=\"#11-17-object类的getclass-方法-在反射的时候掌握\">☆</a>11.17 Object类的getClass()方法 (在反射的时候掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>public final Class getClass()</li>\n<li>a:返回此 Object 的运行时类。</li>\n<li>b:可以通过Class类中的一个方法，获取对象的真实类的全名称。\n<ul>\n<li>public String getName()</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-18-object类的tostring-方法-掌握\"><a class=\"header-anchor\" href=\"#11-18-object类的tostring-方法-掌握\">☆</a>11.18 Object类的toString()方法 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>public String toString()</li>\n<li>a:返回该对象的字符串表示。</li>\n</ul>\n</li>\n<li>\n<pre><code>public Stirng toString() {\n\treturn name + &quot;,&quot; + age;\n}\n</code></pre>\n<ul>\n<li>b:它的值等于：\n<ul>\n<li>getClass().getName() + “@” + Integer.toHexString(hashCode())</li>\n</ul>\n</li>\n<li>c:由于默认情况下的数据对我们来说没有意义，一般建议重写该方法。</li>\n</ul>\n</li>\n<li>B:最终版\n<ul>\n<li>自动生成</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-19-object类的equals-方法-掌握\"><a class=\"header-anchor\" href=\"#11-19-object类的equals-方法-掌握\">☆</a>11.19 Object类的equals()方法 (掌握)</h2>\n<ul>\n<li>A:案例演示：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Studnet</span> </span>&#123;</span><br><span class=\"line\">\t <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">\t <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age;</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Studnet</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object obj)</span> </span>&#123;</span><br><span class=\"line\">\t\t Studnet s = (Studnet)obj;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name.equals(s.name) &amp;&amp; <span class=\"keyword\">this</span>.age == s.age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EqualsTest</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tStudnet s1 = <span class=\"keyword\">new</span> Studnet(<span class=\"string\">\"张三\"</span>,<span class=\"number\">23</span>);</span><br><span class=\"line\">\t\tStudnet s2 = <span class=\"keyword\">new</span> Studnet(<span class=\"string\">\"张三\"</span>, <span class=\"number\">23</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">boolean</span> b = s1.equals(s2);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(s1 == s2);</span><br><span class=\"line\">\t\tSystem.out.println(b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>* a:指示其他某个对象是否与此对象“相等”。 \n* b:默认情况下比较的是对象的引用是否相同。\n* c:由于比较对象的引用没有意义，一般建议重写该方法。\n</code></pre>\n<h2 id=\"11-20-号和equals方法的区别-掌握\"><a class=\"header-anchor\" href=\"#11-20-号和equals方法的区别-掌握\">☆</a>11.20 ==号和equals方法的区别 (掌握)</h2>\n<ul>\n<li>==是一个比较运算符号,既可以比较基本数据类型,也可以比较引用数据类型,基本数据类型比较的是值,引用数据类型比较的是地址值</li>\n<li>equals方法是一个方法,只能比较引用数据类型,所有的对象都会继承Object类中的方法,如果没有重写Object类中的equals方法,equals方法和==号比较引用数据类型无区别,重写后的equals方法比较的是对象中的属性</li>\n</ul>\n<h2 id=\"11-21-day11总结\"><a class=\"header-anchor\" href=\"#11-21-day11总结\">☆</a>11.21_day11总结</h2>\n<ul>\n<li>把今天的知识点总结一遍。</li>\n</ul>\n","site":{"data":{}},"length":4753,"excerpt":"","more":"<h2 id=\"11-01-常见开发工具介绍-了解\"><a class=\"header-anchor\" href=\"#11-01-常见开发工具介绍-了解\">☆</a>11.01 常见开发工具介绍 (了解)</h2>\n<ul>\n<li>A:操作系统自带的记事本软件</li>\n<li>B:高级记事本软件</li>\n<li>C:集成开发环境 IDE\n<ul>\n<li>(Integrated Development Environment)</li>\n</ul>\n</li>\n<li>D:Eclipse和MyEclipse的区别\n<ul>\n<li>a:Eclipse是一种可扩展的开放源代码的IDE。</li>\n<li>b:Eclipse的特点描述\n<ul>\n<li>免费</li>\n<li>纯Java语言编写</li>\n<li>免安装</li>\n<li>扩展性强</li>\n</ul>\n</li>\n<li>c:MyEclipse\n<ul>\n<li>在Eclipse基础上追加的功能性插件，对插件收费</li>\n<li>在WEB开发中提供强大的系统架构平台</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>E:下载 <a href=\"http://eclipse.org/\" target=\"_blank\" rel=\"noopener\">http://eclipse.org/</a>\n<ul>\n<li>org是非盈利团体</li>\n</ul>\n</li>\n<li>F:安装\n<ul>\n<li>绿色版\t解压就可以使用(Eclipse)</li>\n<li>安装版   双击运行,一路next即可(JDK)</li>\n</ul>\n</li>\n<li>G:卸载\n<ul>\n<li>绿色版\t直接删除文件夹即可</li>\n<li>安装版 专业卸载软件或者控制面板添加删除程序</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-02-eclipse中helloworld案例以及汉化-了解\"><a class=\"header-anchor\" href=\"#11-02-eclipse中helloworld案例以及汉化-了解\">☆</a>11.02 Eclipse中HelloWorld案例以及汉化 (了解)</h2>\n<ul>\n<li>A:选择工作空间\n<ul>\n<li>工作空间  其实就是我们写的源代码所在的目录</li>\n</ul>\n</li>\n<li>B:用Eclipse来完成一个HelloWorld案例\n<ul>\n<li>代码以项目为基本单位</li>\n<li>创建项目</li>\n<li>创建包</li>\n<li>创建类</li>\n<li>编写代码</li>\n</ul>\n</li>\n<li>C:编译和运行</li>\n<li>D:Eclipse的汉化\n<ul>\n<li>从Eclipse3.5开始，安装目录下就多了一个dropins目录,只要将插件解压后放到到该目录即可。</li>\n<li>同理，这种方式卸载插件也是特别的方便，推荐这种方式</li>\n</ul>\n</li>\n<li>E:语法检查提示\n<ul>\n<li>红色波浪线\n<ul>\n<li>必须处理,否则编译通不过</li>\n</ul>\n</li>\n<li>黄色波浪线\n<ul>\n<li>可以不搭理他</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-03-eclipse的视窗和视图概述-了解\"><a class=\"header-anchor\" href=\"#11-03-eclipse的视窗和视图概述-了解\">☆</a>11.03 Eclipse的视窗和视图概述 (了解)</h2>\n<ul>\n<li>A:视窗  每一个基本的窗体被称为视窗\n<ul>\n<li>PackageExplorer  显示项目结构，包，类，及资源</li>\n<li>Outline   显示类的结构，方便查找，识别，修改</li>\n<li>Console  程序运行的结果在该窗口显示</li>\n<li>Hierarchy 显示Java继承层次结构，选中类后F4</li>\n</ul>\n</li>\n<li>B:视图  是由某些视窗的组合而成的\n<ul>\n<li>Java视图</li>\n<li>Debug视图</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-04-eclipse工作空间的基本配置-掌握\"><a class=\"header-anchor\" href=\"#11-04-eclipse工作空间的基本配置-掌握\">☆</a>11.04 Eclipse工作空间的基本配置 (掌握)</h2>\n<ul>\n<li>A:程序的编译和运行的环境配置(一般不改)\n<ul>\n<li>window – Preferences – Java</li>\n<li>编译环境：Compiler\t默认选中的就是最高版本。</li>\n<li>运行环境：Installed JREs\t默认会找你安装的那个JDK。建议配置了Java的环境变量。</li>\n<li>问题：\n<ul>\n<li>低编译，高运行。可以。</li>\n<li>高编译，低运行。不可以。</li>\n<li>建议，编译和运行的版本一致。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:如何去掉默认注释?\n<ul>\n<li>window – Preferences – Java – Code Style – Code Templates</li>\n<li>选择你不想要的内容，通过右边Edit编辑。</li>\n<li>注意：请只删除注释部分，不是注释部分的不要删除。</li>\n</ul>\n</li>\n<li>C:行号的显示和隐藏\n<ul>\n<li>显示：在代码区域的最左边的空白区域，右键 – Show Line Numbers即可。</li>\n<li>隐藏：把上面的动作再做一次。</li>\n</ul>\n</li>\n<li>D:字体大小及颜色\n<ul>\n<li>a:Java代码区域的字体大小和颜色：\n<ul>\n<li>window – Preferences – General – Appearance – Colors And Fonts --Java修改 – Java Edit Text Font</li>\n</ul>\n</li>\n<li>b:控制台\n<ul>\n<li>window – Preferences – General – Appearance – Colors And Fonts – Debug – Console font</li>\n</ul>\n</li>\n<li>c:其他文件\n<ul>\n<li>window – Preferences – General – Appearance – Colors And Fonts – Basic – Text Font</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>E:窗体给弄乱了，怎么办?\n<ul>\n<li>window – Reset Perspective</li>\n</ul>\n</li>\n<li>F:控制台找不到了，怎么办?\n<ul>\n<li>Window–Show View—Console</li>\n</ul>\n</li>\n<li>G:取消悬浮提示\n<ul>\n<li>window – Preferences – Java–Editor–Hovers。右边将Combined Hover勾去掉。</li>\n<li>这样代码的悬浮框就不会自动出现了。如果想看提示，将光标悬浮在代码上，按F2即可。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-05-eclipse中内容辅助键的使用-掌握\"><a class=\"header-anchor\" href=\"#11-05-eclipse中内容辅助键的使用-掌握\">☆</a>11.05 Eclipse中内容辅助键的使用 (掌握)</h2>\n<ul>\n<li>A:Alt+/ 起提示作用</li>\n<li>B:main+alt+/,syso+alt+/,给出其他提示</li>\n<li>C:补充输出语句,选中需要输出的部分,alt+/选择最后一项即可</li>\n<li>C:定义自己的alt + /\n<ul>\n<li>windows–perference-Java-Editor-Templates–New</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-06-eclipse中快捷键的使用-掌握\"><a class=\"header-anchor\" href=\"#11-06-eclipse中快捷键的使用-掌握\">☆</a>11.06 Eclipse中快捷键的使用 (掌握)</h2>\n<ul>\n<li>A:新建 ctrl + n</li>\n<li>B:格式化  ctrl+shift+f</li>\n<li>C:导入包  ctrl+shift+o</li>\n<li>D:注释  ctrl+/,ctrl+shift+/,ctrl+shift+\\</li>\n<li>E:代码上下移动 选中代码alt+上/下箭头</li>\n<li>F:查看源码  选中类名(F3或者Ctrl+鼠标点击)</li>\n<li>G:查找具体的类 ctrl + shift + t</li>\n<li>H:查找具体类的具体方法 ctrl + o</li>\n<li>I:给建议 ctrl+1,根据右边生成左边的数据类型,生成方法</li>\n<li>J:删除代码 ctrl + d</li>\n<li>K:抽取方法alt + shift + m</li>\n<li>L:改名alt + shift + r</li>\n<li></li>\n</ul>\n<h2 id=\"11-07-eclipse中如何提高开发效率-掌握\"><a class=\"header-anchor\" href=\"#11-07-eclipse中如何提高开发效率-掌握\">☆</a>11.07 Eclipse中如何提高开发效率 (掌握)</h2>\n<ul>\n<li>alt + shift + s</li>\n<li>A:自动生成构造方法</li>\n<li>B:自动生成get/set方法</li>\n</ul>\n<h2 id=\"11-08-eclipse中一个标准学生类及其测试-掌握\"><a class=\"header-anchor\" href=\"#11-08-eclipse中一个标准学生类及其测试-掌握\">☆</a>11.08 Eclipse中一个标准学生类及其测试 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>用Eclipse实现标准学生类及其测试</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-09-eclipse中接口抽象类具体类代码体现-掌握\"><a class=\"header-anchor\" href=\"#11-09-eclipse中接口抽象类具体类代码体现-掌握\">☆</a>11.09 Eclipse中接口抽象类具体类代码体现 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>用Eclipse实现接口抽象类具体类代码</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-10-eclipse中如何生成jar包并导入到项目中-了解\"><a class=\"header-anchor\" href=\"#11-10-eclipse中如何生成jar包并导入到项目中-了解\">☆</a>11.10 Eclipse中如何生成jar包并导入到项目中 (了解)</h2>\n<ul>\n<li>A:jar是什么?\n<ul>\n<li>jar是多个class文件的压缩包。</li>\n</ul>\n</li>\n<li>B:jar有什么用?\n<ul>\n<li>用别人写好的东西</li>\n</ul>\n</li>\n<li>C:打jar包\n<ul>\n<li>选中项目–右键–Export–Java–Jar–自己指定一个路径和一个名称–Finish</li>\n</ul>\n</li>\n<li>D:导入jar包\n<ul>\n<li>复制到项目路径下并添加至构建路径。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-11-eclipse中如何删除项目和导入项目-掌握\"><a class=\"header-anchor\" href=\"#11-11-eclipse中如何删除项目和导入项目-掌握\">☆</a>11.11 Eclipse中如何删除项目和导入项目 (掌握)</h2>\n<ul>\n<li>A:删除项目\n<ul>\n<li>选中项目 – 右键 – 删除\n<ul>\n<li>从项目区域中删除</li>\n<li>从硬盘上删除</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>B:导入项目\n<ul>\n<li>在项目区域右键找到import</li>\n<li>找到General，展开，并找到</li>\n<li>Existing Projects into Workspace</li>\n<li>点击next,然后选择你要导入的项目</li>\n<li>注意：这里选择的是项目名称</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-12-eclipse中断点调试的基本使用-了解\"><a class=\"header-anchor\" href=\"#11-12-eclipse中断点调试的基本使用-了解\">☆</a>11.12 Eclipse中断点调试的基本使用 (了解)</h2>\n<ul>\n<li>A:Debug的作用\n<ul>\n<li>调试程序</li>\n<li>查看程序执行流程</li>\n</ul>\n</li>\n<li>B:如何查看程序执行流程\n<ul>\n<li>\n<p>什么是断点：</p>\n<ul>\n<li>就是一个标记，从哪里开始。</li>\n</ul>\n</li>\n<li>\n<p>如何设置断点：</p>\n<ul>\n<li>你想看哪里的程序，你就在那个有效程序的左边双击即可。</li>\n</ul>\n</li>\n<li>\n<p>在哪里设置断点：</p>\n<ul>\n<li>哪里不会点哪里。</li>\n<li>目前：我们就在每个方法的第一条有效语句上都加。</li>\n</ul>\n</li>\n<li>\n<p>如何运行设置断点后的程序：</p>\n<ul>\n<li>右键 – Debug as – Java Application</li>\n</ul>\n</li>\n<li>\n<p>看哪些地方：</p>\n<ul>\n<li>Debug：断点测试的地方\n<ul>\n<li>在这个地方，记住F6，或者点击也可以。一次看一行的执行过程。</li>\n</ul>\n</li>\n<li>Variables：查看程序的变量变化</li>\n<li>ForDemo：被查看的源文件</li>\n<li>Console：控制台</li>\n</ul>\n</li>\n<li>\n<p>如何去断点：</p>\n<ul>\n<li>a:再次双击即可</li>\n<li>b:找到Debug视图，Variables界面，找到Breakpoints，并点击，然后看到所有的断点，最后点击那个双叉。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-13-eclipse查看java中参数传递问题-了解\"><a class=\"header-anchor\" href=\"#11-13-eclipse查看java中参数传递问题-了解\">☆</a>11.13 Eclipse查看Java中参数传递问题 (了解)</h2>\n<ul>\n<li>A:断点演示\n<ul>\n<li>断点查看Java中参数传递问题</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-14-api概述-了解\"><a class=\"header-anchor\" href=\"#11-14-api概述-了解\">☆</a>11.14 API概述 (了解)</h2>\n<ul>\n<li>A:API(Application Programming Interface)\n<ul>\n<li>应用程序编程接口</li>\n</ul>\n</li>\n<li>B:Java API\n<ul>\n<li>就是Java提供给我们使用的类，这些类将底层的实现封装了起来，</li>\n<li>我们不需要关心这些类是如何实现的，只需要学习这些类如何使用。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-15-object类的概述-了解\"><a class=\"header-anchor\" href=\"#11-15-object类的概述-了解\">☆</a>11.15 Object类的概述 (了解)</h2>\n<ul>\n<li>A:Object类概述\n<ul>\n<li>类层次结构的根类</li>\n<li>所有类都直接或者间接的继承自该类</li>\n</ul>\n</li>\n<li>B:构造方法\n<ul>\n<li>public Object()</li>\n<li>回想面向对象中为什么说：</li>\n<li>子类的构造方法默认访问的是父类的无参构造方法</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-16-object类的hashcode-方法-了解\"><a class=\"header-anchor\" href=\"#11-16-object类的hashcode-方法-了解\">☆</a>11.16 Object类的hashCode()方法 (了解)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>public int hashCode()</li>\n<li>a:返回该对象的哈希码值。默认情况下，该方法会根据对象的地址来计算。</li>\n<li>b:不同对象的，hashCode()一般来说不会相同。但是，同一个对象的hashCode()值肯定相同。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-17-object类的getclass-方法-在反射的时候掌握\"><a class=\"header-anchor\" href=\"#11-17-object类的getclass-方法-在反射的时候掌握\">☆</a>11.17 Object类的getClass()方法 (在反射的时候掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>public final Class getClass()</li>\n<li>a:返回此 Object 的运行时类。</li>\n<li>b:可以通过Class类中的一个方法，获取对象的真实类的全名称。\n<ul>\n<li>public String getName()</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-18-object类的tostring-方法-掌握\"><a class=\"header-anchor\" href=\"#11-18-object类的tostring-方法-掌握\">☆</a>11.18 Object类的toString()方法 (掌握)</h2>\n<ul>\n<li>A:案例演示\n<ul>\n<li>public String toString()</li>\n<li>a:返回该对象的字符串表示。</li>\n</ul>\n</li>\n<li>\n<pre><code>public Stirng toString() {\n\treturn name + &quot;,&quot; + age;\n}\n</code></pre>\n<ul>\n<li>b:它的值等于：\n<ul>\n<li>getClass().getName() + “@” + Integer.toHexString(hashCode())</li>\n</ul>\n</li>\n<li>c:由于默认情况下的数据对我们来说没有意义，一般建议重写该方法。</li>\n</ul>\n</li>\n<li>B:最终版\n<ul>\n<li>自动生成</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"11-19-object类的equals-方法-掌握\"><a class=\"header-anchor\" href=\"#11-19-object类的equals-方法-掌握\">☆</a>11.19 Object类的equals()方法 (掌握)</h2>\n<ul>\n<li>A:案例演示：</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Studnet</span> </span>&#123;</span><br><span class=\"line\">\t <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">\t <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> age;</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">Studnet</span><span class=\"params\">(String name, <span class=\"keyword\">int</span> age)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.age = age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Override</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">equals</span><span class=\"params\">(Object obj)</span> </span>&#123;</span><br><span class=\"line\">\t\t Studnet s = (Studnet)obj;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name.equals(s.name) &amp;&amp; <span class=\"keyword\">this</span>.age == s.age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t </span><br><span class=\"line\">\t </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">EqualsTest</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\tStudnet s1 = <span class=\"keyword\">new</span> Studnet(<span class=\"string\">\"张三\"</span>,<span class=\"number\">23</span>);</span><br><span class=\"line\">\t\tStudnet s2 = <span class=\"keyword\">new</span> Studnet(<span class=\"string\">\"张三\"</span>, <span class=\"number\">23</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">boolean</span> b = s1.equals(s2);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tSystem.out.println(s1 == s2);</span><br><span class=\"line\">\t\tSystem.out.println(b);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>* a:指示其他某个对象是否与此对象“相等”。 \n* b:默认情况下比较的是对象的引用是否相同。\n* c:由于比较对象的引用没有意义，一般建议重写该方法。\n</code></pre>\n<h2 id=\"11-20-号和equals方法的区别-掌握\"><a class=\"header-anchor\" href=\"#11-20-号和equals方法的区别-掌握\">☆</a>11.20 ==号和equals方法的区别 (掌握)</h2>\n<ul>\n<li>==是一个比较运算符号,既可以比较基本数据类型,也可以比较引用数据类型,基本数据类型比较的是值,引用数据类型比较的是地址值</li>\n<li>equals方法是一个方法,只能比较引用数据类型,所有的对象都会继承Object类中的方法,如果没有重写Object类中的equals方法,equals方法和==号比较引用数据类型无区别,重写后的equals方法比较的是对象中的属性</li>\n</ul>\n<h2 id=\"11-21-day11总结\"><a class=\"header-anchor\" href=\"#11-21-day11总结\">☆</a>11.21_day11总结</h2>\n<ul>\n<li>把今天的知识点总结一遍。</li>\n</ul>\n"},{"title":"Java面试题（持续更新）","copyright":false,"abbrlink":"d2fd1f13","notshow":false,"description":"不断的重复造轮子······","sticky":null,"date":"2019-02-01T14:45:00.000Z","password":null,"image":["https://data.singlelovely.cn/CoverPicture/d2fd1f13.jpg!CoverPicture"],"photos":[],"_content":"\n## 为什么集合类没有实现Cloneable和Serializable接口？\n\n>克隆(cloning)或者是序列化(serialization)的语义和含义是跟具体的实现相关的。因此，应该由集合类的具体实现来决定如何被克隆或者是序列化。\n\n实现Serializable序列化的作用\n\n- 将对象的状态保存在存储媒体中以- 便可以在以后重写创建出完全相同的副本；\n- 按值将对象从一个从一个应用程序域发向另一个应用程序域。\n\n实现 Serializable接口的作用就是可以把对象存到字节流，然后可以恢复。所以你想如果你的对象没有序列化，怎么才能进行网络传输呢？要网络传输就得转为字节流，所以在分布式应用中，你就得实现序列化。如果你不需要分布式应用，那就没必要实现实现序列化。\n\n## 什么是迭代器(Iterator)？\n\nIterator接口提供了很多对集合元素进行迭代的方法。每一个集合类都包含了可以返回迭代器实例的迭代方法。迭代器可以在迭代的过程中删除底层集合的元素,但是不可以直接调用集合的remove(Object Obj)删除，可以通过迭代器的remove()方法删除。\n\n","source":"_posts/Java面试题.md","raw":"---\ntitle: Java面试题（持续更新）\ncopyright: false\nabbrlink: d2fd1f13\nnotshow: false\ntags:\n  - Java\ncategories: Java\ndescription: 不断的重复造轮子······\nsticky:\ndate: 2019-02-01 22:45:00\npassword:\nimage:\n- \"https://data.singlelovely.cn/CoverPicture/d2fd1f13.jpg!CoverPicture\"\nphotos:\n---\n\n## 为什么集合类没有实现Cloneable和Serializable接口？\n\n>克隆(cloning)或者是序列化(serialization)的语义和含义是跟具体的实现相关的。因此，应该由集合类的具体实现来决定如何被克隆或者是序列化。\n\n实现Serializable序列化的作用\n\n- 将对象的状态保存在存储媒体中以- 便可以在以后重写创建出完全相同的副本；\n- 按值将对象从一个从一个应用程序域发向另一个应用程序域。\n\n实现 Serializable接口的作用就是可以把对象存到字节流，然后可以恢复。所以你想如果你的对象没有序列化，怎么才能进行网络传输呢？要网络传输就得转为字节流，所以在分布式应用中，你就得实现序列化。如果你不需要分布式应用，那就没必要实现实现序列化。\n\n## 什么是迭代器(Iterator)？\n\nIterator接口提供了很多对集合元素进行迭代的方法。每一个集合类都包含了可以返回迭代器实例的迭代方法。迭代器可以在迭代的过程中删除底层集合的元素,但是不可以直接调用集合的remove(Object Obj)删除，可以通过迭代器的remove()方法删除。\n\n","slug":"Java面试题","published":1,"updated":"2020-02-20T06:06:59.393Z","comments":1,"layout":"post","link":"","_id":"ckec2td2j000ifkupp9813unb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"为什么集合类没有实现cloneable和serializable接口？\"><a class=\"header-anchor\" href=\"#为什么集合类没有实现cloneable和serializable接口？\">☆</a>为什么集合类没有实现Cloneable和Serializable接口？</h2>\n<blockquote>\n<p>克隆(cloning)或者是序列化(serialization)的语义和含义是跟具体的实现相关的。因此，应该由集合类的具体实现来决定如何被克隆或者是序列化。</p>\n</blockquote>\n<p>实现Serializable序列化的作用</p>\n<ul>\n<li>将对象的状态保存在存储媒体中以- 便可以在以后重写创建出完全相同的副本；</li>\n<li>按值将对象从一个从一个应用程序域发向另一个应用程序域。</li>\n</ul>\n<p>实现 Serializable接口的作用就是可以把对象存到字节流，然后可以恢复。所以你想如果你的对象没有序列化，怎么才能进行网络传输呢？要网络传输就得转为字节流，所以在分布式应用中，你就得实现序列化。如果你不需要分布式应用，那就没必要实现实现序列化。</p>\n<h2 id=\"什么是迭代器-iterator-？\"><a class=\"header-anchor\" href=\"#什么是迭代器-iterator-？\">☆</a>什么是迭代器(Iterator)？</h2>\n<p>Iterator接口提供了很多对集合元素进行迭代的方法。每一个集合类都包含了可以返回迭代器实例的迭代方法。迭代器可以在迭代的过程中删除底层集合的元素,但是不可以直接调用集合的remove(Object Obj)删除，可以通过迭代器的remove()方法删除。</p>\n","site":{"data":{}},"length":469,"excerpt":"","more":"<h2 id=\"为什么集合类没有实现cloneable和serializable接口？\"><a class=\"header-anchor\" href=\"#为什么集合类没有实现cloneable和serializable接口？\">☆</a>为什么集合类没有实现Cloneable和Serializable接口？</h2>\n<blockquote>\n<p>克隆(cloning)或者是序列化(serialization)的语义和含义是跟具体的实现相关的。因此，应该由集合类的具体实现来决定如何被克隆或者是序列化。</p>\n</blockquote>\n<p>实现Serializable序列化的作用</p>\n<ul>\n<li>将对象的状态保存在存储媒体中以- 便可以在以后重写创建出完全相同的副本；</li>\n<li>按值将对象从一个从一个应用程序域发向另一个应用程序域。</li>\n</ul>\n<p>实现 Serializable接口的作用就是可以把对象存到字节流，然后可以恢复。所以你想如果你的对象没有序列化，怎么才能进行网络传输呢？要网络传输就得转为字节流，所以在分布式应用中，你就得实现序列化。如果你不需要分布式应用，那就没必要实现实现序列化。</p>\n<h2 id=\"什么是迭代器-iterator-？\"><a class=\"header-anchor\" href=\"#什么是迭代器-iterator-？\">☆</a>什么是迭代器(Iterator)？</h2>\n<p>Iterator接口提供了很多对集合元素进行迭代的方法。每一个集合类都包含了可以返回迭代器实例的迭代方法。迭代器可以在迭代的过程中删除底层集合的元素,但是不可以直接调用集合的remove(Object Obj)删除，可以通过迭代器的remove()方法删除。</p>\n"},{"title":"MySQL定时弹出一个taskeng.exe","copyright":true,"abbrlink":"53b2030c","date":"2018-02-27T12:47:08.000Z","password":null,"_content":"\n## 问题：\n\n在使用电脑时，MySQL定时弹出一个taskeng.exe页面，过几秒后就自动关闭，页面内容如下：\n```\n=================== Start Initialization ===================\nMySQL Installer is running in Community mode\n\nInitializing product requirements\nLoading product catalog\nChecking for product catalog snippets\nChecking for product packages in the bundle\nCategorizing product catalog\nFinding all installed packages.\n\n```\n但是电脑上并没有运行任何MySQL库\n\n## 解决办法：\n\n这个是新版本MySQL服务自带的一个定时任务，定时执行的任务，我们只需要在本地系统的“任务计划程序”中将这个定时任务干掉就OK了。\n\n以win10为例：\n在小娜中搜索任务计划程序：\n ![ ][1]\n打开任务计划程序库，找到`MySQLNotifierTask`禁用就行了\n ![][2]\n\n温馨提示：尽量不要直接删掉这个MySQL定时服务器，如果到后期需要扩张的时候，还能用到，可以仿照到这个进行定时任务的创建工作，这个是非常实用的。\n\n\n\n  [1]: https://data.singlelovely.cn/xsj/20182/1518408796053.jpg\n  [2]: https://data.singlelovely.cn/xsj/20182/1518408922003.jpg","source":"_posts/MySQL定时弹出一个taskeng.md","raw":"---\ntitle: MySQL定时弹出一个taskeng.exe\ntags:\n  - MySQL\n  - 数据库\ncategories: 数据库\ncopyright: true\nabbrlink: 53b2030c\ndate: 2018-02-27 20:47:08\npassword:\n---\n\n## 问题：\n\n在使用电脑时，MySQL定时弹出一个taskeng.exe页面，过几秒后就自动关闭，页面内容如下：\n```\n=================== Start Initialization ===================\nMySQL Installer is running in Community mode\n\nInitializing product requirements\nLoading product catalog\nChecking for product catalog snippets\nChecking for product packages in the bundle\nCategorizing product catalog\nFinding all installed packages.\n\n```\n但是电脑上并没有运行任何MySQL库\n\n## 解决办法：\n\n这个是新版本MySQL服务自带的一个定时任务，定时执行的任务，我们只需要在本地系统的“任务计划程序”中将这个定时任务干掉就OK了。\n\n以win10为例：\n在小娜中搜索任务计划程序：\n ![ ][1]\n打开任务计划程序库，找到`MySQLNotifierTask`禁用就行了\n ![][2]\n\n温馨提示：尽量不要直接删掉这个MySQL定时服务器，如果到后期需要扩张的时候，还能用到，可以仿照到这个进行定时任务的创建工作，这个是非常实用的。\n\n\n\n  [1]: https://data.singlelovely.cn/xsj/20182/1518408796053.jpg\n  [2]: https://data.singlelovely.cn/xsj/20182/1518408922003.jpg","slug":"MySQL定时弹出一个taskeng","published":1,"updated":"2020-02-20T06:06:59.393Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td2l000jfkupyk6m5slv","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"问题：\"><a class=\"header-anchor\" href=\"#问题：\">☆</a>问题：</h2>\n<p>在使用电脑时，MySQL定时弹出一个taskeng.exe页面，过几秒后就自动关闭，页面内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">=================== Start Initialization ===================</span><br><span class=\"line\">MySQL Installer is running in Community mode</span><br><span class=\"line\"></span><br><span class=\"line\">Initializing product requirements</span><br><span class=\"line\">Loading product catalog</span><br><span class=\"line\">Checking for product catalog snippets</span><br><span class=\"line\">Checking for product packages in the bundle</span><br><span class=\"line\">Categorizing product catalog</span><br><span class=\"line\">Finding all installed packages.</span><br></pre></td></tr></table></figure>\n<p>但是电脑上并没有运行任何MySQL库</p>\n<h2 id=\"解决办法：\"><a class=\"header-anchor\" href=\"#解决办法：\">☆</a>解决办法：</h2>\n<p>这个是新版本MySQL服务自带的一个定时任务，定时执行的任务，我们只需要在本地系统的“任务计划程序”中将这个定时任务干掉就OK了。</p>\n<p>以win10为例：<br>\n在小娜中搜索任务计划程序：<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/1518408796053.jpg\" alt=\" \"><br>\n打开任务计划程序库，找到<code>MySQLNotifierTask</code>禁用就行了<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/1518408922003.jpg\" alt></p>\n<p>温馨提示：尽量不要直接删掉这个MySQL定时服务器，如果到后期需要扩张的时候，还能用到，可以仿照到这个进行定时任务的创建工作，这个是非常实用的。</p>\n","site":{"data":{}},"length":578,"excerpt":"","more":"<h2 id=\"问题：\"><a class=\"header-anchor\" href=\"#问题：\">☆</a>问题：</h2>\n<p>在使用电脑时，MySQL定时弹出一个taskeng.exe页面，过几秒后就自动关闭，页面内容如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">=================== Start Initialization ===================</span><br><span class=\"line\">MySQL Installer is running in Community mode</span><br><span class=\"line\"></span><br><span class=\"line\">Initializing product requirements</span><br><span class=\"line\">Loading product catalog</span><br><span class=\"line\">Checking for product catalog snippets</span><br><span class=\"line\">Checking for product packages in the bundle</span><br><span class=\"line\">Categorizing product catalog</span><br><span class=\"line\">Finding all installed packages.</span><br></pre></td></tr></table></figure>\n<p>但是电脑上并没有运行任何MySQL库</p>\n<h2 id=\"解决办法：\"><a class=\"header-anchor\" href=\"#解决办法：\">☆</a>解决办法：</h2>\n<p>这个是新版本MySQL服务自带的一个定时任务，定时执行的任务，我们只需要在本地系统的“任务计划程序”中将这个定时任务干掉就OK了。</p>\n<p>以win10为例：<br>\n在小娜中搜索任务计划程序：<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/1518408796053.jpg\" alt=\" \"><br>\n打开任务计划程序库，找到<code>MySQLNotifierTask</code>禁用就行了<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/1518408922003.jpg\" alt></p>\n<p>温馨提示：尽量不要直接删掉这个MySQL定时服务器，如果到后期需要扩张的时候，还能用到，可以仿照到这个进行定时任务的创建工作，这个是非常实用的。</p>\n"},{"title":"Java集成开发环境安装","copyright":true,"abbrlink":"38df1aba","notshow":false,"date":"2018-09-04T07:17:00.000Z","password":null,"description":"IntelliJ IDEA 的安装与配置","image":["https://data.singlelovely.cn/CoverPicture/38df1aba.png"],"sticky":null,"_content":"\n\n{% meting \"1300423074\" \"netease\" \"song\" %}\n\n &emsp;\n &emsp;\n &emsp;\n>[IntelliJ IDEA相比于Eclipse的优势](https://blog.csdn.net/XuNeely/article/details/78943085)\n\n\n### 安装 \n\n<span id=\"font-blue\">下载地址: </span>https://www.jetbrains.com/idea/download/?fromIDE=#section=windows\n\nCommunity 版本为开源免费版\nUltimate  为企业版，试用期一个月\n\n<div class=\"note success\"><p>版本请自行选择，建议使用<span id=\"inline-yellow\">Community</span> </p></div>\n\n然后打开安装，选择安装目录后，会出现如下界面，选择适合自己系统的版本，Java必选，后面的按需选择\n\n![idea安装](https://data.singlelovely.cn/xsj/2018/9/4/idea安装.png)\n\n完成安装后，进行配置，第三项为不采用旧设置\n\n![idea设置](https://data.singlelovely.cn/xsj/2018/9/4/idea设置.png)\n\n然后选择jdk安装路径后，进入主界面\n\njdk选择界面忘了截图了·······\n\n![主界面](https://data.singlelovely.cn/xsj/2018/9/4/idea界面.png)\n\n### 主题颜色美化\n\n#### 使用Color Themes主题模板\n\n\n![colorThemes主题展示](https://data.singlelovely.cn/xsj/2018/9/4/colorThemes主题展示.png)\n\n![colorThemes主题展示2](https://data.singlelovely.cn/xsj/2018/9/4/colorThemes主题展示2.png)\n\n\n上面这是少部分截图，有太多的主题，有兴趣的自己去看一下，总有一款适合你。\n使用方式如下：\n（1） 找到你喜欢的主题模版，点击右下角的下载按钮，进入如下图：\n\n![colorThemes主题下载](https://data.singlelovely.cn/xsj/2018/9/4/colorThemes主题下载.png)\n\n点击上图中的绿色的按钮下载。\n（2）下载下来是一个很小的 Jar包，我们直接包jar包导入Android Studio 。在Android Studio 上 点击 File －> Import Settings ，选择中下载的jar 包，来到如下界面：\n\n![enter description here](https://data.singlelovely.cn/xsj/2018/9/4/安装主题.png)\n\n（3）如上图，点击确认，会提示重启 IntelliJ IDEA  ，点击OK 重启 IntelliJ IDEA 就好。\n（4）重启之后，主题就已经应用上了，如下图：\n\n![colorThemes主题效果](https://data.singlelovely.cn/xsj/2018/9/4/colorThemes主题效果.png)\n\n\nColor Themes 上面有很多主题模版，你自己去挑选就好了。\n\n#### Material Theme UI\n\n使用 Material Theme UI 插件主题：\n通过上面的方法，就能为 IntelliJ IDEA 应用一个自己喜欢的个性化主题，但是有一个缺点：这些主题只更改了代码编辑区域，左边的包结构区域和菜单栏还是和原来是一样的，看起来和整体风格好像不是很搭，那么有没有可以使整个AS的风格都改变的主题呢？通过Google ,找到了Material Theme UI,原文地址[Making Android Studio pretty](https://meedamian.com/post/deuglifying-android-studio/)，Material Theme UI 是一个 IntelliJ IDEA 插件，它提供了三种主题供选择，效果非常不错，更赞的是，它连除了代码区域之外的风格也改变了，应用了Material Theme UI 主题的效果图如下：\n \n![MaterialThemeUI](https://data.singlelovely.cn/xsj/2018/9/4/MaterialThemeUI.png)\n\n为避免重复造轮子，使用方法请直接查看 Material Theme <span id =\"font-green\">[原文](https://meedamian.com/post/deuglifying-android-studio/)。\n\n### 花式LogCat\n\n前面介绍了几种打造炫酷主题的方式，效果已经非常赞了，但是我们看一下我们的Logcat ,只有白色和红色两种Log,看起来有点Low ,与我们炫酷的主题不搭啊，因此我们还得改造一下控制台的Log输出。更改之前的效果如下：\n\n![LogCat旧](https://data.singlelovely.cn/xsj/2018/9/4/LogCat旧.png)\n\n<p id=\"div-border-left-purple\">打造花式Log的方法：</p>\n（1） 在Android Studio 菜单栏 打开** Preferences －> Editer －> Colors & Fonts －> Android Logcat**\n\n（2） 在Scheme选项后面点击Save As... 保存一个拷贝，在拷贝上面更改，总共有六项，如下图所示，选中每一项依次更改。\n\n![花式logcat](https://data.singlelovely.cn/xsj/2018/9/4/花式logcat.png)\n\n最终效果如下图所示\n\n![LogCat新](https://data.singlelovely.cn/xsj/2018/9/4/LogCat新.png)\n\n如上图所示，效果是不是好了很多！！！也与我们的整体主题风格搭配。贴一下我使用的各项颜色值：\n\n<font color = \"#AA66CC\">Assert: #AA66CC</font>\n<font color = \"#33B5E5\">Debug: #33B5E5</font>\n<font color = \"#FF4444\">Error: #FF4444</font>\n<font color = \"#99CC00\">Info: #99CC00</font>\n<font color = \"#FFFFFF\">Verbose: #FFFFFF</font>\n<font color = \"#FFBB33\">Warning: #FFBB33</font>","source":"_posts/Java集成开发环境安装（IntelliJ IDEA）.md","raw":"---\ntitle: Java集成开发环境安装\ncopyright: true\nabbrlink: 38df1aba\nnotshow: false\ntags:\n  - Java\n  - 教程\ncategories: Java\ndate: 2018-09-04 15:17:00\npassword:\ndescription: IntelliJ IDEA 的安装与配置\nimage:\n- \"https://data.singlelovely.cn/CoverPicture/38df1aba.png\"\nsticky:\n---\n\n\n{% meting \"1300423074\" \"netease\" \"song\" %}\n\n &emsp;\n &emsp;\n &emsp;\n>[IntelliJ IDEA相比于Eclipse的优势](https://blog.csdn.net/XuNeely/article/details/78943085)\n\n\n### 安装 \n\n<span id=\"font-blue\">下载地址: </span>https://www.jetbrains.com/idea/download/?fromIDE=#section=windows\n\nCommunity 版本为开源免费版\nUltimate  为企业版，试用期一个月\n\n<div class=\"note success\"><p>版本请自行选择，建议使用<span id=\"inline-yellow\">Community</span> </p></div>\n\n然后打开安装，选择安装目录后，会出现如下界面，选择适合自己系统的版本，Java必选，后面的按需选择\n\n![idea安装](https://data.singlelovely.cn/xsj/2018/9/4/idea安装.png)\n\n完成安装后，进行配置，第三项为不采用旧设置\n\n![idea设置](https://data.singlelovely.cn/xsj/2018/9/4/idea设置.png)\n\n然后选择jdk安装路径后，进入主界面\n\njdk选择界面忘了截图了·······\n\n![主界面](https://data.singlelovely.cn/xsj/2018/9/4/idea界面.png)\n\n### 主题颜色美化\n\n#### 使用Color Themes主题模板\n\n\n![colorThemes主题展示](https://data.singlelovely.cn/xsj/2018/9/4/colorThemes主题展示.png)\n\n![colorThemes主题展示2](https://data.singlelovely.cn/xsj/2018/9/4/colorThemes主题展示2.png)\n\n\n上面这是少部分截图，有太多的主题，有兴趣的自己去看一下，总有一款适合你。\n使用方式如下：\n（1） 找到你喜欢的主题模版，点击右下角的下载按钮，进入如下图：\n\n![colorThemes主题下载](https://data.singlelovely.cn/xsj/2018/9/4/colorThemes主题下载.png)\n\n点击上图中的绿色的按钮下载。\n（2）下载下来是一个很小的 Jar包，我们直接包jar包导入Android Studio 。在Android Studio 上 点击 File －> Import Settings ，选择中下载的jar 包，来到如下界面：\n\n![enter description here](https://data.singlelovely.cn/xsj/2018/9/4/安装主题.png)\n\n（3）如上图，点击确认，会提示重启 IntelliJ IDEA  ，点击OK 重启 IntelliJ IDEA 就好。\n（4）重启之后，主题就已经应用上了，如下图：\n\n![colorThemes主题效果](https://data.singlelovely.cn/xsj/2018/9/4/colorThemes主题效果.png)\n\n\nColor Themes 上面有很多主题模版，你自己去挑选就好了。\n\n#### Material Theme UI\n\n使用 Material Theme UI 插件主题：\n通过上面的方法，就能为 IntelliJ IDEA 应用一个自己喜欢的个性化主题，但是有一个缺点：这些主题只更改了代码编辑区域，左边的包结构区域和菜单栏还是和原来是一样的，看起来和整体风格好像不是很搭，那么有没有可以使整个AS的风格都改变的主题呢？通过Google ,找到了Material Theme UI,原文地址[Making Android Studio pretty](https://meedamian.com/post/deuglifying-android-studio/)，Material Theme UI 是一个 IntelliJ IDEA 插件，它提供了三种主题供选择，效果非常不错，更赞的是，它连除了代码区域之外的风格也改变了，应用了Material Theme UI 主题的效果图如下：\n \n![MaterialThemeUI](https://data.singlelovely.cn/xsj/2018/9/4/MaterialThemeUI.png)\n\n为避免重复造轮子，使用方法请直接查看 Material Theme <span id =\"font-green\">[原文](https://meedamian.com/post/deuglifying-android-studio/)。\n\n### 花式LogCat\n\n前面介绍了几种打造炫酷主题的方式，效果已经非常赞了，但是我们看一下我们的Logcat ,只有白色和红色两种Log,看起来有点Low ,与我们炫酷的主题不搭啊，因此我们还得改造一下控制台的Log输出。更改之前的效果如下：\n\n![LogCat旧](https://data.singlelovely.cn/xsj/2018/9/4/LogCat旧.png)\n\n<p id=\"div-border-left-purple\">打造花式Log的方法：</p>\n（1） 在Android Studio 菜单栏 打开** Preferences －> Editer －> Colors & Fonts －> Android Logcat**\n\n（2） 在Scheme选项后面点击Save As... 保存一个拷贝，在拷贝上面更改，总共有六项，如下图所示，选中每一项依次更改。\n\n![花式logcat](https://data.singlelovely.cn/xsj/2018/9/4/花式logcat.png)\n\n最终效果如下图所示\n\n![LogCat新](https://data.singlelovely.cn/xsj/2018/9/4/LogCat新.png)\n\n如上图所示，效果是不是好了很多！！！也与我们的整体主题风格搭配。贴一下我使用的各项颜色值：\n\n<font color = \"#AA66CC\">Assert: #AA66CC</font>\n<font color = \"#33B5E5\">Debug: #33B5E5</font>\n<font color = \"#FF4444\">Error: #FF4444</font>\n<font color = \"#99CC00\">Info: #99CC00</font>\n<font color = \"#FFFFFF\">Verbose: #FFFFFF</font>\n<font color = \"#FFBB33\">Warning: #FFBB33</font>","slug":"Java集成开发环境安装（IntelliJ IDEA）","published":1,"updated":"2020-02-20T06:06:59.392Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td2m000kfkup25v6vj8v","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-uPwQXnUc\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1300423074\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"></div>\n<p> <br>\n <br>\n </p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/XuNeely/article/details/78943085\" target=\"_blank\" rel=\"noopener\">IntelliJ IDEA相比于Eclipse的优势</a></p>\n</blockquote>\n<h3 id=\"安装\"><a class=\"header-anchor\" href=\"#安装\">☆</a>安装</h3>\n<p><span id=\"font-blue\">下载地址: </span><a href=\"https://www.jetbrains.com/idea/download/?fromIDE=#section=windows\" target=\"_blank\" rel=\"noopener\">https://www.jetbrains.com/idea/download/?fromIDE=#section=windows</a></p>\n<p>Community 版本为开源免费版<br>\nUltimate  为企业版，试用期一个月</p>\n<div class=\"note success\"><p>版本请自行选择，建议使用<span id=\"inline-yellow\">Community</span> </p></div>\n<p>然后打开安装，选择安装目录后，会出现如下界面，选择适合自己系统的版本，Java必选，后面的按需选择</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/idea%E5%AE%89%E8%A3%85.png\" alt=\"idea安装\"></p>\n<p>完成安装后，进行配置，第三项为不采用旧设置</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/idea%E8%AE%BE%E7%BD%AE.png\" alt=\"idea设置\"></p>\n<p>然后选择jdk安装路径后，进入主界面</p>\n<p>jdk选择界面忘了截图了·······</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/idea%E7%95%8C%E9%9D%A2.png\" alt=\"主界面\"></p>\n<h3 id=\"主题颜色美化\"><a class=\"header-anchor\" href=\"#主题颜色美化\">☆</a>主题颜色美化</h3>\n<h4 id=\"使用color-themes主题模板\"><a class=\"header-anchor\" href=\"#使用color-themes主题模板\">☆</a>使用Color Themes主题模板</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/colorThemes%E4%B8%BB%E9%A2%98%E5%B1%95%E7%A4%BA.png\" alt=\"colorThemes主题展示\"></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/colorThemes%E4%B8%BB%E9%A2%98%E5%B1%95%E7%A4%BA2.png\" alt=\"colorThemes主题展示2\"></p>\n<p>上面这是少部分截图，有太多的主题，有兴趣的自己去看一下，总有一款适合你。<br>\n使用方式如下：<br>\n（1） 找到你喜欢的主题模版，点击右下角的下载按钮，进入如下图：</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/colorThemes%E4%B8%BB%E9%A2%98%E4%B8%8B%E8%BD%BD.png\" alt=\"colorThemes主题下载\"></p>\n<p>点击上图中的绿色的按钮下载。<br>\n（2）下载下来是一个很小的 Jar包，我们直接包jar包导入Android Studio 。在Android Studio 上 点击 File －&gt; Import Settings ，选择中下载的jar 包，来到如下界面：</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/%E5%AE%89%E8%A3%85%E4%B8%BB%E9%A2%98.png\" alt=\"enter description here\"></p>\n<p>（3）如上图，点击确认，会提示重启 IntelliJ IDEA  ，点击OK 重启 IntelliJ IDEA 就好。<br>\n（4）重启之后，主题就已经应用上了，如下图：</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/colorThemes%E4%B8%BB%E9%A2%98%E6%95%88%E6%9E%9C.png\" alt=\"colorThemes主题效果\"></p>\n<p>Color Themes 上面有很多主题模版，你自己去挑选就好了。</p>\n<h4 id=\"material-theme-ui\"><a class=\"header-anchor\" href=\"#material-theme-ui\">☆</a>Material Theme UI</h4>\n<p>使用 Material Theme UI 插件主题：<br>\n通过上面的方法，就能为 IntelliJ IDEA 应用一个自己喜欢的个性化主题，但是有一个缺点：这些主题只更改了代码编辑区域，左边的包结构区域和菜单栏还是和原来是一样的，看起来和整体风格好像不是很搭，那么有没有可以使整个AS的风格都改变的主题呢？通过Google ,找到了Material Theme UI,原文地址<a href=\"https://meedamian.com/post/deuglifying-android-studio/\" target=\"_blank\" rel=\"noopener\">Making Android Studio pretty</a>，Material Theme UI 是一个 IntelliJ IDEA 插件，它提供了三种主题供选择，效果非常不错，更赞的是，它连除了代码区域之外的风格也改变了，应用了Material Theme UI 主题的效果图如下：</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/MaterialThemeUI.png\" alt=\"MaterialThemeUI\"></p>\n<p>为避免重复造轮子，使用方法请直接查看 Material Theme <span id=\"font-green\"><a href=\"https://meedamian.com/post/deuglifying-android-studio/\" target=\"_blank\" rel=\"noopener\">原文</a>。</span></p>\n<h3 id=\"花式logcat\"><a class=\"header-anchor\" href=\"#花式logcat\">☆</a>花式LogCat</h3>\n<p>前面介绍了几种打造炫酷主题的方式，效果已经非常赞了，但是我们看一下我们的Logcat ,只有白色和红色两种Log,看起来有点Low ,与我们炫酷的主题不搭啊，因此我们还得改造一下控制台的Log输出。更改之前的效果如下：</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/LogCat%E6%97%A7.png\" alt=\"LogCat旧\"></p>\n<p id=\"div-border-left-purple\">打造花式Log的方法：</p>\n（1） 在Android Studio 菜单栏 打开** Preferences －> Editer －> Colors & Fonts －> Android Logcat**\n<p>（2） 在Scheme选项后面点击Save As… 保存一个拷贝，在拷贝上面更改，总共有六项，如下图所示，选中每一项依次更改。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/%E8%8A%B1%E5%BC%8Flogcat.png\" alt=\"花式logcat\"></p>\n<p>最终效果如下图所示</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/LogCat%E6%96%B0.png\" alt=\"LogCat新\"></p>\n<p>如上图所示，效果是不是好了很多！！！也与我们的整体主题风格搭配。贴一下我使用的各项颜色值：</p>\n<p><font color=\"#AA66CC\">Assert: #AA66CC</font><br>\n<font color=\"#33B5E5\">Debug: #33B5E5</font><br>\n<font color=\"#FF4444\">Error: #FF4444</font><br>\n<font color=\"#99CC00\">Info: #99CC00</font><br>\n<font color=\"#FFFFFF\">Verbose: #FFFFFF</font><br>\n<font color=\"#FFBB33\">Warning: #FFBB33</font></p>\n","site":{"data":{}},"length":1420,"excerpt":"","more":"\n    <div id=\"aplayer-uPwQXnUc\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1300423074\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"></div>\n<p> <br>\n <br>\n </p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/XuNeely/article/details/78943085\" target=\"_blank\" rel=\"noopener\">IntelliJ IDEA相比于Eclipse的优势</a></p>\n</blockquote>\n<h3 id=\"安装\"><a class=\"header-anchor\" href=\"#安装\">☆</a>安装</h3>\n<p><span id=\"font-blue\">下载地址: </span><a href=\"https://www.jetbrains.com/idea/download/?fromIDE=#section=windows\" target=\"_blank\" rel=\"noopener\">https://www.jetbrains.com/idea/download/?fromIDE=#section=windows</a></p>\n<p>Community 版本为开源免费版<br>\nUltimate  为企业版，试用期一个月</p>\n<div class=\"note success\"><p>版本请自行选择，建议使用<span id=\"inline-yellow\">Community</span> </p></div>\n<p>然后打开安装，选择安装目录后，会出现如下界面，选择适合自己系统的版本，Java必选，后面的按需选择</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/idea%E5%AE%89%E8%A3%85.png\" alt=\"idea安装\"></p>\n<p>完成安装后，进行配置，第三项为不采用旧设置</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/idea%E8%AE%BE%E7%BD%AE.png\" alt=\"idea设置\"></p>\n<p>然后选择jdk安装路径后，进入主界面</p>\n<p>jdk选择界面忘了截图了·······</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/idea%E7%95%8C%E9%9D%A2.png\" alt=\"主界面\"></p>\n<h3 id=\"主题颜色美化\"><a class=\"header-anchor\" href=\"#主题颜色美化\">☆</a>主题颜色美化</h3>\n<h4 id=\"使用color-themes主题模板\"><a class=\"header-anchor\" href=\"#使用color-themes主题模板\">☆</a>使用Color Themes主题模板</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/colorThemes%E4%B8%BB%E9%A2%98%E5%B1%95%E7%A4%BA.png\" alt=\"colorThemes主题展示\"></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/colorThemes%E4%B8%BB%E9%A2%98%E5%B1%95%E7%A4%BA2.png\" alt=\"colorThemes主题展示2\"></p>\n<p>上面这是少部分截图，有太多的主题，有兴趣的自己去看一下，总有一款适合你。<br>\n使用方式如下：<br>\n（1） 找到你喜欢的主题模版，点击右下角的下载按钮，进入如下图：</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/colorThemes%E4%B8%BB%E9%A2%98%E4%B8%8B%E8%BD%BD.png\" alt=\"colorThemes主题下载\"></p>\n<p>点击上图中的绿色的按钮下载。<br>\n（2）下载下来是一个很小的 Jar包，我们直接包jar包导入Android Studio 。在Android Studio 上 点击 File －&gt; Import Settings ，选择中下载的jar 包，来到如下界面：</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/%E5%AE%89%E8%A3%85%E4%B8%BB%E9%A2%98.png\" alt=\"enter description here\"></p>\n<p>（3）如上图，点击确认，会提示重启 IntelliJ IDEA  ，点击OK 重启 IntelliJ IDEA 就好。<br>\n（4）重启之后，主题就已经应用上了，如下图：</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/colorThemes%E4%B8%BB%E9%A2%98%E6%95%88%E6%9E%9C.png\" alt=\"colorThemes主题效果\"></p>\n<p>Color Themes 上面有很多主题模版，你自己去挑选就好了。</p>\n<h4 id=\"material-theme-ui\"><a class=\"header-anchor\" href=\"#material-theme-ui\">☆</a>Material Theme UI</h4>\n<p>使用 Material Theme UI 插件主题：<br>\n通过上面的方法，就能为 IntelliJ IDEA 应用一个自己喜欢的个性化主题，但是有一个缺点：这些主题只更改了代码编辑区域，左边的包结构区域和菜单栏还是和原来是一样的，看起来和整体风格好像不是很搭，那么有没有可以使整个AS的风格都改变的主题呢？通过Google ,找到了Material Theme UI,原文地址<a href=\"https://meedamian.com/post/deuglifying-android-studio/\" target=\"_blank\" rel=\"noopener\">Making Android Studio pretty</a>，Material Theme UI 是一个 IntelliJ IDEA 插件，它提供了三种主题供选择，效果非常不错，更赞的是，它连除了代码区域之外的风格也改变了，应用了Material Theme UI 主题的效果图如下：</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/MaterialThemeUI.png\" alt=\"MaterialThemeUI\"></p>\n<p>为避免重复造轮子，使用方法请直接查看 Material Theme <span id=\"font-green\"><a href=\"https://meedamian.com/post/deuglifying-android-studio/\" target=\"_blank\" rel=\"noopener\">原文</a>。</span></p>\n<h3 id=\"花式logcat\"><a class=\"header-anchor\" href=\"#花式logcat\">☆</a>花式LogCat</h3>\n<p>前面介绍了几种打造炫酷主题的方式，效果已经非常赞了，但是我们看一下我们的Logcat ,只有白色和红色两种Log,看起来有点Low ,与我们炫酷的主题不搭啊，因此我们还得改造一下控制台的Log输出。更改之前的效果如下：</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/LogCat%E6%97%A7.png\" alt=\"LogCat旧\"></p>\n<p id=\"div-border-left-purple\">打造花式Log的方法：</p>\n（1） 在Android Studio 菜单栏 打开** Preferences －> Editer －> Colors & Fonts －> Android Logcat**\n<p>（2） 在Scheme选项后面点击Save As… 保存一个拷贝，在拷贝上面更改，总共有六项，如下图所示，选中每一项依次更改。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/%E8%8A%B1%E5%BC%8Flogcat.png\" alt=\"花式logcat\"></p>\n<p>最终效果如下图所示</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/9/4/LogCat%E6%96%B0.png\" alt=\"LogCat新\"></p>\n<p>如上图所示，效果是不是好了很多！！！也与我们的整体主题风格搭配。贴一下我使用的各项颜色值：</p>\n<p><font color=\"#AA66CC\">Assert: #AA66CC</font><br>\n<font color=\"#33B5E5\">Debug: #33B5E5</font><br>\n<font color=\"#FF4444\">Error: #FF4444</font><br>\n<font color=\"#99CC00\">Info: #99CC00</font><br>\n<font color=\"#FFFFFF\">Verbose: #FFFFFF</font><br>\n<font color=\"#FFBB33\">Warning: #FFBB33</font></p>\n"},{"title":"JavaWeb复习笔记","copyright":true,"abbrlink":"7e6d3dbd","notshow":false,"description":"完全根据PPT复习范围整理，如发现错误请在评论区留言，会及时修改","image":["https://data.singlelovely.cn/CoverPicture/3c115208.jpg!CoverPicture"],"date":"2019-05-28T16:20:00.000Z","password":null,"photos":[],"sticky":null,"_content":"\n{% meting \"40962509\" \"netease\" \"playlist\" \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#00CED1\" %}\n\n## 第一章开发任务概述\n\n### Web应用\n\n- B/S结构：适用于大中型应用程序，极少事务逻辑在前端(Browser)实现，主要事务逻辑在服务器端(Server)实现。这种结构的程序简化了客户端的功能负载，减轻了应用维护与升级的成本和工作量，降低了用户的总体成本，但应用服务器运行负荷较重。\n\n### 客户端开发技术\n\n1、HTML技术\n\nHTML(HyperText Markup Language，超文本标记语言）是一种用于表示网上信息的符号标记语言。\n\n2、CSS技术\n\nCSS(Cascading Style Sheets，层叠样式表）技术是一种定义样式结构（如字体、颜色、位置等）的语言，用于描述网页上的信息格式和显示的方式。\n\n 3、JavaScript技术\n\nJavaScript是一种广泛应用于客户端的脚本语言，通过嵌入到HTML中来实现自身的功能；通过控制网页元素的行为和CSS代码中的样式定义，为网页增添了诸如表单内容验证、动画显示效果等交互能力，可以使静态网页具备一定的动态效果。\n服务器端开发技术\n\n### 服务器端开发技术\n\n1、Servlet技术\n<p id = \"div-border-left-yellow\">\nServlet是以Java技术为基础的服务器端应用程序组件，与运行在浏览器端的Applet相对应。Serv」et是被Web服务器（如Tomcat)加载和执行，而Applet则是被浏览器加载和执行。Servlet通过Web服务器接收客户端浏览器发来的请求，执行预定的功能，然后将执行结果返回给客户端的浏览器。Servlet可以使用服务器端的所有Java 类库资源，所以理论上其功能可以无限扩展。\n</p>\n2、JSP技术\n<p id = \"div-border-left-yellow\">\nJSP(Java Server Page)是建立在Servlet规范提供的功能之上的一种动态网页技术。\n</p>\n3、JavaBean技术\n<p id = \"div-border-left-yellow\">\nJavaBean是Java组件技术的核心，它是Java平台上实现重用的软件组件模型。JavaBean是一种特殊的Java类，需要满足一定的规范要求。\n</p>\n4、JDBC技术\n<p id = \"div-border-left-yellow\">\nJDBC(Java DataBase Connectivity)是一种用于执行SQL语句的Java API （Application Programming Interface，应用编程接口)，由一组Java语言编写的类和接口组成。\n</p>\n\n### HTTP请求/响应机制\n\n处理过程包括以下步骤：\n\n- 浏览器向Web服务器发送请求报文。\n- 服务器解析接收到的请求，定位请求资源，做相应处理，然后封装好响应报文，回送给浏览器。\n- 浏览器收到响应报文，解析HTML、图片等静态内容，渲染网页呈现给用户，解析DOM(Document Object Model，文档对象模型）树，脚本引擎执行脚本代码，完成DOM 操作、CSS属性更改、发送AJAX(Asynchronous JavaScript And XML，异步JavaScript 和XML)请求等功能。\n\n<span id = \"font-green\">HTTP主要有以下特点：</span>\n\n- 简单快速<br>\n- 灵活<br>\n- 无连接<br>\n- 无状态<br>\n- 支持B/S及C/S模式\n\n## 第二章 用户界面设计\n\n### 用户界面元素开发\n\n```html\n<!-- 无序列表 -->\n<ul>\n    <li>Coffee</li>\n    <li>Milk</li>\n</ul>\n<!-- 文本段落 -->\n<p>This is a paragraph</p>\n<p>This is another paragraph</p>\n<!-- 块、行内元素、图片 -->\n<div>\n<span>\n<img src=\"boat.gif\" alt=\"Big Boat\">\n<!-- 表单  -->\n<form>\n First name:<br>\n<input type=\"text\" name=\"firstname\">\n<br>\n Last name:<br>\n<input type=\"text\" name=\"lastname\">\n</form>\n<!-- 下拉列表框  -->\n<select>\n  <option value =\"volvo\">Volvo</option>\n  <option value =\"saab\">Saab</option>\n  <option value=\"opel\">Opel</option>\n  <option value=\"audi\">Audi</option>\n</select>\n<!--多行文本框-->\n<textarea rows=\"3\" cols=\"20\">\n    在w3school，你可以找到你所需要的所有的网站建设教程。\n</textarea>\n<!--表格-->\n<table border=\"1\">\n  <tr>\n    <th>Month</th>\n    <th>Savings</th>\n  </tr>\n  <tr>\n    <td>January</td>\n    <td>$100</td>\n  </tr>\n</table>\n<!-- 超链接 -->\n<a href=\"http://www.w3school.com.cn\">W3School</a>\n<!-- HTML文件的基本结构、HTML标记格式 -->\n略\n```\n\n### 界面布局设计\n\n#### 什么是css\n\nCSS是Cascading Style Sheets(层叠样式表）的缩写，是一种美化网页的技术。它的引入使HTML网页美工设计不再烦琐。\n\n#### CSS选择器格式\n\n1、标记选择器：直接针对HTML标记定义样式。\n<div class=\"note info\">\nHTML标记名{标记属性：属性值; 标记属性：属性值; 标记属性: 属性值;...}\n</div>\n2、类别选择器：\n<div class=\"note info\">\n.类别选择器名{标记属性: 属性值; 标记属性: 属性值; 标记属性: 属性值;...;}\n<HTML 标记名 class = \"类别选择器名\">\n</div>\n3、ID选择器：\n<div class=\"note info\">\n#ID选择器名{标记属性：属性值; 标记属性: 属性值; 标记属性: 属性值;...;}\n<HTML 标记名 id=\"ID选择器名\">\n</div>\n4、伪元素选择器：指对同一HTML元素的各种状态来定义样式的一种方式。\n<div class=\"note info\">\nHTML标记：伪元素{样式}\n</div>\n\n#### 在HTML中使用CSS的方法\n\n1、嵌入式：将样式表嵌入到HTML标记的属性中，把样式的定义直接作为标记的style属性值。格式如下：\n\n```html\n    <HTML 标记 style = \"属性名：属性值\">\n```\n\n(2)头部式：把样式定义在HTML页面的头部，用\\<style>标记进行声明。这样定义的样式在整个页面中都可以使用。基本格式如下：\n\n```html\n    <style>\n        样式定义\n    </style>\n```\n\n(3)外部式：当在很多网页里都要使用相同的样式时，可以使用外部样式表的形式。\n\n```html\n< link href= \"\" rel= \"stylesheet\"  type= \"text/css\"  />\n```\n\n#### DIV+CSS布局的实现思路\n\n可以使用DIV+CSS 来实现网页布局，实现路是先用\\<div>标记对整个页面进行分块，然后再利用CSS样式对每个div分块进行布局设置，最后在各个div分块中添加内容。\n\n### 客户端功能开发\n\n#### JavaScript概述\n\nJavaScript是一种简单的脚本语言，由浏览器解释执行，简单、易学、易用。其最基本的两个特点是基于对象和事件驱动。\n\n所谓基于对象，是指JavaScript支持使用对象，但是没有提供面向对象语言的所有功能，不是完全的面向对象编程语言。\n\n事件驱动指JavaScript程序的运行机制。它把GUl(图形用户界面）中的用户动作封装为各种事件，例如单击按钮、移动鼠标、按下键盘等都是事件，当某个事件发生时，就会触发相应的事件处理程序运行。\n\n#### JavaScript脚本的使用方式\n\nJavaScript代码可以直接嵌入到HTML文件中使用，嵌入方式主要有三种：嵌入标记事件属性、使用脚本语句块、链接独立的脚本文件。\n\n#### 对象\n\nJavaScript中的对象由属性和方法构成，主要有三种类型：内置对象、浏览器提供的对象和自定义对象。\n\n- Date对象：用于处理日期和时间，需要先创建才能使用。\n- window对象：代表当前浏览器窗口所有JavaScript全局对象、函数和变量均自动成为window对象的成员。\n    - window对象提供了多个属性和函数用于对浏览器窗口进行操作。\n    - window对象的常用函数有：alert(警告对话框)、confirm(确认对话框）、prompt(消息框)、open(打开新窗口）、print(打印网页内容）等。\n    - 因为window对象是JavaScript中最顶级的对象，所以在使用当前窗口对象的函数时，可以省略函数前的window，即可以直接使用alert()，而不需要用window.alert()。\n- document对象：属于HTML DOM(Document Object Model，文档对象模型）。当网页被加载时，浏览器会创建当前页面的DOM模型。DOM的最顶层就是HTML文档，document对象就代表当前HTML文档，通过它可以访问页面中的所有元素。\n\n<span id = \"font-blue\"><span id = \"font-green\">document</span>对象的常用方法如下:</span>\n\n- write(字符串）：将字符串或数值显示在显示器上。\n- getElementById()：返回对指定id的第一个对象的引用。\n\n## 第三章 web应用开发基础\n\n### 开发环境和运行环境\n\n略\n\n### jsp基本概念\n\n#### 运行机制\n\n当浏览器向服务器发出请求访问一个JSP页面时，所请求的JSP文件会被服务器端的JSP引擎转化为一个Java类，并被编译成一个字节码文件，再装载到Java虚拟机中运行，最后把运行产生的输出作为对本次请求的响应返回给浏览器。\n\n#### Web应用目录结构\n\n按照Java EE规范的规定，一个典型的Java Web应用包含四个部分：\n\n- 公开文件夹，存放能够被用户访问的资源，包括.jsp、.htm、.js、.css、.jpg等文件。\n- WEB-INF/web.xml文件，应用的部署描述文件。\n- WEB-INF/classes文件夹，存放编译好的Java类文件(.class)。\n- WEB-INF/lib文件夹，存放Java类库文件(.jar)。\n\n### jsp基础语法\n\njap脚本代码：Java代码片段，可以实现业务逻辑处理，也可以产生输出。例如：\n\n```java\n<%\n    SimpleDateFormat df = new SimpleDateFormat(\"yyyy-M-d HH:mm:ss\");\n%>\n```\n\njsp声明：在声明中定义的变量和方法都会成为转义后的Java类的成员变量及类成员方法，声明的类则成为内部类。语法格式如下：\n\n```java\n    <%! 变量或方法、类的声明 %>\n```\n\njsp表达式：一种简单的输出形式。\n\n```java\n    <% = 表达式 %>\n```\n\n#### jsp指令\n\n<span id = \"font-red\">page指令</span>称为页面指令，用来定义JSP页面的全局属性，该配置会作用于整个页面。\n\n- <span id = \"font-purple\">language</span>属性：设置当前页面中编写JSP脚本使用的语言，默认值为java。\n- <span id = \"font-purple\">import</span>属性：用来导入程序中要用到的包或类，可以有多个值，无论是Java核心包中自带的类还是用户自行编写的类，都要在import中引入，才能使用。\n- <span id = \"font-purple\">errorPage</span>属性：用于指示一个JSP文件的相对路径，以便在页面出错时，转到这个JSP文件来进行处理。与此相适应，需要将这个JSP文件的isErrorPage属性设为true。\n- <span id = \"font-purple\">isErrorPage</span>属性：指示一个页面是否为错误处理页面。设置为true时，在这个JSP页面中的内建对象exception将被定义，其值将被设定为呼叫此页面的JSP页面的错误对象，以处理该页面所产生的错误。\n- <span id = \"font-purple\">contentType</span>属性：设置发送到客户端文档的响应报头的MIME（Multipurpose Internet Mail Extention）类型和字符编码。\n- <span id = \"font-purple\">pageEncoding</span>属性：设置JSP页面字符的编码，常见的编码类型有ISO-8859-1、gb2312和GBK等。默认值为ISO-8859-1。\n\n用法示例：\n\n```jsp\n<%@page language=\"java\" %>\n<%@page import=\"包名.类名\"%>\n<%@page import=\"包名.*\"%>\n<%@ page pageEncoding=\"gb2312\"%>\n```\n\n<span id = \"font-red\">include指令</span>：在JSP中，可以使用include指令来包含其他jsp文件。\n\n<span id = \"font-red\">taglib指令</span>：声明用户使用自定义的标签，将标签库描述符文件导入到jsp页面。\n\n```jsp\n <%@ taglib (uri=\"tigLibURL\" 或 tagDir=\"tagDir\") prefix=\"tagPrefix\" %>\n```\n\n属性：\n\n- <span id = \"font-purple\">uri</span>属性:定位标签库描述符的位置。唯一标识和前缀相关的标签库描述符，可以使用绝对或相对URL。\n- <span id = \"font-purple\">tagDir</span>属性：指示前缀将被用于标识在WEV-INF/tags目录下的标签文件。\n- <span id = \"font-purple\">prefix</span>属性：标签的前缀，区分多个自定义标签。不可以使用保留前缀和空前缀，遵循XML命名空间的命名约定。\n\n#### JSP标记\n\n<span id = \"font-green\">\\<jsp:include></span>用于将HTML或者jsp动态内容插入到当前的jsp页面中。\n\n<span id = \"font-green\">\\<jsp:param></span>用于向被包含的页面传递参数。\n\n<span id = \"font-green\">\\<jsp:forward></span>用于实现页面请求的转发，可以把对当前jsp页面的请求转发到同一web应用中的另一个资源。\n\n```jsp\n<%@include file=\"文件的URL\"%>\n<jsp:forward page=\"接受参数页面的URL\">\n    <jsp:param name=“参数名 value = \"参数值\"/>\n<jsp:forward/>\n\n```\n\n## 第四章 流程控制与数据传递\n\n### jsp内置对象\n\n|内置对象名称|类型|作用域|用途|\n|---|:--:|:---|---|\n|request|javax.servlet.httpServletRequest|Request|代表了客户端的请求信息，接受通过HTTP协议传送到服务器的数据。(乱码处理)|\n|response|javax.servlet.http.HttpServletResponse|Page|对客户端的响应，将JSP容器处理过的对象传回到客户端。(页面重定向)|\n|session|javax.servlet.http.HttpSession|Page|在第一个JSP页面被装载时自动创建，完成会话期管理。（存取属性值，保存用户的信息）|\n|out|javax.servlet.jsp.jspWriter|Page|在Web浏览器内输出信息，并且管理应用服务器上的输出缓冲区。|\n\n**<center><span id = \"font-blue\">request对象主要方法</span></center>**\n\n|方法声明|功能简介|\n|:---|:---|\nsetAttribute(String name,Object) | 设置名字为name的request的參数值\ngetAttribute(String name) | 返回由name指定的属性值\ngetAttributeNames() | 返回request对象全部属性的名字集合，结果是一个枚举的实例\ngetCookies() | 返回client的全部Cookie对象，结果是一个Cookie数组\ngetCharacterEncoding() | 返回请求中的字符编码方式\ngetContentLength() | 返回请求的Body的长度\ngetHeader(String name) | 获得HTTP协议定义的文件头信息\ngetHeaders(String name) | 返回指定名字的request Header的全部值，结果是一个枚举的实例\ngetHeaderNames() | 返回所以request Header的名字，结果是一个枚举的实例\ngetInputStream() | 返回请求的输入流，用于获得请求中的数据\ngetMethod() | 获得client向server端传送数据的方法\ngetParameter(String name) | 获得client传送给server端的有name指定的參数值\ngetParameterNames() | 获得client传送给server端的全部參数的名字，结果是一个枚举的实例\ngetParameterValues(String name) | 获得有name指定的參数的全部值\ngetProtocol() | 获取client向server端传送数据所根据的协议名称\ngetQueryString() | 获得查询字符串\ngetRequestURI() | 获取发出请求字符串的client地址\ngetRemoteAddr() | 获取client的IP地址\ngetRemoteHost() | 获取client的名字\ngetSession([Boolean create]) | 返回和请求相关Session\ngetServerName() | 获取server的名字\ngetServletPath() | 获取client所请求的脚本文件的路径\ngetServerPort() | 获取server的port号\nremoveAttribute(String name) | 删除请求中的一个属性\n\n**<center><span id = \"font-blue\">response对象常用方法</span></center>**\n\n|方法声明|功能简介|\n|:---|:---|\nvoid setContentType(String type) | 设置响应数据的MIME类型\nString getContentType() | 取得响应数据的MIME类型\nvoid setHeader(String name, String value) | 设置指定的响应报头\nvoid sendRedirect() | 重定向客户的请求到指定页面\nvoid addCookie(Cookie cookie) | 给客户端添加一个Cookie对象，以保存客户端的信息\nPrintWriter getWriter() | 返回一个输出字符流\nvoid flushBuffer() | 清空缓冲区，强行把Buffer的内容写到客户端浏览器\n\n**<center><span id = \"font-blue\">session对象常用方法</span></center>**\n\n|方法声明|功能简介|\n|:---|:---|\ngetAttribute(String name) | 获取session对象中名为name的属性值，不存在则为null\nremoveAttribute(String name) | 删除session对象中名为name的属性\nsetAttribute(String name, Object value) | 设置session对象属性，属性名为name，属性值为value\ngetCreationTime() | 获取session对象的创建时间，返回1970年1月1日至今的毫秒数（Unix时间戳）\ngetLastAccessTime() | 获取session对象对应客户端的最近发送请求的时间，返回1970年1月1日至今的毫秒数\ninvalidate() | 销毁session对象中的信息，session本身不会被销毁\ngetMaxInactiveInterval() | 获取会话超时时间，单位为秒\nsetMaxInactiveInterval(int interval) | 设置会话超时时间，单位为秒\n\n### Cookie机制\n\nCookie是Web服务器产生并嵌入在HTTP响应报头中的一小段文本。浏览器在收到一个Cookie后会把它保存到特定的文件夹下，并在接下来再次访问同一个Web服务器时，自动在请求报头中携带该Cookie，供服务器读取使用，从而弥补HTTP无状态的不足。基于这一工作机制，可以实现用户识别、应用定制等功能。\n\n一个Cookie包含一个名称和值，以及一些可选的属性，如路径、最长存活时间等。Java提供了javax.servlet.http.Cookie类来支持Cookie机制的实现。可以使用response 对象的addCookie()方法向浏览器发送Cookie，使用request对象的getCookie()方法获取请求中的所有Cookie。\n\n**<center><span id = \"font-blue\">cookie类的主要方法</span></center>**\n\n|方法声明|功能简介|\n|:---|:---|\nString geyName() | 获取cookie的名称\nString getValue() | 获取cookie的值\nvoid setValue(String value) | 在cookie创建后，为cookie赋予新的值\nint getMaxAge() | 获取cookie的有效时间，以秒为单位，-1表示cookie将一直持续下去，直到浏览器关闭\nString getPath() | 返回cookie适用的路径\nvoid setPath(String uri) | 设置cookie的适用路径。如不指定，则当前页面的同目录与子目录下所有RRL都返回cookie\n\n### 控制流和数据流的实现\n\n1、jsp页面间的流程控制\n\n- 超链接\n- 表单提交\n- 页面重定向\n- 请求转发\n\n2、jsp页面间的数据传递\n\n- 表单传参\n- url传参\n- <jsp:param>标记传参\n- 作用域传参\n\n## 数据库访问\n\n### 数据库访问代码模板\n\n```jsp\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"utf-8\"%>\n<%@ page import=\"java.sql.*\" %>\n\n<%\n\n    String driver = \"com.mysql.jdbc.Driver\";\n\n    // URL指向要访问的数据库名test1\n    String url = \"jdbc:mysql://127.0.0.1:3306/test\";\n\n    // MySQL配置时的用户名\n    String user = \"root\";\n\n    // Java连接MySQL配置时的密码\n    String password = \"111\";\n\n    try {\n        // 1 加载驱动程序\n        Class.forName(driver);\n\n        // 2 连接数据库\n        Connection conn = DriverManager.getConnection(url, user, password);\n\n        // 3 用来执行SQL语句\n        Statement statement = conn.createStatement();\n\n        // 要执行的SQL语句\n        String sql = \"select * from login\";\n\n        //处理执行结果\n        ResultSet rs = statement.executeQuery(sql);\n        String name = null;\n        String mima=null;\n        while (rs.next()) { \n        name = rs.getString(\"userName\"); \n        mima = rs.getString(\"passWord\"); \n        out.println(name+\"\\t\"+mima); \n        }\n        rs.close();\n        conn.close();\n    } catch (ClassNotFoundException e) {\n        System.out.println(\"Sorry,can`t find the Driver!\");\n        e.printStackTrace();\n    } catch (SQLException e) {\n        e.printStackTrace();\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n\n%>\n\n```\n\n### JDBC技术\n\n#### 基础概念\n\nJava语言访问数据库的一种规范,是一套API\n\nJDBC (Java Database Connectivity) API，即Java数据库编程接口，是一组标准的Java语言中的接口和类，使用这些接口和类，Java客户端程序可以访问各种不同类型的数据库。比如建立数据库连接、执行SQL语句进行数据的存取操作。\n\n#### DriverManager类\n\n处理驱动程序的加载和建立新数据连接。\n\n```java\nconnection.getConnection(String url, String user, String password)\nConnection con = DriverManager.getConnection(\"jdbc:oracle:thin:@127.0.0.1:1521:name\", \"scott\",\"tiger\");\n```\n\n#### Connection接口\n\n代表Java程序与数据库间的连接，用于提供创建语句以及管理连接及其属性方法。\n\n**<center><span id = \"font-blue\">Connection接口常用方法</span></center>**\n\n|方法声明|功能简介|\n|:---|:---|\nStatement createStatement() | 创建一个Statement对象，用于将SQL语句发送到数据库，通常在执行无参数的SQL语句时创建该实例\nPrepareStatement prepareStatement() | 通常在执行包含参数的SQL语句时创建该实例，并对SQL语句进行预编译处理\nvoid close() | 关闭数据库连接\n\n```java\n Statement st = con.createStatement();\n```\n\n#### Statement接口\n\n用于执行静态SQL语句并返回它所生成结果的对象。\n\n**<center><span id = \"font-blue\">Statement接口常用方法</span></center>**\n\n|方法声明|功能简介|\n|:---|:---|\nResultSet executeQuery(String sql) | 执行指定的静态select语句，并返回一个永远不为null的ResultSet实例\nint executeUpdate(String sql) | 执行指定的静态INSET、UPDATE或DELETE语句，并返回一个int型数值，未同步更新记录的条数\n\n```java\n ResultSet rs = st.executeQuery(sql);\n```\n\n#### PreparedStatement接口\n\n继承自Statement，表示预编译的SQL语句的对象，预编译SQL效率高且支持参数查询\n\n#### ResultSet接口\n\n用于表示数据库结果集的数据表，通常由执行查询数据库的语句生成，其中存放了查询结果。\n\n在ResultSet对象中具有指向当前数据行的游标，可以在<span id = \"font-green\">while</span>循环中使用<span id = \"font-green\">next()</span>方法来迭代处理结果集。\n\n**<center><span id = \"font-blue\">ResultSet接口常用的获取列值方法</span></center>**\n\n|返回类型|方法名称|返回类型|方法名称|\n|:---|:---|:---|:---|\nbyte | getByte(inc columnIndex) | byte | getByte(String columnLabel)\nDate | getDate(inc columnIndex) | Date | getDate(String columnLabel)\ndouble | getDouble(inc columnIndex) | double | getDouble(String columnLabel)\nfloat | getFloat(inc columnIndex) | float | getFloat(String columnLabel)\nint | getInt(inc columnIndex) | int | getInt(String columnLabel)\nlong | getLong(inc columnIndex) | long | getLong(String columnLabel)\nString | getString(inc columnIndex) | String | getString(String columnLabel)\n\n```java\nwhile(rs.next()){\n    int id = rs.getInt(\"id\");\n    String username = rs.getString(\"username\");\n    String gender = rs.getString(\"gender\");\n    java.sql.Date hiredate = rs.getDate(\"hiredate\");\n    System.out.println(id+\"#\"+username+\"#\"+gender+\"+hiredate);\n}\n```\n\n## 重构程序功能\n\n### JavaBean技术\n\n#### JavaBean编写规范\n\n- 是一个公共类\n- 具有无参数的公共构造方法\n- 具有公共的setter和getter方法来供外部存取其私有属性\n- 需要放在命名包里，不能放在默认包中\n\n#### JavaBean的编译\n\n略\n\n#### 使用JavaBean\n\n- <span id = \"font-green\">\\<jsp:useBean></span> 装载一个将在JSP页面中使用的JavaBean。\n    - scope，作用域\n\n```jsp\n<jsp:useBean id=\"name\" class=\"package.class\"   scope=\"page | request | session | application\" />  \n```\n\n- <span id = \"font-green\">\\<jsp:setProperty></span> 获取指定的JavaBean的值。\n    - 详解见[jsp:useBean的用法](https://blog.csdn.net/u011024652/article/details/52012435)\n\n```jsp\n//自动匹配赋值\n<jsp:setProperty name=\"JavaBean实例名\" property=\"*\" />\n//自动匹配指定属性\n<jsp:setProperty name=\"JavaBean实例名\" property=\"JavaBean属性名\" />\n//手动设置属性值\n<jsp:setProperty name=\"JavaBean实例名\" property=\"JavaBean属性名\" value=\"BeanValue\" />\n//通过获取request的参数来为相应的属性赋值，其中param为参数名\n<jsp:setProperty name=\"JavaBean实例名\" property=\"JavaBean属性名\" param=\"request对象中的参数名\" />\n```\n\n- <span id = \"font-green\">\\<jsp:getProperty></span> 获取指定Javabean对象的属性值。\n\n#### JavaBean实例\n\n```jsp login.jsp\n<%@ page language=\"java\" import=\"java.util.*\" contentType=\"text/html; charset=utf-8\" %>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <base href=\"<%=basePath%>\">\n    <title>My JSP 'login.jsp' starting page</title>\n        <meta http-equiv=\"pragma\" content=\"no-cache\">\n        <meta http-equiv=\"cache-control\" content=\"no-cache\">\n        <meta http-equiv=\"expires\" content=\"0\">   \n        <meta http-equiv=\"keywords\" content=\"keyword1,keyword2,keyword3\">\n        <meta http-equiv=\"description\" content=\"This is my page\"> \n  </head>\n  <body>\n    <h1>系统登录</h1>\n    <hr>\n    <form name=\"loginForm\" action=\"dologin.jsp?mypass=999999\" method=\"post\">\n      <table>\n        <tr>\n          <td>用户名：</td>\n          <td><input type=\"text\" name=\"username\" value=\"\"/></td>\n        </tr>\n        <tr>\n          <td>密码：</td>\n          <td><input type=\"password\" name=\"password\" value=\"\"/></td>\n        </tr>\n        <tr>\n          <td colspan=\"2\" align=\"center\"><input type=\"submit\" value=\"登录\"/></td>\n        </tr>\n      </table>\n    </form>\n  </body>\n</html>\n```\n\n```jsp dologin.jsp\n<%@ page language=\"java\" import=\"java.util.*\" contentType=\"text/html; charset=utf-8\"%>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <base href=\"<%=basePath%>\">\n\n    <title>My JSP 'dologin.jsp' starting page</title>\n\n        <meta http-equiv=\"pragma\" content=\"no-cache\">\n        <meta http-equiv=\"cache-control\" content=\"no-cache\">\n        <meta http-equiv=\"expires\" content=\"0\">   \n        <meta http-equiv=\"keywords\" content=\"keyword1,keyword2,keyword3\">\n        <meta http-equiv=\"description\" content=\"This is my page\">\n\n  </head>\n  <body>\n    <jsp:useBean id=\"myUsers\" class=\"com.po.Users\" scope=\"page\"/>\n    <h1>setProperty动作元素</h1>\n    <hr>\n   <!--根据表单自动匹配所有的属性 -->\n   <jsp:setProperty name=\"myUsers\" property=\"*\"/> \n\n   <!--根据表单匹配所有部分的属性 -->\n   <jsp:setProperty name=\"myUsers\" property=\"username\"/> \n\n   <!--根表单无关，通过手工赋值给属性 -->\n   <jsp:setProperty name=\"myUsers\" property=\"username\" value=\"lisi\"/>\n   <jsp:setProperty name=\"myUsers\" property=\"password\" value=\"888888\"/>\n\n   <!--通过URL传参数给属性赋值 -->\n   <jsp:setProperty name=\"myUsers\" property=\"username\"/>\n   <jsp:setProperty name=\"myUsers\" property=\"password\" param=\"mypass\"/>\n\n   <!-- 使用传统的表达式方式来获取用户名和密码 -->\n       用户名：<%=myUsers.getUsername() %><br>\n       密码：<%=myUsers.getPassword() %><br>\n\n   <!-- 使用getProperty方式来获取用户名和密码 -->\n      用户名：<jsp:getProperty name=\"myUsers\" property=\"username\"/> <br>\n      密码：<jsp:getProperty name=\"myUsers\" property=\"password\"/><br>\n   <br>\n   <br>\n  </body>\n</html>\n```\n\n## 重构程序界面\n\n### EL和JSTL\n\nEL语法格式\n\n     ${EL表达式}\n\n运算符：略\n\n**<center><span id = \"font-blue\">EL常用内置对象</span></center>**\n\n|内置对象|描述|\n|:---|:---|\npageScope | 取得 page 范围的属性名称所对应的值，${pageScope.name}等同与pageContext.getAttribute(“name”);\nrequstScope | 取得 request 范围的属性名称所对应的值，${requestScope.name}等同与request.getAttribute(“name”)；\nsessionScope | 取得 session 范围的属性名称所对应的值，${sessionScope.name}等同与session.getAttribute(“name”)；\napplicationScope | 取得 application 范围的属性名称所对应的值，${applicationScope.name}等同与application.getAttribute(“name”)；\nparam | 可以用来获取参数，${param.username} 等同于request.getParameter(\"username\"); 返回 Slring[] 类型的值\nparamValues | ${paramValues.hobby} 如同 ServletRequest.getParameter Values(String name)， 返回 string[] 类型的值\n\n<span id = \"inline-blue\">在JSP中使用JSTL的步骤如下</span>\n<p id = \"div-border-left-purple\">\n1. 首先需要到http：//tomcat.apache.org/taglibs/standard/ 下载JSTL标记库的jar包。<br>\n2. 然后将获取到的JSTL标记库的jar包，复制到Web应用中的WEB-INF\\lib文件夹下。<br>\n3. 最后在JSP页面中用taglib指令设置标记前缀，即可使用JSTL标记。<br>\n</p>\nJSTL标记：\n\n- <span id = \"font-green\">\\<c:out></span> 用来显示一个表达式的结果，与<%= %>作用相似，它们的区别就是<c:out>标签可以直接通过\".\"操作符来访问属性\n    - <span id = \"font-purple\">value</span>：要输出的内容，必须\n    - <span id = \"font-purple\">default</span>：输出的默认值，非必须，默认为主体中的内容\n    - <span id = \"font-purple\">escapeXml</span>：是否忽略XML特殊字符，非必须，默认为true\n\n```jsp\n<c:out value=\"<string>\" default=\"<string>\" escapeXml=\"<true|false>\"/>\n```\n\n- <span id = \"font-green\">\\<c:set></span> 用于设置变量值和对象属性。\n    - <span id = \"font-purple\">value</span>：要存储的值，非必须，默认为主体的内容\n    - <span id = \"font-purple\">target</span>：要修改的属性所属的对象，非必须\n    - <span id = \"font-purple\">property</span>：要修改的属性，非必须\n    - <span id = \"font-purple\">var</span>：存储信息的变量，非必须\n    - <span id = \"font-purple\">scope</span>：var属性的作用域，非必须，默认为Page\n<div class=\"note warning\">如果指定了target属性，那么property属性也需要被指定。</div>\n\n```jsp\n<c:set var=\"<string>\" value=\"<string>\"   target=\"<string>\"   property=\"<string>\"   scope=\"<string>\"/>\n```\n\n- <span id = \"font-green\">\\<c:if></span> 判断表达式的值，如果表达式的值为 true 则执行其主体内容。\n    - <span id = \"font-purple\">test</span>：条件，必须\n    - <span id = \"font-purple\">var</span>：存储条件结果的变量，非必须\n    - <span id = \"font-purple\">scope</span>：var属性作用域，非必须\n\n```jsp\n<c:if test=\"<boolean>\" var=\"<string>\" scope=\"<string>\">\n   ...\n</c:if>\n```\n\n- <span id = \"font-green\">\\<c:choose></span> 与Java switch语句的功能一样，用于在众多选项中做出选择。\n    - switch语句中有case，而<c:choose>标签中对应有<c:when>，switch语句中有default，而<c:choose>标签中有<c:otherwise>\n    - <span id = \"font-purple\">test</span>：条件，必须\n\n```jsp\n<c:choose>\n    <c:when test=\"<boolean>\">\n        ...\n    </c:when>\n    <c:when test=\"<boolean>\">\n        ...\n    </c:when>\n    ...\n    ...\n    <c:otherwise>\n        ...\n    </c:otherwise>\n</c:choose>\n```\n\n- <span id = \"font-green\">\\<c:forEach></span> 迭代一个集合中的对象。\n    - <span id = \"font-purple\">items</span>：要被循环的信息，非必须\n    - <span id = \"font-purple\">begin</span>：开始的元素（0=第一个元素，1=第二个元素），非必须，默认为0\n    - <span id = \"font-purple\">end</span>：最后一个元素（0=第一个元素，1=第二个元素），非必须，默认为Last element\n    - <span id = \"font-purple\">step</span>：每一次迭代的步长，非必须，默认为1\n    - <span id = \"font-purple\">var</span>：代表当前条目的变量名称，非必须\n    - <span id = \"font-purple\">varStatus</span>：代表循环状态的变量名称，非必须\n\n```jsp\n<c:forEach items=\"<object>\" begin=\"<int>\" end=\"<int>\" step=\"<int>\" var=\"<string>\" varStatus=\"<string>\">\n\n<c:forEach var=\"i\" begin=\"1\" end=\"5\">\n   Item <c:out value=\"${i}\"/><p>\n</c:forEach>\n```\n\n### Servlet开发\n\n#### HttpServlet类、方法\n\n对于Web应用而言，Servlet主要是用于处理HTTP请求，所以更一般的编写Servlet方法是继承javax.servlet.http.HttpServlet类。\n\nHttpServlet类是GeniricServle类的子类，通过调用指定到HTTP请求的方法来实现service(）方法。对于HTTP中定义的DELETE、HEAD、GET、POST、PUT等方法，分别调用doDelete(），doHead()、doGet()、doPost()、doPut(）等方法来处理相应的请求。\n\n**<center><span id = \"font-blue\">HttpServlet类主要方法</span></center>**\n\n|方法声明|功能简介|\n|:---|:---|\nvoid doGet(httpServletRequest request, HttpServletResponse, response) | 用来处理Http Get请求\nvoid doPost(httpServletRequest request, HttpServletResponse, response) | 用来处理Http Post请求\nvoid service(httpServletRequest request, HttpServletResponse, response) | 根据请求的类型，将请求导向doGet(),doPost()方法\n\n#### 编写、编译Servlet\n\n编写<span id = \"font-green\">Servlet</span>的一般步骤如下:\n<p id = \"div-border-left-purple\" >\n1. 导入javax.servlet包、javax.servlet.http包及其他必要的包。<br>\n2. 继承HttpServlet类，并重写doPost（)和doGet（)方法。<br>\n3. 在doPost(）和doGet()方法中依次实现获取请求参数、创建输出对象、设置响应类型、输出响应内容等功能。<br>\n</p>\n<span id = \"font-blue\">编译</span>和<span id = \"font-blue\">配置</span>Servlet:\n\n- Servlet类编写完成之后，需要进行编译和部署。\n- 编译Servlet之前需要先把Servlet API库文件添加到环境变量CLASSPATH 中。可以直接使用Tomcat发行版中包含的servlet-api.jar。向系统的CLASSPATH环境变量中增加下面的值（假定Tomcat安装目录为d:\\tomcat)：\n<div class=\"note success\"> d: \\tomcat\\lib\\servlet-api . jar</div>\n- 然后打开命令行窗口，进入dem008应用中的src目录，使用下面的命令进行编译：\n<div class=\"note success\">javac -d  ..\\classes  servlet\\HelloServlet.java</div>\n\n```xml web.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app>\n    <servlet>  \n        <servlet-name>business</servlet-name>  \n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n    </servlet>\n    <servlet-mapping>  \n        <servlet-name>LogOutServlet</servlet-name>  \n        <url-pattern>/logout</url-pattern>  \n    </servlet-mapping>\n</web-app>\n```\n\n### MVC设计模式\n<p id = \"div-border-left-yellow\">\n 所谓设计模式，是针对典型问题所提供的一套成熟的解决方案。MVC就是一种流行的程序设计模式，它把程序理解为由模型层（Model)、视图层（View)和控制器层(Controller)三个部分组成。其中，模型层表示程序的业务逻辑和状态，包括业务模型和数据模型；视图层是程序的用户界面，用于显示模型数据；控制器层响应用户请求，根据请求内容来操作模型层并控制程序的流程，决定要向用户显示的视图。\n</p>\nJava Web应用开发也可以采用MVC设计模式，用JSP作为视图层，Servlet作为控制器层，JavaBean作为模型层。这样的开发形式实现了程序的分层结构，将功能实现、用户界面和流程控制分别由不同的模块来实现，并在各个模块之间实现了良好的解耦。(<span id = \"font-blue\">jsp Model2</span>)\n\n在基于MVC的Web应用中，<span id = \"font-blue\">一次用户请求的处理过程</span>如下：\n\n<span id = \"inline-toc\">1.</span> 浏览器发出请求；\n<span id = \"inline-toc\">2.</span> 作为控制器的Servlet接收请求，并将请求以适当的方式分发给对应的业务模型JavaBean来处理；\n<span id = \"inline-toc\">3.</span> 如果该业务需要与数据库交互，由JavaBean来访问数据库；\n<span id = \"inline-toc\">4.</span> 模型层JavaBean将处理结果返回给控制器Servlet；\n<span id = \"inline-toc\">5.</span> Servlet以适当的方式将结果数据传递给视图层JSP页面，并将控制流程转向该JSP页面；\n<span id = \"inline-toc\">6.</span> 应用服务器将JSP生成的HTML作为响应返回给浏览器。\n","source":"_posts/JavaWeb复习.md","raw":"---\ntitle: JavaWeb复习笔记\ncopyright: true\nabbrlink: 7e6d3dbd\nnotshow: false\ntags:\n  - Java\n  - 学习\ncategories: Java\ndescription: 完全根据PPT复习范围整理，如发现错误请在评论区留言，会及时修改\nimage:\n  - 'https://data.singlelovely.cn/CoverPicture/3c115208.jpg!CoverPicture'\ndate: 2019-05-29 00:20:00\npassword:\nphotos:\nsticky:\n---\n\n{% meting \"40962509\" \"netease\" \"playlist\" \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#00CED1\" %}\n\n## 第一章开发任务概述\n\n### Web应用\n\n- B/S结构：适用于大中型应用程序，极少事务逻辑在前端(Browser)实现，主要事务逻辑在服务器端(Server)实现。这种结构的程序简化了客户端的功能负载，减轻了应用维护与升级的成本和工作量，降低了用户的总体成本，但应用服务器运行负荷较重。\n\n### 客户端开发技术\n\n1、HTML技术\n\nHTML(HyperText Markup Language，超文本标记语言）是一种用于表示网上信息的符号标记语言。\n\n2、CSS技术\n\nCSS(Cascading Style Sheets，层叠样式表）技术是一种定义样式结构（如字体、颜色、位置等）的语言，用于描述网页上的信息格式和显示的方式。\n\n 3、JavaScript技术\n\nJavaScript是一种广泛应用于客户端的脚本语言，通过嵌入到HTML中来实现自身的功能；通过控制网页元素的行为和CSS代码中的样式定义，为网页增添了诸如表单内容验证、动画显示效果等交互能力，可以使静态网页具备一定的动态效果。\n服务器端开发技术\n\n### 服务器端开发技术\n\n1、Servlet技术\n<p id = \"div-border-left-yellow\">\nServlet是以Java技术为基础的服务器端应用程序组件，与运行在浏览器端的Applet相对应。Serv」et是被Web服务器（如Tomcat)加载和执行，而Applet则是被浏览器加载和执行。Servlet通过Web服务器接收客户端浏览器发来的请求，执行预定的功能，然后将执行结果返回给客户端的浏览器。Servlet可以使用服务器端的所有Java 类库资源，所以理论上其功能可以无限扩展。\n</p>\n2、JSP技术\n<p id = \"div-border-left-yellow\">\nJSP(Java Server Page)是建立在Servlet规范提供的功能之上的一种动态网页技术。\n</p>\n3、JavaBean技术\n<p id = \"div-border-left-yellow\">\nJavaBean是Java组件技术的核心，它是Java平台上实现重用的软件组件模型。JavaBean是一种特殊的Java类，需要满足一定的规范要求。\n</p>\n4、JDBC技术\n<p id = \"div-border-left-yellow\">\nJDBC(Java DataBase Connectivity)是一种用于执行SQL语句的Java API （Application Programming Interface，应用编程接口)，由一组Java语言编写的类和接口组成。\n</p>\n\n### HTTP请求/响应机制\n\n处理过程包括以下步骤：\n\n- 浏览器向Web服务器发送请求报文。\n- 服务器解析接收到的请求，定位请求资源，做相应处理，然后封装好响应报文，回送给浏览器。\n- 浏览器收到响应报文，解析HTML、图片等静态内容，渲染网页呈现给用户，解析DOM(Document Object Model，文档对象模型）树，脚本引擎执行脚本代码，完成DOM 操作、CSS属性更改、发送AJAX(Asynchronous JavaScript And XML，异步JavaScript 和XML)请求等功能。\n\n<span id = \"font-green\">HTTP主要有以下特点：</span>\n\n- 简单快速<br>\n- 灵活<br>\n- 无连接<br>\n- 无状态<br>\n- 支持B/S及C/S模式\n\n## 第二章 用户界面设计\n\n### 用户界面元素开发\n\n```html\n<!-- 无序列表 -->\n<ul>\n    <li>Coffee</li>\n    <li>Milk</li>\n</ul>\n<!-- 文本段落 -->\n<p>This is a paragraph</p>\n<p>This is another paragraph</p>\n<!-- 块、行内元素、图片 -->\n<div>\n<span>\n<img src=\"boat.gif\" alt=\"Big Boat\">\n<!-- 表单  -->\n<form>\n First name:<br>\n<input type=\"text\" name=\"firstname\">\n<br>\n Last name:<br>\n<input type=\"text\" name=\"lastname\">\n</form>\n<!-- 下拉列表框  -->\n<select>\n  <option value =\"volvo\">Volvo</option>\n  <option value =\"saab\">Saab</option>\n  <option value=\"opel\">Opel</option>\n  <option value=\"audi\">Audi</option>\n</select>\n<!--多行文本框-->\n<textarea rows=\"3\" cols=\"20\">\n    在w3school，你可以找到你所需要的所有的网站建设教程。\n</textarea>\n<!--表格-->\n<table border=\"1\">\n  <tr>\n    <th>Month</th>\n    <th>Savings</th>\n  </tr>\n  <tr>\n    <td>January</td>\n    <td>$100</td>\n  </tr>\n</table>\n<!-- 超链接 -->\n<a href=\"http://www.w3school.com.cn\">W3School</a>\n<!-- HTML文件的基本结构、HTML标记格式 -->\n略\n```\n\n### 界面布局设计\n\n#### 什么是css\n\nCSS是Cascading Style Sheets(层叠样式表）的缩写，是一种美化网页的技术。它的引入使HTML网页美工设计不再烦琐。\n\n#### CSS选择器格式\n\n1、标记选择器：直接针对HTML标记定义样式。\n<div class=\"note info\">\nHTML标记名{标记属性：属性值; 标记属性：属性值; 标记属性: 属性值;...}\n</div>\n2、类别选择器：\n<div class=\"note info\">\n.类别选择器名{标记属性: 属性值; 标记属性: 属性值; 标记属性: 属性值;...;}\n<HTML 标记名 class = \"类别选择器名\">\n</div>\n3、ID选择器：\n<div class=\"note info\">\n#ID选择器名{标记属性：属性值; 标记属性: 属性值; 标记属性: 属性值;...;}\n<HTML 标记名 id=\"ID选择器名\">\n</div>\n4、伪元素选择器：指对同一HTML元素的各种状态来定义样式的一种方式。\n<div class=\"note info\">\nHTML标记：伪元素{样式}\n</div>\n\n#### 在HTML中使用CSS的方法\n\n1、嵌入式：将样式表嵌入到HTML标记的属性中，把样式的定义直接作为标记的style属性值。格式如下：\n\n```html\n    <HTML 标记 style = \"属性名：属性值\">\n```\n\n(2)头部式：把样式定义在HTML页面的头部，用\\<style>标记进行声明。这样定义的样式在整个页面中都可以使用。基本格式如下：\n\n```html\n    <style>\n        样式定义\n    </style>\n```\n\n(3)外部式：当在很多网页里都要使用相同的样式时，可以使用外部样式表的形式。\n\n```html\n< link href= \"\" rel= \"stylesheet\"  type= \"text/css\"  />\n```\n\n#### DIV+CSS布局的实现思路\n\n可以使用DIV+CSS 来实现网页布局，实现路是先用\\<div>标记对整个页面进行分块，然后再利用CSS样式对每个div分块进行布局设置，最后在各个div分块中添加内容。\n\n### 客户端功能开发\n\n#### JavaScript概述\n\nJavaScript是一种简单的脚本语言，由浏览器解释执行，简单、易学、易用。其最基本的两个特点是基于对象和事件驱动。\n\n所谓基于对象，是指JavaScript支持使用对象，但是没有提供面向对象语言的所有功能，不是完全的面向对象编程语言。\n\n事件驱动指JavaScript程序的运行机制。它把GUl(图形用户界面）中的用户动作封装为各种事件，例如单击按钮、移动鼠标、按下键盘等都是事件，当某个事件发生时，就会触发相应的事件处理程序运行。\n\n#### JavaScript脚本的使用方式\n\nJavaScript代码可以直接嵌入到HTML文件中使用，嵌入方式主要有三种：嵌入标记事件属性、使用脚本语句块、链接独立的脚本文件。\n\n#### 对象\n\nJavaScript中的对象由属性和方法构成，主要有三种类型：内置对象、浏览器提供的对象和自定义对象。\n\n- Date对象：用于处理日期和时间，需要先创建才能使用。\n- window对象：代表当前浏览器窗口所有JavaScript全局对象、函数和变量均自动成为window对象的成员。\n    - window对象提供了多个属性和函数用于对浏览器窗口进行操作。\n    - window对象的常用函数有：alert(警告对话框)、confirm(确认对话框）、prompt(消息框)、open(打开新窗口）、print(打印网页内容）等。\n    - 因为window对象是JavaScript中最顶级的对象，所以在使用当前窗口对象的函数时，可以省略函数前的window，即可以直接使用alert()，而不需要用window.alert()。\n- document对象：属于HTML DOM(Document Object Model，文档对象模型）。当网页被加载时，浏览器会创建当前页面的DOM模型。DOM的最顶层就是HTML文档，document对象就代表当前HTML文档，通过它可以访问页面中的所有元素。\n\n<span id = \"font-blue\"><span id = \"font-green\">document</span>对象的常用方法如下:</span>\n\n- write(字符串）：将字符串或数值显示在显示器上。\n- getElementById()：返回对指定id的第一个对象的引用。\n\n## 第三章 web应用开发基础\n\n### 开发环境和运行环境\n\n略\n\n### jsp基本概念\n\n#### 运行机制\n\n当浏览器向服务器发出请求访问一个JSP页面时，所请求的JSP文件会被服务器端的JSP引擎转化为一个Java类，并被编译成一个字节码文件，再装载到Java虚拟机中运行，最后把运行产生的输出作为对本次请求的响应返回给浏览器。\n\n#### Web应用目录结构\n\n按照Java EE规范的规定，一个典型的Java Web应用包含四个部分：\n\n- 公开文件夹，存放能够被用户访问的资源，包括.jsp、.htm、.js、.css、.jpg等文件。\n- WEB-INF/web.xml文件，应用的部署描述文件。\n- WEB-INF/classes文件夹，存放编译好的Java类文件(.class)。\n- WEB-INF/lib文件夹，存放Java类库文件(.jar)。\n\n### jsp基础语法\n\njap脚本代码：Java代码片段，可以实现业务逻辑处理，也可以产生输出。例如：\n\n```java\n<%\n    SimpleDateFormat df = new SimpleDateFormat(\"yyyy-M-d HH:mm:ss\");\n%>\n```\n\njsp声明：在声明中定义的变量和方法都会成为转义后的Java类的成员变量及类成员方法，声明的类则成为内部类。语法格式如下：\n\n```java\n    <%! 变量或方法、类的声明 %>\n```\n\njsp表达式：一种简单的输出形式。\n\n```java\n    <% = 表达式 %>\n```\n\n#### jsp指令\n\n<span id = \"font-red\">page指令</span>称为页面指令，用来定义JSP页面的全局属性，该配置会作用于整个页面。\n\n- <span id = \"font-purple\">language</span>属性：设置当前页面中编写JSP脚本使用的语言，默认值为java。\n- <span id = \"font-purple\">import</span>属性：用来导入程序中要用到的包或类，可以有多个值，无论是Java核心包中自带的类还是用户自行编写的类，都要在import中引入，才能使用。\n- <span id = \"font-purple\">errorPage</span>属性：用于指示一个JSP文件的相对路径，以便在页面出错时，转到这个JSP文件来进行处理。与此相适应，需要将这个JSP文件的isErrorPage属性设为true。\n- <span id = \"font-purple\">isErrorPage</span>属性：指示一个页面是否为错误处理页面。设置为true时，在这个JSP页面中的内建对象exception将被定义，其值将被设定为呼叫此页面的JSP页面的错误对象，以处理该页面所产生的错误。\n- <span id = \"font-purple\">contentType</span>属性：设置发送到客户端文档的响应报头的MIME（Multipurpose Internet Mail Extention）类型和字符编码。\n- <span id = \"font-purple\">pageEncoding</span>属性：设置JSP页面字符的编码，常见的编码类型有ISO-8859-1、gb2312和GBK等。默认值为ISO-8859-1。\n\n用法示例：\n\n```jsp\n<%@page language=\"java\" %>\n<%@page import=\"包名.类名\"%>\n<%@page import=\"包名.*\"%>\n<%@ page pageEncoding=\"gb2312\"%>\n```\n\n<span id = \"font-red\">include指令</span>：在JSP中，可以使用include指令来包含其他jsp文件。\n\n<span id = \"font-red\">taglib指令</span>：声明用户使用自定义的标签，将标签库描述符文件导入到jsp页面。\n\n```jsp\n <%@ taglib (uri=\"tigLibURL\" 或 tagDir=\"tagDir\") prefix=\"tagPrefix\" %>\n```\n\n属性：\n\n- <span id = \"font-purple\">uri</span>属性:定位标签库描述符的位置。唯一标识和前缀相关的标签库描述符，可以使用绝对或相对URL。\n- <span id = \"font-purple\">tagDir</span>属性：指示前缀将被用于标识在WEV-INF/tags目录下的标签文件。\n- <span id = \"font-purple\">prefix</span>属性：标签的前缀，区分多个自定义标签。不可以使用保留前缀和空前缀，遵循XML命名空间的命名约定。\n\n#### JSP标记\n\n<span id = \"font-green\">\\<jsp:include></span>用于将HTML或者jsp动态内容插入到当前的jsp页面中。\n\n<span id = \"font-green\">\\<jsp:param></span>用于向被包含的页面传递参数。\n\n<span id = \"font-green\">\\<jsp:forward></span>用于实现页面请求的转发，可以把对当前jsp页面的请求转发到同一web应用中的另一个资源。\n\n```jsp\n<%@include file=\"文件的URL\"%>\n<jsp:forward page=\"接受参数页面的URL\">\n    <jsp:param name=“参数名 value = \"参数值\"/>\n<jsp:forward/>\n\n```\n\n## 第四章 流程控制与数据传递\n\n### jsp内置对象\n\n|内置对象名称|类型|作用域|用途|\n|---|:--:|:---|---|\n|request|javax.servlet.httpServletRequest|Request|代表了客户端的请求信息，接受通过HTTP协议传送到服务器的数据。(乱码处理)|\n|response|javax.servlet.http.HttpServletResponse|Page|对客户端的响应，将JSP容器处理过的对象传回到客户端。(页面重定向)|\n|session|javax.servlet.http.HttpSession|Page|在第一个JSP页面被装载时自动创建，完成会话期管理。（存取属性值，保存用户的信息）|\n|out|javax.servlet.jsp.jspWriter|Page|在Web浏览器内输出信息，并且管理应用服务器上的输出缓冲区。|\n\n**<center><span id = \"font-blue\">request对象主要方法</span></center>**\n\n|方法声明|功能简介|\n|:---|:---|\nsetAttribute(String name,Object) | 设置名字为name的request的參数值\ngetAttribute(String name) | 返回由name指定的属性值\ngetAttributeNames() | 返回request对象全部属性的名字集合，结果是一个枚举的实例\ngetCookies() | 返回client的全部Cookie对象，结果是一个Cookie数组\ngetCharacterEncoding() | 返回请求中的字符编码方式\ngetContentLength() | 返回请求的Body的长度\ngetHeader(String name) | 获得HTTP协议定义的文件头信息\ngetHeaders(String name) | 返回指定名字的request Header的全部值，结果是一个枚举的实例\ngetHeaderNames() | 返回所以request Header的名字，结果是一个枚举的实例\ngetInputStream() | 返回请求的输入流，用于获得请求中的数据\ngetMethod() | 获得client向server端传送数据的方法\ngetParameter(String name) | 获得client传送给server端的有name指定的參数值\ngetParameterNames() | 获得client传送给server端的全部參数的名字，结果是一个枚举的实例\ngetParameterValues(String name) | 获得有name指定的參数的全部值\ngetProtocol() | 获取client向server端传送数据所根据的协议名称\ngetQueryString() | 获得查询字符串\ngetRequestURI() | 获取发出请求字符串的client地址\ngetRemoteAddr() | 获取client的IP地址\ngetRemoteHost() | 获取client的名字\ngetSession([Boolean create]) | 返回和请求相关Session\ngetServerName() | 获取server的名字\ngetServletPath() | 获取client所请求的脚本文件的路径\ngetServerPort() | 获取server的port号\nremoveAttribute(String name) | 删除请求中的一个属性\n\n**<center><span id = \"font-blue\">response对象常用方法</span></center>**\n\n|方法声明|功能简介|\n|:---|:---|\nvoid setContentType(String type) | 设置响应数据的MIME类型\nString getContentType() | 取得响应数据的MIME类型\nvoid setHeader(String name, String value) | 设置指定的响应报头\nvoid sendRedirect() | 重定向客户的请求到指定页面\nvoid addCookie(Cookie cookie) | 给客户端添加一个Cookie对象，以保存客户端的信息\nPrintWriter getWriter() | 返回一个输出字符流\nvoid flushBuffer() | 清空缓冲区，强行把Buffer的内容写到客户端浏览器\n\n**<center><span id = \"font-blue\">session对象常用方法</span></center>**\n\n|方法声明|功能简介|\n|:---|:---|\ngetAttribute(String name) | 获取session对象中名为name的属性值，不存在则为null\nremoveAttribute(String name) | 删除session对象中名为name的属性\nsetAttribute(String name, Object value) | 设置session对象属性，属性名为name，属性值为value\ngetCreationTime() | 获取session对象的创建时间，返回1970年1月1日至今的毫秒数（Unix时间戳）\ngetLastAccessTime() | 获取session对象对应客户端的最近发送请求的时间，返回1970年1月1日至今的毫秒数\ninvalidate() | 销毁session对象中的信息，session本身不会被销毁\ngetMaxInactiveInterval() | 获取会话超时时间，单位为秒\nsetMaxInactiveInterval(int interval) | 设置会话超时时间，单位为秒\n\n### Cookie机制\n\nCookie是Web服务器产生并嵌入在HTTP响应报头中的一小段文本。浏览器在收到一个Cookie后会把它保存到特定的文件夹下，并在接下来再次访问同一个Web服务器时，自动在请求报头中携带该Cookie，供服务器读取使用，从而弥补HTTP无状态的不足。基于这一工作机制，可以实现用户识别、应用定制等功能。\n\n一个Cookie包含一个名称和值，以及一些可选的属性，如路径、最长存活时间等。Java提供了javax.servlet.http.Cookie类来支持Cookie机制的实现。可以使用response 对象的addCookie()方法向浏览器发送Cookie，使用request对象的getCookie()方法获取请求中的所有Cookie。\n\n**<center><span id = \"font-blue\">cookie类的主要方法</span></center>**\n\n|方法声明|功能简介|\n|:---|:---|\nString geyName() | 获取cookie的名称\nString getValue() | 获取cookie的值\nvoid setValue(String value) | 在cookie创建后，为cookie赋予新的值\nint getMaxAge() | 获取cookie的有效时间，以秒为单位，-1表示cookie将一直持续下去，直到浏览器关闭\nString getPath() | 返回cookie适用的路径\nvoid setPath(String uri) | 设置cookie的适用路径。如不指定，则当前页面的同目录与子目录下所有RRL都返回cookie\n\n### 控制流和数据流的实现\n\n1、jsp页面间的流程控制\n\n- 超链接\n- 表单提交\n- 页面重定向\n- 请求转发\n\n2、jsp页面间的数据传递\n\n- 表单传参\n- url传参\n- <jsp:param>标记传参\n- 作用域传参\n\n## 数据库访问\n\n### 数据库访问代码模板\n\n```jsp\n<%@ page language=\"java\" import=\"java.util.*\" pageEncoding=\"utf-8\"%>\n<%@ page import=\"java.sql.*\" %>\n\n<%\n\n    String driver = \"com.mysql.jdbc.Driver\";\n\n    // URL指向要访问的数据库名test1\n    String url = \"jdbc:mysql://127.0.0.1:3306/test\";\n\n    // MySQL配置时的用户名\n    String user = \"root\";\n\n    // Java连接MySQL配置时的密码\n    String password = \"111\";\n\n    try {\n        // 1 加载驱动程序\n        Class.forName(driver);\n\n        // 2 连接数据库\n        Connection conn = DriverManager.getConnection(url, user, password);\n\n        // 3 用来执行SQL语句\n        Statement statement = conn.createStatement();\n\n        // 要执行的SQL语句\n        String sql = \"select * from login\";\n\n        //处理执行结果\n        ResultSet rs = statement.executeQuery(sql);\n        String name = null;\n        String mima=null;\n        while (rs.next()) { \n        name = rs.getString(\"userName\"); \n        mima = rs.getString(\"passWord\"); \n        out.println(name+\"\\t\"+mima); \n        }\n        rs.close();\n        conn.close();\n    } catch (ClassNotFoundException e) {\n        System.out.println(\"Sorry,can`t find the Driver!\");\n        e.printStackTrace();\n    } catch (SQLException e) {\n        e.printStackTrace();\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n\n%>\n\n```\n\n### JDBC技术\n\n#### 基础概念\n\nJava语言访问数据库的一种规范,是一套API\n\nJDBC (Java Database Connectivity) API，即Java数据库编程接口，是一组标准的Java语言中的接口和类，使用这些接口和类，Java客户端程序可以访问各种不同类型的数据库。比如建立数据库连接、执行SQL语句进行数据的存取操作。\n\n#### DriverManager类\n\n处理驱动程序的加载和建立新数据连接。\n\n```java\nconnection.getConnection(String url, String user, String password)\nConnection con = DriverManager.getConnection(\"jdbc:oracle:thin:@127.0.0.1:1521:name\", \"scott\",\"tiger\");\n```\n\n#### Connection接口\n\n代表Java程序与数据库间的连接，用于提供创建语句以及管理连接及其属性方法。\n\n**<center><span id = \"font-blue\">Connection接口常用方法</span></center>**\n\n|方法声明|功能简介|\n|:---|:---|\nStatement createStatement() | 创建一个Statement对象，用于将SQL语句发送到数据库，通常在执行无参数的SQL语句时创建该实例\nPrepareStatement prepareStatement() | 通常在执行包含参数的SQL语句时创建该实例，并对SQL语句进行预编译处理\nvoid close() | 关闭数据库连接\n\n```java\n Statement st = con.createStatement();\n```\n\n#### Statement接口\n\n用于执行静态SQL语句并返回它所生成结果的对象。\n\n**<center><span id = \"font-blue\">Statement接口常用方法</span></center>**\n\n|方法声明|功能简介|\n|:---|:---|\nResultSet executeQuery(String sql) | 执行指定的静态select语句，并返回一个永远不为null的ResultSet实例\nint executeUpdate(String sql) | 执行指定的静态INSET、UPDATE或DELETE语句，并返回一个int型数值，未同步更新记录的条数\n\n```java\n ResultSet rs = st.executeQuery(sql);\n```\n\n#### PreparedStatement接口\n\n继承自Statement，表示预编译的SQL语句的对象，预编译SQL效率高且支持参数查询\n\n#### ResultSet接口\n\n用于表示数据库结果集的数据表，通常由执行查询数据库的语句生成，其中存放了查询结果。\n\n在ResultSet对象中具有指向当前数据行的游标，可以在<span id = \"font-green\">while</span>循环中使用<span id = \"font-green\">next()</span>方法来迭代处理结果集。\n\n**<center><span id = \"font-blue\">ResultSet接口常用的获取列值方法</span></center>**\n\n|返回类型|方法名称|返回类型|方法名称|\n|:---|:---|:---|:---|\nbyte | getByte(inc columnIndex) | byte | getByte(String columnLabel)\nDate | getDate(inc columnIndex) | Date | getDate(String columnLabel)\ndouble | getDouble(inc columnIndex) | double | getDouble(String columnLabel)\nfloat | getFloat(inc columnIndex) | float | getFloat(String columnLabel)\nint | getInt(inc columnIndex) | int | getInt(String columnLabel)\nlong | getLong(inc columnIndex) | long | getLong(String columnLabel)\nString | getString(inc columnIndex) | String | getString(String columnLabel)\n\n```java\nwhile(rs.next()){\n    int id = rs.getInt(\"id\");\n    String username = rs.getString(\"username\");\n    String gender = rs.getString(\"gender\");\n    java.sql.Date hiredate = rs.getDate(\"hiredate\");\n    System.out.println(id+\"#\"+username+\"#\"+gender+\"+hiredate);\n}\n```\n\n## 重构程序功能\n\n### JavaBean技术\n\n#### JavaBean编写规范\n\n- 是一个公共类\n- 具有无参数的公共构造方法\n- 具有公共的setter和getter方法来供外部存取其私有属性\n- 需要放在命名包里，不能放在默认包中\n\n#### JavaBean的编译\n\n略\n\n#### 使用JavaBean\n\n- <span id = \"font-green\">\\<jsp:useBean></span> 装载一个将在JSP页面中使用的JavaBean。\n    - scope，作用域\n\n```jsp\n<jsp:useBean id=\"name\" class=\"package.class\"   scope=\"page | request | session | application\" />  \n```\n\n- <span id = \"font-green\">\\<jsp:setProperty></span> 获取指定的JavaBean的值。\n    - 详解见[jsp:useBean的用法](https://blog.csdn.net/u011024652/article/details/52012435)\n\n```jsp\n//自动匹配赋值\n<jsp:setProperty name=\"JavaBean实例名\" property=\"*\" />\n//自动匹配指定属性\n<jsp:setProperty name=\"JavaBean实例名\" property=\"JavaBean属性名\" />\n//手动设置属性值\n<jsp:setProperty name=\"JavaBean实例名\" property=\"JavaBean属性名\" value=\"BeanValue\" />\n//通过获取request的参数来为相应的属性赋值，其中param为参数名\n<jsp:setProperty name=\"JavaBean实例名\" property=\"JavaBean属性名\" param=\"request对象中的参数名\" />\n```\n\n- <span id = \"font-green\">\\<jsp:getProperty></span> 获取指定Javabean对象的属性值。\n\n#### JavaBean实例\n\n```jsp login.jsp\n<%@ page language=\"java\" import=\"java.util.*\" contentType=\"text/html; charset=utf-8\" %>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <base href=\"<%=basePath%>\">\n    <title>My JSP 'login.jsp' starting page</title>\n        <meta http-equiv=\"pragma\" content=\"no-cache\">\n        <meta http-equiv=\"cache-control\" content=\"no-cache\">\n        <meta http-equiv=\"expires\" content=\"0\">   \n        <meta http-equiv=\"keywords\" content=\"keyword1,keyword2,keyword3\">\n        <meta http-equiv=\"description\" content=\"This is my page\"> \n  </head>\n  <body>\n    <h1>系统登录</h1>\n    <hr>\n    <form name=\"loginForm\" action=\"dologin.jsp?mypass=999999\" method=\"post\">\n      <table>\n        <tr>\n          <td>用户名：</td>\n          <td><input type=\"text\" name=\"username\" value=\"\"/></td>\n        </tr>\n        <tr>\n          <td>密码：</td>\n          <td><input type=\"password\" name=\"password\" value=\"\"/></td>\n        </tr>\n        <tr>\n          <td colspan=\"2\" align=\"center\"><input type=\"submit\" value=\"登录\"/></td>\n        </tr>\n      </table>\n    </form>\n  </body>\n</html>\n```\n\n```jsp dologin.jsp\n<%@ page language=\"java\" import=\"java.util.*\" contentType=\"text/html; charset=utf-8\"%>\n<%\nString path = request.getContextPath();\nString basePath = request.getScheme()+\"://\"+request.getServerName()+\":\"+request.getServerPort()+path+\"/\";\n%>\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n  <head>\n    <base href=\"<%=basePath%>\">\n\n    <title>My JSP 'dologin.jsp' starting page</title>\n\n        <meta http-equiv=\"pragma\" content=\"no-cache\">\n        <meta http-equiv=\"cache-control\" content=\"no-cache\">\n        <meta http-equiv=\"expires\" content=\"0\">   \n        <meta http-equiv=\"keywords\" content=\"keyword1,keyword2,keyword3\">\n        <meta http-equiv=\"description\" content=\"This is my page\">\n\n  </head>\n  <body>\n    <jsp:useBean id=\"myUsers\" class=\"com.po.Users\" scope=\"page\"/>\n    <h1>setProperty动作元素</h1>\n    <hr>\n   <!--根据表单自动匹配所有的属性 -->\n   <jsp:setProperty name=\"myUsers\" property=\"*\"/> \n\n   <!--根据表单匹配所有部分的属性 -->\n   <jsp:setProperty name=\"myUsers\" property=\"username\"/> \n\n   <!--根表单无关，通过手工赋值给属性 -->\n   <jsp:setProperty name=\"myUsers\" property=\"username\" value=\"lisi\"/>\n   <jsp:setProperty name=\"myUsers\" property=\"password\" value=\"888888\"/>\n\n   <!--通过URL传参数给属性赋值 -->\n   <jsp:setProperty name=\"myUsers\" property=\"username\"/>\n   <jsp:setProperty name=\"myUsers\" property=\"password\" param=\"mypass\"/>\n\n   <!-- 使用传统的表达式方式来获取用户名和密码 -->\n       用户名：<%=myUsers.getUsername() %><br>\n       密码：<%=myUsers.getPassword() %><br>\n\n   <!-- 使用getProperty方式来获取用户名和密码 -->\n      用户名：<jsp:getProperty name=\"myUsers\" property=\"username\"/> <br>\n      密码：<jsp:getProperty name=\"myUsers\" property=\"password\"/><br>\n   <br>\n   <br>\n  </body>\n</html>\n```\n\n## 重构程序界面\n\n### EL和JSTL\n\nEL语法格式\n\n     ${EL表达式}\n\n运算符：略\n\n**<center><span id = \"font-blue\">EL常用内置对象</span></center>**\n\n|内置对象|描述|\n|:---|:---|\npageScope | 取得 page 范围的属性名称所对应的值，${pageScope.name}等同与pageContext.getAttribute(“name”);\nrequstScope | 取得 request 范围的属性名称所对应的值，${requestScope.name}等同与request.getAttribute(“name”)；\nsessionScope | 取得 session 范围的属性名称所对应的值，${sessionScope.name}等同与session.getAttribute(“name”)；\napplicationScope | 取得 application 范围的属性名称所对应的值，${applicationScope.name}等同与application.getAttribute(“name”)；\nparam | 可以用来获取参数，${param.username} 等同于request.getParameter(\"username\"); 返回 Slring[] 类型的值\nparamValues | ${paramValues.hobby} 如同 ServletRequest.getParameter Values(String name)， 返回 string[] 类型的值\n\n<span id = \"inline-blue\">在JSP中使用JSTL的步骤如下</span>\n<p id = \"div-border-left-purple\">\n1. 首先需要到http：//tomcat.apache.org/taglibs/standard/ 下载JSTL标记库的jar包。<br>\n2. 然后将获取到的JSTL标记库的jar包，复制到Web应用中的WEB-INF\\lib文件夹下。<br>\n3. 最后在JSP页面中用taglib指令设置标记前缀，即可使用JSTL标记。<br>\n</p>\nJSTL标记：\n\n- <span id = \"font-green\">\\<c:out></span> 用来显示一个表达式的结果，与<%= %>作用相似，它们的区别就是<c:out>标签可以直接通过\".\"操作符来访问属性\n    - <span id = \"font-purple\">value</span>：要输出的内容，必须\n    - <span id = \"font-purple\">default</span>：输出的默认值，非必须，默认为主体中的内容\n    - <span id = \"font-purple\">escapeXml</span>：是否忽略XML特殊字符，非必须，默认为true\n\n```jsp\n<c:out value=\"<string>\" default=\"<string>\" escapeXml=\"<true|false>\"/>\n```\n\n- <span id = \"font-green\">\\<c:set></span> 用于设置变量值和对象属性。\n    - <span id = \"font-purple\">value</span>：要存储的值，非必须，默认为主体的内容\n    - <span id = \"font-purple\">target</span>：要修改的属性所属的对象，非必须\n    - <span id = \"font-purple\">property</span>：要修改的属性，非必须\n    - <span id = \"font-purple\">var</span>：存储信息的变量，非必须\n    - <span id = \"font-purple\">scope</span>：var属性的作用域，非必须，默认为Page\n<div class=\"note warning\">如果指定了target属性，那么property属性也需要被指定。</div>\n\n```jsp\n<c:set var=\"<string>\" value=\"<string>\"   target=\"<string>\"   property=\"<string>\"   scope=\"<string>\"/>\n```\n\n- <span id = \"font-green\">\\<c:if></span> 判断表达式的值，如果表达式的值为 true 则执行其主体内容。\n    - <span id = \"font-purple\">test</span>：条件，必须\n    - <span id = \"font-purple\">var</span>：存储条件结果的变量，非必须\n    - <span id = \"font-purple\">scope</span>：var属性作用域，非必须\n\n```jsp\n<c:if test=\"<boolean>\" var=\"<string>\" scope=\"<string>\">\n   ...\n</c:if>\n```\n\n- <span id = \"font-green\">\\<c:choose></span> 与Java switch语句的功能一样，用于在众多选项中做出选择。\n    - switch语句中有case，而<c:choose>标签中对应有<c:when>，switch语句中有default，而<c:choose>标签中有<c:otherwise>\n    - <span id = \"font-purple\">test</span>：条件，必须\n\n```jsp\n<c:choose>\n    <c:when test=\"<boolean>\">\n        ...\n    </c:when>\n    <c:when test=\"<boolean>\">\n        ...\n    </c:when>\n    ...\n    ...\n    <c:otherwise>\n        ...\n    </c:otherwise>\n</c:choose>\n```\n\n- <span id = \"font-green\">\\<c:forEach></span> 迭代一个集合中的对象。\n    - <span id = \"font-purple\">items</span>：要被循环的信息，非必须\n    - <span id = \"font-purple\">begin</span>：开始的元素（0=第一个元素，1=第二个元素），非必须，默认为0\n    - <span id = \"font-purple\">end</span>：最后一个元素（0=第一个元素，1=第二个元素），非必须，默认为Last element\n    - <span id = \"font-purple\">step</span>：每一次迭代的步长，非必须，默认为1\n    - <span id = \"font-purple\">var</span>：代表当前条目的变量名称，非必须\n    - <span id = \"font-purple\">varStatus</span>：代表循环状态的变量名称，非必须\n\n```jsp\n<c:forEach items=\"<object>\" begin=\"<int>\" end=\"<int>\" step=\"<int>\" var=\"<string>\" varStatus=\"<string>\">\n\n<c:forEach var=\"i\" begin=\"1\" end=\"5\">\n   Item <c:out value=\"${i}\"/><p>\n</c:forEach>\n```\n\n### Servlet开发\n\n#### HttpServlet类、方法\n\n对于Web应用而言，Servlet主要是用于处理HTTP请求，所以更一般的编写Servlet方法是继承javax.servlet.http.HttpServlet类。\n\nHttpServlet类是GeniricServle类的子类，通过调用指定到HTTP请求的方法来实现service(）方法。对于HTTP中定义的DELETE、HEAD、GET、POST、PUT等方法，分别调用doDelete(），doHead()、doGet()、doPost()、doPut(）等方法来处理相应的请求。\n\n**<center><span id = \"font-blue\">HttpServlet类主要方法</span></center>**\n\n|方法声明|功能简介|\n|:---|:---|\nvoid doGet(httpServletRequest request, HttpServletResponse, response) | 用来处理Http Get请求\nvoid doPost(httpServletRequest request, HttpServletResponse, response) | 用来处理Http Post请求\nvoid service(httpServletRequest request, HttpServletResponse, response) | 根据请求的类型，将请求导向doGet(),doPost()方法\n\n#### 编写、编译Servlet\n\n编写<span id = \"font-green\">Servlet</span>的一般步骤如下:\n<p id = \"div-border-left-purple\" >\n1. 导入javax.servlet包、javax.servlet.http包及其他必要的包。<br>\n2. 继承HttpServlet类，并重写doPost（)和doGet（)方法。<br>\n3. 在doPost(）和doGet()方法中依次实现获取请求参数、创建输出对象、设置响应类型、输出响应内容等功能。<br>\n</p>\n<span id = \"font-blue\">编译</span>和<span id = \"font-blue\">配置</span>Servlet:\n\n- Servlet类编写完成之后，需要进行编译和部署。\n- 编译Servlet之前需要先把Servlet API库文件添加到环境变量CLASSPATH 中。可以直接使用Tomcat发行版中包含的servlet-api.jar。向系统的CLASSPATH环境变量中增加下面的值（假定Tomcat安装目录为d:\\tomcat)：\n<div class=\"note success\"> d: \\tomcat\\lib\\servlet-api . jar</div>\n- 然后打开命令行窗口，进入dem008应用中的src目录，使用下面的命令进行编译：\n<div class=\"note success\">javac -d  ..\\classes  servlet\\HelloServlet.java</div>\n\n```xml web.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app>\n    <servlet>  \n        <servlet-name>business</servlet-name>  \n        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>\n    </servlet>\n    <servlet-mapping>  \n        <servlet-name>LogOutServlet</servlet-name>  \n        <url-pattern>/logout</url-pattern>  \n    </servlet-mapping>\n</web-app>\n```\n\n### MVC设计模式\n<p id = \"div-border-left-yellow\">\n 所谓设计模式，是针对典型问题所提供的一套成熟的解决方案。MVC就是一种流行的程序设计模式，它把程序理解为由模型层（Model)、视图层（View)和控制器层(Controller)三个部分组成。其中，模型层表示程序的业务逻辑和状态，包括业务模型和数据模型；视图层是程序的用户界面，用于显示模型数据；控制器层响应用户请求，根据请求内容来操作模型层并控制程序的流程，决定要向用户显示的视图。\n</p>\nJava Web应用开发也可以采用MVC设计模式，用JSP作为视图层，Servlet作为控制器层，JavaBean作为模型层。这样的开发形式实现了程序的分层结构，将功能实现、用户界面和流程控制分别由不同的模块来实现，并在各个模块之间实现了良好的解耦。(<span id = \"font-blue\">jsp Model2</span>)\n\n在基于MVC的Web应用中，<span id = \"font-blue\">一次用户请求的处理过程</span>如下：\n\n<span id = \"inline-toc\">1.</span> 浏览器发出请求；\n<span id = \"inline-toc\">2.</span> 作为控制器的Servlet接收请求，并将请求以适当的方式分发给对应的业务模型JavaBean来处理；\n<span id = \"inline-toc\">3.</span> 如果该业务需要与数据库交互，由JavaBean来访问数据库；\n<span id = \"inline-toc\">4.</span> 模型层JavaBean将处理结果返回给控制器Servlet；\n<span id = \"inline-toc\">5.</span> Servlet以适当的方式将结果数据传递给视图层JSP页面，并将控制流程转向该JSP页面；\n<span id = \"inline-toc\">6.</span> 应用服务器将JSP生成的HTML作为响应返回给浏览器。\n","slug":"JavaWeb复习","published":1,"updated":"2020-02-20T06:06:59.370Z","comments":1,"layout":"post","link":"","_id":"ckec2td2n000lfkupt5i031b6","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-GDSDURNI\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"40962509\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#00CED1\"></div>\n<h2 id=\"第一章开发任务概述\"><a class=\"header-anchor\" href=\"#第一章开发任务概述\">☆</a>第一章开发任务概述</h2>\n<h3 id=\"web应用\"><a class=\"header-anchor\" href=\"#web应用\">☆</a>Web应用</h3>\n<ul>\n<li>B/S结构：适用于大中型应用程序，极少事务逻辑在前端(Browser)实现，主要事务逻辑在服务器端(Server)实现。这种结构的程序简化了客户端的功能负载，减轻了应用维护与升级的成本和工作量，降低了用户的总体成本，但应用服务器运行负荷较重。</li>\n</ul>\n<h3 id=\"客户端开发技术\"><a class=\"header-anchor\" href=\"#客户端开发技术\">☆</a>客户端开发技术</h3>\n<p>1、HTML技术</p>\n<p>HTML(HyperText Markup Language，超文本标记语言）是一种用于表示网上信息的符号标记语言。</p>\n<p>2、CSS技术</p>\n<p>CSS(Cascading Style Sheets，层叠样式表）技术是一种定义样式结构（如字体、颜色、位置等）的语言，用于描述网页上的信息格式和显示的方式。</p>\n<p>3、JavaScript技术</p>\n<p>JavaScript是一种广泛应用于客户端的脚本语言，通过嵌入到HTML中来实现自身的功能；通过控制网页元素的行为和CSS代码中的样式定义，为网页增添了诸如表单内容验证、动画显示效果等交互能力，可以使静态网页具备一定的动态效果。<br>\n服务器端开发技术</p>\n<h3 id=\"服务器端开发技术\"><a class=\"header-anchor\" href=\"#服务器端开发技术\">☆</a>服务器端开发技术</h3>\n<p>1、Servlet技术</p>\n<p id=\"div-border-left-yellow\">\nServlet是以Java技术为基础的服务器端应用程序组件，与运行在浏览器端的Applet相对应。Serv」et是被Web服务器（如Tomcat)加载和执行，而Applet则是被浏览器加载和执行。Servlet通过Web服务器接收客户端浏览器发来的请求，执行预定的功能，然后将执行结果返回给客户端的浏览器。Servlet可以使用服务器端的所有Java 类库资源，所以理论上其功能可以无限扩展。\n</p>\n2、JSP技术\n<p id=\"div-border-left-yellow\">\nJSP(Java Server Page)是建立在Servlet规范提供的功能之上的一种动态网页技术。\n</p>\n3、JavaBean技术\n<p id=\"div-border-left-yellow\">\nJavaBean是Java组件技术的核心，它是Java平台上实现重用的软件组件模型。JavaBean是一种特殊的Java类，需要满足一定的规范要求。\n</p>\n4、JDBC技术\n<p id=\"div-border-left-yellow\">\nJDBC(Java DataBase Connectivity)是一种用于执行SQL语句的Java API （Application Programming Interface，应用编程接口)，由一组Java语言编写的类和接口组成。\n</p>\n<h3 id=\"http请求-响应机制\"><a class=\"header-anchor\" href=\"#http请求-响应机制\">☆</a>HTTP请求/响应机制</h3>\n<p>处理过程包括以下步骤：</p>\n<ul>\n<li>浏览器向Web服务器发送请求报文。</li>\n<li>服务器解析接收到的请求，定位请求资源，做相应处理，然后封装好响应报文，回送给浏览器。</li>\n<li>浏览器收到响应报文，解析HTML、图片等静态内容，渲染网页呈现给用户，解析DOM(Document Object Model，文档对象模型）树，脚本引擎执行脚本代码，完成DOM 操作、CSS属性更改、发送AJAX(Asynchronous JavaScript And XML，异步JavaScript 和XML)请求等功能。</li>\n</ul>\n<p><span id=\"font-green\">HTTP主要有以下特点：</span></p>\n<ul>\n<li>简单快速<br></li>\n<li>灵活<br></li>\n<li>无连接<br></li>\n<li>无状态<br></li>\n<li>支持B/S及C/S模式</li>\n</ul>\n<h2 id=\"第二章-用户界面设计\"><a class=\"header-anchor\" href=\"#第二章-用户界面设计\">☆</a>第二章 用户界面设计</h2>\n<h3 id=\"用户界面元素开发\"><a class=\"header-anchor\" href=\"#用户界面元素开发\">☆</a>用户界面元素开发</h3>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 无序列表 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Coffee<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Milk<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 文本段落 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>This is a paragraph<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>This is another paragraph<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 块、行内元素、图片 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"boat.gif\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"Big Boat\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 表单  --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"> First name:<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"firstname\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"> Last name:<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 下拉列表框  --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span> =<span class=\"string\">\"volvo\"</span>&gt;</span>Volvo<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span> =<span class=\"string\">\"saab\"</span>&gt;</span>Saab<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"opel\"</span>&gt;</span>Opel<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"audi\"</span>&gt;</span>Audi<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--多行文本框--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">rows</span>=<span class=\"string\">\"3\"</span> <span class=\"attr\">cols</span>=<span class=\"string\">\"20\"</span>&gt;</span></span><br><span class=\"line\">    在w3school，你可以找到你所需要的所有的网站建设教程。</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--表格--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>Month<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>Savings<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>January<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>$100<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 超链接 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://www.w3school.com.cn\"</span>&gt;</span>W3School<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- HTML文件的基本结构、HTML标记格式 --&gt;</span></span><br><span class=\"line\">略</span><br></pre></td></tr></table></figure>\n<h3 id=\"界面布局设计\"><a class=\"header-anchor\" href=\"#界面布局设计\">☆</a>界面布局设计</h3>\n<h4 id=\"什么是css\"><a class=\"header-anchor\" href=\"#什么是css\">☆</a>什么是css</h4>\n<p>CSS是Cascading Style Sheets(层叠样式表）的缩写，是一种美化网页的技术。它的引入使HTML网页美工设计不再烦琐。</p>\n<h4 id=\"css选择器格式\"><a class=\"header-anchor\" href=\"#css选择器格式\">☆</a>CSS选择器格式</h4>\n<p>1、标记选择器：直接针对HTML标记定义样式。</p>\n<div class=\"note info\">\nHTML标记名{标记属性：属性值; 标记属性：属性值; 标记属性: 属性值;...}\n</div>\n2、类别选择器：\n<div class=\"note info\">\n.类别选择器名{标记属性: 属性值; 标记属性: 属性值; 标记属性: 属性值;...;}\n<html 标记名 class=\"类别选择器名\">\n</html></div>\n3、ID选择器：\n<div class=\"note info\">\n#ID选择器名{标记属性：属性值; 标记属性: 属性值; 标记属性: 属性值;...;}\n<html 标记名 id=\"ID选择器名\">\n</html></div>\n4、伪元素选择器：指对同一HTML元素的各种状态来定义样式的一种方式。\n<div class=\"note info\">\nHTML标记：伪元素{样式}\n</div>\n<h4 id=\"在html中使用css的方法\"><a class=\"header-anchor\" href=\"#在html中使用css的方法\">☆</a>在HTML中使用CSS的方法</h4>\n<p>1、嵌入式：将样式表嵌入到HTML标记的属性中，把样式的定义直接作为标记的style属性值。格式如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">HTML</span> 标记 <span class=\"attr\">style</span> = <span class=\"string\">\"属性名：属性值\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>(2)头部式：把样式定义在HTML页面的头部，用&lt;style&gt;标记进行声明。这样定义的样式在整个页面中都可以使用。基本格式如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    样式定义</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>(3)外部式：当在很多网页里都要使用相同的样式时，可以使用外部样式表的形式。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt; <span class=\"attr\">link</span> <span class=\"attr\">href</span>= <span class=\"string\">\"\"</span> <span class=\"attr\">rel</span>= <span class=\"string\">\"stylesheet\"</span>  <span class=\"attr\">type</span>= <span class=\"string\">\"text/css\"</span>  /&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"div-css布局的实现思路\"><a class=\"header-anchor\" href=\"#div-css布局的实现思路\">☆</a>DIV+CSS布局的实现思路</h4>\n<p>可以使用DIV+CSS 来实现网页布局，实现路是先用&lt;div&gt;标记对整个页面进行分块，然后再利用CSS样式对每个div分块进行布局设置，最后在各个div分块中添加内容。</p>\n<h3 id=\"客户端功能开发\"><a class=\"header-anchor\" href=\"#客户端功能开发\">☆</a>客户端功能开发</h3>\n<h4 id=\"javascript概述\"><a class=\"header-anchor\" href=\"#javascript概述\">☆</a>JavaScript概述</h4>\n<p>JavaScript是一种简单的脚本语言，由浏览器解释执行，简单、易学、易用。其最基本的两个特点是基于对象和事件驱动。</p>\n<p>所谓基于对象，是指JavaScript支持使用对象，但是没有提供面向对象语言的所有功能，不是完全的面向对象编程语言。</p>\n<p>事件驱动指JavaScript程序的运行机制。它把GUl(图形用户界面）中的用户动作封装为各种事件，例如单击按钮、移动鼠标、按下键盘等都是事件，当某个事件发生时，就会触发相应的事件处理程序运行。</p>\n<h4 id=\"javascript脚本的使用方式\"><a class=\"header-anchor\" href=\"#javascript脚本的使用方式\">☆</a>JavaScript脚本的使用方式</h4>\n<p>JavaScript代码可以直接嵌入到HTML文件中使用，嵌入方式主要有三种：嵌入标记事件属性、使用脚本语句块、链接独立的脚本文件。</p>\n<h4 id=\"对象\"><a class=\"header-anchor\" href=\"#对象\">☆</a>对象</h4>\n<p>JavaScript中的对象由属性和方法构成，主要有三种类型：内置对象、浏览器提供的对象和自定义对象。</p>\n<ul>\n<li>Date对象：用于处理日期和时间，需要先创建才能使用。</li>\n<li>window对象：代表当前浏览器窗口所有JavaScript全局对象、函数和变量均自动成为window对象的成员。\n<ul>\n<li>window对象提供了多个属性和函数用于对浏览器窗口进行操作。</li>\n<li>window对象的常用函数有：alert(警告对话框)、confirm(确认对话框）、prompt(消息框)、open(打开新窗口）、print(打印网页内容）等。</li>\n<li>因为window对象是JavaScript中最顶级的对象，所以在使用当前窗口对象的函数时，可以省略函数前的window，即可以直接使用alert()，而不需要用window.alert()。</li>\n</ul>\n</li>\n<li>document对象：属于HTML DOM(Document Object Model，文档对象模型）。当网页被加载时，浏览器会创建当前页面的DOM模型。DOM的最顶层就是HTML文档，document对象就代表当前HTML文档，通过它可以访问页面中的所有元素。</li>\n</ul>\n<p><span id=\"font-blue\"><span id=\"font-green\">document</span>对象的常用方法如下:</span></p>\n<ul>\n<li>write(字符串）：将字符串或数值显示在显示器上。</li>\n<li>getElementById()：返回对指定id的第一个对象的引用。</li>\n</ul>\n<h2 id=\"第三章-web应用开发基础\"><a class=\"header-anchor\" href=\"#第三章-web应用开发基础\">☆</a>第三章 web应用开发基础</h2>\n<h3 id=\"开发环境和运行环境\"><a class=\"header-anchor\" href=\"#开发环境和运行环境\">☆</a>开发环境和运行环境</h3>\n<p>略</p>\n<h3 id=\"jsp基本概念\"><a class=\"header-anchor\" href=\"#jsp基本概念\">☆</a>jsp基本概念</h3>\n<h4 id=\"运行机制\"><a class=\"header-anchor\" href=\"#运行机制\">☆</a>运行机制</h4>\n<p>当浏览器向服务器发出请求访问一个JSP页面时，所请求的JSP文件会被服务器端的JSP引擎转化为一个Java类，并被编译成一个字节码文件，再装载到Java虚拟机中运行，最后把运行产生的输出作为对本次请求的响应返回给浏览器。</p>\n<h4 id=\"web应用目录结构\"><a class=\"header-anchor\" href=\"#web应用目录结构\">☆</a>Web应用目录结构</h4>\n<p>按照Java EE规范的规定，一个典型的Java Web应用包含四个部分：</p>\n<ul>\n<li>公开文件夹，存放能够被用户访问的资源，包括.jsp、.htm、.js、.css、.jpg等文件。</li>\n<li>WEB-INF/web.xml文件，应用的部署描述文件。</li>\n<li>WEB-INF/classes文件夹，存放编译好的Java类文件(.class)。</li>\n<li>WEB-INF/lib文件夹，存放Java类库文件(.jar)。</li>\n</ul>\n<h3 id=\"jsp基础语法\"><a class=\"header-anchor\" href=\"#jsp基础语法\">☆</a>jsp基础语法</h3>\n<p>jap脚本代码：Java代码片段，可以实现业务逻辑处理，也可以产生输出。例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%</span><br><span class=\"line\">    SimpleDateFormat df = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy-M-d HH:mm:ss\"</span>);</span><br><span class=\"line\">%&gt;</span><br></pre></td></tr></table></figure>\n<p>jsp声明：在声明中定义的变量和方法都会成为转义后的Java类的成员变量及类成员方法，声明的类则成为内部类。语法格式如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%! 变量或方法、类的声明 %&gt;</span><br></pre></td></tr></table></figure>\n<p>jsp表达式：一种简单的输出形式。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% = 表达式 %&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"jsp指令\"><a class=\"header-anchor\" href=\"#jsp指令\">☆</a>jsp指令</h4>\n<p><span id=\"font-red\">page指令</span>称为页面指令，用来定义JSP页面的全局属性，该配置会作用于整个页面。</p>\n<ul>\n<li><span id=\"font-purple\">language</span>属性：设置当前页面中编写JSP脚本使用的语言，默认值为java。</li>\n<li><span id=\"font-purple\">import</span>属性：用来导入程序中要用到的包或类，可以有多个值，无论是Java核心包中自带的类还是用户自行编写的类，都要在import中引入，才能使用。</li>\n<li><span id=\"font-purple\">errorPage</span>属性：用于指示一个JSP文件的相对路径，以便在页面出错时，转到这个JSP文件来进行处理。与此相适应，需要将这个JSP文件的isErrorPage属性设为true。</li>\n<li><span id=\"font-purple\">isErrorPage</span>属性：指示一个页面是否为错误处理页面。设置为true时，在这个JSP页面中的内建对象exception将被定义，其值将被设定为呼叫此页面的JSP页面的错误对象，以处理该页面所产生的错误。</li>\n<li><span id=\"font-purple\">contentType</span>属性：设置发送到客户端文档的响应报头的MIME（Multipurpose Internet Mail Extention）类型和字符编码。</li>\n<li><span id=\"font-purple\">pageEncoding</span>属性：设置JSP页面字符的编码，常见的编码类型有ISO-8859-1、gb2312和GBK等。默认值为ISO-8859-1。</li>\n</ul>\n<p>用法示例：</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%<span class=\"meta\">@page</span> language=<span class=\"string\">\"java\"</span> %&gt;</span><br><span class=\"line\">&lt;%<span class=\"meta\">@page</span> <span class=\"keyword\">import</span>=<span class=\"string\">\"包名.类名\"</span>%&gt;</span><br><span class=\"line\">&lt;%<span class=\"meta\">@page</span> <span class=\"keyword\">import</span>=<span class=\"string\">\"包名.*\"</span>%&gt;</span><br><span class=\"line\">&lt;%@ page pageEncoding=<span class=\"string\">\"gb2312\"</span>%&gt;</span><br></pre></td></tr></table></figure>\n<p><span id=\"font-red\">include指令</span>：在JSP中，可以使用include指令来包含其他jsp文件。</p>\n<p><span id=\"font-red\">taglib指令</span>：声明用户使用自定义的标签，将标签库描述符文件导入到jsp页面。</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;%@ taglib (uri=<span class=\"string\">\"tigLibURL\"</span> 或 tagDir=<span class=\"string\">\"tagDir\"</span>) prefix=<span class=\"string\">\"tagPrefix\"</span> %&gt;</span><br></pre></td></tr></table></figure>\n<p>属性：</p>\n<ul>\n<li><span id=\"font-purple\">uri</span>属性:定位标签库描述符的位置。唯一标识和前缀相关的标签库描述符，可以使用绝对或相对URL。</li>\n<li><span id=\"font-purple\">tagDir</span>属性：指示前缀将被用于标识在WEV-INF/tags目录下的标签文件。</li>\n<li><span id=\"font-purple\">prefix</span>属性：标签的前缀，区分多个自定义标签。不可以使用保留前缀和空前缀，遵循XML命名空间的命名约定。</li>\n</ul>\n<h4 id=\"jsp标记\"><a class=\"header-anchor\" href=\"#jsp标记\">☆</a>JSP标记</h4>\n<p><span id=\"font-green\">&lt;jsp:include&gt;</span>用于将HTML或者jsp动态内容插入到当前的jsp页面中。</p>\n<p><span id=\"font-green\">&lt;jsp:param&gt;</span>用于向被包含的页面传递参数。</p>\n<p><span id=\"font-green\">&lt;jsp:forward&gt;</span>用于实现页面请求的转发，可以把对当前jsp页面的请求转发到同一web应用中的另一个资源。</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%<span class=\"meta\">@include</span> file=<span class=\"string\">\"文件的URL\"</span>%&gt;</span><br><span class=\"line\">&lt;jsp:forward page=<span class=\"string\">\"接受参数页面的URL\"</span>&gt;</span><br><span class=\"line\">    &lt;jsp:param name=“参数名 value = <span class=\"string\">\"参数值\"</span>/&gt;</span><br><span class=\"line\">&lt;jsp:forward/&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第四章-流程控制与数据传递\"><a class=\"header-anchor\" href=\"#第四章-流程控制与数据传递\">☆</a>第四章 流程控制与数据传递</h2>\n<h3 id=\"jsp内置对象\"><a class=\"header-anchor\" href=\"#jsp内置对象\">☆</a>jsp内置对象</h3>\n<table>\n<thead>\n<tr>\n<th>内置对象名称</th>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:left\">作用域</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td style=\"text-align:center\">javax.servlet.httpServletRequest</td>\n<td style=\"text-align:left\">Request</td>\n<td>代表了客户端的请求信息，接受通过HTTP协议传送到服务器的数据。(乱码处理)</td>\n</tr>\n<tr>\n<td>response</td>\n<td style=\"text-align:center\">javax.servlet.http.HttpServletResponse</td>\n<td style=\"text-align:left\">Page</td>\n<td>对客户端的响应，将JSP容器处理过的对象传回到客户端。(页面重定向)</td>\n</tr>\n<tr>\n<td>session</td>\n<td style=\"text-align:center\">javax.servlet.http.HttpSession</td>\n<td style=\"text-align:left\">Page</td>\n<td>在第一个JSP页面被装载时自动创建，完成会话期管理。（存取属性值，保存用户的信息）</td>\n</tr>\n<tr>\n<td>out</td>\n<td style=\"text-align:center\">javax.servlet.jsp.jspWriter</td>\n<td style=\"text-align:left\">Page</td>\n<td>在Web浏览器内输出信息，并且管理应用服务器上的输出缓冲区。</td>\n</tr>\n</tbody>\n</table>\n<p><strong><center><span id=\"font-blue\">request对象主要方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法声明</th>\n<th style=\"text-align:left\">功能简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">setAttribute(String name,Object)</td>\n<td style=\"text-align:left\">设置名字为name的request的參数值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getAttribute(String name)</td>\n<td style=\"text-align:left\">返回由name指定的属性值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getAttributeNames()</td>\n<td style=\"text-align:left\">返回request对象全部属性的名字集合，结果是一个枚举的实例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getCookies()</td>\n<td style=\"text-align:left\">返回client的全部Cookie对象，结果是一个Cookie数组</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getCharacterEncoding()</td>\n<td style=\"text-align:left\">返回请求中的字符编码方式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getContentLength()</td>\n<td style=\"text-align:left\">返回请求的Body的长度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getHeader(String name)</td>\n<td style=\"text-align:left\">获得HTTP协议定义的文件头信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getHeaders(String name)</td>\n<td style=\"text-align:left\">返回指定名字的request Header的全部值，结果是一个枚举的实例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getHeaderNames()</td>\n<td style=\"text-align:left\">返回所以request Header的名字，结果是一个枚举的实例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getInputStream()</td>\n<td style=\"text-align:left\">返回请求的输入流，用于获得请求中的数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getMethod()</td>\n<td style=\"text-align:left\">获得client向server端传送数据的方法</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getParameter(String name)</td>\n<td style=\"text-align:left\">获得client传送给server端的有name指定的參数值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getParameterNames()</td>\n<td style=\"text-align:left\">获得client传送给server端的全部參数的名字，结果是一个枚举的实例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getParameterValues(String name)</td>\n<td style=\"text-align:left\">获得有name指定的參数的全部值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getProtocol()</td>\n<td style=\"text-align:left\">获取client向server端传送数据所根据的协议名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getQueryString()</td>\n<td style=\"text-align:left\">获得查询字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getRequestURI()</td>\n<td style=\"text-align:left\">获取发出请求字符串的client地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getRemoteAddr()</td>\n<td style=\"text-align:left\">获取client的IP地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getRemoteHost()</td>\n<td style=\"text-align:left\">获取client的名字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getSession([Boolean create])</td>\n<td style=\"text-align:left\">返回和请求相关Session</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getServerName()</td>\n<td style=\"text-align:left\">获取server的名字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getServletPath()</td>\n<td style=\"text-align:left\">获取client所请求的脚本文件的路径</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getServerPort()</td>\n<td style=\"text-align:left\">获取server的port号</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">removeAttribute(String name)</td>\n<td style=\"text-align:left\">删除请求中的一个属性</td>\n</tr>\n</tbody>\n</table>\n<p><strong><center><span id=\"font-blue\">response对象常用方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法声明</th>\n<th style=\"text-align:left\">功能简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">void setContentType(String type)</td>\n<td style=\"text-align:left\">设置响应数据的MIME类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">String getContentType()</td>\n<td style=\"text-align:left\">取得响应数据的MIME类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void setHeader(String name, String value)</td>\n<td style=\"text-align:left\">设置指定的响应报头</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void sendRedirect()</td>\n<td style=\"text-align:left\">重定向客户的请求到指定页面</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void addCookie(Cookie cookie)</td>\n<td style=\"text-align:left\">给客户端添加一个Cookie对象，以保存客户端的信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">PrintWriter getWriter()</td>\n<td style=\"text-align:left\">返回一个输出字符流</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void flushBuffer()</td>\n<td style=\"text-align:left\">清空缓冲区，强行把Buffer的内容写到客户端浏览器</td>\n</tr>\n</tbody>\n</table>\n<p><strong><center><span id=\"font-blue\">session对象常用方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法声明</th>\n<th style=\"text-align:left\">功能简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">getAttribute(String name)</td>\n<td style=\"text-align:left\">获取session对象中名为name的属性值，不存在则为null</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">removeAttribute(String name)</td>\n<td style=\"text-align:left\">删除session对象中名为name的属性</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">setAttribute(String name, Object value)</td>\n<td style=\"text-align:left\">设置session对象属性，属性名为name，属性值为value</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getCreationTime()</td>\n<td style=\"text-align:left\">获取session对象的创建时间，返回1970年1月1日至今的毫秒数（Unix时间戳）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getLastAccessTime()</td>\n<td style=\"text-align:left\">获取session对象对应客户端的最近发送请求的时间，返回1970年1月1日至今的毫秒数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">invalidate()</td>\n<td style=\"text-align:left\">销毁session对象中的信息，session本身不会被销毁</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getMaxInactiveInterval()</td>\n<td style=\"text-align:left\">获取会话超时时间，单位为秒</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">setMaxInactiveInterval(int interval)</td>\n<td style=\"text-align:left\">设置会话超时时间，单位为秒</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"cookie机制\"><a class=\"header-anchor\" href=\"#cookie机制\">☆</a>Cookie机制</h3>\n<p>Cookie是Web服务器产生并嵌入在HTTP响应报头中的一小段文本。浏览器在收到一个Cookie后会把它保存到特定的文件夹下，并在接下来再次访问同一个Web服务器时，自动在请求报头中携带该Cookie，供服务器读取使用，从而弥补HTTP无状态的不足。基于这一工作机制，可以实现用户识别、应用定制等功能。</p>\n<p>一个Cookie包含一个名称和值，以及一些可选的属性，如路径、最长存活时间等。Java提供了javax.servlet.http.Cookie类来支持Cookie机制的实现。可以使用response 对象的addCookie()方法向浏览器发送Cookie，使用request对象的getCookie()方法获取请求中的所有Cookie。</p>\n<p><strong><center><span id=\"font-blue\">cookie类的主要方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法声明</th>\n<th style=\"text-align:left\">功能简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">String geyName()</td>\n<td style=\"text-align:left\">获取cookie的名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">String getValue()</td>\n<td style=\"text-align:left\">获取cookie的值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void setValue(String value)</td>\n<td style=\"text-align:left\">在cookie创建后，为cookie赋予新的值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">int getMaxAge()</td>\n<td style=\"text-align:left\">获取cookie的有效时间，以秒为单位，-1表示cookie将一直持续下去，直到浏览器关闭</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">String getPath()</td>\n<td style=\"text-align:left\">返回cookie适用的路径</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void setPath(String uri)</td>\n<td style=\"text-align:left\">设置cookie的适用路径。如不指定，则当前页面的同目录与子目录下所有RRL都返回cookie</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"控制流和数据流的实现\"><a class=\"header-anchor\" href=\"#控制流和数据流的实现\">☆</a>控制流和数据流的实现</h3>\n<p>1、jsp页面间的流程控制</p>\n<ul>\n<li>超链接</li>\n<li>表单提交</li>\n<li>页面重定向</li>\n<li>请求转发</li>\n</ul>\n<p>2、jsp页面间的数据传递</p>\n<ul>\n<li>表单传参</li>\n<li>url传参</li>\n<li>&lt;jsp:param&gt;标记传参</li>\n<li>作用域传参</li>\n</ul>\n<h2 id=\"数据库访问\"><a class=\"header-anchor\" href=\"#数据库访问\">☆</a>数据库访问</h2>\n<h3 id=\"数据库访问代码模板\"><a class=\"header-anchor\" href=\"#数据库访问代码模板\">☆</a>数据库访问代码模板</h3>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">\"java\"</span> <span class=\"keyword\">import</span>=<span class=\"string\">\"java.util.*\"</span> pageEncoding=<span class=\"string\">\"utf-8\"</span>%&gt;</span><br><span class=\"line\">&lt;%@ page <span class=\"keyword\">import</span>=<span class=\"string\">\"java.sql.*\"</span> %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%</span><br><span class=\"line\"></span><br><span class=\"line\">    String driver = <span class=\"string\">\"com.mysql.jdbc.Driver\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// URL指向要访问的数据库名test1</span></span><br><span class=\"line\">    String url = <span class=\"string\">\"jdbc:mysql://127.0.0.1:3306/test\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// MySQL配置时的用户名</span></span><br><span class=\"line\">    String user = <span class=\"string\">\"root\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Java连接MySQL配置时的密码</span></span><br><span class=\"line\">    String password = <span class=\"string\">\"111\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 1 加载驱动程序</span></span><br><span class=\"line\">        Class.forName(driver);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 2 连接数据库</span></span><br><span class=\"line\">        Connection conn = DriverManager.getConnection(url, user, password);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 3 用来执行SQL语句</span></span><br><span class=\"line\">        Statement statement = conn.createStatement();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 要执行的SQL语句</span></span><br><span class=\"line\">        String sql = <span class=\"string\">\"select * from login\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//处理执行结果</span></span><br><span class=\"line\">        ResultSet rs = statement.executeQuery(sql);</span><br><span class=\"line\">        String name = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        String mima=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (rs.next()) &#123; </span><br><span class=\"line\">        name = rs.getString(<span class=\"string\">\"userName\"</span>); </span><br><span class=\"line\">        mima = rs.getString(<span class=\"string\">\"passWord\"</span>); </span><br><span class=\"line\">        out.println(name+<span class=\"string\">\"\\t\"</span>+mima); </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        rs.close();</span><br><span class=\"line\">        conn.close();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Sorry,can`t find the Driver!\"</span>);</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">%&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"jdbc技术\"><a class=\"header-anchor\" href=\"#jdbc技术\">☆</a>JDBC技术</h3>\n<h4 id=\"基础概念\"><a class=\"header-anchor\" href=\"#基础概念\">☆</a>基础概念</h4>\n<p>Java语言访问数据库的一种规范,是一套API</p>\n<p>JDBC (Java Database Connectivity) API，即Java数据库编程接口，是一组标准的Java语言中的接口和类，使用这些接口和类，Java客户端程序可以访问各种不同类型的数据库。比如建立数据库连接、执行SQL语句进行数据的存取操作。</p>\n<h4 id=\"drivermanager类\"><a class=\"header-anchor\" href=\"#drivermanager类\">☆</a>DriverManager类</h4>\n<p>处理驱动程序的加载和建立新数据连接。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connection.getConnection(String url, String user, String password)</span><br><span class=\"line\">Connection con = DriverManager.getConnection(<span class=\"string\">\"jdbc:oracle:thin:@127.0.0.1:1521:name\"</span>, <span class=\"string\">\"scott\"</span>,<span class=\"string\">\"tiger\"</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"connection接口\"><a class=\"header-anchor\" href=\"#connection接口\">☆</a>Connection接口</h4>\n<p>代表Java程序与数据库间的连接，用于提供创建语句以及管理连接及其属性方法。</p>\n<p><strong><center><span id=\"font-blue\">Connection接口常用方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法声明</th>\n<th style=\"text-align:left\">功能简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Statement createStatement()</td>\n<td style=\"text-align:left\">创建一个Statement对象，用于将SQL语句发送到数据库，通常在执行无参数的SQL语句时创建该实例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">PrepareStatement prepareStatement()</td>\n<td style=\"text-align:left\">通常在执行包含参数的SQL语句时创建该实例，并对SQL语句进行预编译处理</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void close()</td>\n<td style=\"text-align:left\">关闭数据库连接</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Statement st = con.createStatement();</span><br></pre></td></tr></table></figure>\n<h4 id=\"statement接口\"><a class=\"header-anchor\" href=\"#statement接口\">☆</a>Statement接口</h4>\n<p>用于执行静态SQL语句并返回它所生成结果的对象。</p>\n<p><strong><center><span id=\"font-blue\">Statement接口常用方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法声明</th>\n<th style=\"text-align:left\">功能简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">ResultSet executeQuery(String sql)</td>\n<td style=\"text-align:left\">执行指定的静态select语句，并返回一个永远不为null的ResultSet实例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">int executeUpdate(String sql)</td>\n<td style=\"text-align:left\">执行指定的静态INSET、UPDATE或DELETE语句，并返回一个int型数值，未同步更新记录的条数</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ResultSet rs = st.executeQuery(sql);</span><br></pre></td></tr></table></figure>\n<h4 id=\"preparedstatement接口\"><a class=\"header-anchor\" href=\"#preparedstatement接口\">☆</a>PreparedStatement接口</h4>\n<p>继承自Statement，表示预编译的SQL语句的对象，预编译SQL效率高且支持参数查询</p>\n<h4 id=\"resultset接口\"><a class=\"header-anchor\" href=\"#resultset接口\">☆</a>ResultSet接口</h4>\n<p>用于表示数据库结果集的数据表，通常由执行查询数据库的语句生成，其中存放了查询结果。</p>\n<p>在ResultSet对象中具有指向当前数据行的游标，可以在<span id=\"font-green\">while</span>循环中使用<span id=\"font-green\">next()</span>方法来迭代处理结果集。</p>\n<p><strong><center><span id=\"font-blue\">ResultSet接口常用的获取列值方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">返回类型</th>\n<th style=\"text-align:left\">方法名称</th>\n<th style=\"text-align:left\">返回类型</th>\n<th style=\"text-align:left\">方法名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">byte</td>\n<td style=\"text-align:left\">getByte(inc columnIndex)</td>\n<td style=\"text-align:left\">byte</td>\n<td style=\"text-align:left\">getByte(String columnLabel)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Date</td>\n<td style=\"text-align:left\">getDate(inc columnIndex)</td>\n<td style=\"text-align:left\">Date</td>\n<td style=\"text-align:left\">getDate(String columnLabel)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">double</td>\n<td style=\"text-align:left\">getDouble(inc columnIndex)</td>\n<td style=\"text-align:left\">double</td>\n<td style=\"text-align:left\">getDouble(String columnLabel)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">float</td>\n<td style=\"text-align:left\">getFloat(inc columnIndex)</td>\n<td style=\"text-align:left\">float</td>\n<td style=\"text-align:left\">getFloat(String columnLabel)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">getInt(inc columnIndex)</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">getInt(String columnLabel)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">long</td>\n<td style=\"text-align:left\">getLong(inc columnIndex)</td>\n<td style=\"text-align:left\">long</td>\n<td style=\"text-align:left\">getLong(String columnLabel)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">getString(inc columnIndex)</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">getString(String columnLabel)</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>(rs.next())&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> id = rs.getInt(<span class=\"string\">\"id\"</span>);</span><br><span class=\"line\">    String username = rs.getString(<span class=\"string\">\"username\"</span>);</span><br><span class=\"line\">    String gender = rs.getString(<span class=\"string\">\"gender\"</span>);</span><br><span class=\"line\">    java.sql.Date hiredate = rs.getDate(<span class=\"string\">\"hiredate\"</span>);</span><br><span class=\"line\">    System.out.println(id+<span class=\"string\">\"#\"</span>+username+<span class=\"string\">\"#\"</span>+gender+<span class=\"string\">\"+hiredate);</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"重构程序功能\"><a class=\"header-anchor\" href=\"#重构程序功能\">☆</a>重构程序功能</h2>\n<h3 id=\"javabean技术\"><a class=\"header-anchor\" href=\"#javabean技术\">☆</a>JavaBean技术</h3>\n<h4 id=\"javabean编写规范\"><a class=\"header-anchor\" href=\"#javabean编写规范\">☆</a>JavaBean编写规范</h4>\n<ul>\n<li>是一个公共类</li>\n<li>具有无参数的公共构造方法</li>\n<li>具有公共的setter和getter方法来供外部存取其私有属性</li>\n<li>需要放在命名包里，不能放在默认包中</li>\n</ul>\n<h4 id=\"javabean的编译\"><a class=\"header-anchor\" href=\"#javabean的编译\">☆</a>JavaBean的编译</h4>\n<p>略</p>\n<h4 id=\"使用javabean\"><a class=\"header-anchor\" href=\"#使用javabean\">☆</a>使用JavaBean</h4>\n<ul>\n<li><span id=\"font-green\">&lt;jsp:useBean&gt;</span> 装载一个将在JSP页面中使用的JavaBean。\n<ul>\n<li>scope，作用域</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;jsp:useBean id=<span class=\"string\">\"name\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"package.class\"</span>   scope=<span class=\"string\">\"page | request | session | application\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><span id=\"font-green\">&lt;jsp:setProperty&gt;</span> 获取指定的JavaBean的值。\n<ul>\n<li>详解见<a href=\"https://blog.csdn.net/u011024652/article/details/52012435\" target=\"_blank\" rel=\"noopener\">jsp:useBean的用法</a></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//自动匹配赋值</span></span><br><span class=\"line\">&lt;jsp:setProperty name=<span class=\"string\">\"JavaBean实例名\"</span> property=<span class=\"string\">\"*\"</span> /&gt;</span><br><span class=\"line\"><span class=\"comment\">//自动匹配指定属性</span></span><br><span class=\"line\">&lt;jsp:setProperty name=<span class=\"string\">\"JavaBean实例名\"</span> property=<span class=\"string\">\"JavaBean属性名\"</span> /&gt;</span><br><span class=\"line\"><span class=\"comment\">//手动设置属性值</span></span><br><span class=\"line\">&lt;jsp:setProperty name=<span class=\"string\">\"JavaBean实例名\"</span> property=<span class=\"string\">\"JavaBean属性名\"</span> value=<span class=\"string\">\"BeanValue\"</span> /&gt;</span><br><span class=\"line\"><span class=\"comment\">//通过获取request的参数来为相应的属性赋值，其中param为参数名</span></span><br><span class=\"line\">&lt;jsp:setProperty name=<span class=\"string\">\"JavaBean实例名\"</span> property=<span class=\"string\">\"JavaBean属性名\"</span> param=<span class=\"string\">\"request对象中的参数名\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><span id=\"font-green\">&lt;jsp:getProperty&gt;</span> 获取指定Javabean对象的属性值。</li>\n</ul>\n<h4 id=\"javabean实例\"><a class=\"header-anchor\" href=\"#javabean实例\">☆</a>JavaBean实例</h4>\n<figure class=\"highlight\"><figcaption><span>login.jsp</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">\"java\"</span> <span class=\"keyword\">import</span>=<span class=\"string\">\"java.util.*\"</span> contentType=<span class=\"string\">\"text/html; charset=utf-8\"</span> %&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">String path = request.getContextPath();</span><br><span class=\"line\">String basePath = request.getScheme()+<span class=\"string\">\"://\"</span>+request.getServerName()+<span class=\"string\">\":\"</span>+request.getServerPort()+path+<span class=\"string\">\"/\"</span>;</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC <span class=\"string\">\"-//W3C//DTD HTML 4.01 Transitional//EN\"</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;base href=<span class=\"string\">\"&lt;%=basePath%&gt;\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;My JSP 'login.jsp' starting page&lt;/title&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"pragma\"</span> content=<span class=\"string\">\"no-cache\"</span>&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"cache-control\"</span> content=<span class=\"string\">\"no-cache\"</span>&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"expires\"</span> content=<span class=\"string\">\"0\"</span>&gt;   </span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"keywords\"</span> content=<span class=\"string\">\"keyword1,keyword2,keyword3\"</span>&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"description\"</span> content=<span class=\"string\">\"This is my page\"</span>&gt; </span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;h1&gt;系统登录&lt;/h1&gt;</span><br><span class=\"line\">    &lt;hr&gt;</span><br><span class=\"line\">    &lt;form name=<span class=\"string\">\"loginForm\"</span> action=<span class=\"string\">\"dologin.jsp?mypass=999999\"</span> method=<span class=\"string\">\"post\"</span>&gt;</span><br><span class=\"line\">      &lt;table&gt;</span><br><span class=\"line\">        &lt;tr&gt;</span><br><span class=\"line\">          &lt;td&gt;用户名：&lt;/td&gt;</span><br><span class=\"line\">          &lt;td&gt;&lt;input type=\"text\" name=\"username\" value=\"\"/&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">        &lt;tr&gt;</span><br><span class=\"line\">          &lt;td&gt;密码：&lt;/td&gt;</span><br><span class=\"line\">          &lt;td&gt;&lt;input type=\"password\" name=\"password\" value=\"\"/&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">        &lt;tr&gt;</span><br><span class=\"line\">          &lt;td colspan=\"2\" align=\"center\"&gt;&lt;input type=\"submit\" value=\"登录\"/&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">      &lt;/table&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight\"><figcaption><span>dologin.jsp</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">\"java\"</span> <span class=\"keyword\">import</span>=<span class=\"string\">\"java.util.*\"</span> contentType=<span class=\"string\">\"text/html; charset=utf-8\"</span>%&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">String path = request.getContextPath();</span><br><span class=\"line\">String basePath = request.getScheme()+<span class=\"string\">\"://\"</span>+request.getServerName()+<span class=\"string\">\":\"</span>+request.getServerPort()+path+<span class=\"string\">\"/\"</span>;</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC <span class=\"string\">\"-//W3C//DTD HTML 4.01 Transitional//EN\"</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;base href=<span class=\"string\">\"&lt;%=basePath%&gt;\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;title&gt;My JSP 'dologin.jsp' starting page&lt;/title&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"pragma\"</span> content=<span class=\"string\">\"no-cache\"</span>&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"cache-control\"</span> content=<span class=\"string\">\"no-cache\"</span>&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"expires\"</span> content=<span class=\"string\">\"0\"</span>&gt;   </span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"keywords\"</span> content=<span class=\"string\">\"keyword1,keyword2,keyword3\"</span>&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"description\"</span> content=<span class=\"string\">\"This is my page\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;jsp:useBean id=<span class=\"string\">\"myUsers\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"com.po.Users\"</span> scope=<span class=\"string\">\"page\"</span>/&gt;</span><br><span class=\"line\">    &lt;h1&gt;setProperty动作元素&lt;/h1&gt;</span><br><span class=\"line\">    &lt;hr&gt;</span><br><span class=\"line\">   &lt;!--根据表单自动匹配所有的属性 --&gt;</span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"*\"</span>/&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">   &lt;!--根据表单匹配所有部分的属性 --&gt;</span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"username\"</span>/&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">   &lt;!--根表单无关，通过手工赋值给属性 --&gt;</span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"username\"</span> value=<span class=\"string\">\"lisi\"</span>/&gt;</span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"password\"</span> value=<span class=\"string\">\"888888\"</span>/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">   &lt;!--通过URL传参数给属性赋值 --&gt;</span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"username\"</span>/&gt;</span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"password\"</span> param=<span class=\"string\">\"mypass\"</span>/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">   &lt;!-- 使用传统的表达式方式来获取用户名和密码 --&gt;</span><br><span class=\"line\">       用户名：&lt;%=myUsers.getUsername() %&gt;&lt;br&gt;</span><br><span class=\"line\">       密码：&lt;%=myUsers.getPassword() %&gt;&lt;br&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">   &lt;!-- 使用getProperty方式来获取用户名和密码 --&gt;</span><br><span class=\"line\">      用户名：&lt;jsp:getProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"username\"</span>/&gt; &lt;br&gt;</span><br><span class=\"line\">      密码：&lt;jsp:getProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"password\"</span>/&gt;&lt;br&gt;</span><br><span class=\"line\">   &lt;br&gt;</span><br><span class=\"line\">   &lt;br&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"重构程序界面\"><a class=\"header-anchor\" href=\"#重构程序界面\">☆</a>重构程序界面</h2>\n<h3 id=\"el和jstl\"><a class=\"header-anchor\" href=\"#el和jstl\">☆</a>EL和JSTL</h3>\n<p>EL语法格式</p>\n<pre><code> ${EL表达式}\n</code></pre>\n<p>运算符：略</p>\n<p><strong><center><span id=\"font-blue\">EL常用内置对象</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">内置对象</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">pageScope</td>\n<td style=\"text-align:left\">取得 page 范围的属性名称所对应的值，${<a href=\"http://pageScope.name\" target=\"_blank\" rel=\"noopener\">pageScope.name</a>}等同与pageContext.getAttribute(“name”);</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">requstScope</td>\n<td style=\"text-align:left\">取得 request 范围的属性名称所对应的值，${<a href=\"http://requestScope.name\" target=\"_blank\" rel=\"noopener\">requestScope.name</a>}等同与request.getAttribute(“name”)；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sessionScope</td>\n<td style=\"text-align:left\">取得 session 范围的属性名称所对应的值，${<a href=\"http://sessionScope.name\" target=\"_blank\" rel=\"noopener\">sessionScope.name</a>}等同与session.getAttribute(“name”)；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">applicationScope</td>\n<td style=\"text-align:left\">取得 application 范围的属性名称所对应的值，${<a href=\"http://applicationScope.name\" target=\"_blank\" rel=\"noopener\">applicationScope.name</a>}等同与application.getAttribute(“name”)；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">param</td>\n<td style=\"text-align:left\">可以用来获取参数，${param.username} 等同于request.getParameter(“username”); 返回 Slring[] 类型的值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">paramValues</td>\n<td style=\"text-align:left\">${paramValues.hobby} 如同 ServletRequest.getParameter Values(String name)， 返回 string[] 类型的值</td>\n</tr>\n</tbody>\n</table>\n<p><span id=\"inline-blue\">在JSP中使用JSTL的步骤如下</span></p>\n<p id=\"div-border-left-purple\">\n1. 首先需要到http：//tomcat.apache.org/taglibs/standard/ 下载JSTL标记库的jar包。<br>\n2. 然后将获取到的JSTL标记库的jar包，复制到Web应用中的WEB-INF\\lib文件夹下。<br>\n3. 最后在JSP页面中用taglib指令设置标记前缀，即可使用JSTL标记。<br>\n</p>\nJSTL标记：\n<ul>\n<li><span id=\"font-green\">&lt;c:out&gt;</span> 用来显示一个表达式的结果，与&lt;%= %&gt;作用相似，它们的区别就是&lt;c:out&gt;标签可以直接通过&quot;.&quot;操作符来访问属性\n<ul>\n<li><span id=\"font-purple\">value</span>：要输出的内容，必须</li>\n<li><span id=\"font-purple\">default</span>：输出的默认值，非必须，默认为主体中的内容</li>\n<li><span id=\"font-purple\">escapeXml</span>：是否忽略XML特殊字符，非必须，默认为true</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:out value=<span class=\"string\">\"&lt;string&gt;\"</span> <span class=\"keyword\">default</span>=<span class=\"string\">\"&lt;string&gt;\"</span> escapeXml=<span class=\"string\">\"&lt;true|false&gt;\"</span>/&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><span id=\"font-green\">&lt;c:set&gt;</span> 用于设置变量值和对象属性。\n<ul>\n<li><span id=\"font-purple\">value</span>：要存储的值，非必须，默认为主体的内容</li>\n<li><span id=\"font-purple\">target</span>：要修改的属性所属的对象，非必须</li>\n<li><span id=\"font-purple\">property</span>：要修改的属性，非必须</li>\n<li><span id=\"font-purple\">var</span>：存储信息的变量，非必须</li>\n<li><span id=\"font-purple\">scope</span>：var属性的作用域，非必须，默认为Page</li>\n</ul>\n</li>\n</ul>\n<div class=\"note warning\">如果指定了target属性，那么property属性也需要被指定。</div>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:set var=<span class=\"string\">\"&lt;string&gt;\"</span> value=<span class=\"string\">\"&lt;string&gt;\"</span>   target=<span class=\"string\">\"&lt;string&gt;\"</span>   property=<span class=\"string\">\"&lt;string&gt;\"</span>   scope=<span class=\"string\">\"&lt;string&gt;\"</span>/&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><span id=\"font-green\">&lt;c:if&gt;</span> 判断表达式的值，如果表达式的值为 true 则执行其主体内容。\n<ul>\n<li><span id=\"font-purple\">test</span>：条件，必须</li>\n<li><span id=\"font-purple\">var</span>：存储条件结果的变量，非必须</li>\n<li><span id=\"font-purple\">scope</span>：var属性作用域，非必须</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">\"&lt;boolean&gt;\"</span> var=<span class=\"string\">\"&lt;string&gt;\"</span> scope=<span class=\"string\">\"&lt;string&gt;\"</span>&gt;</span><br><span class=\"line\">   ...</span><br><span class=\"line\">&lt;/c:if&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><span id=\"font-green\">&lt;c:choose&gt;</span> 与Java switch语句的功能一样，用于在众多选项中做出选择。\n<ul>\n<li>switch语句中有case，而&lt;c:choose&gt;标签中对应有&lt;c:when&gt;，switch语句中有default，而&lt;c:choose&gt;标签中有&lt;c:otherwise&gt;</li>\n<li><span id=\"font-purple\">test</span>：条件，必须</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:choose&gt;</span><br><span class=\"line\">    &lt;c:when test=<span class=\"string\">\"&lt;boolean&gt;\"</span>&gt;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &lt;/c:when&gt;</span><br><span class=\"line\">    &lt;c:when test=<span class=\"string\">\"&lt;boolean&gt;\"</span>&gt;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &lt;/c:when&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &lt;c:otherwise&gt;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &lt;/c:otherwise&gt;</span><br><span class=\"line\">&lt;/c:choose&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><span id=\"font-green\">&lt;c:forEach&gt;</span> 迭代一个集合中的对象。\n<ul>\n<li><span id=\"font-purple\">items</span>：要被循环的信息，非必须</li>\n<li><span id=\"font-purple\">begin</span>：开始的元素（0=第一个元素，1=第二个元素），非必须，默认为0</li>\n<li><span id=\"font-purple\">end</span>：最后一个元素（0=第一个元素，1=第二个元素），非必须，默认为Last element</li>\n<li><span id=\"font-purple\">step</span>：每一次迭代的步长，非必须，默认为1</li>\n<li><span id=\"font-purple\">var</span>：代表当前条目的变量名称，非必须</li>\n<li><span id=\"font-purple\">varStatus</span>：代表循环状态的变量名称，非必须</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:forEach items=<span class=\"string\">\"&lt;object&gt;\"</span> begin=<span class=\"string\">\"&lt;int&gt;\"</span> end=<span class=\"string\">\"&lt;int&gt;\"</span> step=<span class=\"string\">\"&lt;int&gt;\"</span> var=<span class=\"string\">\"&lt;string&gt;\"</span> varStatus=<span class=\"string\">\"&lt;string&gt;\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;c:forEach var=<span class=\"string\">\"i\"</span> begin=<span class=\"string\">\"1\"</span> end=<span class=\"string\">\"5\"</span>&gt;</span><br><span class=\"line\">   Item &lt;c:out value=<span class=\"string\">\"$&#123;i&#125;\"</span>/&gt;&lt;p&gt;</span><br><span class=\"line\">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"servlet开发\"><a class=\"header-anchor\" href=\"#servlet开发\">☆</a>Servlet开发</h3>\n<h4 id=\"httpservlet类-方法\"><a class=\"header-anchor\" href=\"#httpservlet类-方法\">☆</a>HttpServlet类、方法</h4>\n<p>对于Web应用而言，Servlet主要是用于处理HTTP请求，所以更一般的编写Servlet方法是继承javax.servlet.http.HttpServlet类。</p>\n<p>HttpServlet类是GeniricServle类的子类，通过调用指定到HTTP请求的方法来实现service(）方法。对于HTTP中定义的DELETE、HEAD、GET、POST、PUT等方法，分别调用doDelete(），doHead()、doGet()、doPost()、doPut(）等方法来处理相应的请求。</p>\n<p><strong><center><span id=\"font-blue\">HttpServlet类主要方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法声明</th>\n<th style=\"text-align:left\">功能简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">void doGet(httpServletRequest request, HttpServletResponse, response)</td>\n<td style=\"text-align:left\">用来处理Http Get请求</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void doPost(httpServletRequest request, HttpServletResponse, response)</td>\n<td style=\"text-align:left\">用来处理Http Post请求</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void service(httpServletRequest request, HttpServletResponse, response)</td>\n<td style=\"text-align:left\">根据请求的类型，将请求导向doGet(),doPost()方法</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"编写-编译servlet\"><a class=\"header-anchor\" href=\"#编写-编译servlet\">☆</a>编写、编译Servlet</h4>\n<p>编写<span id=\"font-green\">Servlet</span>的一般步骤如下:</p>\n<p id=\"div-border-left-purple\">\n1. 导入javax.servlet包、javax.servlet.http包及其他必要的包。<br>\n2. 继承HttpServlet类，并重写doPost（)和doGet（)方法。<br>\n3. 在doPost(）和doGet()方法中依次实现获取请求参数、创建输出对象、设置响应类型、输出响应内容等功能。<br>\n</p>\n<span id=\"font-blue\">编译</span>和<span id=\"font-blue\">配置</span>Servlet:\n<ul>\n<li>Servlet类编写完成之后，需要进行编译和部署。</li>\n<li>编译Servlet之前需要先把Servlet API库文件添加到环境变量CLASSPATH 中。可以直接使用Tomcat发行版中包含的servlet-api.jar。向系统的CLASSPATH环境变量中增加下面的值（假定Tomcat安装目录为d:\\tomcat)：</li>\n</ul>\n<div class=\"note success\"> d: \\tomcat\\lib\\servlet-api . jar</div>\n- 然后打开命令行窗口，进入dem008应用中的src目录，使用下面的命令进行编译：\n<div class=\"note success\">javac -d  ..\\classes  servlet\\HelloServlet.java</div>\n<figure class=\"highlight xml\"><figcaption><span>web.xml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>business<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>LogOutServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/logout<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"mvc设计模式\"><a class=\"header-anchor\" href=\"#mvc设计模式\">☆</a>MVC设计模式</h3>\n<p id=\"div-border-left-yellow\">\n 所谓设计模式，是针对典型问题所提供的一套成熟的解决方案。MVC就是一种流行的程序设计模式，它把程序理解为由模型层（Model)、视图层（View)和控制器层(Controller)三个部分组成。其中，模型层表示程序的业务逻辑和状态，包括业务模型和数据模型；视图层是程序的用户界面，用于显示模型数据；控制器层响应用户请求，根据请求内容来操作模型层并控制程序的流程，决定要向用户显示的视图。\n</p>\nJava Web应用开发也可以采用MVC设计模式，用JSP作为视图层，Servlet作为控制器层，JavaBean作为模型层。这样的开发形式实现了程序的分层结构，将功能实现、用户界面和流程控制分别由不同的模块来实现，并在各个模块之间实现了良好的解耦。(<span id=\"font-blue\">jsp Model2</span>)\n<p>在基于MVC的Web应用中，<span id=\"font-blue\">一次用户请求的处理过程</span>如下：</p>\n<p><span id=\"inline-toc\">1.</span> 浏览器发出请求；<br>\n<span id=\"inline-toc\">2.</span> 作为控制器的Servlet接收请求，并将请求以适当的方式分发给对应的业务模型JavaBean来处理；<br>\n<span id=\"inline-toc\">3.</span> 如果该业务需要与数据库交互，由JavaBean来访问数据库；<br>\n<span id=\"inline-toc\">4.</span> 模型层JavaBean将处理结果返回给控制器Servlet；<br>\n<span id=\"inline-toc\">5.</span> Servlet以适当的方式将结果数据传递给视图层JSP页面，并将控制流程转向该JSP页面；<br>\n<span id=\"inline-toc\">6.</span> 应用服务器将JSP生成的HTML作为响应返回给浏览器。</p>\n","site":{"data":{}},"length":20584,"excerpt":"","more":"\n    <div id=\"aplayer-GDSDURNI\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"40962509\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#00CED1\"></div>\n<h2 id=\"第一章开发任务概述\"><a class=\"header-anchor\" href=\"#第一章开发任务概述\">☆</a>第一章开发任务概述</h2>\n<h3 id=\"web应用\"><a class=\"header-anchor\" href=\"#web应用\">☆</a>Web应用</h3>\n<ul>\n<li>B/S结构：适用于大中型应用程序，极少事务逻辑在前端(Browser)实现，主要事务逻辑在服务器端(Server)实现。这种结构的程序简化了客户端的功能负载，减轻了应用维护与升级的成本和工作量，降低了用户的总体成本，但应用服务器运行负荷较重。</li>\n</ul>\n<h3 id=\"客户端开发技术\"><a class=\"header-anchor\" href=\"#客户端开发技术\">☆</a>客户端开发技术</h3>\n<p>1、HTML技术</p>\n<p>HTML(HyperText Markup Language，超文本标记语言）是一种用于表示网上信息的符号标记语言。</p>\n<p>2、CSS技术</p>\n<p>CSS(Cascading Style Sheets，层叠样式表）技术是一种定义样式结构（如字体、颜色、位置等）的语言，用于描述网页上的信息格式和显示的方式。</p>\n<p>3、JavaScript技术</p>\n<p>JavaScript是一种广泛应用于客户端的脚本语言，通过嵌入到HTML中来实现自身的功能；通过控制网页元素的行为和CSS代码中的样式定义，为网页增添了诸如表单内容验证、动画显示效果等交互能力，可以使静态网页具备一定的动态效果。<br>\n服务器端开发技术</p>\n<h3 id=\"服务器端开发技术\"><a class=\"header-anchor\" href=\"#服务器端开发技术\">☆</a>服务器端开发技术</h3>\n<p>1、Servlet技术</p>\n<p id=\"div-border-left-yellow\">\nServlet是以Java技术为基础的服务器端应用程序组件，与运行在浏览器端的Applet相对应。Serv」et是被Web服务器（如Tomcat)加载和执行，而Applet则是被浏览器加载和执行。Servlet通过Web服务器接收客户端浏览器发来的请求，执行预定的功能，然后将执行结果返回给客户端的浏览器。Servlet可以使用服务器端的所有Java 类库资源，所以理论上其功能可以无限扩展。\n</p>\n2、JSP技术\n<p id=\"div-border-left-yellow\">\nJSP(Java Server Page)是建立在Servlet规范提供的功能之上的一种动态网页技术。\n</p>\n3、JavaBean技术\n<p id=\"div-border-left-yellow\">\nJavaBean是Java组件技术的核心，它是Java平台上实现重用的软件组件模型。JavaBean是一种特殊的Java类，需要满足一定的规范要求。\n</p>\n4、JDBC技术\n<p id=\"div-border-left-yellow\">\nJDBC(Java DataBase Connectivity)是一种用于执行SQL语句的Java API （Application Programming Interface，应用编程接口)，由一组Java语言编写的类和接口组成。\n</p>\n<h3 id=\"http请求-响应机制\"><a class=\"header-anchor\" href=\"#http请求-响应机制\">☆</a>HTTP请求/响应机制</h3>\n<p>处理过程包括以下步骤：</p>\n<ul>\n<li>浏览器向Web服务器发送请求报文。</li>\n<li>服务器解析接收到的请求，定位请求资源，做相应处理，然后封装好响应报文，回送给浏览器。</li>\n<li>浏览器收到响应报文，解析HTML、图片等静态内容，渲染网页呈现给用户，解析DOM(Document Object Model，文档对象模型）树，脚本引擎执行脚本代码，完成DOM 操作、CSS属性更改、发送AJAX(Asynchronous JavaScript And XML，异步JavaScript 和XML)请求等功能。</li>\n</ul>\n<p><span id=\"font-green\">HTTP主要有以下特点：</span></p>\n<ul>\n<li>简单快速<br></li>\n<li>灵活<br></li>\n<li>无连接<br></li>\n<li>无状态<br></li>\n<li>支持B/S及C/S模式</li>\n</ul>\n<h2 id=\"第二章-用户界面设计\"><a class=\"header-anchor\" href=\"#第二章-用户界面设计\">☆</a>第二章 用户界面设计</h2>\n<h3 id=\"用户界面元素开发\"><a class=\"header-anchor\" href=\"#用户界面元素开发\">☆</a>用户界面元素开发</h3>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 无序列表 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Coffee<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Milk<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 文本段落 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>This is a paragraph<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>This is another paragraph<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 块、行内元素、图片 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">\"boat.gif\"</span> <span class=\"attr\">alt</span>=<span class=\"string\">\"Big Boat\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 表单  --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"> First name:<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"firstname\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"> Last name:<span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lastname\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 下拉列表框  --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span> =<span class=\"string\">\"volvo\"</span>&gt;</span>Volvo<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span> =<span class=\"string\">\"saab\"</span>&gt;</span>Saab<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"opel\"</span>&gt;</span>Opel<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">option</span> <span class=\"attr\">value</span>=<span class=\"string\">\"audi\"</span>&gt;</span>Audi<span class=\"tag\">&lt;/<span class=\"name\">option</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">select</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--多行文本框--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">rows</span>=<span class=\"string\">\"3\"</span> <span class=\"attr\">cols</span>=<span class=\"string\">\"20\"</span>&gt;</span></span><br><span class=\"line\">    在w3school，你可以找到你所需要的所有的网站建设教程。</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!--表格--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">border</span>=<span class=\"string\">\"1\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>Month<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span>Savings<span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>January<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>$100<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- 超链接 --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">\"http://www.w3school.com.cn\"</span>&gt;</span>W3School<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- HTML文件的基本结构、HTML标记格式 --&gt;</span></span><br><span class=\"line\">略</span><br></pre></td></tr></table></figure>\n<h3 id=\"界面布局设计\"><a class=\"header-anchor\" href=\"#界面布局设计\">☆</a>界面布局设计</h3>\n<h4 id=\"什么是css\"><a class=\"header-anchor\" href=\"#什么是css\">☆</a>什么是css</h4>\n<p>CSS是Cascading Style Sheets(层叠样式表）的缩写，是一种美化网页的技术。它的引入使HTML网页美工设计不再烦琐。</p>\n<h4 id=\"css选择器格式\"><a class=\"header-anchor\" href=\"#css选择器格式\">☆</a>CSS选择器格式</h4>\n<p>1、标记选择器：直接针对HTML标记定义样式。</p>\n<div class=\"note info\">\nHTML标记名{标记属性：属性值; 标记属性：属性值; 标记属性: 属性值;...}\n</div>\n2、类别选择器：\n<div class=\"note info\">\n.类别选择器名{标记属性: 属性值; 标记属性: 属性值; 标记属性: 属性值;...;}\n<html 标记名 class=\"类别选择器名\">\n</html></div>\n3、ID选择器：\n<div class=\"note info\">\n#ID选择器名{标记属性：属性值; 标记属性: 属性值; 标记属性: 属性值;...;}\n<html 标记名 id=\"ID选择器名\">\n</html></div>\n4、伪元素选择器：指对同一HTML元素的各种状态来定义样式的一种方式。\n<div class=\"note info\">\nHTML标记：伪元素{样式}\n</div>\n<h4 id=\"在html中使用css的方法\"><a class=\"header-anchor\" href=\"#在html中使用css的方法\">☆</a>在HTML中使用CSS的方法</h4>\n<p>1、嵌入式：将样式表嵌入到HTML标记的属性中，把样式的定义直接作为标记的style属性值。格式如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">HTML</span> 标记 <span class=\"attr\">style</span> = <span class=\"string\">\"属性名：属性值\"</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>(2)头部式：把样式定义在HTML页面的头部，用&lt;style&gt;标记进行声明。这样定义的样式在整个页面中都可以使用。基本格式如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"undefined\">    样式定义</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>(3)外部式：当在很多网页里都要使用相同的样式时，可以使用外部样式表的形式。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt; <span class=\"attr\">link</span> <span class=\"attr\">href</span>= <span class=\"string\">\"\"</span> <span class=\"attr\">rel</span>= <span class=\"string\">\"stylesheet\"</span>  <span class=\"attr\">type</span>= <span class=\"string\">\"text/css\"</span>  /&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"div-css布局的实现思路\"><a class=\"header-anchor\" href=\"#div-css布局的实现思路\">☆</a>DIV+CSS布局的实现思路</h4>\n<p>可以使用DIV+CSS 来实现网页布局，实现路是先用&lt;div&gt;标记对整个页面进行分块，然后再利用CSS样式对每个div分块进行布局设置，最后在各个div分块中添加内容。</p>\n<h3 id=\"客户端功能开发\"><a class=\"header-anchor\" href=\"#客户端功能开发\">☆</a>客户端功能开发</h3>\n<h4 id=\"javascript概述\"><a class=\"header-anchor\" href=\"#javascript概述\">☆</a>JavaScript概述</h4>\n<p>JavaScript是一种简单的脚本语言，由浏览器解释执行，简单、易学、易用。其最基本的两个特点是基于对象和事件驱动。</p>\n<p>所谓基于对象，是指JavaScript支持使用对象，但是没有提供面向对象语言的所有功能，不是完全的面向对象编程语言。</p>\n<p>事件驱动指JavaScript程序的运行机制。它把GUl(图形用户界面）中的用户动作封装为各种事件，例如单击按钮、移动鼠标、按下键盘等都是事件，当某个事件发生时，就会触发相应的事件处理程序运行。</p>\n<h4 id=\"javascript脚本的使用方式\"><a class=\"header-anchor\" href=\"#javascript脚本的使用方式\">☆</a>JavaScript脚本的使用方式</h4>\n<p>JavaScript代码可以直接嵌入到HTML文件中使用，嵌入方式主要有三种：嵌入标记事件属性、使用脚本语句块、链接独立的脚本文件。</p>\n<h4 id=\"对象\"><a class=\"header-anchor\" href=\"#对象\">☆</a>对象</h4>\n<p>JavaScript中的对象由属性和方法构成，主要有三种类型：内置对象、浏览器提供的对象和自定义对象。</p>\n<ul>\n<li>Date对象：用于处理日期和时间，需要先创建才能使用。</li>\n<li>window对象：代表当前浏览器窗口所有JavaScript全局对象、函数和变量均自动成为window对象的成员。\n<ul>\n<li>window对象提供了多个属性和函数用于对浏览器窗口进行操作。</li>\n<li>window对象的常用函数有：alert(警告对话框)、confirm(确认对话框）、prompt(消息框)、open(打开新窗口）、print(打印网页内容）等。</li>\n<li>因为window对象是JavaScript中最顶级的对象，所以在使用当前窗口对象的函数时，可以省略函数前的window，即可以直接使用alert()，而不需要用window.alert()。</li>\n</ul>\n</li>\n<li>document对象：属于HTML DOM(Document Object Model，文档对象模型）。当网页被加载时，浏览器会创建当前页面的DOM模型。DOM的最顶层就是HTML文档，document对象就代表当前HTML文档，通过它可以访问页面中的所有元素。</li>\n</ul>\n<p><span id=\"font-blue\"><span id=\"font-green\">document</span>对象的常用方法如下:</span></p>\n<ul>\n<li>write(字符串）：将字符串或数值显示在显示器上。</li>\n<li>getElementById()：返回对指定id的第一个对象的引用。</li>\n</ul>\n<h2 id=\"第三章-web应用开发基础\"><a class=\"header-anchor\" href=\"#第三章-web应用开发基础\">☆</a>第三章 web应用开发基础</h2>\n<h3 id=\"开发环境和运行环境\"><a class=\"header-anchor\" href=\"#开发环境和运行环境\">☆</a>开发环境和运行环境</h3>\n<p>略</p>\n<h3 id=\"jsp基本概念\"><a class=\"header-anchor\" href=\"#jsp基本概念\">☆</a>jsp基本概念</h3>\n<h4 id=\"运行机制\"><a class=\"header-anchor\" href=\"#运行机制\">☆</a>运行机制</h4>\n<p>当浏览器向服务器发出请求访问一个JSP页面时，所请求的JSP文件会被服务器端的JSP引擎转化为一个Java类，并被编译成一个字节码文件，再装载到Java虚拟机中运行，最后把运行产生的输出作为对本次请求的响应返回给浏览器。</p>\n<h4 id=\"web应用目录结构\"><a class=\"header-anchor\" href=\"#web应用目录结构\">☆</a>Web应用目录结构</h4>\n<p>按照Java EE规范的规定，一个典型的Java Web应用包含四个部分：</p>\n<ul>\n<li>公开文件夹，存放能够被用户访问的资源，包括.jsp、.htm、.js、.css、.jpg等文件。</li>\n<li>WEB-INF/web.xml文件，应用的部署描述文件。</li>\n<li>WEB-INF/classes文件夹，存放编译好的Java类文件(.class)。</li>\n<li>WEB-INF/lib文件夹，存放Java类库文件(.jar)。</li>\n</ul>\n<h3 id=\"jsp基础语法\"><a class=\"header-anchor\" href=\"#jsp基础语法\">☆</a>jsp基础语法</h3>\n<p>jap脚本代码：Java代码片段，可以实现业务逻辑处理，也可以产生输出。例如：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%</span><br><span class=\"line\">    SimpleDateFormat df = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyy-M-d HH:mm:ss\"</span>);</span><br><span class=\"line\">%&gt;</span><br></pre></td></tr></table></figure>\n<p>jsp声明：在声明中定义的变量和方法都会成为转义后的Java类的成员变量及类成员方法，声明的类则成为内部类。语法格式如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%! 变量或方法、类的声明 %&gt;</span><br></pre></td></tr></table></figure>\n<p>jsp表达式：一种简单的输出形式。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% = 表达式 %&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"jsp指令\"><a class=\"header-anchor\" href=\"#jsp指令\">☆</a>jsp指令</h4>\n<p><span id=\"font-red\">page指令</span>称为页面指令，用来定义JSP页面的全局属性，该配置会作用于整个页面。</p>\n<ul>\n<li><span id=\"font-purple\">language</span>属性：设置当前页面中编写JSP脚本使用的语言，默认值为java。</li>\n<li><span id=\"font-purple\">import</span>属性：用来导入程序中要用到的包或类，可以有多个值，无论是Java核心包中自带的类还是用户自行编写的类，都要在import中引入，才能使用。</li>\n<li><span id=\"font-purple\">errorPage</span>属性：用于指示一个JSP文件的相对路径，以便在页面出错时，转到这个JSP文件来进行处理。与此相适应，需要将这个JSP文件的isErrorPage属性设为true。</li>\n<li><span id=\"font-purple\">isErrorPage</span>属性：指示一个页面是否为错误处理页面。设置为true时，在这个JSP页面中的内建对象exception将被定义，其值将被设定为呼叫此页面的JSP页面的错误对象，以处理该页面所产生的错误。</li>\n<li><span id=\"font-purple\">contentType</span>属性：设置发送到客户端文档的响应报头的MIME（Multipurpose Internet Mail Extention）类型和字符编码。</li>\n<li><span id=\"font-purple\">pageEncoding</span>属性：设置JSP页面字符的编码，常见的编码类型有ISO-8859-1、gb2312和GBK等。默认值为ISO-8859-1。</li>\n</ul>\n<p>用法示例：</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%<span class=\"meta\">@page</span> language=<span class=\"string\">\"java\"</span> %&gt;</span><br><span class=\"line\">&lt;%<span class=\"meta\">@page</span> <span class=\"keyword\">import</span>=<span class=\"string\">\"包名.类名\"</span>%&gt;</span><br><span class=\"line\">&lt;%<span class=\"meta\">@page</span> <span class=\"keyword\">import</span>=<span class=\"string\">\"包名.*\"</span>%&gt;</span><br><span class=\"line\">&lt;%@ page pageEncoding=<span class=\"string\">\"gb2312\"</span>%&gt;</span><br></pre></td></tr></table></figure>\n<p><span id=\"font-red\">include指令</span>：在JSP中，可以使用include指令来包含其他jsp文件。</p>\n<p><span id=\"font-red\">taglib指令</span>：声明用户使用自定义的标签，将标签库描述符文件导入到jsp页面。</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> &lt;%@ taglib (uri=<span class=\"string\">\"tigLibURL\"</span> 或 tagDir=<span class=\"string\">\"tagDir\"</span>) prefix=<span class=\"string\">\"tagPrefix\"</span> %&gt;</span><br></pre></td></tr></table></figure>\n<p>属性：</p>\n<ul>\n<li><span id=\"font-purple\">uri</span>属性:定位标签库描述符的位置。唯一标识和前缀相关的标签库描述符，可以使用绝对或相对URL。</li>\n<li><span id=\"font-purple\">tagDir</span>属性：指示前缀将被用于标识在WEV-INF/tags目录下的标签文件。</li>\n<li><span id=\"font-purple\">prefix</span>属性：标签的前缀，区分多个自定义标签。不可以使用保留前缀和空前缀，遵循XML命名空间的命名约定。</li>\n</ul>\n<h4 id=\"jsp标记\"><a class=\"header-anchor\" href=\"#jsp标记\">☆</a>JSP标记</h4>\n<p><span id=\"font-green\">&lt;jsp:include&gt;</span>用于将HTML或者jsp动态内容插入到当前的jsp页面中。</p>\n<p><span id=\"font-green\">&lt;jsp:param&gt;</span>用于向被包含的页面传递参数。</p>\n<p><span id=\"font-green\">&lt;jsp:forward&gt;</span>用于实现页面请求的转发，可以把对当前jsp页面的请求转发到同一web应用中的另一个资源。</p>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%<span class=\"meta\">@include</span> file=<span class=\"string\">\"文件的URL\"</span>%&gt;</span><br><span class=\"line\">&lt;jsp:forward page=<span class=\"string\">\"接受参数页面的URL\"</span>&gt;</span><br><span class=\"line\">    &lt;jsp:param name=“参数名 value = <span class=\"string\">\"参数值\"</span>/&gt;</span><br><span class=\"line\">&lt;jsp:forward/&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"第四章-流程控制与数据传递\"><a class=\"header-anchor\" href=\"#第四章-流程控制与数据传递\">☆</a>第四章 流程控制与数据传递</h2>\n<h3 id=\"jsp内置对象\"><a class=\"header-anchor\" href=\"#jsp内置对象\">☆</a>jsp内置对象</h3>\n<table>\n<thead>\n<tr>\n<th>内置对象名称</th>\n<th style=\"text-align:center\">类型</th>\n<th style=\"text-align:left\">作用域</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request</td>\n<td style=\"text-align:center\">javax.servlet.httpServletRequest</td>\n<td style=\"text-align:left\">Request</td>\n<td>代表了客户端的请求信息，接受通过HTTP协议传送到服务器的数据。(乱码处理)</td>\n</tr>\n<tr>\n<td>response</td>\n<td style=\"text-align:center\">javax.servlet.http.HttpServletResponse</td>\n<td style=\"text-align:left\">Page</td>\n<td>对客户端的响应，将JSP容器处理过的对象传回到客户端。(页面重定向)</td>\n</tr>\n<tr>\n<td>session</td>\n<td style=\"text-align:center\">javax.servlet.http.HttpSession</td>\n<td style=\"text-align:left\">Page</td>\n<td>在第一个JSP页面被装载时自动创建，完成会话期管理。（存取属性值，保存用户的信息）</td>\n</tr>\n<tr>\n<td>out</td>\n<td style=\"text-align:center\">javax.servlet.jsp.jspWriter</td>\n<td style=\"text-align:left\">Page</td>\n<td>在Web浏览器内输出信息，并且管理应用服务器上的输出缓冲区。</td>\n</tr>\n</tbody>\n</table>\n<p><strong><center><span id=\"font-blue\">request对象主要方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法声明</th>\n<th style=\"text-align:left\">功能简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">setAttribute(String name,Object)</td>\n<td style=\"text-align:left\">设置名字为name的request的參数值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getAttribute(String name)</td>\n<td style=\"text-align:left\">返回由name指定的属性值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getAttributeNames()</td>\n<td style=\"text-align:left\">返回request对象全部属性的名字集合，结果是一个枚举的实例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getCookies()</td>\n<td style=\"text-align:left\">返回client的全部Cookie对象，结果是一个Cookie数组</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getCharacterEncoding()</td>\n<td style=\"text-align:left\">返回请求中的字符编码方式</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getContentLength()</td>\n<td style=\"text-align:left\">返回请求的Body的长度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getHeader(String name)</td>\n<td style=\"text-align:left\">获得HTTP协议定义的文件头信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getHeaders(String name)</td>\n<td style=\"text-align:left\">返回指定名字的request Header的全部值，结果是一个枚举的实例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getHeaderNames()</td>\n<td style=\"text-align:left\">返回所以request Header的名字，结果是一个枚举的实例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getInputStream()</td>\n<td style=\"text-align:left\">返回请求的输入流，用于获得请求中的数据</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getMethod()</td>\n<td style=\"text-align:left\">获得client向server端传送数据的方法</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getParameter(String name)</td>\n<td style=\"text-align:left\">获得client传送给server端的有name指定的參数值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getParameterNames()</td>\n<td style=\"text-align:left\">获得client传送给server端的全部參数的名字，结果是一个枚举的实例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getParameterValues(String name)</td>\n<td style=\"text-align:left\">获得有name指定的參数的全部值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getProtocol()</td>\n<td style=\"text-align:left\">获取client向server端传送数据所根据的协议名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getQueryString()</td>\n<td style=\"text-align:left\">获得查询字符串</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getRequestURI()</td>\n<td style=\"text-align:left\">获取发出请求字符串的client地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getRemoteAddr()</td>\n<td style=\"text-align:left\">获取client的IP地址</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getRemoteHost()</td>\n<td style=\"text-align:left\">获取client的名字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getSession([Boolean create])</td>\n<td style=\"text-align:left\">返回和请求相关Session</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getServerName()</td>\n<td style=\"text-align:left\">获取server的名字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getServletPath()</td>\n<td style=\"text-align:left\">获取client所请求的脚本文件的路径</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getServerPort()</td>\n<td style=\"text-align:left\">获取server的port号</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">removeAttribute(String name)</td>\n<td style=\"text-align:left\">删除请求中的一个属性</td>\n</tr>\n</tbody>\n</table>\n<p><strong><center><span id=\"font-blue\">response对象常用方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法声明</th>\n<th style=\"text-align:left\">功能简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">void setContentType(String type)</td>\n<td style=\"text-align:left\">设置响应数据的MIME类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">String getContentType()</td>\n<td style=\"text-align:left\">取得响应数据的MIME类型</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void setHeader(String name, String value)</td>\n<td style=\"text-align:left\">设置指定的响应报头</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void sendRedirect()</td>\n<td style=\"text-align:left\">重定向客户的请求到指定页面</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void addCookie(Cookie cookie)</td>\n<td style=\"text-align:left\">给客户端添加一个Cookie对象，以保存客户端的信息</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">PrintWriter getWriter()</td>\n<td style=\"text-align:left\">返回一个输出字符流</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void flushBuffer()</td>\n<td style=\"text-align:left\">清空缓冲区，强行把Buffer的内容写到客户端浏览器</td>\n</tr>\n</tbody>\n</table>\n<p><strong><center><span id=\"font-blue\">session对象常用方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法声明</th>\n<th style=\"text-align:left\">功能简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">getAttribute(String name)</td>\n<td style=\"text-align:left\">获取session对象中名为name的属性值，不存在则为null</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">removeAttribute(String name)</td>\n<td style=\"text-align:left\">删除session对象中名为name的属性</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">setAttribute(String name, Object value)</td>\n<td style=\"text-align:left\">设置session对象属性，属性名为name，属性值为value</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getCreationTime()</td>\n<td style=\"text-align:left\">获取session对象的创建时间，返回1970年1月1日至今的毫秒数（Unix时间戳）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getLastAccessTime()</td>\n<td style=\"text-align:left\">获取session对象对应客户端的最近发送请求的时间，返回1970年1月1日至今的毫秒数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">invalidate()</td>\n<td style=\"text-align:left\">销毁session对象中的信息，session本身不会被销毁</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getMaxInactiveInterval()</td>\n<td style=\"text-align:left\">获取会话超时时间，单位为秒</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">setMaxInactiveInterval(int interval)</td>\n<td style=\"text-align:left\">设置会话超时时间，单位为秒</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"cookie机制\"><a class=\"header-anchor\" href=\"#cookie机制\">☆</a>Cookie机制</h3>\n<p>Cookie是Web服务器产生并嵌入在HTTP响应报头中的一小段文本。浏览器在收到一个Cookie后会把它保存到特定的文件夹下，并在接下来再次访问同一个Web服务器时，自动在请求报头中携带该Cookie，供服务器读取使用，从而弥补HTTP无状态的不足。基于这一工作机制，可以实现用户识别、应用定制等功能。</p>\n<p>一个Cookie包含一个名称和值，以及一些可选的属性，如路径、最长存活时间等。Java提供了javax.servlet.http.Cookie类来支持Cookie机制的实现。可以使用response 对象的addCookie()方法向浏览器发送Cookie，使用request对象的getCookie()方法获取请求中的所有Cookie。</p>\n<p><strong><center><span id=\"font-blue\">cookie类的主要方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法声明</th>\n<th style=\"text-align:left\">功能简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">String geyName()</td>\n<td style=\"text-align:left\">获取cookie的名称</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">String getValue()</td>\n<td style=\"text-align:left\">获取cookie的值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void setValue(String value)</td>\n<td style=\"text-align:left\">在cookie创建后，为cookie赋予新的值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">int getMaxAge()</td>\n<td style=\"text-align:left\">获取cookie的有效时间，以秒为单位，-1表示cookie将一直持续下去，直到浏览器关闭</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">String getPath()</td>\n<td style=\"text-align:left\">返回cookie适用的路径</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void setPath(String uri)</td>\n<td style=\"text-align:left\">设置cookie的适用路径。如不指定，则当前页面的同目录与子目录下所有RRL都返回cookie</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"控制流和数据流的实现\"><a class=\"header-anchor\" href=\"#控制流和数据流的实现\">☆</a>控制流和数据流的实现</h3>\n<p>1、jsp页面间的流程控制</p>\n<ul>\n<li>超链接</li>\n<li>表单提交</li>\n<li>页面重定向</li>\n<li>请求转发</li>\n</ul>\n<p>2、jsp页面间的数据传递</p>\n<ul>\n<li>表单传参</li>\n<li>url传参</li>\n<li>&lt;jsp:param&gt;标记传参</li>\n<li>作用域传参</li>\n</ul>\n<h2 id=\"数据库访问\"><a class=\"header-anchor\" href=\"#数据库访问\">☆</a>数据库访问</h2>\n<h3 id=\"数据库访问代码模板\"><a class=\"header-anchor\" href=\"#数据库访问代码模板\">☆</a>数据库访问代码模板</h3>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">\"java\"</span> <span class=\"keyword\">import</span>=<span class=\"string\">\"java.util.*\"</span> pageEncoding=<span class=\"string\">\"utf-8\"</span>%&gt;</span><br><span class=\"line\">&lt;%@ page <span class=\"keyword\">import</span>=<span class=\"string\">\"java.sql.*\"</span> %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;%</span><br><span class=\"line\"></span><br><span class=\"line\">    String driver = <span class=\"string\">\"com.mysql.jdbc.Driver\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// URL指向要访问的数据库名test1</span></span><br><span class=\"line\">    String url = <span class=\"string\">\"jdbc:mysql://127.0.0.1:3306/test\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// MySQL配置时的用户名</span></span><br><span class=\"line\">    String user = <span class=\"string\">\"root\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Java连接MySQL配置时的密码</span></span><br><span class=\"line\">    String password = <span class=\"string\">\"111\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 1 加载驱动程序</span></span><br><span class=\"line\">        Class.forName(driver);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 2 连接数据库</span></span><br><span class=\"line\">        Connection conn = DriverManager.getConnection(url, user, password);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 3 用来执行SQL语句</span></span><br><span class=\"line\">        Statement statement = conn.createStatement();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 要执行的SQL语句</span></span><br><span class=\"line\">        String sql = <span class=\"string\">\"select * from login\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//处理执行结果</span></span><br><span class=\"line\">        ResultSet rs = statement.executeQuery(sql);</span><br><span class=\"line\">        String name = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        String mima=<span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (rs.next()) &#123; </span><br><span class=\"line\">        name = rs.getString(<span class=\"string\">\"userName\"</span>); </span><br><span class=\"line\">        mima = rs.getString(<span class=\"string\">\"passWord\"</span>); </span><br><span class=\"line\">        out.println(name+<span class=\"string\">\"\\t\"</span>+mima); </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        rs.close();</span><br><span class=\"line\">        conn.close();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (ClassNotFoundException e) &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"Sorry,can`t find the Driver!\"</span>);</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (SQLException e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">        e.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">%&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"jdbc技术\"><a class=\"header-anchor\" href=\"#jdbc技术\">☆</a>JDBC技术</h3>\n<h4 id=\"基础概念\"><a class=\"header-anchor\" href=\"#基础概念\">☆</a>基础概念</h4>\n<p>Java语言访问数据库的一种规范,是一套API</p>\n<p>JDBC (Java Database Connectivity) API，即Java数据库编程接口，是一组标准的Java语言中的接口和类，使用这些接口和类，Java客户端程序可以访问各种不同类型的数据库。比如建立数据库连接、执行SQL语句进行数据的存取操作。</p>\n<h4 id=\"drivermanager类\"><a class=\"header-anchor\" href=\"#drivermanager类\">☆</a>DriverManager类</h4>\n<p>处理驱动程序的加载和建立新数据连接。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">connection.getConnection(String url, String user, String password)</span><br><span class=\"line\">Connection con = DriverManager.getConnection(<span class=\"string\">\"jdbc:oracle:thin:@127.0.0.1:1521:name\"</span>, <span class=\"string\">\"scott\"</span>,<span class=\"string\">\"tiger\"</span>);</span><br></pre></td></tr></table></figure>\n<h4 id=\"connection接口\"><a class=\"header-anchor\" href=\"#connection接口\">☆</a>Connection接口</h4>\n<p>代表Java程序与数据库间的连接，用于提供创建语句以及管理连接及其属性方法。</p>\n<p><strong><center><span id=\"font-blue\">Connection接口常用方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法声明</th>\n<th style=\"text-align:left\">功能简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Statement createStatement()</td>\n<td style=\"text-align:left\">创建一个Statement对象，用于将SQL语句发送到数据库，通常在执行无参数的SQL语句时创建该实例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">PrepareStatement prepareStatement()</td>\n<td style=\"text-align:left\">通常在执行包含参数的SQL语句时创建该实例，并对SQL语句进行预编译处理</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void close()</td>\n<td style=\"text-align:left\">关闭数据库连接</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Statement st = con.createStatement();</span><br></pre></td></tr></table></figure>\n<h4 id=\"statement接口\"><a class=\"header-anchor\" href=\"#statement接口\">☆</a>Statement接口</h4>\n<p>用于执行静态SQL语句并返回它所生成结果的对象。</p>\n<p><strong><center><span id=\"font-blue\">Statement接口常用方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法声明</th>\n<th style=\"text-align:left\">功能简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">ResultSet executeQuery(String sql)</td>\n<td style=\"text-align:left\">执行指定的静态select语句，并返回一个永远不为null的ResultSet实例</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">int executeUpdate(String sql)</td>\n<td style=\"text-align:left\">执行指定的静态INSET、UPDATE或DELETE语句，并返回一个int型数值，未同步更新记录的条数</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ResultSet rs = st.executeQuery(sql);</span><br></pre></td></tr></table></figure>\n<h4 id=\"preparedstatement接口\"><a class=\"header-anchor\" href=\"#preparedstatement接口\">☆</a>PreparedStatement接口</h4>\n<p>继承自Statement，表示预编译的SQL语句的对象，预编译SQL效率高且支持参数查询</p>\n<h4 id=\"resultset接口\"><a class=\"header-anchor\" href=\"#resultset接口\">☆</a>ResultSet接口</h4>\n<p>用于表示数据库结果集的数据表，通常由执行查询数据库的语句生成，其中存放了查询结果。</p>\n<p>在ResultSet对象中具有指向当前数据行的游标，可以在<span id=\"font-green\">while</span>循环中使用<span id=\"font-green\">next()</span>方法来迭代处理结果集。</p>\n<p><strong><center><span id=\"font-blue\">ResultSet接口常用的获取列值方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">返回类型</th>\n<th style=\"text-align:left\">方法名称</th>\n<th style=\"text-align:left\">返回类型</th>\n<th style=\"text-align:left\">方法名称</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">byte</td>\n<td style=\"text-align:left\">getByte(inc columnIndex)</td>\n<td style=\"text-align:left\">byte</td>\n<td style=\"text-align:left\">getByte(String columnLabel)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">Date</td>\n<td style=\"text-align:left\">getDate(inc columnIndex)</td>\n<td style=\"text-align:left\">Date</td>\n<td style=\"text-align:left\">getDate(String columnLabel)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">double</td>\n<td style=\"text-align:left\">getDouble(inc columnIndex)</td>\n<td style=\"text-align:left\">double</td>\n<td style=\"text-align:left\">getDouble(String columnLabel)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">float</td>\n<td style=\"text-align:left\">getFloat(inc columnIndex)</td>\n<td style=\"text-align:left\">float</td>\n<td style=\"text-align:left\">getFloat(String columnLabel)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">getInt(inc columnIndex)</td>\n<td style=\"text-align:left\">int</td>\n<td style=\"text-align:left\">getInt(String columnLabel)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">long</td>\n<td style=\"text-align:left\">getLong(inc columnIndex)</td>\n<td style=\"text-align:left\">long</td>\n<td style=\"text-align:left\">getLong(String columnLabel)</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">getString(inc columnIndex)</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">getString(String columnLabel)</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>(rs.next())&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> id = rs.getInt(<span class=\"string\">\"id\"</span>);</span><br><span class=\"line\">    String username = rs.getString(<span class=\"string\">\"username\"</span>);</span><br><span class=\"line\">    String gender = rs.getString(<span class=\"string\">\"gender\"</span>);</span><br><span class=\"line\">    java.sql.Date hiredate = rs.getDate(<span class=\"string\">\"hiredate\"</span>);</span><br><span class=\"line\">    System.out.println(id+<span class=\"string\">\"#\"</span>+username+<span class=\"string\">\"#\"</span>+gender+<span class=\"string\">\"+hiredate);</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"重构程序功能\"><a class=\"header-anchor\" href=\"#重构程序功能\">☆</a>重构程序功能</h2>\n<h3 id=\"javabean技术\"><a class=\"header-anchor\" href=\"#javabean技术\">☆</a>JavaBean技术</h3>\n<h4 id=\"javabean编写规范\"><a class=\"header-anchor\" href=\"#javabean编写规范\">☆</a>JavaBean编写规范</h4>\n<ul>\n<li>是一个公共类</li>\n<li>具有无参数的公共构造方法</li>\n<li>具有公共的setter和getter方法来供外部存取其私有属性</li>\n<li>需要放在命名包里，不能放在默认包中</li>\n</ul>\n<h4 id=\"javabean的编译\"><a class=\"header-anchor\" href=\"#javabean的编译\">☆</a>JavaBean的编译</h4>\n<p>略</p>\n<h4 id=\"使用javabean\"><a class=\"header-anchor\" href=\"#使用javabean\">☆</a>使用JavaBean</h4>\n<ul>\n<li><span id=\"font-green\">&lt;jsp:useBean&gt;</span> 装载一个将在JSP页面中使用的JavaBean。\n<ul>\n<li>scope，作用域</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;jsp:useBean id=<span class=\"string\">\"name\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"package.class\"</span>   scope=<span class=\"string\">\"page | request | session | application\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><span id=\"font-green\">&lt;jsp:setProperty&gt;</span> 获取指定的JavaBean的值。\n<ul>\n<li>详解见<a href=\"https://blog.csdn.net/u011024652/article/details/52012435\" target=\"_blank\" rel=\"noopener\">jsp:useBean的用法</a></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//自动匹配赋值</span></span><br><span class=\"line\">&lt;jsp:setProperty name=<span class=\"string\">\"JavaBean实例名\"</span> property=<span class=\"string\">\"*\"</span> /&gt;</span><br><span class=\"line\"><span class=\"comment\">//自动匹配指定属性</span></span><br><span class=\"line\">&lt;jsp:setProperty name=<span class=\"string\">\"JavaBean实例名\"</span> property=<span class=\"string\">\"JavaBean属性名\"</span> /&gt;</span><br><span class=\"line\"><span class=\"comment\">//手动设置属性值</span></span><br><span class=\"line\">&lt;jsp:setProperty name=<span class=\"string\">\"JavaBean实例名\"</span> property=<span class=\"string\">\"JavaBean属性名\"</span> value=<span class=\"string\">\"BeanValue\"</span> /&gt;</span><br><span class=\"line\"><span class=\"comment\">//通过获取request的参数来为相应的属性赋值，其中param为参数名</span></span><br><span class=\"line\">&lt;jsp:setProperty name=<span class=\"string\">\"JavaBean实例名\"</span> property=<span class=\"string\">\"JavaBean属性名\"</span> param=<span class=\"string\">\"request对象中的参数名\"</span> /&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><span id=\"font-green\">&lt;jsp:getProperty&gt;</span> 获取指定Javabean对象的属性值。</li>\n</ul>\n<h4 id=\"javabean实例\"><a class=\"header-anchor\" href=\"#javabean实例\">☆</a>JavaBean实例</h4>\n<figure class=\"highlight\"><figcaption><span>login.jsp</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">\"java\"</span> <span class=\"keyword\">import</span>=<span class=\"string\">\"java.util.*\"</span> contentType=<span class=\"string\">\"text/html; charset=utf-8\"</span> %&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">String path = request.getContextPath();</span><br><span class=\"line\">String basePath = request.getScheme()+<span class=\"string\">\"://\"</span>+request.getServerName()+<span class=\"string\">\":\"</span>+request.getServerPort()+path+<span class=\"string\">\"/\"</span>;</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC <span class=\"string\">\"-//W3C//DTD HTML 4.01 Transitional//EN\"</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;base href=<span class=\"string\">\"&lt;%=basePath%&gt;\"</span>&gt;</span><br><span class=\"line\">    &lt;title&gt;My JSP 'login.jsp' starting page&lt;/title&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"pragma\"</span> content=<span class=\"string\">\"no-cache\"</span>&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"cache-control\"</span> content=<span class=\"string\">\"no-cache\"</span>&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"expires\"</span> content=<span class=\"string\">\"0\"</span>&gt;   </span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"keywords\"</span> content=<span class=\"string\">\"keyword1,keyword2,keyword3\"</span>&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"description\"</span> content=<span class=\"string\">\"This is my page\"</span>&gt; </span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;h1&gt;系统登录&lt;/h1&gt;</span><br><span class=\"line\">    &lt;hr&gt;</span><br><span class=\"line\">    &lt;form name=<span class=\"string\">\"loginForm\"</span> action=<span class=\"string\">\"dologin.jsp?mypass=999999\"</span> method=<span class=\"string\">\"post\"</span>&gt;</span><br><span class=\"line\">      &lt;table&gt;</span><br><span class=\"line\">        &lt;tr&gt;</span><br><span class=\"line\">          &lt;td&gt;用户名：&lt;/td&gt;</span><br><span class=\"line\">          &lt;td&gt;&lt;input type=\"text\" name=\"username\" value=\"\"/&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">        &lt;tr&gt;</span><br><span class=\"line\">          &lt;td&gt;密码：&lt;/td&gt;</span><br><span class=\"line\">          &lt;td&gt;&lt;input type=\"password\" name=\"password\" value=\"\"/&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">        &lt;tr&gt;</span><br><span class=\"line\">          &lt;td colspan=\"2\" align=\"center\"&gt;&lt;input type=\"submit\" value=\"登录\"/&gt;&lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">      &lt;/table&gt;</span><br><span class=\"line\">    &lt;/form&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight\"><figcaption><span>dologin.jsp</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">\"java\"</span> <span class=\"keyword\">import</span>=<span class=\"string\">\"java.util.*\"</span> contentType=<span class=\"string\">\"text/html; charset=utf-8\"</span>%&gt;</span><br><span class=\"line\">&lt;%</span><br><span class=\"line\">String path = request.getContextPath();</span><br><span class=\"line\">String basePath = request.getScheme()+<span class=\"string\">\"://\"</span>+request.getServerName()+<span class=\"string\">\":\"</span>+request.getServerPort()+path+<span class=\"string\">\"/\"</span>;</span><br><span class=\"line\">%&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE HTML PUBLIC <span class=\"string\">\"-//W3C//DTD HTML 4.01 Transitional//EN\"</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">  &lt;head&gt;</span><br><span class=\"line\">    &lt;base href=<span class=\"string\">\"&lt;%=basePath%&gt;\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;title&gt;My JSP 'dologin.jsp' starting page&lt;/title&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"pragma\"</span> content=<span class=\"string\">\"no-cache\"</span>&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"cache-control\"</span> content=<span class=\"string\">\"no-cache\"</span>&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"expires\"</span> content=<span class=\"string\">\"0\"</span>&gt;   </span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"keywords\"</span> content=<span class=\"string\">\"keyword1,keyword2,keyword3\"</span>&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"description\"</span> content=<span class=\"string\">\"This is my page\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;/head&gt;</span><br><span class=\"line\">  &lt;body&gt;</span><br><span class=\"line\">    &lt;jsp:useBean id=<span class=\"string\">\"myUsers\"</span> <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"com.po.Users\"</span> scope=<span class=\"string\">\"page\"</span>/&gt;</span><br><span class=\"line\">    &lt;h1&gt;setProperty动作元素&lt;/h1&gt;</span><br><span class=\"line\">    &lt;hr&gt;</span><br><span class=\"line\">   &lt;!--根据表单自动匹配所有的属性 --&gt;</span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"*\"</span>/&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">   &lt;!--根据表单匹配所有部分的属性 --&gt;</span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"username\"</span>/&gt; </span><br><span class=\"line\"></span><br><span class=\"line\">   &lt;!--根表单无关，通过手工赋值给属性 --&gt;</span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"username\"</span> value=<span class=\"string\">\"lisi\"</span>/&gt;</span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"password\"</span> value=<span class=\"string\">\"888888\"</span>/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">   &lt;!--通过URL传参数给属性赋值 --&gt;</span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"username\"</span>/&gt;</span><br><span class=\"line\">   &lt;jsp:setProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"password\"</span> param=<span class=\"string\">\"mypass\"</span>/&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">   &lt;!-- 使用传统的表达式方式来获取用户名和密码 --&gt;</span><br><span class=\"line\">       用户名：&lt;%=myUsers.getUsername() %&gt;&lt;br&gt;</span><br><span class=\"line\">       密码：&lt;%=myUsers.getPassword() %&gt;&lt;br&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">   &lt;!-- 使用getProperty方式来获取用户名和密码 --&gt;</span><br><span class=\"line\">      用户名：&lt;jsp:getProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"username\"</span>/&gt; &lt;br&gt;</span><br><span class=\"line\">      密码：&lt;jsp:getProperty name=<span class=\"string\">\"myUsers\"</span> property=<span class=\"string\">\"password\"</span>/&gt;&lt;br&gt;</span><br><span class=\"line\">   &lt;br&gt;</span><br><span class=\"line\">   &lt;br&gt;</span><br><span class=\"line\">  &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"重构程序界面\"><a class=\"header-anchor\" href=\"#重构程序界面\">☆</a>重构程序界面</h2>\n<h3 id=\"el和jstl\"><a class=\"header-anchor\" href=\"#el和jstl\">☆</a>EL和JSTL</h3>\n<p>EL语法格式</p>\n<pre><code> ${EL表达式}\n</code></pre>\n<p>运算符：略</p>\n<p><strong><center><span id=\"font-blue\">EL常用内置对象</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">内置对象</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">pageScope</td>\n<td style=\"text-align:left\">取得 page 范围的属性名称所对应的值，${<a href=\"http://pageScope.name\" target=\"_blank\" rel=\"noopener\">pageScope.name</a>}等同与pageContext.getAttribute(“name”);</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">requstScope</td>\n<td style=\"text-align:left\">取得 request 范围的属性名称所对应的值，${<a href=\"http://requestScope.name\" target=\"_blank\" rel=\"noopener\">requestScope.name</a>}等同与request.getAttribute(“name”)；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sessionScope</td>\n<td style=\"text-align:left\">取得 session 范围的属性名称所对应的值，${<a href=\"http://sessionScope.name\" target=\"_blank\" rel=\"noopener\">sessionScope.name</a>}等同与session.getAttribute(“name”)；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">applicationScope</td>\n<td style=\"text-align:left\">取得 application 范围的属性名称所对应的值，${<a href=\"http://applicationScope.name\" target=\"_blank\" rel=\"noopener\">applicationScope.name</a>}等同与application.getAttribute(“name”)；</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">param</td>\n<td style=\"text-align:left\">可以用来获取参数，${param.username} 等同于request.getParameter(“username”); 返回 Slring[] 类型的值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">paramValues</td>\n<td style=\"text-align:left\">${paramValues.hobby} 如同 ServletRequest.getParameter Values(String name)， 返回 string[] 类型的值</td>\n</tr>\n</tbody>\n</table>\n<p><span id=\"inline-blue\">在JSP中使用JSTL的步骤如下</span></p>\n<p id=\"div-border-left-purple\">\n1. 首先需要到http：//tomcat.apache.org/taglibs/standard/ 下载JSTL标记库的jar包。<br>\n2. 然后将获取到的JSTL标记库的jar包，复制到Web应用中的WEB-INF\\lib文件夹下。<br>\n3. 最后在JSP页面中用taglib指令设置标记前缀，即可使用JSTL标记。<br>\n</p>\nJSTL标记：\n<ul>\n<li><span id=\"font-green\">&lt;c:out&gt;</span> 用来显示一个表达式的结果，与&lt;%= %&gt;作用相似，它们的区别就是&lt;c:out&gt;标签可以直接通过&quot;.&quot;操作符来访问属性\n<ul>\n<li><span id=\"font-purple\">value</span>：要输出的内容，必须</li>\n<li><span id=\"font-purple\">default</span>：输出的默认值，非必须，默认为主体中的内容</li>\n<li><span id=\"font-purple\">escapeXml</span>：是否忽略XML特殊字符，非必须，默认为true</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:out value=<span class=\"string\">\"&lt;string&gt;\"</span> <span class=\"keyword\">default</span>=<span class=\"string\">\"&lt;string&gt;\"</span> escapeXml=<span class=\"string\">\"&lt;true|false&gt;\"</span>/&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><span id=\"font-green\">&lt;c:set&gt;</span> 用于设置变量值和对象属性。\n<ul>\n<li><span id=\"font-purple\">value</span>：要存储的值，非必须，默认为主体的内容</li>\n<li><span id=\"font-purple\">target</span>：要修改的属性所属的对象，非必须</li>\n<li><span id=\"font-purple\">property</span>：要修改的属性，非必须</li>\n<li><span id=\"font-purple\">var</span>：存储信息的变量，非必须</li>\n<li><span id=\"font-purple\">scope</span>：var属性的作用域，非必须，默认为Page</li>\n</ul>\n</li>\n</ul>\n<div class=\"note warning\">如果指定了target属性，那么property属性也需要被指定。</div>\n<figure class=\"highlight jsp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:set var=<span class=\"string\">\"&lt;string&gt;\"</span> value=<span class=\"string\">\"&lt;string&gt;\"</span>   target=<span class=\"string\">\"&lt;string&gt;\"</span>   property=<span class=\"string\">\"&lt;string&gt;\"</span>   scope=<span class=\"string\">\"&lt;string&gt;\"</span>/&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><span id=\"font-green\">&lt;c:if&gt;</span> 判断表达式的值，如果表达式的值为 true 则执行其主体内容。\n<ul>\n<li><span id=\"font-purple\">test</span>：条件，必须</li>\n<li><span id=\"font-purple\">var</span>：存储条件结果的变量，非必须</li>\n<li><span id=\"font-purple\">scope</span>：var属性作用域，非必须</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:<span class=\"keyword\">if</span> test=<span class=\"string\">\"&lt;boolean&gt;\"</span> var=<span class=\"string\">\"&lt;string&gt;\"</span> scope=<span class=\"string\">\"&lt;string&gt;\"</span>&gt;</span><br><span class=\"line\">   ...</span><br><span class=\"line\">&lt;/c:if&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><span id=\"font-green\">&lt;c:choose&gt;</span> 与Java switch语句的功能一样，用于在众多选项中做出选择。\n<ul>\n<li>switch语句中有case，而&lt;c:choose&gt;标签中对应有&lt;c:when&gt;，switch语句中有default，而&lt;c:choose&gt;标签中有&lt;c:otherwise&gt;</li>\n<li><span id=\"font-purple\">test</span>：条件，必须</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:choose&gt;</span><br><span class=\"line\">    &lt;c:when test=<span class=\"string\">\"&lt;boolean&gt;\"</span>&gt;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &lt;/c:when&gt;</span><br><span class=\"line\">    &lt;c:when test=<span class=\"string\">\"&lt;boolean&gt;\"</span>&gt;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &lt;/c:when&gt;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    ...</span><br><span class=\"line\">    &lt;c:otherwise&gt;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">    &lt;/c:otherwise&gt;</span><br><span class=\"line\">&lt;/c:choose&gt;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><span id=\"font-green\">&lt;c:forEach&gt;</span> 迭代一个集合中的对象。\n<ul>\n<li><span id=\"font-purple\">items</span>：要被循环的信息，非必须</li>\n<li><span id=\"font-purple\">begin</span>：开始的元素（0=第一个元素，1=第二个元素），非必须，默认为0</li>\n<li><span id=\"font-purple\">end</span>：最后一个元素（0=第一个元素，1=第二个元素），非必须，默认为Last element</li>\n<li><span id=\"font-purple\">step</span>：每一次迭代的步长，非必须，默认为1</li>\n<li><span id=\"font-purple\">var</span>：代表当前条目的变量名称，非必须</li>\n<li><span id=\"font-purple\">varStatus</span>：代表循环状态的变量名称，非必须</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;c:forEach items=<span class=\"string\">\"&lt;object&gt;\"</span> begin=<span class=\"string\">\"&lt;int&gt;\"</span> end=<span class=\"string\">\"&lt;int&gt;\"</span> step=<span class=\"string\">\"&lt;int&gt;\"</span> var=<span class=\"string\">\"&lt;string&gt;\"</span> varStatus=<span class=\"string\">\"&lt;string&gt;\"</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;c:forEach var=<span class=\"string\">\"i\"</span> begin=<span class=\"string\">\"1\"</span> end=<span class=\"string\">\"5\"</span>&gt;</span><br><span class=\"line\">   Item &lt;c:out value=<span class=\"string\">\"$&#123;i&#125;\"</span>/&gt;&lt;p&gt;</span><br><span class=\"line\">&lt;/c:forEach&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"servlet开发\"><a class=\"header-anchor\" href=\"#servlet开发\">☆</a>Servlet开发</h3>\n<h4 id=\"httpservlet类-方法\"><a class=\"header-anchor\" href=\"#httpservlet类-方法\">☆</a>HttpServlet类、方法</h4>\n<p>对于Web应用而言，Servlet主要是用于处理HTTP请求，所以更一般的编写Servlet方法是继承javax.servlet.http.HttpServlet类。</p>\n<p>HttpServlet类是GeniricServle类的子类，通过调用指定到HTTP请求的方法来实现service(）方法。对于HTTP中定义的DELETE、HEAD、GET、POST、PUT等方法，分别调用doDelete(），doHead()、doGet()、doPost()、doPut(）等方法来处理相应的请求。</p>\n<p><strong><center><span id=\"font-blue\">HttpServlet类主要方法</span></center></strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">方法声明</th>\n<th style=\"text-align:left\">功能简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">void doGet(httpServletRequest request, HttpServletResponse, response)</td>\n<td style=\"text-align:left\">用来处理Http Get请求</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void doPost(httpServletRequest request, HttpServletResponse, response)</td>\n<td style=\"text-align:left\">用来处理Http Post请求</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">void service(httpServletRequest request, HttpServletResponse, response)</td>\n<td style=\"text-align:left\">根据请求的类型，将请求导向doGet(),doPost()方法</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"编写-编译servlet\"><a class=\"header-anchor\" href=\"#编写-编译servlet\">☆</a>编写、编译Servlet</h4>\n<p>编写<span id=\"font-green\">Servlet</span>的一般步骤如下:</p>\n<p id=\"div-border-left-purple\">\n1. 导入javax.servlet包、javax.servlet.http包及其他必要的包。<br>\n2. 继承HttpServlet类，并重写doPost（)和doGet（)方法。<br>\n3. 在doPost(）和doGet()方法中依次实现获取请求参数、创建输出对象、设置响应类型、输出响应内容等功能。<br>\n</p>\n<span id=\"font-blue\">编译</span>和<span id=\"font-blue\">配置</span>Servlet:\n<ul>\n<li>Servlet类编写完成之后，需要进行编译和部署。</li>\n<li>编译Servlet之前需要先把Servlet API库文件添加到环境变量CLASSPATH 中。可以直接使用Tomcat发行版中包含的servlet-api.jar。向系统的CLASSPATH环境变量中增加下面的值（假定Tomcat安装目录为d:\\tomcat)：</li>\n</ul>\n<div class=\"note success\"> d: \\tomcat\\lib\\servlet-api . jar</div>\n- 然后打开命令行窗口，进入dem008应用中的src目录，使用下面的命令进行编译：\n<div class=\"note success\">javac -d  ..\\classes  servlet\\HelloServlet.java</div>\n<figure class=\"highlight xml\"><figcaption><span>web.xml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>business<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-class</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">servlet-mapping</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">servlet-name</span>&gt;</span>LogOutServlet<span class=\"tag\">&lt;/<span class=\"name\">servlet-name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">url-pattern</span>&gt;</span>/logout<span class=\"tag\">&lt;/<span class=\"name\">url-pattern</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">servlet-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"mvc设计模式\"><a class=\"header-anchor\" href=\"#mvc设计模式\">☆</a>MVC设计模式</h3>\n<p id=\"div-border-left-yellow\">\n 所谓设计模式，是针对典型问题所提供的一套成熟的解决方案。MVC就是一种流行的程序设计模式，它把程序理解为由模型层（Model)、视图层（View)和控制器层(Controller)三个部分组成。其中，模型层表示程序的业务逻辑和状态，包括业务模型和数据模型；视图层是程序的用户界面，用于显示模型数据；控制器层响应用户请求，根据请求内容来操作模型层并控制程序的流程，决定要向用户显示的视图。\n</p>\nJava Web应用开发也可以采用MVC设计模式，用JSP作为视图层，Servlet作为控制器层，JavaBean作为模型层。这样的开发形式实现了程序的分层结构，将功能实现、用户界面和流程控制分别由不同的模块来实现，并在各个模块之间实现了良好的解耦。(<span id=\"font-blue\">jsp Model2</span>)\n<p>在基于MVC的Web应用中，<span id=\"font-blue\">一次用户请求的处理过程</span>如下：</p>\n<p><span id=\"inline-toc\">1.</span> 浏览器发出请求；<br>\n<span id=\"inline-toc\">2.</span> 作为控制器的Servlet接收请求，并将请求以适当的方式分发给对应的业务模型JavaBean来处理；<br>\n<span id=\"inline-toc\">3.</span> 如果该业务需要与数据库交互，由JavaBean来访问数据库；<br>\n<span id=\"inline-toc\">4.</span> 模型层JavaBean将处理结果返回给控制器Servlet；<br>\n<span id=\"inline-toc\">5.</span> Servlet以适当的方式将结果数据传递给视图层JSP页面，并将控制流程转向该JSP页面；<br>\n<span id=\"inline-toc\">6.</span> 应用服务器将JSP生成的HTML作为响应返回给浏览器。</p>\n"},{"title":"Speed Of Sound","copyright":false,"abbrlink":"1bb05bfb","notshow":false,"description":"How long do I have climb up on the side of this mountain of mine?","sticky":2,"date":"2018-08-16T08:52:00.000Z","password":null,"photos":["https://data.singlelovely.cn/CoverPicture/1bb05bfb.png!CoverPicture"],"image":null,"_content":"</br>\n\n**未知之神，何时我才能在我的高处俯视，说：你们想升高时，就向上仰望。我向下俯视，因为我已升高？^[1]^**\n\n</br>\n\n<p id=\"div-border-left-purple\">How long before I get in</br>\n在我抵达之前已过了多久</br>\nBefore it starts before I begin</br>\n在开启旅途之前 在我启程之前</br>\nHow long before you decide or</br>\n在你做决定之前已过了多久</br>\nBefore I know what it feels like</br>\n在我体会到这种远行的滋味之前</br>\nWhere to, where do I go?</br>\n朝着何方 我要去何方</br>\nIf you never try then you'll never know</br>\n如果你从不去尝试 你将永远无法知晓</br>\nHow long do I have to climb</br>\n我还得往上攀爬多久呢</br>\nUp on the side of this mountain of mine</br>\n一直沿着这座山向上爬</p>\n</br>\n<!--more-->\n\n**当我抬头仰望时，其它所有的一切都以声速在脑后消散，如飞鸟般，你也能看到吗？**\n\n</br>\n<p id=\"div-border-left-purple\">Look up, I look up at night</br>\n抬头仰望 我在夜里仰望</br>\nPlanets are moving at the speed of light</br>\n行星正以光速急速移动</br>\nClimb up, up in the trees</br>\n往上爬呀 爬过这片树林</br>\nEvery chance that you get is a chance you seize</br>\n你赢得的每一次机会你都必须抓牢</br>\nHow long am I gonna stand</br>\n我还得伫立多久呢</br>\nWith my head stuck under the sand</br>\n头颅深埋进沙堆里</br>\nI start before I can stop or</br>\n我会再度启程直到我想要停下</br>\nBefore I see things the right way up</br>\n直到前方事物闯入我的视野</br>\nAll that noise and all that sound</br>\n所有的噪声与喧哗</br>\nAll those places I got found</br>\n我途径找到的所有那些地方</br>\nAnd birds go flying at the speed of sound</br>\n飞鸟声速般一哄而散</br>\nTo show you how it all began</br>\n为了向你预示这一切是如何开始</br>\nBirds came flying from the underground</br>\n群鸟从地底下飞掠上来</br>\nIf you could see it then you'd understand</br>\n如果你见过它们你就会憬悟</br>\n\n</br>\n\n**我一直相信有些神奇的事物在等待着我来创造，有些神秘的谜团在等待着我来解答，群鸟正从地底飞上来，你也能看到吗？**\n\n</br>\n\n<p id=\"div-border-left-purple\">\nIdeas that you'll never find</br>\n你脑子里从未闪现过的新奇想法</br>\nAll the inventors could never design</br>\n所有的发明家从没有设计过</br>\nThe buildings that you put up</br>\n你精心一手建造的建筑物</br>\nBut you've been in China all lit up</br>\n但你到过辉煌灿烂的中国</br>\nA sign that I couldn't read</br>\n一个我辨认不出的古老符号</br>\nor a light, that I couldn't see</br>\n抑或一束我无法直视的光芒</br>\nSome things you have to believe</br>\n你不得不相信一些事情</br>\nWhen others are puzzles, puzzling me</br>\n当其他人就像谜团一样令我困惑不解</br>\nAll that noise and all that sound</br>\n所有的噪声与喧哗</br>\nAll those places I got found</br>\n我途径找到的所有那些地方</br>\nAnd birds go flying at the speed of sound</br>\n群鸟从地底下飞掠上来</br>\nTo show you how it all began</br>\n为了向你预示这一切是如何开始</br>\nBirds came flying from the underground</br>\n群鸟从地底下飞掠上来</br>\nIf you could see it then you'd understand</br>\n如果你见过它们你就会憬悟</br>\nOh, when you see it then you'll understand</br>\n噢 当你见过你就会憬悟</p>\n\n</br>\n\n**一直相信，一直攀爬，再次抬头仰望时，其它所有的一切又都以声速在脑后消散，那么现在：**\n\n</br>\n\n<p id=\"div-border-left-purple\">\n夫子说：“现在你应该从怠惰中</br>\n摆脱出来，因为坐在绒毛上面，</br>\n或者睡在被窝里的人是不会成名的；</br>\n没有名声而磋砣一生，</br>\n人们在人世留下的痕迹，</br>\n就像空中的烟云，水上的泡沫；</br>\n因此起来吧！用那战胜一切战役的</br>\n灵魂来战胜你的气喘，</br>\n假使灵魂不和沉重的躯壳一起下沉。</br>\n一架更长的梯子还需要爬登：</br>\n走过了这些地方还不够；你若懂得我，</br>\n那么起来吧，这对你有好处。”^[2]^</p>\n</br>\n</br>\n\n<center> <font color=black > better die than look back. </center>  \n\n{% meting \"3986344\" \"netease\" \"song\" %}\n\n</br>\n\n<span id=\"inline-toc\">1</span>.尼采：《查拉图斯特拉如是说》（钱春绮译），p39，《读和写》。 ↩\n<span id=\"inline-toc\">2</span>.但丁：《神曲》，地狱篇，第二十四歌。 ↩\n","source":"_posts/Speed Of Sound.md","raw":"---\ntitle: Speed Of Sound\ncopyright: false\nabbrlink: 1bb05bfb\nnotshow: false\ndescription: How long do I have climb up on the side of this mountain of mine?\nsticky: 2\ndate: 2018-08-16 16:52:00\ntags: \ncategories: 音乐\npassword:\nphotos: \n- \"https://data.singlelovely.cn/CoverPicture/1bb05bfb.png!CoverPicture\"\nimage:\n---\n</br>\n\n**未知之神，何时我才能在我的高处俯视，说：你们想升高时，就向上仰望。我向下俯视，因为我已升高？^[1]^**\n\n</br>\n\n<p id=\"div-border-left-purple\">How long before I get in</br>\n在我抵达之前已过了多久</br>\nBefore it starts before I begin</br>\n在开启旅途之前 在我启程之前</br>\nHow long before you decide or</br>\n在你做决定之前已过了多久</br>\nBefore I know what it feels like</br>\n在我体会到这种远行的滋味之前</br>\nWhere to, where do I go?</br>\n朝着何方 我要去何方</br>\nIf you never try then you'll never know</br>\n如果你从不去尝试 你将永远无法知晓</br>\nHow long do I have to climb</br>\n我还得往上攀爬多久呢</br>\nUp on the side of this mountain of mine</br>\n一直沿着这座山向上爬</p>\n</br>\n<!--more-->\n\n**当我抬头仰望时，其它所有的一切都以声速在脑后消散，如飞鸟般，你也能看到吗？**\n\n</br>\n<p id=\"div-border-left-purple\">Look up, I look up at night</br>\n抬头仰望 我在夜里仰望</br>\nPlanets are moving at the speed of light</br>\n行星正以光速急速移动</br>\nClimb up, up in the trees</br>\n往上爬呀 爬过这片树林</br>\nEvery chance that you get is a chance you seize</br>\n你赢得的每一次机会你都必须抓牢</br>\nHow long am I gonna stand</br>\n我还得伫立多久呢</br>\nWith my head stuck under the sand</br>\n头颅深埋进沙堆里</br>\nI start before I can stop or</br>\n我会再度启程直到我想要停下</br>\nBefore I see things the right way up</br>\n直到前方事物闯入我的视野</br>\nAll that noise and all that sound</br>\n所有的噪声与喧哗</br>\nAll those places I got found</br>\n我途径找到的所有那些地方</br>\nAnd birds go flying at the speed of sound</br>\n飞鸟声速般一哄而散</br>\nTo show you how it all began</br>\n为了向你预示这一切是如何开始</br>\nBirds came flying from the underground</br>\n群鸟从地底下飞掠上来</br>\nIf you could see it then you'd understand</br>\n如果你见过它们你就会憬悟</br>\n\n</br>\n\n**我一直相信有些神奇的事物在等待着我来创造，有些神秘的谜团在等待着我来解答，群鸟正从地底飞上来，你也能看到吗？**\n\n</br>\n\n<p id=\"div-border-left-purple\">\nIdeas that you'll never find</br>\n你脑子里从未闪现过的新奇想法</br>\nAll the inventors could never design</br>\n所有的发明家从没有设计过</br>\nThe buildings that you put up</br>\n你精心一手建造的建筑物</br>\nBut you've been in China all lit up</br>\n但你到过辉煌灿烂的中国</br>\nA sign that I couldn't read</br>\n一个我辨认不出的古老符号</br>\nor a light, that I couldn't see</br>\n抑或一束我无法直视的光芒</br>\nSome things you have to believe</br>\n你不得不相信一些事情</br>\nWhen others are puzzles, puzzling me</br>\n当其他人就像谜团一样令我困惑不解</br>\nAll that noise and all that sound</br>\n所有的噪声与喧哗</br>\nAll those places I got found</br>\n我途径找到的所有那些地方</br>\nAnd birds go flying at the speed of sound</br>\n群鸟从地底下飞掠上来</br>\nTo show you how it all began</br>\n为了向你预示这一切是如何开始</br>\nBirds came flying from the underground</br>\n群鸟从地底下飞掠上来</br>\nIf you could see it then you'd understand</br>\n如果你见过它们你就会憬悟</br>\nOh, when you see it then you'll understand</br>\n噢 当你见过你就会憬悟</p>\n\n</br>\n\n**一直相信，一直攀爬，再次抬头仰望时，其它所有的一切又都以声速在脑后消散，那么现在：**\n\n</br>\n\n<p id=\"div-border-left-purple\">\n夫子说：“现在你应该从怠惰中</br>\n摆脱出来，因为坐在绒毛上面，</br>\n或者睡在被窝里的人是不会成名的；</br>\n没有名声而磋砣一生，</br>\n人们在人世留下的痕迹，</br>\n就像空中的烟云，水上的泡沫；</br>\n因此起来吧！用那战胜一切战役的</br>\n灵魂来战胜你的气喘，</br>\n假使灵魂不和沉重的躯壳一起下沉。</br>\n一架更长的梯子还需要爬登：</br>\n走过了这些地方还不够；你若懂得我，</br>\n那么起来吧，这对你有好处。”^[2]^</p>\n</br>\n</br>\n\n<center> <font color=black > better die than look back. </center>  \n\n{% meting \"3986344\" \"netease\" \"song\" %}\n\n</br>\n\n<span id=\"inline-toc\">1</span>.尼采：《查拉图斯特拉如是说》（钱春绮译），p39，《读和写》。 ↩\n<span id=\"inline-toc\">2</span>.但丁：《神曲》，地狱篇，第二十四歌。 ↩\n","slug":"Speed Of Sound","published":1,"updated":"2020-02-20T06:06:59.395Z","comments":1,"layout":"post","link":"","_id":"ckec2td2p000mfkupo0ox2q09","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><br>\n<p><strong>未知之神，何时我才能在我的高处俯视，说：你们想升高时，就向上仰望。我向下俯视，因为我已升高？<sup>[1]</sup></strong></p>\n<br>\n<p id=\"div-border-left-purple\">How long before I get in<br>\n在我抵达之前已过了多久<br>\nBefore it starts before I begin<br>\n在开启旅途之前 在我启程之前<br>\nHow long before you decide or<br>\n在你做决定之前已过了多久<br>\nBefore I know what it feels like<br>\n在我体会到这种远行的滋味之前<br>\nWhere to, where do I go?<br>\n朝着何方 我要去何方<br>\nIf you never try then you'll never know<br>\n如果你从不去尝试 你将永远无法知晓<br>\nHow long do I have to climb<br>\n我还得往上攀爬多久呢<br>\nUp on the side of this mountain of mine<br>\n一直沿着这座山向上爬</p>\n<br>\n<a id=\"more\"></a>\n<p><strong>当我抬头仰望时，其它所有的一切都以声速在脑后消散，如飞鸟般，你也能看到吗？</strong></p>\n<br>\n<p id=\"div-border-left-purple\">Look up, I look up at night<br>\n抬头仰望 我在夜里仰望<br>\nPlanets are moving at the speed of light<br>\n行星正以光速急速移动<br>\nClimb up, up in the trees<br>\n往上爬呀 爬过这片树林<br>\nEvery chance that you get is a chance you seize<br>\n你赢得的每一次机会你都必须抓牢<br>\nHow long am I gonna stand<br>\n我还得伫立多久呢<br>\nWith my head stuck under the sand<br>\n头颅深埋进沙堆里<br>\nI start before I can stop or<br>\n我会再度启程直到我想要停下<br>\nBefore I see things the right way up<br>\n直到前方事物闯入我的视野<br>\nAll that noise and all that sound<br>\n所有的噪声与喧哗<br>\nAll those places I got found<br>\n我途径找到的所有那些地方<br>\nAnd birds go flying at the speed of sound<br>\n飞鸟声速般一哄而散<br>\nTo show you how it all began<br>\n为了向你预示这一切是如何开始<br>\nBirds came flying from the underground<br>\n群鸟从地底下飞掠上来<br>\nIf you could see it then you'd understand<br>\n如果你见过它们你就会憬悟<br>\n<br>\n</p><p><strong>我一直相信有些神奇的事物在等待着我来创造，有些神秘的谜团在等待着我来解答，群鸟正从地底飞上来，你也能看到吗？</strong></p>\n<br>\n<p id=\"div-border-left-purple\">\nIdeas that you'll never find<br>\n你脑子里从未闪现过的新奇想法<br>\nAll the inventors could never design<br>\n所有的发明家从没有设计过<br>\nThe buildings that you put up<br>\n你精心一手建造的建筑物<br>\nBut you've been in China all lit up<br>\n但你到过辉煌灿烂的中国<br>\nA sign that I couldn't read<br>\n一个我辨认不出的古老符号<br>\nor a light, that I couldn't see<br>\n抑或一束我无法直视的光芒<br>\nSome things you have to believe<br>\n你不得不相信一些事情<br>\nWhen others are puzzles, puzzling me<br>\n当其他人就像谜团一样令我困惑不解<br>\nAll that noise and all that sound<br>\n所有的噪声与喧哗<br>\nAll those places I got found<br>\n我途径找到的所有那些地方<br>\nAnd birds go flying at the speed of sound<br>\n群鸟从地底下飞掠上来<br>\nTo show you how it all began<br>\n为了向你预示这一切是如何开始<br>\nBirds came flying from the underground<br>\n群鸟从地底下飞掠上来<br>\nIf you could see it then you'd understand<br>\n如果你见过它们你就会憬悟<br>\nOh, when you see it then you'll understand<br>\n噢 当你见过你就会憬悟</p>\n<br>\n<p><strong>一直相信，一直攀爬，再次抬头仰望时，其它所有的一切又都以声速在脑后消散，那么现在：</strong></p>\n<br>\n<p id=\"div-border-left-purple\">\n夫子说：“现在你应该从怠惰中<br>\n摆脱出来，因为坐在绒毛上面，<br>\n或者睡在被窝里的人是不会成名的；<br>\n没有名声而磋砣一生，<br>\n人们在人世留下的痕迹，<br>\n就像空中的烟云，水上的泡沫；<br>\n因此起来吧！用那战胜一切战役的<br>\n灵魂来战胜你的气喘，<br>\n假使灵魂不和沉重的躯壳一起下沉。<br>\n一架更长的梯子还需要爬登：<br>\n走过了这些地方还不够；你若懂得我，<br>\n那么起来吧，这对你有好处。”^[2]^</p>\n<br>\n<br>\n<center> <font color=\"black\"> better die than look back. </font></center>  \n\n    <div id=\"aplayer-xwPETaES\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"3986344\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"></div>\n<br>\n<p><span id=\"inline-toc\">1</span>.尼采：《查拉图斯特拉如是说》（钱春绮译），p39，《读和写》。 ↩<br>\n<span id=\"inline-toc\">2</span>.但丁：《神曲》，地狱篇，第二十四歌。 ↩</p>\n","site":{"data":{}},"length":2087,"excerpt":"<br>\n<p><strong>未知之神，何时我才能在我的高处俯视，说：你们想升高时，就向上仰望。我向下俯视，因为我已升高？<sup>[1]</sup></strong></p>\n<br>\n<p id=\"div-border-left-purple\">How long before I get in<br>\n在我抵达之前已过了多久<br>\nBefore it starts before I begin<br>\n在开启旅途之前 在我启程之前<br>\nHow long before you decide or<br>\n在你做决定之前已过了多久<br>\nBefore I know what it feels like<br>\n在我体会到这种远行的滋味之前<br>\nWhere to, where do I go?<br>\n朝着何方 我要去何方<br>\nIf you never try then you'll never know<br>\n如果你从不去尝试 你将永远无法知晓<br>\nHow long do I have to climb<br>\n我还得往上攀爬多久呢<br>\nUp on the side of this mountain of mine<br>\n一直沿着这座山向上爬</p>\n<br>","more":"<p><strong>当我抬头仰望时，其它所有的一切都以声速在脑后消散，如飞鸟般，你也能看到吗？</strong></p>\n<br>\n<p id=\"div-border-left-purple\">Look up, I look up at night<br>\n抬头仰望 我在夜里仰望<br>\nPlanets are moving at the speed of light<br>\n行星正以光速急速移动<br>\nClimb up, up in the trees<br>\n往上爬呀 爬过这片树林<br>\nEvery chance that you get is a chance you seize<br>\n你赢得的每一次机会你都必须抓牢<br>\nHow long am I gonna stand<br>\n我还得伫立多久呢<br>\nWith my head stuck under the sand<br>\n头颅深埋进沙堆里<br>\nI start before I can stop or<br>\n我会再度启程直到我想要停下<br>\nBefore I see things the right way up<br>\n直到前方事物闯入我的视野<br>\nAll that noise and all that sound<br>\n所有的噪声与喧哗<br>\nAll those places I got found<br>\n我途径找到的所有那些地方<br>\nAnd birds go flying at the speed of sound<br>\n飞鸟声速般一哄而散<br>\nTo show you how it all began<br>\n为了向你预示这一切是如何开始<br>\nBirds came flying from the underground<br>\n群鸟从地底下飞掠上来<br>\nIf you could see it then you'd understand<br>\n如果你见过它们你就会憬悟<br>\n<br>\n</p><p><strong>我一直相信有些神奇的事物在等待着我来创造，有些神秘的谜团在等待着我来解答，群鸟正从地底飞上来，你也能看到吗？</strong></p>\n<br>\n<p id=\"div-border-left-purple\">\nIdeas that you'll never find<br>\n你脑子里从未闪现过的新奇想法<br>\nAll the inventors could never design<br>\n所有的发明家从没有设计过<br>\nThe buildings that you put up<br>\n你精心一手建造的建筑物<br>\nBut you've been in China all lit up<br>\n但你到过辉煌灿烂的中国<br>\nA sign that I couldn't read<br>\n一个我辨认不出的古老符号<br>\nor a light, that I couldn't see<br>\n抑或一束我无法直视的光芒<br>\nSome things you have to believe<br>\n你不得不相信一些事情<br>\nWhen others are puzzles, puzzling me<br>\n当其他人就像谜团一样令我困惑不解<br>\nAll that noise and all that sound<br>\n所有的噪声与喧哗<br>\nAll those places I got found<br>\n我途径找到的所有那些地方<br>\nAnd birds go flying at the speed of sound<br>\n群鸟从地底下飞掠上来<br>\nTo show you how it all began<br>\n为了向你预示这一切是如何开始<br>\nBirds came flying from the underground<br>\n群鸟从地底下飞掠上来<br>\nIf you could see it then you'd understand<br>\n如果你见过它们你就会憬悟<br>\nOh, when you see it then you'll understand<br>\n噢 当你见过你就会憬悟</p>\n<br>\n<p><strong>一直相信，一直攀爬，再次抬头仰望时，其它所有的一切又都以声速在脑后消散，那么现在：</strong></p>\n<br>\n<p id=\"div-border-left-purple\">\n夫子说：“现在你应该从怠惰中<br>\n摆脱出来，因为坐在绒毛上面，<br>\n或者睡在被窝里的人是不会成名的；<br>\n没有名声而磋砣一生，<br>\n人们在人世留下的痕迹，<br>\n就像空中的烟云，水上的泡沫；<br>\n因此起来吧！用那战胜一切战役的<br>\n灵魂来战胜你的气喘，<br>\n假使灵魂不和沉重的躯壳一起下沉。<br>\n一架更长的梯子还需要爬登：<br>\n走过了这些地方还不够；你若懂得我，<br>\n那么起来吧，这对你有好处。”^[2]^</p>\n<br>\n<br>\n<center> <font color=\"black\"> better die than look back. </font></center>  \n\n    <div id=\"aplayer-xwPETaES\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"3986344\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"></div>\n<br>\n<p><span id=\"inline-toc\">1</span>.尼采：《查拉图斯特拉如是说》（钱春绮译），p39，《读和写》。 ↩<br>\n<span id=\"inline-toc\">2</span>.但丁：《神曲》，地狱篇，第二十四歌。 ↩</p>"},{"title":"Python基本数据类型","copyright":true,"abbrlink":"cd12463","date":"2018-06-11T09:24:10.000Z","password":null,"_content":"\n{% meting \"376049\" \"xiami\" \"song\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n### 数字类型及操作\n#### 整数类型\n- 可正可负，无范围限制\n     pow(x,y)   函数：计算x的y次方\n- 四种进制表示\n\t- 十进制：直接写数字\n\t- 二进制：以0b或0B开头\n\t- 八进制：以0o或0O开头\n\t- 十六进制：以0x或0X开头\n\n#### 浮点数类型\n**与数学中的实数一致**\n- 带有小数点的数字\n- 精度存在限制，常规可以忽略\n-  取值范围数量级约-10^308^ 至 10^308^，精度数量级10^-16^\n- 浮点数运算存在不确定尾数，不是bug\n\t- 二进制表示问题，可以无限接近，但不完全相同\n    round(x,d)：对x四舍五入，d是小数截取位数\n- 浮点数间运算及比较用round()函数辅助\n\n- 采用科学计数法表示\n\t- 使用字母E或者e作为幂的符号，以10为基数，格式为：\\<a>e\\<b>  表示a*10*b\n\n#### 复数类型\n**与数学中的复数一致**\n         z = 1.23e - 4 + 5.6e + 89j\n实部：z.real\n虚部：z.imag\n\n\n空间变换时常用\n\n#### 数字运算操作符\n![01](https://data.singlelovely.cn/xsj/2018/6/13/python操作符.png)\n\n![02](https://data.singlelovely.cn/xsj/2018/6/13/python操作符2.png)\n\n![03](https://data.singlelovely.cn/xsj/2018/6/13/python操作符3.png)\n\n\n\n- 数字类型的关系\n\t**类型间可以进行混合运算，生成的结果为‘最宽’类型**\n- 三种类型存在一种逐渐扩展变宽的关系\n\t- 整数 -> 浮点数 -> 复数\n\n#### 数值运算函数\n| 函数及使用  |          描述            |\n| ------------------ | ------------------------------------------------------------------------- |\n| abs(x)             | 绝对值，x的绝对值         abs(-10.01) 结果为 10.01                        |\n| divmod(x,y)        | 商余，(x//y, x%y)，同时输出商和余数 divmod(10, 3) 结果为 (3, 1) |\n| pow(x, y[, z])     | 幂余，(x\\*\\*y)%z，[..]表示参数z可省略 pow(3, pow(3, 99), 10000) 结果为 4587 |\n| round(x[, d])      | 四舍五入，d是保留小数位数，默认值为0 round(-10.123, 2) 结果为 -10.12      |\n| max(x1,x2, … ,xn) | 最大值，返回x1,x2, … ,xn中的最大值，n不限 max(1, 9, 5, 4 3) 结果为 9     |\n| min(x1,x2, … ,xn) | 最小值，返回x1,x2, … ,xn中的最小值，n不限 min(1, 9, 5, 4 3) 结果为 1  |\n| int(x) | 将x变成整数，舍弃小数部分 int(123.45) 结果为123； int(\"123\") 结果为123 |\n| float(x) | 将x变成浮点数，增加小数部分 float(12) 结果为12.0； float(\"1.23\") 结果为1.23 |\n|complex(x) | 将x变成复数，增加虚数部分 complex(4) 结果为 4 + 0j |\n\n\n\n\n### 天天向上的力量\n\n\n\n\n### 字符串类型及操作\n\n\n\n### time库的使用\n\n\n\n\n### 文本进度条\n\n","source":"_posts/Python基本数据类型.md","raw":"---\ntitle: Python基本数据类型\ncopyright: true\nabbrlink: cd12463\ntags:\n  - python\ncategories: python\ndate: 2018-06-11 17:24:10\npassword:\n---\n\n{% meting \"376049\" \"xiami\" \"song\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n### 数字类型及操作\n#### 整数类型\n- 可正可负，无范围限制\n     pow(x,y)   函数：计算x的y次方\n- 四种进制表示\n\t- 十进制：直接写数字\n\t- 二进制：以0b或0B开头\n\t- 八进制：以0o或0O开头\n\t- 十六进制：以0x或0X开头\n\n#### 浮点数类型\n**与数学中的实数一致**\n- 带有小数点的数字\n- 精度存在限制，常规可以忽略\n-  取值范围数量级约-10^308^ 至 10^308^，精度数量级10^-16^\n- 浮点数运算存在不确定尾数，不是bug\n\t- 二进制表示问题，可以无限接近，但不完全相同\n    round(x,d)：对x四舍五入，d是小数截取位数\n- 浮点数间运算及比较用round()函数辅助\n\n- 采用科学计数法表示\n\t- 使用字母E或者e作为幂的符号，以10为基数，格式为：\\<a>e\\<b>  表示a*10*b\n\n#### 复数类型\n**与数学中的复数一致**\n         z = 1.23e - 4 + 5.6e + 89j\n实部：z.real\n虚部：z.imag\n\n\n空间变换时常用\n\n#### 数字运算操作符\n![01](https://data.singlelovely.cn/xsj/2018/6/13/python操作符.png)\n\n![02](https://data.singlelovely.cn/xsj/2018/6/13/python操作符2.png)\n\n![03](https://data.singlelovely.cn/xsj/2018/6/13/python操作符3.png)\n\n\n\n- 数字类型的关系\n\t**类型间可以进行混合运算，生成的结果为‘最宽’类型**\n- 三种类型存在一种逐渐扩展变宽的关系\n\t- 整数 -> 浮点数 -> 复数\n\n#### 数值运算函数\n| 函数及使用  |          描述            |\n| ------------------ | ------------------------------------------------------------------------- |\n| abs(x)             | 绝对值，x的绝对值         abs(-10.01) 结果为 10.01                        |\n| divmod(x,y)        | 商余，(x//y, x%y)，同时输出商和余数 divmod(10, 3) 结果为 (3, 1) |\n| pow(x, y[, z])     | 幂余，(x\\*\\*y)%z，[..]表示参数z可省略 pow(3, pow(3, 99), 10000) 结果为 4587 |\n| round(x[, d])      | 四舍五入，d是保留小数位数，默认值为0 round(-10.123, 2) 结果为 -10.12      |\n| max(x1,x2, … ,xn) | 最大值，返回x1,x2, … ,xn中的最大值，n不限 max(1, 9, 5, 4 3) 结果为 9     |\n| min(x1,x2, … ,xn) | 最小值，返回x1,x2, … ,xn中的最小值，n不限 min(1, 9, 5, 4 3) 结果为 1  |\n| int(x) | 将x变成整数，舍弃小数部分 int(123.45) 结果为123； int(\"123\") 结果为123 |\n| float(x) | 将x变成浮点数，增加小数部分 float(12) 结果为12.0； float(\"1.23\") 结果为1.23 |\n|complex(x) | 将x变成复数，增加虚数部分 complex(4) 结果为 4 + 0j |\n\n\n\n\n### 天天向上的力量\n\n\n\n\n### 字符串类型及操作\n\n\n\n### time库的使用\n\n\n\n\n### 文本进度条\n\n","slug":"Python基本数据类型","published":1,"updated":"2020-02-20T06:06:59.394Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td2r000nfkupssc4hw69","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-JbkWFnHt\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"376049\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h3 id=\"数字类型及操作\"><a class=\"header-anchor\" href=\"#数字类型及操作\">☆</a>数字类型及操作</h3>\n<h4 id=\"整数类型\"><a class=\"header-anchor\" href=\"#整数类型\">☆</a>整数类型</h4>\n<ul>\n<li>可正可负，无范围限制<br>\npow(x,y)   函数：计算x的y次方</li>\n<li>四种进制表示\n<ul>\n<li>十进制：直接写数字</li>\n<li>二进制：以0b或0B开头</li>\n<li>八进制：以0o或0O开头</li>\n<li>十六进制：以0x或0X开头</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"浮点数类型\"><a class=\"header-anchor\" href=\"#浮点数类型\">☆</a>浮点数类型</h4>\n<p><strong>与数学中的实数一致</strong></p>\n<ul>\n<li>\n<p>带有小数点的数字</p>\n</li>\n<li>\n<p>精度存在限制，常规可以忽略</p>\n</li>\n<li>\n<p>取值范围数量级约-10<sup>308</sup> 至 10<sup>308</sup>，精度数量级10<sup>-16</sup></p>\n</li>\n<li>\n<p>浮点数运算存在不确定尾数，不是bug</p>\n<ul>\n<li>二进制表示问题，可以无限接近，但不完全相同<br>\nround(x,d)：对x四舍五入，d是小数截取位数</li>\n</ul>\n</li>\n<li>\n<p>浮点数间运算及比较用round()函数辅助</p>\n</li>\n<li>\n<p>采用科学计数法表示</p>\n<ul>\n<li>使用字母E或者e作为幂的符号，以10为基数，格式为：&lt;a&gt;e&lt;b&gt;  表示a<em>10</em>b</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"复数类型\"><a class=\"header-anchor\" href=\"#复数类型\">☆</a>复数类型</h4>\n<p><strong>与数学中的复数一致</strong><br>\nz = 1.23e - 4 + 5.6e + 89j<br>\n实部：z.real<br>\n虚部：z.imag</p>\n<p>空间变换时常用</p>\n<h4 id=\"数字运算操作符\"><a class=\"header-anchor\" href=\"#数字运算操作符\">☆</a>数字运算操作符</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/13/python%E6%93%8D%E4%BD%9C%E7%AC%A6.png\" alt=\"01\"></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/13/python%E6%93%8D%E4%BD%9C%E7%AC%A62.png\" alt=\"02\"></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/13/python%E6%93%8D%E4%BD%9C%E7%AC%A63.png\" alt=\"03\"></p>\n<ul>\n<li>数字类型的关系<br>\n<strong>类型间可以进行混合运算，生成的结果为‘最宽’类型</strong></li>\n<li>三种类型存在一种逐渐扩展变宽的关系\n<ul>\n<li>整数 -&gt; 浮点数 -&gt; 复数</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"数值运算函数\"><a class=\"header-anchor\" href=\"#数值运算函数\">☆</a>数值运算函数</h4>\n<table>\n<thead>\n<tr>\n<th>函数及使用</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>abs(x)</td>\n<td>绝对值，x的绝对值         abs(-10.01) 结果为 10.01</td>\n</tr>\n<tr>\n<td>divmod(x,y)</td>\n<td>商余，(x//y, x%y)，同时输出商和余数 divmod(10, 3) 结果为 (3, 1)</td>\n</tr>\n<tr>\n<td>pow(x, y[, z])</td>\n<td>幂余，(x**y)%z，[…]表示参数z可省略 pow(3, pow(3, 99), 10000) 结果为 4587</td>\n</tr>\n<tr>\n<td>round(x[, d])</td>\n<td>四舍五入，d是保留小数位数，默认值为0 round(-10.123, 2) 结果为 -10.12</td>\n</tr>\n<tr>\n<td>max(x1,x2, … ,xn)</td>\n<td>最大值，返回x1,x2, … ,xn中的最大值，n不限 max(1, 9, 5, 4 3) 结果为 9</td>\n</tr>\n<tr>\n<td>min(x1,x2, … ,xn)</td>\n<td>最小值，返回x1,x2, … ,xn中的最小值，n不限 min(1, 9, 5, 4 3) 结果为 1</td>\n</tr>\n<tr>\n<td>int(x)</td>\n<td>将x变成整数，舍弃小数部分 int(123.45) 结果为123； int(“123”) 结果为123</td>\n</tr>\n<tr>\n<td>float(x)</td>\n<td>将x变成浮点数，增加小数部分 float(12) 结果为12.0； float(“1.23”) 结果为1.23</td>\n</tr>\n<tr>\n<td>complex(x)</td>\n<td>将x变成复数，增加虚数部分 complex(4) 结果为 4 + 0j</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"天天向上的力量\"><a class=\"header-anchor\" href=\"#天天向上的力量\">☆</a>天天向上的力量</h3>\n<h3 id=\"字符串类型及操作\"><a class=\"header-anchor\" href=\"#字符串类型及操作\">☆</a>字符串类型及操作</h3>\n<h3 id=\"time库的使用\"><a class=\"header-anchor\" href=\"#time库的使用\">☆</a>time库的使用</h3>\n<h3 id=\"文本进度条\"><a class=\"header-anchor\" href=\"#文本进度条\">☆</a>文本进度条</h3>\n","site":{"data":{}},"length":1043,"excerpt":"","more":"\n    <div id=\"aplayer-JbkWFnHt\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"376049\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h3 id=\"数字类型及操作\"><a class=\"header-anchor\" href=\"#数字类型及操作\">☆</a>数字类型及操作</h3>\n<h4 id=\"整数类型\"><a class=\"header-anchor\" href=\"#整数类型\">☆</a>整数类型</h4>\n<ul>\n<li>可正可负，无范围限制<br>\npow(x,y)   函数：计算x的y次方</li>\n<li>四种进制表示\n<ul>\n<li>十进制：直接写数字</li>\n<li>二进制：以0b或0B开头</li>\n<li>八进制：以0o或0O开头</li>\n<li>十六进制：以0x或0X开头</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"浮点数类型\"><a class=\"header-anchor\" href=\"#浮点数类型\">☆</a>浮点数类型</h4>\n<p><strong>与数学中的实数一致</strong></p>\n<ul>\n<li>\n<p>带有小数点的数字</p>\n</li>\n<li>\n<p>精度存在限制，常规可以忽略</p>\n</li>\n<li>\n<p>取值范围数量级约-10<sup>308</sup> 至 10<sup>308</sup>，精度数量级10<sup>-16</sup></p>\n</li>\n<li>\n<p>浮点数运算存在不确定尾数，不是bug</p>\n<ul>\n<li>二进制表示问题，可以无限接近，但不完全相同<br>\nround(x,d)：对x四舍五入，d是小数截取位数</li>\n</ul>\n</li>\n<li>\n<p>浮点数间运算及比较用round()函数辅助</p>\n</li>\n<li>\n<p>采用科学计数法表示</p>\n<ul>\n<li>使用字母E或者e作为幂的符号，以10为基数，格式为：&lt;a&gt;e&lt;b&gt;  表示a<em>10</em>b</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"复数类型\"><a class=\"header-anchor\" href=\"#复数类型\">☆</a>复数类型</h4>\n<p><strong>与数学中的复数一致</strong><br>\nz = 1.23e - 4 + 5.6e + 89j<br>\n实部：z.real<br>\n虚部：z.imag</p>\n<p>空间变换时常用</p>\n<h4 id=\"数字运算操作符\"><a class=\"header-anchor\" href=\"#数字运算操作符\">☆</a>数字运算操作符</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/13/python%E6%93%8D%E4%BD%9C%E7%AC%A6.png\" alt=\"01\"></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/13/python%E6%93%8D%E4%BD%9C%E7%AC%A62.png\" alt=\"02\"></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/13/python%E6%93%8D%E4%BD%9C%E7%AC%A63.png\" alt=\"03\"></p>\n<ul>\n<li>数字类型的关系<br>\n<strong>类型间可以进行混合运算，生成的结果为‘最宽’类型</strong></li>\n<li>三种类型存在一种逐渐扩展变宽的关系\n<ul>\n<li>整数 -&gt; 浮点数 -&gt; 复数</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"数值运算函数\"><a class=\"header-anchor\" href=\"#数值运算函数\">☆</a>数值运算函数</h4>\n<table>\n<thead>\n<tr>\n<th>函数及使用</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>abs(x)</td>\n<td>绝对值，x的绝对值         abs(-10.01) 结果为 10.01</td>\n</tr>\n<tr>\n<td>divmod(x,y)</td>\n<td>商余，(x//y, x%y)，同时输出商和余数 divmod(10, 3) 结果为 (3, 1)</td>\n</tr>\n<tr>\n<td>pow(x, y[, z])</td>\n<td>幂余，(x**y)%z，[…]表示参数z可省略 pow(3, pow(3, 99), 10000) 结果为 4587</td>\n</tr>\n<tr>\n<td>round(x[, d])</td>\n<td>四舍五入，d是保留小数位数，默认值为0 round(-10.123, 2) 结果为 -10.12</td>\n</tr>\n<tr>\n<td>max(x1,x2, … ,xn)</td>\n<td>最大值，返回x1,x2, … ,xn中的最大值，n不限 max(1, 9, 5, 4 3) 结果为 9</td>\n</tr>\n<tr>\n<td>min(x1,x2, … ,xn)</td>\n<td>最小值，返回x1,x2, … ,xn中的最小值，n不限 min(1, 9, 5, 4 3) 结果为 1</td>\n</tr>\n<tr>\n<td>int(x)</td>\n<td>将x变成整数，舍弃小数部分 int(123.45) 结果为123； int(“123”) 结果为123</td>\n</tr>\n<tr>\n<td>float(x)</td>\n<td>将x变成浮点数，增加小数部分 float(12) 结果为12.0； float(“1.23”) 结果为1.23</td>\n</tr>\n<tr>\n<td>complex(x)</td>\n<td>将x变成复数，增加虚数部分 complex(4) 结果为 4 + 0j</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"天天向上的力量\"><a class=\"header-anchor\" href=\"#天天向上的力量\">☆</a>天天向上的力量</h3>\n<h3 id=\"字符串类型及操作\"><a class=\"header-anchor\" href=\"#字符串类型及操作\">☆</a>字符串类型及操作</h3>\n<h3 id=\"time库的使用\"><a class=\"header-anchor\" href=\"#time库的使用\">☆</a>time库的使用</h3>\n<h3 id=\"文本进度条\"><a class=\"header-anchor\" href=\"#文本进度条\">☆</a>文本进度条</h3>\n"},{"title":"UEFI启动下，Win10+Ubuntu双系统安装","copyright":true,"abbrlink":"65a05ef","date":"2018-01-29T00:38:39.000Z","_content":"\n**注意：**`Uefi启动只能使用Ubuntu引导，不能使用Win引导`\n\n\n## 第一，分配空间\nLinux没有什么C盘D盘的概念，只有分区挂载目录的概念，所以你在Windows下 `只需要分出一块较大的未分配空间就行，记住不要去格式化` ，保证其&quot;未分配&quot;属性(windows系统中看是黑色的)（Linux的文件系统和Win是不一样的，NTFS和FAT32都不适用）。\n\n用Win自带的磁盘管理不能合并不相邻的未分配空间，所以你要想C盘割一点，D盘割一点，再合在一起那是不行的， `解决办法是在 使用分区助手合并，但比较耗费时间` 。\n\n## 第二，制作安装盘\n你必须要有一个U盘，然后使用软碟通或者USBWriter把iso系统镜像文件烧录进去，这是比较传统的方法， UEFI启动，不需要刻录工作了， `直接将iso里的所有文件解压至U盘即可` 。\n\n然后 `关闭Windows的快速启动` ，重启电脑，进入BIOS后， `关闭Security Boot`（部分电脑没有这一项，就不用管了），最后 `选择UEFI下的U盘启动`\n\n## 第三，安装系统\n选中USB启动，回车后即进入Ubuntu安装流程，按照正常的步骤， `如果你选择了安装更新和第三方软件，那么一定要记得联网，否则会卡死在最后的进度条上，所以最好不要勾选。另外，不要选择\"与其它系统共存\";那一项，而选择最后那个\"其它选项\"（创建自己的分区）。`\n\n## 第四，Ubuntu分区挂载（重要）\n1. **swap交换空间** ，这个也就是虚拟内存的地方，选择 `主分区` 和 `空间起始位置` 。如果你给Ubuntu系统分区容量足够的话，最好是能给到你 `物理内存的2倍`大小\n2. 新建 **efi系统分区** ，选中 `逻辑分区` 和 `空间起始位置` ，大小最好不要小于256MB，系统引导文件都会在里面，它的作用和boot引导分区一样，但是boot引导是默认grub引导的，而efi是UEFI引导的。 也就是最后的挂载点里没有&quot;/boot&quot;这一项 ，否则就没办法UEFI启动两个系统了。\n3. **挂载&quot;/home&quot;** ，类型为 `EXT4日志文件系统` ，选中 `逻辑分区` 和 `空间起始位置` ，这个相当于你的个人文件夹，类似Windows里的User，总的来说， `最好不要低于8GB` 。\n&emsp;&emsp;（这里特别提醒一下，Ubuntu最新发行版不建议强制获取Root权限，因为我已经玩崩过一次。所以你以后很多文档、图片、包括免安装软件等资源不得不直接放在home分支下面。你作为图形界面用户，只对home分支有完全的读写执行权限，其余分支例如usr你只能在终端使用sudo命令来操作文件，不利于存放一些直接解压使用的免安装软件。因此，建议home分支多分配一点空间，……）\n4. **挂载&quot;/usr&quot;** ，类型为 `EXT4日志文件系统` ，选中 `逻辑分区` 和 `空间起始位置` ，这个相当于软件安装位置，Linux下一般来说安装第三方软件你是没办法更改安装目录的，系统都会统一地安装到/usr目录下面，因此，这个分区必须要大。\n5. 最后， **挂载&quot;/&quot;** ，类型为 `EXT4日志文件系统` ，选中 `逻辑分区` 和 `空间起始位置` ，因为除了home和usr还有很多别的目录，但那些都不是最重要的，&quot;/&quot;就把除了之前你挂载的home和usr外的全部杂项囊括了， `大小也不要太小` ，最好不低于16GB。\n&emsp; &emsp;如果你非要挨个仔细分配空间，那么你需要知道这些各个分区的含义（ [Linux(ubuntu)分区挂载点介绍](http://blog.sina.com.cn/s/blog_5f0a505101017ruf.html)）不过就算你把所有目录都自定义分配了空间也必须要给&quot;/&quot;挂载点分配一定的空间。\n\n## 安装完成\n安装成功后，会提示你拔掉U盘并且重启，重启后记得进入BIOS改回UEFI Security Boot On模式，也就是重新开启Security Boot，然后再重启你就可以看到选择系统的启动引导界面了，一般来说：\n```\n第一个是Ubuntu，选这个进入Ubuntu系统，\n第二个是Ubuntu高级选项，\n第三个是Windows Boot Manager，也就是启动你的Win10\n```\n## 更改默认启动项\n安装windows和ubuntu双系统以后，默认启动变成ubuntu了，对那些经常要进windows的童鞋，每次开机都得按几次向下的箭头，再敲回车，非常不方便，这时就需要将默认启动改为Win10系统。\n\n 打开ubuntu系统以后，打开超级终端，输入以下命令\n ```\n sudo gedit /etc/default/grub   #注意空格不能少\n ```\n这时会打开cfg.文件，显示如下\n```\n# If you change this file, run &#39;update-grub&#39; afterwards to update\n# /boot/grub/grub.cfg.\n# For full documentation of the options in this file, see:\n#   info -f grub -n &#39;Simple configuration&#39;\n\nGRUB\\_DEFAULT=0   \n#GRUB\\_HIDDEN\\_TIMEOUT=0\nGRUB\\_HIDDEN\\_TIMEOUT\\_QUIET=true\nGRUB\\_TIMEOUT=10       \nGRUB\\_DISTRIBUTOR=`lsb_release -i -s 2&gt; /dev/null || echo Debian`\nGRUB\\_CMDLINE\\_LINUX\\_DEFAULT=&quot;quiet splash&quot;\nGRUB\\_CMDLINE\\_LINUX=&quot;locale=zh\\_CN&quot;\n```\nGRUB\\_DEFAULT   &emsp;代表的就是启动项的顺序，从数字0开始，        \nGRUB\\_TIMEOUT   &emsp;代表选择界面停留时间\n\n然后在终端依次运行命令：\n```\nsudo update-grub\nreboot\n```\n重启电脑，默认启动的系统就换到windows了。\n\n# 附1：\n\n默认的Ubuntu启动引导界面可能有点丑，可以更换为第三方启动引导\n\n如：rEFind：非常好的解决了uefi模式下win10与linux双系统引导菜单丢失的情况,它本身跨平台，有win，linux，mac版本，下载地址（官方）： [http://www.rodsbooks.com/refind/](http://www.rodsbooks.com/refind/)   \n\n教程：  http://tieba.baidu.com/p/4380168027\n\n\n\n# 附2：\n\n传统BIOS引导教程（[使用EasyBCD管理启动项][1]）\n\n\n  [1]: http://blog.csdn.net/zr459927180/article/details/51627910","source":"_posts/Ubuntu双系统安装.md","raw":"---\ntitle: UEFI启动下，Win10+Ubuntu双系统安装\ncopyright: true\ntags:\n  - Ubuntu\n  - Linux\n  - uefi\ncategories: 系统\nabbrlink: 65a05ef\ndate: 2018-01-29 08:38:39\n---\n\n**注意：**`Uefi启动只能使用Ubuntu引导，不能使用Win引导`\n\n\n## 第一，分配空间\nLinux没有什么C盘D盘的概念，只有分区挂载目录的概念，所以你在Windows下 `只需要分出一块较大的未分配空间就行，记住不要去格式化` ，保证其&quot;未分配&quot;属性(windows系统中看是黑色的)（Linux的文件系统和Win是不一样的，NTFS和FAT32都不适用）。\n\n用Win自带的磁盘管理不能合并不相邻的未分配空间，所以你要想C盘割一点，D盘割一点，再合在一起那是不行的， `解决办法是在 使用分区助手合并，但比较耗费时间` 。\n\n## 第二，制作安装盘\n你必须要有一个U盘，然后使用软碟通或者USBWriter把iso系统镜像文件烧录进去，这是比较传统的方法， UEFI启动，不需要刻录工作了， `直接将iso里的所有文件解压至U盘即可` 。\n\n然后 `关闭Windows的快速启动` ，重启电脑，进入BIOS后， `关闭Security Boot`（部分电脑没有这一项，就不用管了），最后 `选择UEFI下的U盘启动`\n\n## 第三，安装系统\n选中USB启动，回车后即进入Ubuntu安装流程，按照正常的步骤， `如果你选择了安装更新和第三方软件，那么一定要记得联网，否则会卡死在最后的进度条上，所以最好不要勾选。另外，不要选择\"与其它系统共存\";那一项，而选择最后那个\"其它选项\"（创建自己的分区）。`\n\n## 第四，Ubuntu分区挂载（重要）\n1. **swap交换空间** ，这个也就是虚拟内存的地方，选择 `主分区` 和 `空间起始位置` 。如果你给Ubuntu系统分区容量足够的话，最好是能给到你 `物理内存的2倍`大小\n2. 新建 **efi系统分区** ，选中 `逻辑分区` 和 `空间起始位置` ，大小最好不要小于256MB，系统引导文件都会在里面，它的作用和boot引导分区一样，但是boot引导是默认grub引导的，而efi是UEFI引导的。 也就是最后的挂载点里没有&quot;/boot&quot;这一项 ，否则就没办法UEFI启动两个系统了。\n3. **挂载&quot;/home&quot;** ，类型为 `EXT4日志文件系统` ，选中 `逻辑分区` 和 `空间起始位置` ，这个相当于你的个人文件夹，类似Windows里的User，总的来说， `最好不要低于8GB` 。\n&emsp;&emsp;（这里特别提醒一下，Ubuntu最新发行版不建议强制获取Root权限，因为我已经玩崩过一次。所以你以后很多文档、图片、包括免安装软件等资源不得不直接放在home分支下面。你作为图形界面用户，只对home分支有完全的读写执行权限，其余分支例如usr你只能在终端使用sudo命令来操作文件，不利于存放一些直接解压使用的免安装软件。因此，建议home分支多分配一点空间，……）\n4. **挂载&quot;/usr&quot;** ，类型为 `EXT4日志文件系统` ，选中 `逻辑分区` 和 `空间起始位置` ，这个相当于软件安装位置，Linux下一般来说安装第三方软件你是没办法更改安装目录的，系统都会统一地安装到/usr目录下面，因此，这个分区必须要大。\n5. 最后， **挂载&quot;/&quot;** ，类型为 `EXT4日志文件系统` ，选中 `逻辑分区` 和 `空间起始位置` ，因为除了home和usr还有很多别的目录，但那些都不是最重要的，&quot;/&quot;就把除了之前你挂载的home和usr外的全部杂项囊括了， `大小也不要太小` ，最好不低于16GB。\n&emsp; &emsp;如果你非要挨个仔细分配空间，那么你需要知道这些各个分区的含义（ [Linux(ubuntu)分区挂载点介绍](http://blog.sina.com.cn/s/blog_5f0a505101017ruf.html)）不过就算你把所有目录都自定义分配了空间也必须要给&quot;/&quot;挂载点分配一定的空间。\n\n## 安装完成\n安装成功后，会提示你拔掉U盘并且重启，重启后记得进入BIOS改回UEFI Security Boot On模式，也就是重新开启Security Boot，然后再重启你就可以看到选择系统的启动引导界面了，一般来说：\n```\n第一个是Ubuntu，选这个进入Ubuntu系统，\n第二个是Ubuntu高级选项，\n第三个是Windows Boot Manager，也就是启动你的Win10\n```\n## 更改默认启动项\n安装windows和ubuntu双系统以后，默认启动变成ubuntu了，对那些经常要进windows的童鞋，每次开机都得按几次向下的箭头，再敲回车，非常不方便，这时就需要将默认启动改为Win10系统。\n\n 打开ubuntu系统以后，打开超级终端，输入以下命令\n ```\n sudo gedit /etc/default/grub   #注意空格不能少\n ```\n这时会打开cfg.文件，显示如下\n```\n# If you change this file, run &#39;update-grub&#39; afterwards to update\n# /boot/grub/grub.cfg.\n# For full documentation of the options in this file, see:\n#   info -f grub -n &#39;Simple configuration&#39;\n\nGRUB\\_DEFAULT=0   \n#GRUB\\_HIDDEN\\_TIMEOUT=0\nGRUB\\_HIDDEN\\_TIMEOUT\\_QUIET=true\nGRUB\\_TIMEOUT=10       \nGRUB\\_DISTRIBUTOR=`lsb_release -i -s 2&gt; /dev/null || echo Debian`\nGRUB\\_CMDLINE\\_LINUX\\_DEFAULT=&quot;quiet splash&quot;\nGRUB\\_CMDLINE\\_LINUX=&quot;locale=zh\\_CN&quot;\n```\nGRUB\\_DEFAULT   &emsp;代表的就是启动项的顺序，从数字0开始，        \nGRUB\\_TIMEOUT   &emsp;代表选择界面停留时间\n\n然后在终端依次运行命令：\n```\nsudo update-grub\nreboot\n```\n重启电脑，默认启动的系统就换到windows了。\n\n# 附1：\n\n默认的Ubuntu启动引导界面可能有点丑，可以更换为第三方启动引导\n\n如：rEFind：非常好的解决了uefi模式下win10与linux双系统引导菜单丢失的情况,它本身跨平台，有win，linux，mac版本，下载地址（官方）： [http://www.rodsbooks.com/refind/](http://www.rodsbooks.com/refind/)   \n\n教程：  http://tieba.baidu.com/p/4380168027\n\n\n\n# 附2：\n\n传统BIOS引导教程（[使用EasyBCD管理启动项][1]）\n\n\n  [1]: http://blog.csdn.net/zr459927180/article/details/51627910","slug":"Ubuntu双系统安装","published":1,"updated":"2020-02-20T06:06:59.395Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td2t000ofkupcc7yiqml","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><strong>注意：</strong><code>Uefi启动只能使用Ubuntu引导，不能使用Win引导</code></p>\n<h2 id=\"第一-分配空间\"><a class=\"header-anchor\" href=\"#第一-分配空间\">☆</a>第一，分配空间</h2>\n<p>Linux没有什么C盘D盘的概念，只有分区挂载目录的概念，所以你在Windows下 <code>只需要分出一块较大的未分配空间就行，记住不要去格式化</code> ，保证其&quot;未分配&quot;属性(windows系统中看是黑色的)（Linux的文件系统和Win是不一样的，NTFS和FAT32都不适用）。</p>\n<p>用Win自带的磁盘管理不能合并不相邻的未分配空间，所以你要想C盘割一点，D盘割一点，再合在一起那是不行的， <code>解决办法是在 使用分区助手合并，但比较耗费时间</code> 。</p>\n<h2 id=\"第二-制作安装盘\"><a class=\"header-anchor\" href=\"#第二-制作安装盘\">☆</a>第二，制作安装盘</h2>\n<p>你必须要有一个U盘，然后使用软碟通或者USBWriter把iso系统镜像文件烧录进去，这是比较传统的方法， UEFI启动，不需要刻录工作了， <code>直接将iso里的所有文件解压至U盘即可</code> 。</p>\n<p>然后 <code>关闭Windows的快速启动</code> ，重启电脑，进入BIOS后， <code>关闭Security Boot</code>（部分电脑没有这一项，就不用管了），最后 <code>选择UEFI下的U盘启动</code></p>\n<h2 id=\"第三-安装系统\"><a class=\"header-anchor\" href=\"#第三-安装系统\">☆</a>第三，安装系统</h2>\n<p>选中USB启动，回车后即进入Ubuntu安装流程，按照正常的步骤， <code>如果你选择了安装更新和第三方软件，那么一定要记得联网，否则会卡死在最后的进度条上，所以最好不要勾选。另外，不要选择&quot;与其它系统共存&quot;;那一项，而选择最后那个&quot;其它选项&quot;（创建自己的分区）。</code></p>\n<h2 id=\"第四-ubuntu分区挂载-重要\"><a class=\"header-anchor\" href=\"#第四-ubuntu分区挂载-重要\">☆</a>第四，Ubuntu分区挂载（重要）</h2>\n<ol>\n<li><strong>swap交换空间</strong> ，这个也就是虚拟内存的地方，选择 <code>主分区</code> 和 <code>空间起始位置</code> 。如果你给Ubuntu系统分区容量足够的话，最好是能给到你 <code>物理内存的2倍</code>大小</li>\n<li>新建 <strong>efi系统分区</strong> ，选中 <code>逻辑分区</code> 和 <code>空间起始位置</code> ，大小最好不要小于256MB，系统引导文件都会在里面，它的作用和boot引导分区一样，但是boot引导是默认grub引导的，而efi是UEFI引导的。 也就是最后的挂载点里没有&quot;/boot&quot;这一项 ，否则就没办法UEFI启动两个系统了。</li>\n<li><strong>挂载&quot;/home&quot;</strong> ，类型为 <code>EXT4日志文件系统</code> ，选中 <code>逻辑分区</code> 和 <code>空间起始位置</code> ，这个相当于你的个人文件夹，类似Windows里的User，总的来说， <code>最好不要低于8GB</code> 。<br>\n  （这里特别提醒一下，Ubuntu最新发行版不建议强制获取Root权限，因为我已经玩崩过一次。所以你以后很多文档、图片、包括免安装软件等资源不得不直接放在home分支下面。你作为图形界面用户，只对home分支有完全的读写执行权限，其余分支例如usr你只能在终端使用sudo命令来操作文件，不利于存放一些直接解压使用的免安装软件。因此，建议home分支多分配一点空间，……）</li>\n<li><strong>挂载&quot;/usr&quot;</strong> ，类型为 <code>EXT4日志文件系统</code> ，选中 <code>逻辑分区</code> 和 <code>空间起始位置</code> ，这个相当于软件安装位置，Linux下一般来说安装第三方软件你是没办法更改安装目录的，系统都会统一地安装到/usr目录下面，因此，这个分区必须要大。</li>\n<li>最后， <strong>挂载&quot;/&quot;</strong> ，类型为 <code>EXT4日志文件系统</code> ，选中 <code>逻辑分区</code> 和 <code>空间起始位置</code> ，因为除了home和usr还有很多别的目录，但那些都不是最重要的，&quot;/&quot;就把除了之前你挂载的home和usr外的全部杂项囊括了， <code>大小也不要太小</code> ，最好不低于16GB。<br>\n   如果你非要挨个仔细分配空间，那么你需要知道这些各个分区的含义（ <a href=\"http://blog.sina.com.cn/s/blog_5f0a505101017ruf.html\" target=\"_blank\" rel=\"noopener\">Linux(ubuntu)分区挂载点介绍</a>）不过就算你把所有目录都自定义分配了空间也必须要给&quot;/&quot;挂载点分配一定的空间。</li>\n</ol>\n<h2 id=\"安装完成\"><a class=\"header-anchor\" href=\"#安装完成\">☆</a>安装完成</h2>\n<p>安装成功后，会提示你拔掉U盘并且重启，重启后记得进入BIOS改回UEFI Security Boot On模式，也就是重新开启Security Boot，然后再重启你就可以看到选择系统的启动引导界面了，一般来说：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一个是Ubuntu，选这个进入Ubuntu系统，</span><br><span class=\"line\">第二个是Ubuntu高级选项，</span><br><span class=\"line\">第三个是Windows Boot Manager，也就是启动你的Win10</span><br></pre></td></tr></table></figure>\n<h2 id=\"更改默认启动项\"><a class=\"header-anchor\" href=\"#更改默认启动项\">☆</a>更改默认启动项</h2>\n<p>安装windows和ubuntu双系统以后，默认启动变成ubuntu了，对那些经常要进windows的童鞋，每次开机都得按几次向下的箭头，再敲回车，非常不方便，这时就需要将默认启动改为Win10系统。</p>\n<p>打开ubuntu系统以后，打开超级终端，输入以下命令</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gedit /etc/default/grub   #注意空格不能少</span><br></pre></td></tr></table></figure>\n<p>这时会打开cfg.文件，显示如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># If you change this file, run &amp;#39;update-grub&amp;#39; afterwards to update</span><br><span class=\"line\"># /boot/grub/grub.cfg.</span><br><span class=\"line\"># For full documentation of the options in this file, see:</span><br><span class=\"line\">#   info -f grub -n &amp;#39;Simple configuration&amp;#39;</span><br><span class=\"line\"></span><br><span class=\"line\">GRUB\\_DEFAULT=0   </span><br><span class=\"line\">#GRUB\\_HIDDEN\\_TIMEOUT=0</span><br><span class=\"line\">GRUB\\_HIDDEN\\_TIMEOUT\\_QUIET=true</span><br><span class=\"line\">GRUB\\_TIMEOUT=10       </span><br><span class=\"line\">GRUB\\_DISTRIBUTOR=`lsb_release -i -s 2&amp;gt; /dev/null || echo Debian`</span><br><span class=\"line\">GRUB\\_CMDLINE\\_LINUX\\_DEFAULT=&amp;quot;quiet splash&amp;quot;</span><br><span class=\"line\">GRUB\\_CMDLINE\\_LINUX=&amp;quot;locale=zh\\_CN&amp;quot;</span><br></pre></td></tr></table></figure>\n<p>GRUB_DEFAULT    代表的就是启动项的顺序，从数字0开始，<br>\nGRUB_TIMEOUT    代表选择界面停留时间</p>\n<p>然后在终端依次运行命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-grub</span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n<p>重启电脑，默认启动的系统就换到windows了。</p>\n<h1>附1：</h1>\n<p>默认的Ubuntu启动引导界面可能有点丑，可以更换为第三方启动引导</p>\n<p>如：rEFind：非常好的解决了uefi模式下win10与linux双系统引导菜单丢失的情况,它本身跨平台，有win，linux，mac版本，下载地址（官方）： <a href=\"http://www.rodsbooks.com/refind/\" target=\"_blank\" rel=\"noopener\">http://www.rodsbooks.com/refind/</a></p>\n<p>教程：  <a href=\"http://tieba.baidu.com/p/4380168027\" target=\"_blank\" rel=\"noopener\">http://tieba.baidu.com/p/4380168027</a></p>\n<h1>附2：</h1>\n<p>传统BIOS引导教程（<a href=\"http://blog.csdn.net/zr459927180/article/details/51627910\" target=\"_blank\" rel=\"noopener\">使用EasyBCD管理启动项</a>）</p>\n","site":{"data":{}},"length":2761,"excerpt":"","more":"<p><strong>注意：</strong><code>Uefi启动只能使用Ubuntu引导，不能使用Win引导</code></p>\n<h2 id=\"第一-分配空间\"><a class=\"header-anchor\" href=\"#第一-分配空间\">☆</a>第一，分配空间</h2>\n<p>Linux没有什么C盘D盘的概念，只有分区挂载目录的概念，所以你在Windows下 <code>只需要分出一块较大的未分配空间就行，记住不要去格式化</code> ，保证其&quot;未分配&quot;属性(windows系统中看是黑色的)（Linux的文件系统和Win是不一样的，NTFS和FAT32都不适用）。</p>\n<p>用Win自带的磁盘管理不能合并不相邻的未分配空间，所以你要想C盘割一点，D盘割一点，再合在一起那是不行的， <code>解决办法是在 使用分区助手合并，但比较耗费时间</code> 。</p>\n<h2 id=\"第二-制作安装盘\"><a class=\"header-anchor\" href=\"#第二-制作安装盘\">☆</a>第二，制作安装盘</h2>\n<p>你必须要有一个U盘，然后使用软碟通或者USBWriter把iso系统镜像文件烧录进去，这是比较传统的方法， UEFI启动，不需要刻录工作了， <code>直接将iso里的所有文件解压至U盘即可</code> 。</p>\n<p>然后 <code>关闭Windows的快速启动</code> ，重启电脑，进入BIOS后， <code>关闭Security Boot</code>（部分电脑没有这一项，就不用管了），最后 <code>选择UEFI下的U盘启动</code></p>\n<h2 id=\"第三-安装系统\"><a class=\"header-anchor\" href=\"#第三-安装系统\">☆</a>第三，安装系统</h2>\n<p>选中USB启动，回车后即进入Ubuntu安装流程，按照正常的步骤， <code>如果你选择了安装更新和第三方软件，那么一定要记得联网，否则会卡死在最后的进度条上，所以最好不要勾选。另外，不要选择&quot;与其它系统共存&quot;;那一项，而选择最后那个&quot;其它选项&quot;（创建自己的分区）。</code></p>\n<h2 id=\"第四-ubuntu分区挂载-重要\"><a class=\"header-anchor\" href=\"#第四-ubuntu分区挂载-重要\">☆</a>第四，Ubuntu分区挂载（重要）</h2>\n<ol>\n<li><strong>swap交换空间</strong> ，这个也就是虚拟内存的地方，选择 <code>主分区</code> 和 <code>空间起始位置</code> 。如果你给Ubuntu系统分区容量足够的话，最好是能给到你 <code>物理内存的2倍</code>大小</li>\n<li>新建 <strong>efi系统分区</strong> ，选中 <code>逻辑分区</code> 和 <code>空间起始位置</code> ，大小最好不要小于256MB，系统引导文件都会在里面，它的作用和boot引导分区一样，但是boot引导是默认grub引导的，而efi是UEFI引导的。 也就是最后的挂载点里没有&quot;/boot&quot;这一项 ，否则就没办法UEFI启动两个系统了。</li>\n<li><strong>挂载&quot;/home&quot;</strong> ，类型为 <code>EXT4日志文件系统</code> ，选中 <code>逻辑分区</code> 和 <code>空间起始位置</code> ，这个相当于你的个人文件夹，类似Windows里的User，总的来说， <code>最好不要低于8GB</code> 。<br>\n  （这里特别提醒一下，Ubuntu最新发行版不建议强制获取Root权限，因为我已经玩崩过一次。所以你以后很多文档、图片、包括免安装软件等资源不得不直接放在home分支下面。你作为图形界面用户，只对home分支有完全的读写执行权限，其余分支例如usr你只能在终端使用sudo命令来操作文件，不利于存放一些直接解压使用的免安装软件。因此，建议home分支多分配一点空间，……）</li>\n<li><strong>挂载&quot;/usr&quot;</strong> ，类型为 <code>EXT4日志文件系统</code> ，选中 <code>逻辑分区</code> 和 <code>空间起始位置</code> ，这个相当于软件安装位置，Linux下一般来说安装第三方软件你是没办法更改安装目录的，系统都会统一地安装到/usr目录下面，因此，这个分区必须要大。</li>\n<li>最后， <strong>挂载&quot;/&quot;</strong> ，类型为 <code>EXT4日志文件系统</code> ，选中 <code>逻辑分区</code> 和 <code>空间起始位置</code> ，因为除了home和usr还有很多别的目录，但那些都不是最重要的，&quot;/&quot;就把除了之前你挂载的home和usr外的全部杂项囊括了， <code>大小也不要太小</code> ，最好不低于16GB。<br>\n   如果你非要挨个仔细分配空间，那么你需要知道这些各个分区的含义（ <a href=\"http://blog.sina.com.cn/s/blog_5f0a505101017ruf.html\" target=\"_blank\" rel=\"noopener\">Linux(ubuntu)分区挂载点介绍</a>）不过就算你把所有目录都自定义分配了空间也必须要给&quot;/&quot;挂载点分配一定的空间。</li>\n</ol>\n<h2 id=\"安装完成\"><a class=\"header-anchor\" href=\"#安装完成\">☆</a>安装完成</h2>\n<p>安装成功后，会提示你拔掉U盘并且重启，重启后记得进入BIOS改回UEFI Security Boot On模式，也就是重新开启Security Boot，然后再重启你就可以看到选择系统的启动引导界面了，一般来说：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">第一个是Ubuntu，选这个进入Ubuntu系统，</span><br><span class=\"line\">第二个是Ubuntu高级选项，</span><br><span class=\"line\">第三个是Windows Boot Manager，也就是启动你的Win10</span><br></pre></td></tr></table></figure>\n<h2 id=\"更改默认启动项\"><a class=\"header-anchor\" href=\"#更改默认启动项\">☆</a>更改默认启动项</h2>\n<p>安装windows和ubuntu双系统以后，默认启动变成ubuntu了，对那些经常要进windows的童鞋，每次开机都得按几次向下的箭头，再敲回车，非常不方便，这时就需要将默认启动改为Win10系统。</p>\n<p>打开ubuntu系统以后，打开超级终端，输入以下命令</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gedit /etc/default/grub   #注意空格不能少</span><br></pre></td></tr></table></figure>\n<p>这时会打开cfg.文件，显示如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># If you change this file, run &amp;#39;update-grub&amp;#39; afterwards to update</span><br><span class=\"line\"># /boot/grub/grub.cfg.</span><br><span class=\"line\"># For full documentation of the options in this file, see:</span><br><span class=\"line\">#   info -f grub -n &amp;#39;Simple configuration&amp;#39;</span><br><span class=\"line\"></span><br><span class=\"line\">GRUB\\_DEFAULT=0   </span><br><span class=\"line\">#GRUB\\_HIDDEN\\_TIMEOUT=0</span><br><span class=\"line\">GRUB\\_HIDDEN\\_TIMEOUT\\_QUIET=true</span><br><span class=\"line\">GRUB\\_TIMEOUT=10       </span><br><span class=\"line\">GRUB\\_DISTRIBUTOR=`lsb_release -i -s 2&amp;gt; /dev/null || echo Debian`</span><br><span class=\"line\">GRUB\\_CMDLINE\\_LINUX\\_DEFAULT=&amp;quot;quiet splash&amp;quot;</span><br><span class=\"line\">GRUB\\_CMDLINE\\_LINUX=&amp;quot;locale=zh\\_CN&amp;quot;</span><br></pre></td></tr></table></figure>\n<p>GRUB_DEFAULT    代表的就是启动项的顺序，从数字0开始，<br>\nGRUB_TIMEOUT    代表选择界面停留时间</p>\n<p>然后在终端依次运行命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo update-grub</span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n<p>重启电脑，默认启动的系统就换到windows了。</p>\n<h1>附1：</h1>\n<p>默认的Ubuntu启动引导界面可能有点丑，可以更换为第三方启动引导</p>\n<p>如：rEFind：非常好的解决了uefi模式下win10与linux双系统引导菜单丢失的情况,它本身跨平台，有win，linux，mac版本，下载地址（官方）： <a href=\"http://www.rodsbooks.com/refind/\" target=\"_blank\" rel=\"noopener\">http://www.rodsbooks.com/refind/</a></p>\n<p>教程：  <a href=\"http://tieba.baidu.com/p/4380168027\" target=\"_blank\" rel=\"noopener\">http://tieba.baidu.com/p/4380168027</a></p>\n<h1>附2：</h1>\n<p>传统BIOS引导教程（<a href=\"http://blog.csdn.net/zr459927180/article/details/51627910\" target=\"_blank\" rel=\"noopener\">使用EasyBCD管理启动项</a>）</p>\n"},{"title":"about页面不显示右侧文章目录sidebar","copyright":true,"abbrlink":"106fc1c3","date":"2018-06-04T10:01:12.000Z","password":null,"_content":"\n{% meting \"356039117\" \"xiami\" \"playlist\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#7FFF00\"%}\n\n&emsp;&emsp;next主题添加about页面后，会默认显示以#开头的的文章目录界面，原因是next主题中并没有给about页面设置模板，而是使用了post也就是文章页面的模板。\n&emsp;&emsp;这样带来的后果就是，about页面显得很丑，而精心制作的站点介绍页面没有办法直观的展示出来，解决办法有以下三个：\n### 方法一\n页面内不要使用#这种标题的形式\n\n### 方法二\n删除代码：\n路径：`hexo\\themes\\next\\layout\\post.swig`\n删除以下代码：\n```\n{% block script_extra %}\n  {% include '_scripts/pages/post-details.swig' %}\n{% endblock %}\n```\n\n\n### 方法三\n修改代码\n路径：`next/layout/_macro/sidebar.swig `\n```\n//line 17\n{% if display_toc and toc(page.content).length > 1 and page.type != 'about' %}\n//line 28\n{% if not display_toc or toc(page.content).length <= 1 or page.type == 'about' %}\n//line 141\n{% if display_toc and toc(page.content).length > 1 and page.type != 'about' %}\n```\n行数不一定完全准确，可以用搜索查找字符串","source":"_posts/about页面不显示右侧文章目录sidebar.md","raw":"---\ntitle: about页面不显示右侧文章目录sidebar\ncopyright: true\nabbrlink: 106fc1c3\ntags:\n  - hexo\ncategories: hexo\ndate: 2018-06-04 18:01:12\npassword:\n---\n\n{% meting \"356039117\" \"xiami\" \"playlist\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#7FFF00\"%}\n\n&emsp;&emsp;next主题添加about页面后，会默认显示以#开头的的文章目录界面，原因是next主题中并没有给about页面设置模板，而是使用了post也就是文章页面的模板。\n&emsp;&emsp;这样带来的后果就是，about页面显得很丑，而精心制作的站点介绍页面没有办法直观的展示出来，解决办法有以下三个：\n### 方法一\n页面内不要使用#这种标题的形式\n\n### 方法二\n删除代码：\n路径：`hexo\\themes\\next\\layout\\post.swig`\n删除以下代码：\n```\n{% block script_extra %}\n  {% include '_scripts/pages/post-details.swig' %}\n{% endblock %}\n```\n\n\n### 方法三\n修改代码\n路径：`next/layout/_macro/sidebar.swig `\n```\n//line 17\n{% if display_toc and toc(page.content).length > 1 and page.type != 'about' %}\n//line 28\n{% if not display_toc or toc(page.content).length <= 1 or page.type == 'about' %}\n//line 141\n{% if display_toc and toc(page.content).length > 1 and page.type != 'about' %}\n```\n行数不一定完全准确，可以用搜索查找字符串","slug":"about页面不显示右侧文章目录sidebar","published":1,"updated":"2020-02-20T06:06:59.397Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td2v000pfkupd5tpv53x","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-hGEXiMTW\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"356039117\" data-server=\"xiami\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#7FFF00\"></div>\n<p>  next主题添加about页面后，会默认显示以#开头的的文章目录界面，原因是next主题中并没有给about页面设置模板，而是使用了post也就是文章页面的模板。<br>\n  这样带来的后果就是，about页面显得很丑，而精心制作的站点介绍页面没有办法直观的展示出来，解决办法有以下三个：</p>\n<h3 id=\"方法一\"><a class=\"header-anchor\" href=\"#方法一\">☆</a>方法一</h3>\n<p>页面内不要使用#这种标题的形式</p>\n<h3 id=\"方法二\"><a class=\"header-anchor\" href=\"#方法二\">☆</a>方法二</h3>\n<p>删除代码：<br>\n路径：<code>hexo\\themes\\next\\layout\\post.swig</code><br>\n删除以下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% block script_extra %&#125;</span><br><span class=\"line\">  &#123;% include &apos;_scripts/pages/post-details.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"方法三\"><a class=\"header-anchor\" href=\"#方法三\">☆</a>方法三</h3>\n<p>修改代码<br>\n路径：<code>next/layout/_macro/sidebar.swig</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//line 17</span><br><span class=\"line\">&#123;% if display_toc and toc(page.content).length &gt; 1 and page.type != &apos;about&apos; %&#125;</span><br><span class=\"line\">//line 28</span><br><span class=\"line\">&#123;% if not display_toc or toc(page.content).length &lt;= 1 or page.type == &apos;about&apos; %&#125;</span><br><span class=\"line\">//line 141</span><br><span class=\"line\">&#123;% if display_toc and toc(page.content).length &gt; 1 and page.type != &apos;about&apos; %&#125;</span><br></pre></td></tr></table></figure>\n<p>行数不一定完全准确，可以用搜索查找字符串</p>\n","site":{"data":{}},"length":749,"excerpt":"","more":"\n    <div id=\"aplayer-hGEXiMTW\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"356039117\" data-server=\"xiami\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#7FFF00\"></div>\n<p>  next主题添加about页面后，会默认显示以#开头的的文章目录界面，原因是next主题中并没有给about页面设置模板，而是使用了post也就是文章页面的模板。<br>\n  这样带来的后果就是，about页面显得很丑，而精心制作的站点介绍页面没有办法直观的展示出来，解决办法有以下三个：</p>\n<h3 id=\"方法一\"><a class=\"header-anchor\" href=\"#方法一\">☆</a>方法一</h3>\n<p>页面内不要使用#这种标题的形式</p>\n<h3 id=\"方法二\"><a class=\"header-anchor\" href=\"#方法二\">☆</a>方法二</h3>\n<p>删除代码：<br>\n路径：<code>hexo\\themes\\next\\layout\\post.swig</code><br>\n删除以下代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% block script_extra %&#125;</span><br><span class=\"line\">  &#123;% include &apos;_scripts/pages/post-details.swig&apos; %&#125;</span><br><span class=\"line\">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"方法三\"><a class=\"header-anchor\" href=\"#方法三\">☆</a>方法三</h3>\n<p>修改代码<br>\n路径：<code>next/layout/_macro/sidebar.swig</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//line 17</span><br><span class=\"line\">&#123;% if display_toc and toc(page.content).length &gt; 1 and page.type != &apos;about&apos; %&#125;</span><br><span class=\"line\">//line 28</span><br><span class=\"line\">&#123;% if not display_toc or toc(page.content).length &lt;= 1 or page.type == &apos;about&apos; %&#125;</span><br><span class=\"line\">//line 141</span><br><span class=\"line\">&#123;% if display_toc and toc(page.content).length &gt; 1 and page.type != &apos;about&apos; %&#125;</span><br></pre></td></tr></table></figure>\n<p>行数不一定完全准确，可以用搜索查找字符串</p>\n"},{"title":"VScode配置C++/Java开发环境","copyright":true,"abbrlink":"41bba354","notshow":false,"description":"VScode配置C++/Java开发环境","image":["https://data.singlelovely.cn/CoverPicture/41bba354.jpg!CoverPicture"],"photos":[],"sticky":null,"date":"2019-03-08T15:56:00.000Z","password":null,"_content":"\n{% meting \"548651034\" \"netease\" \"song\" %}\n\n## Java配置\n\n```json launch.json\n{\n        \"version\": \"0.2.0\",\n        \"configurations\": [\n            {\n                \"type\": \"java\",\n                \"name\": \"java\",\n                \"request\": \"launch\",\n                \"mainClass\": \"${file}\",\n                \"console\": \"integratedTerminal\", //使用vscode终端\n                //\"console\": \"externalTerminal\"\n            },\n        ],\n        \"compounds\": []\n    }\n```\n\n可以将配置放在用户设置中，实先全局调用，如下：\n\n```json settings.json\n\"launch\": {\n        \"version\": \"0.2.0\",\n        \"configurations\": [\n            {\n                \"type\": \"java\",\n                \"name\": \"java\",\n                \"request\": \"launch\",\n                \"mainClass\": \"${file}\",\n                \"console\": \"integratedTerminal\",\n                //\"console\": \"externalTerminal\"\n            },\n        ],\n        \"compounds\": []\n    }\n```\n\n### 插件\n\n推荐安装 <span id=\"font-purple\">Java Extension Pack</span> ，一共5个插件，一次安装到处使用\n\n<span id=\"font-blue\">Code Runner</span> ：安装完成后会在右上角出现一个运行按钮，支持多种语言的直接运行，不需要配置文件，缺点是不能调试。\n\n如果只需要简单的运行调试功能，安装以下两个插件就好\n\n<span id=\"font-blue\">Debugger for Java</span>\n\n<span id=\"font-blue\">Language support for Java（TM）by Red Hat</span>\n\n## C++配置\n\n### 准备条件\n\n<p id = \"div-border-top-purple\">电脑上安装g++、gcc、gdb等编译调试环境，并配置环境变量</p>\n\n因为<span id=\"inline-blue\">launch.json</span>需要调用<span id=\"inline-blue\">tasks.json</span>进行预编译，所以无法将配置写入setting.json中实现全局配置，需要在工作空间中配置.vscode目录\n\n```json launch.json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"C/C++\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${fileDirname}/${fileBasenameNoExtension}.exe\",\n            \"args\": [],\n            \"stopAtEntry\": false,\n            \"cwd\": \"${fileDirname}\",\n            \"environment\": [],\n            \"externalConsole\": true,\n            \"MIMode\": \"gdb\",\n            \"miDebuggerPath\": \"F:/CMinGW/bin/gdb.exe\",\n            \"preLaunchTask\": \"g++\",\n            \"setupCommands\": [\n                {\n                    \"description\": \"Enable pretty-printing for gdb\",\n                    \"text\": \"-enable-pretty-printing\",\n                    \"ignoreFailures\": true\n                }\n            ]\n        }\n    ]\n}\n\n```\n\n```json tasks.json\n{\n    \"version\": \"2.0.0\",\n    \"command\": \"g++\",\n    \"args\": [\"-g\",\"${file}\",\"-o\",\"${fileDirname}/${fileBasenameNoExtension}.exe\"],\n    \"problemMatcher\": {\n        \"owner\": \"cpp\",\n        \"fileLocation\": [\"relative\", \"${workspaceRoot}\"],\n        \"pattern\": {\n            \"regexp\": \"^(.*):(\\\\d+):(\\\\d+):\\\\s+(warning|error):\\\\s+(.*)$\",\n            \"file\": 1,\n            \"line\": 2,\n            \"column\": 3,\n            \"severity\": 4,\n            \"message\": 5\n        }\n    }\n}\n```\n\n### 插件\n\n<span id=\"font-blue\"> C/C++ </span> ：提供语言支持，debugging等功能。\n\n<span id=\"font-blue\"> C++ Intellisense </span> ：提供智能分析提示等。\n\n\n## launch.json文件属性值详解（java举例）\n\n### Launch\n\n- mainClass (required)： java 代码的 main 类 (例如：[mymodule/]com.xyz.MainClass).\n- args： 传递给程序的命令行参数\n- sourcePaths： 程序的额外源目录。默认情况下，调试器从项目设置中查找源代码。这个选项允许调试器在额外的目录中查找源代码\n- modulePaths： 用于启动JVM的模块路径。如果没有指定，调试器将自动从当前项目解析\n- classPaths： 启动JVM的类路径。如果没有指定，调试器将自动从当前项目解析\n- encoding： 该文件中的JVM的编码设置。如果没有指定，将使用’UTF-8’。在 Supported Encodings 中可以找到可能的值\n- vmArgs： JVM的额外选项和系统属性(例如：-Xms<size> -Xmx<size> -D<name>=<value>)\n- projectName： 调试器在其中搜索类的首选项目。在不同的项目中可能会有重复的类名。当调试器在启动程序时查找指定的主类时，这个设置也可以工作。表达式求值是必须的\n- cwd： 程序的工作目录\n- env： 程序的额外环境变量\n- stopOnEntry： 启动后自动暂停程序\n- console： 用于启动程序的指定控制台。默认为 internalConsole \n- internalConsole： VS Code Debug 控制台 (输入不被支持)\n- integratedTerminal： VS Code 集成终端\n- externalTerminal： 可以在用户设置中配置的外部终端\n- stepFilters： 在执行debug调试时，跳过指定的类或方法 \n- classNameFilters： 跳过指定的类。类名应该完全限定，支持通配符\n- skipSynthetics： 跳过synthetic 方法\n- skipStaticInitializers： 跳过静态初始化方法\n- skipConstructors： 跳过构造方法\n\n### Attach\n\n- hostName (required)： 远程调试器的主机名或IP地址\n- port (required)： 远程调试器的debug端口\n- timeout： 重新连接之前的超时时间，以毫秒为单位(默认为30000ms)\n- sourcePaths： 程序的额外源目录。默认情况下，调试器从项目设置中查找源代码。这个选项允许调试器在额外的目录中查找源代码\n- projectName： 调试器在其中搜索类的首选项目。在不同的项目中可能会有重复的类名。当调试器在启动程序时查找指定的主类时，这个设置也可以工作\n- stepFilters： 在 debug 调试时，跳过指定的类或方法 \n- classNameFilters： 跳过指定的类。类名应该完全限定，支持通配符\n- skipSynthetics： 跳过 synthetic 方法\n- skipStaticInitializers： 跳过静态初始化方法\n- skipConstructors： 跳过构造方法\n\n### User Settings\n\n- java.debug.logLevel： 发送到VS代码的调试器日志的最低级别，默认为警告\n- java.debug.settings.showHex： 在变量视图中以十六进制格式显示数字，默认为false\n- java.debug.settings.showStaticVariables： 在variables视图中显示静态变量，默认为true\n- java.debug.settings.showQualifiedNames： 在变量视图中显示完全限定的类名，默认为false\n- java.debug.settings.maxStringLength： 变量视图或调试控制台中显示的最大字符串长度。超过此长度的字符串将被裁剪。默认值为0，表示没有进行修剪\n- java.debug.settings.enableHotCodeReplace： 启用Java源代码的热代码替换。确保VScode 中的 Java 代码没有禁用自动构建。有关用法和限制的更多信息，请参阅 wiki page\n\n\n## 后记\n\n<p id = \"div-border-left-green\">为了不违背轻量化的本质，只实现单文件执行，及简单的项目运行。复杂项目还是用IDE。如果啥IDE干的事儿啥都能干，和直接装一个IDE又有何区别？？？</p>\n\n\n## 参考内容\n\n[Launch.json attributes](https://code.visualstudio.com/docs/editor/debugging#_launchjson-attributes)\n[Writing Java with Visual Studio Code](https://code.visualstudio.com/docs/java/java-tutorial)\n[Variables Reference](https://code.visualstudio.com/docs/editor/variables-reference)\n[快速使用 vscode 进行 Java 编程](https://juejin.im/post/5ac193cd6fb9a028d208161c)\n","source":"_posts/VS code配置开发环境.md","raw":"---\ntitle: VScode配置C++/Java开发环境\ncopyright: true\nabbrlink: 41bba354\nnotshow: false\ntags:\n  - C/C++\n  - Java\ncategories: 学习\ndescription: VScode配置C++/Java开发环境\nimage: \n- \"https://data.singlelovely.cn/CoverPicture/41bba354.jpg!CoverPicture\"\nphotos:\nsticky:\ndate: 2019-03-08 23:56:00\npassword:\n---\n\n{% meting \"548651034\" \"netease\" \"song\" %}\n\n## Java配置\n\n```json launch.json\n{\n        \"version\": \"0.2.0\",\n        \"configurations\": [\n            {\n                \"type\": \"java\",\n                \"name\": \"java\",\n                \"request\": \"launch\",\n                \"mainClass\": \"${file}\",\n                \"console\": \"integratedTerminal\", //使用vscode终端\n                //\"console\": \"externalTerminal\"\n            },\n        ],\n        \"compounds\": []\n    }\n```\n\n可以将配置放在用户设置中，实先全局调用，如下：\n\n```json settings.json\n\"launch\": {\n        \"version\": \"0.2.0\",\n        \"configurations\": [\n            {\n                \"type\": \"java\",\n                \"name\": \"java\",\n                \"request\": \"launch\",\n                \"mainClass\": \"${file}\",\n                \"console\": \"integratedTerminal\",\n                //\"console\": \"externalTerminal\"\n            },\n        ],\n        \"compounds\": []\n    }\n```\n\n### 插件\n\n推荐安装 <span id=\"font-purple\">Java Extension Pack</span> ，一共5个插件，一次安装到处使用\n\n<span id=\"font-blue\">Code Runner</span> ：安装完成后会在右上角出现一个运行按钮，支持多种语言的直接运行，不需要配置文件，缺点是不能调试。\n\n如果只需要简单的运行调试功能，安装以下两个插件就好\n\n<span id=\"font-blue\">Debugger for Java</span>\n\n<span id=\"font-blue\">Language support for Java（TM）by Red Hat</span>\n\n## C++配置\n\n### 准备条件\n\n<p id = \"div-border-top-purple\">电脑上安装g++、gcc、gdb等编译调试环境，并配置环境变量</p>\n\n因为<span id=\"inline-blue\">launch.json</span>需要调用<span id=\"inline-blue\">tasks.json</span>进行预编译，所以无法将配置写入setting.json中实现全局配置，需要在工作空间中配置.vscode目录\n\n```json launch.json\n{\n    \"version\": \"0.2.0\",\n    \"configurations\": [\n        {\n            \"name\": \"C/C++\",\n            \"type\": \"cppdbg\",\n            \"request\": \"launch\",\n            \"program\": \"${fileDirname}/${fileBasenameNoExtension}.exe\",\n            \"args\": [],\n            \"stopAtEntry\": false,\n            \"cwd\": \"${fileDirname}\",\n            \"environment\": [],\n            \"externalConsole\": true,\n            \"MIMode\": \"gdb\",\n            \"miDebuggerPath\": \"F:/CMinGW/bin/gdb.exe\",\n            \"preLaunchTask\": \"g++\",\n            \"setupCommands\": [\n                {\n                    \"description\": \"Enable pretty-printing for gdb\",\n                    \"text\": \"-enable-pretty-printing\",\n                    \"ignoreFailures\": true\n                }\n            ]\n        }\n    ]\n}\n\n```\n\n```json tasks.json\n{\n    \"version\": \"2.0.0\",\n    \"command\": \"g++\",\n    \"args\": [\"-g\",\"${file}\",\"-o\",\"${fileDirname}/${fileBasenameNoExtension}.exe\"],\n    \"problemMatcher\": {\n        \"owner\": \"cpp\",\n        \"fileLocation\": [\"relative\", \"${workspaceRoot}\"],\n        \"pattern\": {\n            \"regexp\": \"^(.*):(\\\\d+):(\\\\d+):\\\\s+(warning|error):\\\\s+(.*)$\",\n            \"file\": 1,\n            \"line\": 2,\n            \"column\": 3,\n            \"severity\": 4,\n            \"message\": 5\n        }\n    }\n}\n```\n\n### 插件\n\n<span id=\"font-blue\"> C/C++ </span> ：提供语言支持，debugging等功能。\n\n<span id=\"font-blue\"> C++ Intellisense </span> ：提供智能分析提示等。\n\n\n## launch.json文件属性值详解（java举例）\n\n### Launch\n\n- mainClass (required)： java 代码的 main 类 (例如：[mymodule/]com.xyz.MainClass).\n- args： 传递给程序的命令行参数\n- sourcePaths： 程序的额外源目录。默认情况下，调试器从项目设置中查找源代码。这个选项允许调试器在额外的目录中查找源代码\n- modulePaths： 用于启动JVM的模块路径。如果没有指定，调试器将自动从当前项目解析\n- classPaths： 启动JVM的类路径。如果没有指定，调试器将自动从当前项目解析\n- encoding： 该文件中的JVM的编码设置。如果没有指定，将使用’UTF-8’。在 Supported Encodings 中可以找到可能的值\n- vmArgs： JVM的额外选项和系统属性(例如：-Xms<size> -Xmx<size> -D<name>=<value>)\n- projectName： 调试器在其中搜索类的首选项目。在不同的项目中可能会有重复的类名。当调试器在启动程序时查找指定的主类时，这个设置也可以工作。表达式求值是必须的\n- cwd： 程序的工作目录\n- env： 程序的额外环境变量\n- stopOnEntry： 启动后自动暂停程序\n- console： 用于启动程序的指定控制台。默认为 internalConsole \n- internalConsole： VS Code Debug 控制台 (输入不被支持)\n- integratedTerminal： VS Code 集成终端\n- externalTerminal： 可以在用户设置中配置的外部终端\n- stepFilters： 在执行debug调试时，跳过指定的类或方法 \n- classNameFilters： 跳过指定的类。类名应该完全限定，支持通配符\n- skipSynthetics： 跳过synthetic 方法\n- skipStaticInitializers： 跳过静态初始化方法\n- skipConstructors： 跳过构造方法\n\n### Attach\n\n- hostName (required)： 远程调试器的主机名或IP地址\n- port (required)： 远程调试器的debug端口\n- timeout： 重新连接之前的超时时间，以毫秒为单位(默认为30000ms)\n- sourcePaths： 程序的额外源目录。默认情况下，调试器从项目设置中查找源代码。这个选项允许调试器在额外的目录中查找源代码\n- projectName： 调试器在其中搜索类的首选项目。在不同的项目中可能会有重复的类名。当调试器在启动程序时查找指定的主类时，这个设置也可以工作\n- stepFilters： 在 debug 调试时，跳过指定的类或方法 \n- classNameFilters： 跳过指定的类。类名应该完全限定，支持通配符\n- skipSynthetics： 跳过 synthetic 方法\n- skipStaticInitializers： 跳过静态初始化方法\n- skipConstructors： 跳过构造方法\n\n### User Settings\n\n- java.debug.logLevel： 发送到VS代码的调试器日志的最低级别，默认为警告\n- java.debug.settings.showHex： 在变量视图中以十六进制格式显示数字，默认为false\n- java.debug.settings.showStaticVariables： 在variables视图中显示静态变量，默认为true\n- java.debug.settings.showQualifiedNames： 在变量视图中显示完全限定的类名，默认为false\n- java.debug.settings.maxStringLength： 变量视图或调试控制台中显示的最大字符串长度。超过此长度的字符串将被裁剪。默认值为0，表示没有进行修剪\n- java.debug.settings.enableHotCodeReplace： 启用Java源代码的热代码替换。确保VScode 中的 Java 代码没有禁用自动构建。有关用法和限制的更多信息，请参阅 wiki page\n\n\n## 后记\n\n<p id = \"div-border-left-green\">为了不违背轻量化的本质，只实现单文件执行，及简单的项目运行。复杂项目还是用IDE。如果啥IDE干的事儿啥都能干，和直接装一个IDE又有何区别？？？</p>\n\n\n## 参考内容\n\n[Launch.json attributes](https://code.visualstudio.com/docs/editor/debugging#_launchjson-attributes)\n[Writing Java with Visual Studio Code](https://code.visualstudio.com/docs/java/java-tutorial)\n[Variables Reference](https://code.visualstudio.com/docs/editor/variables-reference)\n[快速使用 vscode 进行 Java 编程](https://juejin.im/post/5ac193cd6fb9a028d208161c)\n","slug":"VS code配置开发环境","published":1,"updated":"2020-02-20T06:06:59.396Z","comments":1,"layout":"post","link":"","_id":"ckec2td2x000qfkupljngm763","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-UyNJdjsc\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"548651034\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"></div>\n<h2 id=\"java配置\"><a class=\"header-anchor\" href=\"#java配置\">☆</a>Java配置</h2>\n<figure class=\"highlight\"><figcaption><span>launch.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">        <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.2.0\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"configurations\"</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"java\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"java\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"request\"</span>: <span class=\"string\">\"launch\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"mainClass\"</span>: <span class=\"string\">\"$&#123;file&#125;\"</span>,</span><br><span class=\"line\">                \"console\": \"integratedTerminal\", //使用vscode终端</span><br><span class=\"line\">                //\"console\": \"externalTerminal\"</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        \"compounds\": []</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>可以将配置放在用户设置中，实先全局调用，如下：</p>\n<figure class=\"highlight\"><figcaption><span>settings.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"launch\": &#123;</span><br><span class=\"line\">        \"version\": \"0.2.0\",</span><br><span class=\"line\">        \"configurations\": [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"java\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"java\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"request\"</span>: <span class=\"string\">\"launch\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"mainClass\"</span>: <span class=\"string\">\"$&#123;file&#125;\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"console\"</span>: <span class=\"string\">\"integratedTerminal\"</span>,</span><br><span class=\"line\">                //\"console\": \"externalTerminal\"</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        \"compounds\": []</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"插件\"><a class=\"header-anchor\" href=\"#插件\">☆</a>插件</h3>\n<p>推荐安装 <span id=\"font-purple\">Java Extension Pack</span> ，一共5个插件，一次安装到处使用</p>\n<p><span id=\"font-blue\">Code Runner</span> ：安装完成后会在右上角出现一个运行按钮，支持多种语言的直接运行，不需要配置文件，缺点是不能调试。</p>\n<p>如果只需要简单的运行调试功能，安装以下两个插件就好</p>\n<p><span id=\"font-blue\">Debugger for Java</span></p>\n<p><span id=\"font-blue\">Language support for Java（TM）by Red Hat</span></p>\n<h2 id=\"c-配置\"><a class=\"header-anchor\" href=\"#c-配置\">☆</a>C++配置</h2>\n<h3 id=\"准备条件\"><a class=\"header-anchor\" href=\"#准备条件\">☆</a>准备条件</h3>\n<p id=\"div-border-top-purple\">电脑上安装g++、gcc、gdb等编译调试环境，并配置环境变量</p>\n<p>因为<span id=\"inline-blue\">launch.json</span>需要调用<span id=\"inline-blue\">tasks.json</span>进行预编译，所以无法将配置写入setting.json中实现全局配置，需要在工作空间中配置.vscode目录</p>\n<figure class=\"highlight json\"><figcaption><span>launch.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.2.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"configurations\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"C/C++\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"cppdbg\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"request\"</span>: <span class=\"string\">\"launch\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"program\"</span>: <span class=\"string\">\"$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"args\"</span>: [],</span><br><span class=\"line\">            <span class=\"attr\">\"stopAtEntry\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"cwd\"</span>: <span class=\"string\">\"$&#123;fileDirname&#125;\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"environment\"</span>: [],</span><br><span class=\"line\">            <span class=\"attr\">\"externalConsole\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"MIMode\"</span>: <span class=\"string\">\"gdb\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"miDebuggerPath\"</span>: <span class=\"string\">\"F:/CMinGW/bin/gdb.exe\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"preLaunchTask\"</span>: <span class=\"string\">\"g++\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"setupCommands\"</span>: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Enable pretty-printing for gdb\"</span>,</span><br><span class=\"line\">                    <span class=\"attr\">\"text\"</span>: <span class=\"string\">\"-enable-pretty-printing\"</span>,</span><br><span class=\"line\">                    <span class=\"attr\">\"ignoreFailures\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><figcaption><span>tasks.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"g++\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"args\"</span>: [<span class=\"string\">\"-g\"</span>,<span class=\"string\">\"$&#123;file&#125;\"</span>,<span class=\"string\">\"-o\"</span>,<span class=\"string\">\"$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe\"</span>],</span><br><span class=\"line\">    <span class=\"attr\">\"problemMatcher\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"owner\"</span>: <span class=\"string\">\"cpp\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"fileLocation\"</span>: [<span class=\"string\">\"relative\"</span>, <span class=\"string\">\"$&#123;workspaceRoot&#125;\"</span>],</span><br><span class=\"line\">        <span class=\"attr\">\"pattern\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"regexp\"</span>: <span class=\"string\">\"^(.*):(\\\\d+):(\\\\d+):\\\\s+(warning|error):\\\\s+(.*)$\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"file\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"line\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"column\"</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"severity\"</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"message\"</span>: <span class=\"number\">5</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"插件-v2\"><a class=\"header-anchor\" href=\"#插件-v2\">☆</a>插件</h3>\n<p><span id=\"font-blue\"> C/C++ </span> ：提供语言支持，debugging等功能。</p>\n<p><span id=\"font-blue\"> C++ Intellisense </span> ：提供智能分析提示等。</p>\n<h2 id=\"launch-json文件属性值详解-java举例\"><a class=\"header-anchor\" href=\"#launch-json文件属性值详解-java举例\">☆</a>launch.json文件属性值详解（java举例）</h2>\n<h3 id=\"launch\"><a class=\"header-anchor\" href=\"#launch\">☆</a>Launch</h3>\n<ul>\n<li>mainClass (required)： java 代码的 main 类 (例如：[mymodule/]com.xyz.MainClass).</li>\n<li>args： 传递给程序的命令行参数</li>\n<li>sourcePaths： 程序的额外源目录。默认情况下，调试器从项目设置中查找源代码。这个选项允许调试器在额外的目录中查找源代码</li>\n<li>modulePaths： 用于启动JVM的模块路径。如果没有指定，调试器将自动从当前项目解析</li>\n<li>classPaths： 启动JVM的类路径。如果没有指定，调试器将自动从当前项目解析</li>\n<li>encoding： 该文件中的JVM的编码设置。如果没有指定，将使用’UTF-8’。在 Supported Encodings 中可以找到可能的值</li>\n<li>vmArgs： JVM的额外选项和系统属性(例如：-Xms<size> -Xmx<size> -D<name>=<value>)</value></name></size></size></li>\n<li>projectName： 调试器在其中搜索类的首选项目。在不同的项目中可能会有重复的类名。当调试器在启动程序时查找指定的主类时，这个设置也可以工作。表达式求值是必须的</li>\n<li>cwd： 程序的工作目录</li>\n<li>env： 程序的额外环境变量</li>\n<li>stopOnEntry： 启动后自动暂停程序</li>\n<li>console： 用于启动程序的指定控制台。默认为 internalConsole</li>\n<li>internalConsole： VS Code Debug 控制台 (输入不被支持)</li>\n<li>integratedTerminal： VS Code 集成终端</li>\n<li>externalTerminal： 可以在用户设置中配置的外部终端</li>\n<li>stepFilters： 在执行debug调试时，跳过指定的类或方法</li>\n<li>classNameFilters： 跳过指定的类。类名应该完全限定，支持通配符</li>\n<li>skipSynthetics： 跳过synthetic 方法</li>\n<li>skipStaticInitializers： 跳过静态初始化方法</li>\n<li>skipConstructors： 跳过构造方法</li>\n</ul>\n<h3 id=\"attach\"><a class=\"header-anchor\" href=\"#attach\">☆</a>Attach</h3>\n<ul>\n<li>hostName (required)： 远程调试器的主机名或IP地址</li>\n<li>port (required)： 远程调试器的debug端口</li>\n<li>timeout： 重新连接之前的超时时间，以毫秒为单位(默认为30000ms)</li>\n<li>sourcePaths： 程序的额外源目录。默认情况下，调试器从项目设置中查找源代码。这个选项允许调试器在额外的目录中查找源代码</li>\n<li>projectName： 调试器在其中搜索类的首选项目。在不同的项目中可能会有重复的类名。当调试器在启动程序时查找指定的主类时，这个设置也可以工作</li>\n<li>stepFilters： 在 debug 调试时，跳过指定的类或方法</li>\n<li>classNameFilters： 跳过指定的类。类名应该完全限定，支持通配符</li>\n<li>skipSynthetics： 跳过 synthetic 方法</li>\n<li>skipStaticInitializers： 跳过静态初始化方法</li>\n<li>skipConstructors： 跳过构造方法</li>\n</ul>\n<h3 id=\"user-settings\"><a class=\"header-anchor\" href=\"#user-settings\">☆</a>User Settings</h3>\n<ul>\n<li>java.debug.logLevel： 发送到VS代码的调试器日志的最低级别，默认为警告</li>\n<li>java.debug.settings.showHex： 在变量视图中以十六进制格式显示数字，默认为false</li>\n<li>java.debug.settings.showStaticVariables： 在variables视图中显示静态变量，默认为true</li>\n<li>java.debug.settings.showQualifiedNames： 在变量视图中显示完全限定的类名，默认为false</li>\n<li>java.debug.settings.maxStringLength： 变量视图或调试控制台中显示的最大字符串长度。超过此长度的字符串将被裁剪。默认值为0，表示没有进行修剪</li>\n<li>java.debug.settings.enableHotCodeReplace： 启用Java源代码的热代码替换。确保VScode 中的 Java 代码没有禁用自动构建。有关用法和限制的更多信息，请参阅 wiki page</li>\n</ul>\n<h2 id=\"后记\"><a class=\"header-anchor\" href=\"#后记\">☆</a>后记</h2>\n<p id=\"div-border-left-green\">为了不违背轻量化的本质，只实现单文件执行，及简单的项目运行。复杂项目还是用IDE。如果啥IDE干的事儿啥都能干，和直接装一个IDE又有何区别？？？</p>\n<h2 id=\"参考内容\"><a class=\"header-anchor\" href=\"#参考内容\">☆</a>参考内容</h2>\n<p><a href=\"https://code.visualstudio.com/docs/editor/debugging#_launchjson-attributes\" target=\"_blank\" rel=\"noopener\">Launch.json attributes</a><br>\n<a href=\"https://code.visualstudio.com/docs/java/java-tutorial\" target=\"_blank\" rel=\"noopener\">Writing Java with Visual Studio Code</a><br>\n<a href=\"https://code.visualstudio.com/docs/editor/variables-reference\" target=\"_blank\" rel=\"noopener\">Variables Reference</a><br>\n<a href=\"https://juejin.im/post/5ac193cd6fb9a028d208161c\" target=\"_blank\" rel=\"noopener\">快速使用 vscode 进行 Java 编程</a></p>\n","site":{"data":{}},"length":4537,"excerpt":"","more":"\n    <div id=\"aplayer-UyNJdjsc\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"548651034\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"></div>\n<h2 id=\"java配置\"><a class=\"header-anchor\" href=\"#java配置\">☆</a>Java配置</h2>\n<figure class=\"highlight\"><figcaption><span>launch.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">        <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.2.0\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"configurations\"</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"java\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"java\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"request\"</span>: <span class=\"string\">\"launch\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"mainClass\"</span>: <span class=\"string\">\"$&#123;file&#125;\"</span>,</span><br><span class=\"line\">                \"console\": \"integratedTerminal\", //使用vscode终端</span><br><span class=\"line\">                //\"console\": \"externalTerminal\"</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        \"compounds\": []</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>可以将配置放在用户设置中，实先全局调用，如下：</p>\n<figure class=\"highlight\"><figcaption><span>settings.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"launch\": &#123;</span><br><span class=\"line\">        \"version\": \"0.2.0\",</span><br><span class=\"line\">        \"configurations\": [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"java\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"java\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"request\"</span>: <span class=\"string\">\"launch\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"mainClass\"</span>: <span class=\"string\">\"$&#123;file&#125;\"</span>,</span><br><span class=\"line\">                <span class=\"attr\">\"console\"</span>: <span class=\"string\">\"integratedTerminal\"</span>,</span><br><span class=\"line\">                //\"console\": \"externalTerminal\"</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        ],</span><br><span class=\"line\">        \"compounds\": []</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"插件\"><a class=\"header-anchor\" href=\"#插件\">☆</a>插件</h3>\n<p>推荐安装 <span id=\"font-purple\">Java Extension Pack</span> ，一共5个插件，一次安装到处使用</p>\n<p><span id=\"font-blue\">Code Runner</span> ：安装完成后会在右上角出现一个运行按钮，支持多种语言的直接运行，不需要配置文件，缺点是不能调试。</p>\n<p>如果只需要简单的运行调试功能，安装以下两个插件就好</p>\n<p><span id=\"font-blue\">Debugger for Java</span></p>\n<p><span id=\"font-blue\">Language support for Java（TM）by Red Hat</span></p>\n<h2 id=\"c-配置\"><a class=\"header-anchor\" href=\"#c-配置\">☆</a>C++配置</h2>\n<h3 id=\"准备条件\"><a class=\"header-anchor\" href=\"#准备条件\">☆</a>准备条件</h3>\n<p id=\"div-border-top-purple\">电脑上安装g++、gcc、gdb等编译调试环境，并配置环境变量</p>\n<p>因为<span id=\"inline-blue\">launch.json</span>需要调用<span id=\"inline-blue\">tasks.json</span>进行预编译，所以无法将配置写入setting.json中实现全局配置，需要在工作空间中配置.vscode目录</p>\n<figure class=\"highlight json\"><figcaption><span>launch.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"0.2.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"configurations\"</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"name\"</span>: <span class=\"string\">\"C/C++\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"type\"</span>: <span class=\"string\">\"cppdbg\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"request\"</span>: <span class=\"string\">\"launch\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"program\"</span>: <span class=\"string\">\"$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"args\"</span>: [],</span><br><span class=\"line\">            <span class=\"attr\">\"stopAtEntry\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"cwd\"</span>: <span class=\"string\">\"$&#123;fileDirname&#125;\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"environment\"</span>: [],</span><br><span class=\"line\">            <span class=\"attr\">\"externalConsole\"</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"MIMode\"</span>: <span class=\"string\">\"gdb\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"miDebuggerPath\"</span>: <span class=\"string\">\"F:/CMinGW/bin/gdb.exe\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"preLaunchTask\"</span>: <span class=\"string\">\"g++\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"setupCommands\"</span>: [</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    <span class=\"attr\">\"description\"</span>: <span class=\"string\">\"Enable pretty-printing for gdb\"</span>,</span><br><span class=\"line\">                    <span class=\"attr\">\"text\"</span>: <span class=\"string\">\"-enable-pretty-printing\"</span>,</span><br><span class=\"line\">                    <span class=\"attr\">\"ignoreFailures\"</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><figcaption><span>tasks.json</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"version\"</span>: <span class=\"string\">\"2.0.0\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"command\"</span>: <span class=\"string\">\"g++\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"args\"</span>: [<span class=\"string\">\"-g\"</span>,<span class=\"string\">\"$&#123;file&#125;\"</span>,<span class=\"string\">\"-o\"</span>,<span class=\"string\">\"$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;.exe\"</span>],</span><br><span class=\"line\">    <span class=\"attr\">\"problemMatcher\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"owner\"</span>: <span class=\"string\">\"cpp\"</span>,</span><br><span class=\"line\">        <span class=\"attr\">\"fileLocation\"</span>: [<span class=\"string\">\"relative\"</span>, <span class=\"string\">\"$&#123;workspaceRoot&#125;\"</span>],</span><br><span class=\"line\">        <span class=\"attr\">\"pattern\"</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">\"regexp\"</span>: <span class=\"string\">\"^(.*):(\\\\d+):(\\\\d+):\\\\s+(warning|error):\\\\s+(.*)$\"</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"file\"</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"line\"</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"column\"</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"severity\"</span>: <span class=\"number\">4</span>,</span><br><span class=\"line\">            <span class=\"attr\">\"message\"</span>: <span class=\"number\">5</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"插件-v2\"><a class=\"header-anchor\" href=\"#插件-v2\">☆</a>插件</h3>\n<p><span id=\"font-blue\"> C/C++ </span> ：提供语言支持，debugging等功能。</p>\n<p><span id=\"font-blue\"> C++ Intellisense </span> ：提供智能分析提示等。</p>\n<h2 id=\"launch-json文件属性值详解-java举例\"><a class=\"header-anchor\" href=\"#launch-json文件属性值详解-java举例\">☆</a>launch.json文件属性值详解（java举例）</h2>\n<h3 id=\"launch\"><a class=\"header-anchor\" href=\"#launch\">☆</a>Launch</h3>\n<ul>\n<li>mainClass (required)： java 代码的 main 类 (例如：[mymodule/]com.xyz.MainClass).</li>\n<li>args： 传递给程序的命令行参数</li>\n<li>sourcePaths： 程序的额外源目录。默认情况下，调试器从项目设置中查找源代码。这个选项允许调试器在额外的目录中查找源代码</li>\n<li>modulePaths： 用于启动JVM的模块路径。如果没有指定，调试器将自动从当前项目解析</li>\n<li>classPaths： 启动JVM的类路径。如果没有指定，调试器将自动从当前项目解析</li>\n<li>encoding： 该文件中的JVM的编码设置。如果没有指定，将使用’UTF-8’。在 Supported Encodings 中可以找到可能的值</li>\n<li>vmArgs： JVM的额外选项和系统属性(例如：-Xms<size> -Xmx<size> -D<name>=<value>)</value></name></size></size></li>\n<li>projectName： 调试器在其中搜索类的首选项目。在不同的项目中可能会有重复的类名。当调试器在启动程序时查找指定的主类时，这个设置也可以工作。表达式求值是必须的</li>\n<li>cwd： 程序的工作目录</li>\n<li>env： 程序的额外环境变量</li>\n<li>stopOnEntry： 启动后自动暂停程序</li>\n<li>console： 用于启动程序的指定控制台。默认为 internalConsole</li>\n<li>internalConsole： VS Code Debug 控制台 (输入不被支持)</li>\n<li>integratedTerminal： VS Code 集成终端</li>\n<li>externalTerminal： 可以在用户设置中配置的外部终端</li>\n<li>stepFilters： 在执行debug调试时，跳过指定的类或方法</li>\n<li>classNameFilters： 跳过指定的类。类名应该完全限定，支持通配符</li>\n<li>skipSynthetics： 跳过synthetic 方法</li>\n<li>skipStaticInitializers： 跳过静态初始化方法</li>\n<li>skipConstructors： 跳过构造方法</li>\n</ul>\n<h3 id=\"attach\"><a class=\"header-anchor\" href=\"#attach\">☆</a>Attach</h3>\n<ul>\n<li>hostName (required)： 远程调试器的主机名或IP地址</li>\n<li>port (required)： 远程调试器的debug端口</li>\n<li>timeout： 重新连接之前的超时时间，以毫秒为单位(默认为30000ms)</li>\n<li>sourcePaths： 程序的额外源目录。默认情况下，调试器从项目设置中查找源代码。这个选项允许调试器在额外的目录中查找源代码</li>\n<li>projectName： 调试器在其中搜索类的首选项目。在不同的项目中可能会有重复的类名。当调试器在启动程序时查找指定的主类时，这个设置也可以工作</li>\n<li>stepFilters： 在 debug 调试时，跳过指定的类或方法</li>\n<li>classNameFilters： 跳过指定的类。类名应该完全限定，支持通配符</li>\n<li>skipSynthetics： 跳过 synthetic 方法</li>\n<li>skipStaticInitializers： 跳过静态初始化方法</li>\n<li>skipConstructors： 跳过构造方法</li>\n</ul>\n<h3 id=\"user-settings\"><a class=\"header-anchor\" href=\"#user-settings\">☆</a>User Settings</h3>\n<ul>\n<li>java.debug.logLevel： 发送到VS代码的调试器日志的最低级别，默认为警告</li>\n<li>java.debug.settings.showHex： 在变量视图中以十六进制格式显示数字，默认为false</li>\n<li>java.debug.settings.showStaticVariables： 在variables视图中显示静态变量，默认为true</li>\n<li>java.debug.settings.showQualifiedNames： 在变量视图中显示完全限定的类名，默认为false</li>\n<li>java.debug.settings.maxStringLength： 变量视图或调试控制台中显示的最大字符串长度。超过此长度的字符串将被裁剪。默认值为0，表示没有进行修剪</li>\n<li>java.debug.settings.enableHotCodeReplace： 启用Java源代码的热代码替换。确保VScode 中的 Java 代码没有禁用自动构建。有关用法和限制的更多信息，请参阅 wiki page</li>\n</ul>\n<h2 id=\"后记\"><a class=\"header-anchor\" href=\"#后记\">☆</a>后记</h2>\n<p id=\"div-border-left-green\">为了不违背轻量化的本质，只实现单文件执行，及简单的项目运行。复杂项目还是用IDE。如果啥IDE干的事儿啥都能干，和直接装一个IDE又有何区别？？？</p>\n<h2 id=\"参考内容\"><a class=\"header-anchor\" href=\"#参考内容\">☆</a>参考内容</h2>\n<p><a href=\"https://code.visualstudio.com/docs/editor/debugging#_launchjson-attributes\" target=\"_blank\" rel=\"noopener\">Launch.json attributes</a><br>\n<a href=\"https://code.visualstudio.com/docs/java/java-tutorial\" target=\"_blank\" rel=\"noopener\">Writing Java with Visual Studio Code</a><br>\n<a href=\"https://code.visualstudio.com/docs/editor/variables-reference\" target=\"_blank\" rel=\"noopener\">Variables Reference</a><br>\n<a href=\"https://juejin.im/post/5ac193cd6fb9a028d208161c\" target=\"_blank\" rel=\"noopener\">快速使用 vscode 进行 Java 编程</a></p>\n"},{"title":"aplayer 音乐播放器","copyright":false,"abbrlink":"a84d1ef1","date":"2018-04-06T03:33:18.000Z","password":null,"_content":"\nhexo插入音乐，以前用网易云音乐可以直接生成外链播放器，但版权保护了以后，好多音乐都不能生成外链播放了。\n\n关于外链播放器，网上找了很久，好多解决方案都是把音乐放网盘，然后自己写一个播放插件加入到页面中，这个办法是不错，但它不适用于hexo这种依赖引擎自动渲染的网站。\n\n是可以把js等放在模板中，渲染的时候调用，但不是所有的网页都要插入音乐，放在模板中无疑会拖慢渲染速度，而且为了这个小东西，自己去改模板，有点复杂了。\n\naplayer提供了一个不错的解决办法，[hexo-tag-aplayer](https://github.com/MoePlayer/hexo-tag-aplayer)插件,可以绕过版权问题\n\n\n## 安装\n\n```\nnpm install --save hexo-tag-aplayer\n```\n\n## 依赖\n\n+ APlayer.js > 1.8.0\n+ Meting.js > 1.1.1\n\n## 使用\n\n### 直接使用办法\n\n```\n{% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %}\n```\n\n注：此方法不支持一键调用资源，需要手动获取链接后填写，或者开启 Hexo 的 [文章资源文件夹](https://hexo.io/zh-cn/docs/asset-folders.html#%E6%96%87%E7%AB%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9) 功能，将图片、音乐文件、歌词文件放入与文章对应的资源文件夹中，然后直接引用：\n\n```\n{% aplayer \"Caffeine\" \"Jeff Williams\" \"caffeine.mp3\" \"picture.jpg\" \"lrc:caffeine.txt\" %}\n```\n\n### MeingJS 支持 \n\n[MetingJS](https://github.com/metowolf/MetingJS) 是基于[Meting API](https://github.com/metowolf/Meting) 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。\n\n（目前QQ音乐失效，因为QQ音乐屏蔽掉了歌曲ID）\n> 虾米音乐部分失效，无法解析 （2018.8.10）\n\n如果使用 MetingJS，请在 Hexo 配置文件 `_config.yml` 中设置：\n\n```yaml\naplayer:\n  meting: true\n```\n\n接着就可以通过 **{**% meting ...%**}** 在文章中使用 MetingJS 播放器了：\n\n```\n<!-- 简单示例 (id, server, type)  -->\n{% meting \"108138\" \"netease\" \"song\" %}\n```\n{% meting \"108138\" \"netease\" \"song\" %}\n\n```\n<!-- 进阶示例 -->\n{% meting \"11100236\" \"netease\" \"playlist\" \"autoplay\" \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n```\n\n{% meting \"11100236\" \"netease\" \"playlist\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n有关  **{**% meting %**}**  的选项列表如下:\n\n| 选项            | 默认值           | 描述                                       |\n| ------------- | ------------- | ---------------------------------------- |\n| id            | **必须值**       | 歌曲 id / 播放列表 id / 相册 id / 搜索关键字          |\n| server        | **必须值**       | 音乐平台: `netease`, `tencent`, `kugou`, `xiami`, `baidu` |\n| type          | **必须值**       | `song`, `playlist`, `album`, `search`, `artist` |\n| mode          | `circulation` | 列表播放模式, `circulation`, `random`, `single`, `order` |\n| autoplay      | `true`        | 自动播放，移动端浏览器暂时不支持此功能                      |\n| mutex         | `true`        | 该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停       |\n| listmaxheight | `340px`       | 播放列表的最大长度                                |\n| preload       | `auto`        | 音乐文件预载入模式，可选项： `none`, `metadata`, `auto` |\n| theme         | `#ad7a86`     | 播放器风格色彩设置                                |\n\n关于如何设置自建的 Meting API 服务器地址，以及其他 MetingJS 配置，请参考章节[自定义配置](#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE30-%E6%96%B0%E5%8A%9F%E8%83%BD)\n\n### PJAX 兼容\n\n若在 Hexo 中使用了 PJAX，可能需要自己手动清理 APlayer 全局实例：\n\n```js\n$(document).on('pjax:start', function () {\n    if (window.aplayers) {\n        for (let i = 0; i < window.aplayers.length; i++) {\n            window.aplayers[i].destroy();\n        }\n        window.aplayers = [];\n    }\n});\n```\n\n## 自定义配置\n\n在 Hexo 配置文件  `_config.yml` 中配置：\n\n```yaml\naplayer:\n  script_dir: some/place                        # Public 目录下脚本目录路径，默认: 'assets/js'\n  style_dir: some/place                         # Public 目录下样式目录路径，默认: 'assets/css'\n  cdn: http://xxx/aplayer.min.js                # 引用 APlayer.js 外部 CDN 地址 (默认不开启)\n  style_cdn: http://xxx/aplayer.min.css         # 引用 APlayer.css 外部 CDN 地址 (默认不开启)\n  meting: true                                  # MetingJS 支持\n  meting_api: http://xxx/api.php                # 自定义 Meting API 地址\n  meting_cdn: http://xxx/Meing.min.js           # 引用 Meting.js 外部 CDN 地址 (默认不开启)\n  asset_inject: true                            # 自动插入 Aplayer.js 与 Meting.js 资源脚本, 默认开启\n  externalLink: http://xxx/aplayer.min.js       # 老版本参数，功能与参数 cdn 相同\n```\n如不需要自定义脚本，请不用在`_config.yml` 中配置这些内容。\n\n## 故障排除\n\n### 标签参数空格问题\n\n在 Hexo 标签中，用户可能无法直接在标签参数中[加入空格](https://github.com/hexojs/hexo/issues/1455)\n\n如果遇到这类问题，请直接将参数用双引号括起来使用，如下所示：\n\n```\n{% aplayer \"Caffeine\" \"Jeff Williams\" \"caffeine.mp3\" \"autoplay\" \"width:70%\" \"lrc:caffeine.txt\" %}\n```\n\n### 重复载入 Aplayer.js 资源脚本问题\n(5.10以上版本的hexo不存在此问题)\n本插件通过 `after_render:html`过滤器 , 将 `APlayer.js` 和 `Meting.js` 插入到使用了本插件标签 的 HTML 文件中:\n\n```html\n<html>\n  <head>\n    ...\n    <script src=\"assets/js/aplayer.min.js\"></script>\n    <script src=\"assets/js/meting.min.js\"></script>\n  </head>\n  ...\n</html>\n```\n\n但是 `after_render:html` 在一些情形下可能无法被正常触发:\n\n- [Does not work with hexo-renderer-jade](https://github.com/hexojs/hexo-inject/issues/1)\n- `after_render:html` 似乎在 Hexo 服务器模式默认配置中无法被调用 (`hexo server`), 遇到这种情况用户可能需要使用 `hexo-server` 的静态文件解析模式 ( `hexo server -s`) .\n\n如果在博客生成过程中，插件发现 `after_render:html` 没有被调用，那么插件将会通过 `after_post_render` 过滤器来植入脚本。但是使用 `after_post_render` 会有重复载入 `APlayer.js` 的情况（例如当一个页面中存在多篇博客时），以及一些非文章页面将无法使用本插件。\n\n如果想完全解决这个问题，用户可能需要自己在主题文件中手动加入 `Aplayer.js` 与 `Meting.js`，同时关闭插件的自动脚本插入功能：\n\n```yaml\naplayer:\n  asset_inject: false\n```\n<center>END</center>\n\n&emsp;\n&emsp;\n&emsp;\n\n手动插入详见：[Hexo音乐播放完美支持https和多平台](https://www.tiexo.cn/aplayer/)\n建议使用插件，手动插入不利于后期维护及排错······\n本文原链接：https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md  \n基于原文，有删改。","source":"_posts/aplayer 音乐播放器.md","raw":"---\ntitle: aplayer 音乐播放器\ncopyright: false\nabbrlink: a84d1ef1\ndate: 2018-04-06 11:33:18\ntags:\n- hexo\ncategories: hexo\npassword:\n---\n\nhexo插入音乐，以前用网易云音乐可以直接生成外链播放器，但版权保护了以后，好多音乐都不能生成外链播放了。\n\n关于外链播放器，网上找了很久，好多解决方案都是把音乐放网盘，然后自己写一个播放插件加入到页面中，这个办法是不错，但它不适用于hexo这种依赖引擎自动渲染的网站。\n\n是可以把js等放在模板中，渲染的时候调用，但不是所有的网页都要插入音乐，放在模板中无疑会拖慢渲染速度，而且为了这个小东西，自己去改模板，有点复杂了。\n\naplayer提供了一个不错的解决办法，[hexo-tag-aplayer](https://github.com/MoePlayer/hexo-tag-aplayer)插件,可以绕过版权问题\n\n\n## 安装\n\n```\nnpm install --save hexo-tag-aplayer\n```\n\n## 依赖\n\n+ APlayer.js > 1.8.0\n+ Meting.js > 1.1.1\n\n## 使用\n\n### 直接使用办法\n\n```\n{% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %}\n```\n\n注：此方法不支持一键调用资源，需要手动获取链接后填写，或者开启 Hexo 的 [文章资源文件夹](https://hexo.io/zh-cn/docs/asset-folders.html#%E6%96%87%E7%AB%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9) 功能，将图片、音乐文件、歌词文件放入与文章对应的资源文件夹中，然后直接引用：\n\n```\n{% aplayer \"Caffeine\" \"Jeff Williams\" \"caffeine.mp3\" \"picture.jpg\" \"lrc:caffeine.txt\" %}\n```\n\n### MeingJS 支持 \n\n[MetingJS](https://github.com/metowolf/MetingJS) 是基于[Meting API](https://github.com/metowolf/Meting) 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。\n\n（目前QQ音乐失效，因为QQ音乐屏蔽掉了歌曲ID）\n> 虾米音乐部分失效，无法解析 （2018.8.10）\n\n如果使用 MetingJS，请在 Hexo 配置文件 `_config.yml` 中设置：\n\n```yaml\naplayer:\n  meting: true\n```\n\n接着就可以通过 **{**% meting ...%**}** 在文章中使用 MetingJS 播放器了：\n\n```\n<!-- 简单示例 (id, server, type)  -->\n{% meting \"108138\" \"netease\" \"song\" %}\n```\n{% meting \"108138\" \"netease\" \"song\" %}\n\n```\n<!-- 进阶示例 -->\n{% meting \"11100236\" \"netease\" \"playlist\" \"autoplay\" \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n```\n\n{% meting \"11100236\" \"netease\" \"playlist\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n有关  **{**% meting %**}**  的选项列表如下:\n\n| 选项            | 默认值           | 描述                                       |\n| ------------- | ------------- | ---------------------------------------- |\n| id            | **必须值**       | 歌曲 id / 播放列表 id / 相册 id / 搜索关键字          |\n| server        | **必须值**       | 音乐平台: `netease`, `tencent`, `kugou`, `xiami`, `baidu` |\n| type          | **必须值**       | `song`, `playlist`, `album`, `search`, `artist` |\n| mode          | `circulation` | 列表播放模式, `circulation`, `random`, `single`, `order` |\n| autoplay      | `true`        | 自动播放，移动端浏览器暂时不支持此功能                      |\n| mutex         | `true`        | 该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停       |\n| listmaxheight | `340px`       | 播放列表的最大长度                                |\n| preload       | `auto`        | 音乐文件预载入模式，可选项： `none`, `metadata`, `auto` |\n| theme         | `#ad7a86`     | 播放器风格色彩设置                                |\n\n关于如何设置自建的 Meting API 服务器地址，以及其他 MetingJS 配置，请参考章节[自定义配置](#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE30-%E6%96%B0%E5%8A%9F%E8%83%BD)\n\n### PJAX 兼容\n\n若在 Hexo 中使用了 PJAX，可能需要自己手动清理 APlayer 全局实例：\n\n```js\n$(document).on('pjax:start', function () {\n    if (window.aplayers) {\n        for (let i = 0; i < window.aplayers.length; i++) {\n            window.aplayers[i].destroy();\n        }\n        window.aplayers = [];\n    }\n});\n```\n\n## 自定义配置\n\n在 Hexo 配置文件  `_config.yml` 中配置：\n\n```yaml\naplayer:\n  script_dir: some/place                        # Public 目录下脚本目录路径，默认: 'assets/js'\n  style_dir: some/place                         # Public 目录下样式目录路径，默认: 'assets/css'\n  cdn: http://xxx/aplayer.min.js                # 引用 APlayer.js 外部 CDN 地址 (默认不开启)\n  style_cdn: http://xxx/aplayer.min.css         # 引用 APlayer.css 外部 CDN 地址 (默认不开启)\n  meting: true                                  # MetingJS 支持\n  meting_api: http://xxx/api.php                # 自定义 Meting API 地址\n  meting_cdn: http://xxx/Meing.min.js           # 引用 Meting.js 外部 CDN 地址 (默认不开启)\n  asset_inject: true                            # 自动插入 Aplayer.js 与 Meting.js 资源脚本, 默认开启\n  externalLink: http://xxx/aplayer.min.js       # 老版本参数，功能与参数 cdn 相同\n```\n如不需要自定义脚本，请不用在`_config.yml` 中配置这些内容。\n\n## 故障排除\n\n### 标签参数空格问题\n\n在 Hexo 标签中，用户可能无法直接在标签参数中[加入空格](https://github.com/hexojs/hexo/issues/1455)\n\n如果遇到这类问题，请直接将参数用双引号括起来使用，如下所示：\n\n```\n{% aplayer \"Caffeine\" \"Jeff Williams\" \"caffeine.mp3\" \"autoplay\" \"width:70%\" \"lrc:caffeine.txt\" %}\n```\n\n### 重复载入 Aplayer.js 资源脚本问题\n(5.10以上版本的hexo不存在此问题)\n本插件通过 `after_render:html`过滤器 , 将 `APlayer.js` 和 `Meting.js` 插入到使用了本插件标签 的 HTML 文件中:\n\n```html\n<html>\n  <head>\n    ...\n    <script src=\"assets/js/aplayer.min.js\"></script>\n    <script src=\"assets/js/meting.min.js\"></script>\n  </head>\n  ...\n</html>\n```\n\n但是 `after_render:html` 在一些情形下可能无法被正常触发:\n\n- [Does not work with hexo-renderer-jade](https://github.com/hexojs/hexo-inject/issues/1)\n- `after_render:html` 似乎在 Hexo 服务器模式默认配置中无法被调用 (`hexo server`), 遇到这种情况用户可能需要使用 `hexo-server` 的静态文件解析模式 ( `hexo server -s`) .\n\n如果在博客生成过程中，插件发现 `after_render:html` 没有被调用，那么插件将会通过 `after_post_render` 过滤器来植入脚本。但是使用 `after_post_render` 会有重复载入 `APlayer.js` 的情况（例如当一个页面中存在多篇博客时），以及一些非文章页面将无法使用本插件。\n\n如果想完全解决这个问题，用户可能需要自己在主题文件中手动加入 `Aplayer.js` 与 `Meting.js`，同时关闭插件的自动脚本插入功能：\n\n```yaml\naplayer:\n  asset_inject: false\n```\n<center>END</center>\n\n&emsp;\n&emsp;\n&emsp;\n\n手动插入详见：[Hexo音乐播放完美支持https和多平台](https://www.tiexo.cn/aplayer/)\n建议使用插件，手动插入不利于后期维护及排错······\n本文原链接：https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md  \n基于原文，有删改。","slug":"aplayer 音乐播放器","published":1,"updated":"2020-02-20T06:06:59.397Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td2y000rfkupg9gycglf","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>hexo插入音乐，以前用网易云音乐可以直接生成外链播放器，但版权保护了以后，好多音乐都不能生成外链播放了。</p>\n<p>关于外链播放器，网上找了很久，好多解决方案都是把音乐放网盘，然后自己写一个播放插件加入到页面中，这个办法是不错，但它不适用于hexo这种依赖引擎自动渲染的网站。</p>\n<p>是可以把js等放在模板中，渲染的时候调用，但不是所有的网页都要插入音乐，放在模板中无疑会拖慢渲染速度，而且为了这个小东西，自己去改模板，有点复杂了。</p>\n<p>aplayer提供了一个不错的解决办法，<a href=\"https://github.com/MoePlayer/hexo-tag-aplayer\" target=\"_blank\" rel=\"noopener\">hexo-tag-aplayer</a>插件,可以绕过版权问题</p>\n<h2 id=\"安装\"><a class=\"header-anchor\" href=\"#安装\">☆</a>安装</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure>\n<h2 id=\"依赖\"><a class=\"header-anchor\" href=\"#依赖\">☆</a>依赖</h2>\n<ul>\n<li>APlayer.js &gt; 1.8.0</li>\n<li>Meting.js &gt; 1.1.1</li>\n</ul>\n<h2 id=\"使用\"><a class=\"header-anchor\" href=\"#使用\">☆</a>使用</h2>\n<h3 id=\"直接使用办法\"><a class=\"header-anchor\" href=\"#直接使用办法\">☆</a>直接使用办法</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure>\n<p>注：此方法不支持一键调用资源，需要手动获取链接后填写，或者开启 Hexo 的 <a href=\"https://hexo.io/zh-cn/docs/asset-folders.html#%E6%96%87%E7%AB%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9\" target=\"_blank\" rel=\"noopener\">文章资源文件夹</a> 功能，将图片、音乐文件、歌词文件放入与文章对应的资源文件夹中，然后直接引用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;picture.jpg&quot; &quot;lrc:caffeine.txt&quot; %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"meingjs-支持\"><a class=\"header-anchor\" href=\"#meingjs-支持\">☆</a>MeingJS 支持</h3>\n<p><a href=\"https://github.com/metowolf/MetingJS\" target=\"_blank\" rel=\"noopener\">MetingJS</a> 是基于<a href=\"https://github.com/metowolf/Meting\" target=\"_blank\" rel=\"noopener\">Meting API</a> 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。</p>\n<p>（目前QQ音乐失效，因为QQ音乐屏蔽掉了歌曲ID）</p>\n<blockquote>\n<p>虾米音乐部分失效，无法解析 （2018.8.10）</p>\n</blockquote>\n<p>如果使用 MetingJS，请在 Hexo 配置文件 <code>_config.yml</code> 中设置：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">aplayer:</span></span><br><span class=\"line\"><span class=\"attr\">  meting:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>接着就可以通过 <strong>{</strong>% meting …%<strong>}</strong> 在文章中使用 MetingJS 播放器了：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 简单示例 (id, server, type)  --&gt;</span><br><span class=\"line\">&#123;% meting &quot;108138&quot; &quot;netease&quot; &quot;song&quot; %&#125;</span><br></pre></td></tr></table></figure>\n\n    <div id=\"aplayer-DdncZDXL\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"108138\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"></div>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 进阶示例 --&gt;</span><br><span class=\"line\">&#123;% meting &quot;11100236&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br></pre></td></tr></table></figure>\n\n    <div id=\"aplayer-OTpetXOz\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"11100236\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<p>有关  <strong>{</strong>% meting %<strong>}</strong>  的选项列表如下:</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td><strong>必须值</strong></td>\n<td>歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td>\n</tr>\n<tr>\n<td>server</td>\n<td><strong>必须值</strong></td>\n<td>音乐平台: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code></td>\n</tr>\n<tr>\n<td>type</td>\n<td><strong>必须值</strong></td>\n<td><code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td>\n</tr>\n<tr>\n<td>mode</td>\n<td><code>circulation</code></td>\n<td>列表播放模式, <code>circulation</code>, <code>random</code>, <code>single</code>, <code>order</code></td>\n</tr>\n<tr>\n<td>autoplay</td>\n<td><code>true</code></td>\n<td>自动播放，移动端浏览器暂时不支持此功能</td>\n</tr>\n<tr>\n<td>mutex</td>\n<td><code>true</code></td>\n<td>该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td>\n</tr>\n<tr>\n<td>listmaxheight</td>\n<td><code>340px</code></td>\n<td>播放列表的最大长度</td>\n</tr>\n<tr>\n<td>preload</td>\n<td><code>auto</code></td>\n<td>音乐文件预载入模式，可选项： <code>none</code>, <code>metadata</code>, <code>auto</code></td>\n</tr>\n<tr>\n<td>theme</td>\n<td><code>#ad7a86</code></td>\n<td>播放器风格色彩设置</td>\n</tr>\n</tbody>\n</table>\n<p>关于如何设置自建的 Meting API 服务器地址，以及其他 MetingJS 配置，请参考章节<a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE30-%E6%96%B0%E5%8A%9F%E8%83%BD\">自定义配置</a></p>\n<h3 id=\"pjax-兼容\"><a class=\"header-anchor\" href=\"#pjax-兼容\">☆</a>PJAX 兼容</h3>\n<p>若在 Hexo 中使用了 PJAX，可能需要自己手动清理 APlayer 全局实例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).on(<span class=\"string\">'pjax:start'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.aplayers) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">window</span>.aplayers.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">window</span>.aplayers[i].destroy();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.aplayers = [];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"自定义配置\"><a class=\"header-anchor\" href=\"#自定义配置\">☆</a>自定义配置</h2>\n<p>在 Hexo 配置文件  <code>_config.yml</code> 中配置：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">aplayer:</span></span><br><span class=\"line\"><span class=\"attr\">  script_dir:</span> <span class=\"string\">some/place</span>                        <span class=\"comment\"># Public 目录下脚本目录路径，默认: 'assets/js'</span></span><br><span class=\"line\"><span class=\"attr\">  style_dir:</span> <span class=\"string\">some/place</span>                         <span class=\"comment\"># Public 目录下样式目录路径，默认: 'assets/css'</span></span><br><span class=\"line\"><span class=\"attr\">  cdn:</span> <span class=\"attr\">http://xxx/aplayer.min.js</span>                <span class=\"comment\"># 引用 APlayer.js 外部 CDN 地址 (默认不开启)</span></span><br><span class=\"line\"><span class=\"attr\">  style_cdn:</span> <span class=\"attr\">http://xxx/aplayer.min.css</span>         <span class=\"comment\"># 引用 APlayer.css 外部 CDN 地址 (默认不开启)</span></span><br><span class=\"line\"><span class=\"attr\">  meting:</span> <span class=\"literal\">true</span>                                  <span class=\"comment\"># MetingJS 支持</span></span><br><span class=\"line\"><span class=\"attr\">  meting_api:</span> <span class=\"attr\">http://xxx/api.php</span>                <span class=\"comment\"># 自定义 Meting API 地址</span></span><br><span class=\"line\"><span class=\"attr\">  meting_cdn:</span> <span class=\"attr\">http://xxx/Meing.min.js</span>           <span class=\"comment\"># 引用 Meting.js 外部 CDN 地址 (默认不开启)</span></span><br><span class=\"line\"><span class=\"attr\">  asset_inject:</span> <span class=\"literal\">true</span>                            <span class=\"comment\"># 自动插入 Aplayer.js 与 Meting.js 资源脚本, 默认开启</span></span><br><span class=\"line\"><span class=\"attr\">  externalLink:</span> <span class=\"attr\">http://xxx/aplayer.min.js</span>       <span class=\"comment\"># 老版本参数，功能与参数 cdn 相同</span></span><br></pre></td></tr></table></figure>\n<p>如不需要自定义脚本，请不用在<code>_config.yml</code> 中配置这些内容。</p>\n<h2 id=\"故障排除\"><a class=\"header-anchor\" href=\"#故障排除\">☆</a>故障排除</h2>\n<h3 id=\"标签参数空格问题\"><a class=\"header-anchor\" href=\"#标签参数空格问题\">☆</a>标签参数空格问题</h3>\n<p>在 Hexo 标签中，用户可能无法直接在标签参数中<a href=\"https://github.com/hexojs/hexo/issues/1455\" target=\"_blank\" rel=\"noopener\">加入空格</a></p>\n<p>如果遇到这类问题，请直接将参数用双引号括起来使用，如下所示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;autoplay&quot; &quot;width:70%&quot; &quot;lrc:caffeine.txt&quot; %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"重复载入-aplayer-js-资源脚本问题\"><a class=\"header-anchor\" href=\"#重复载入-aplayer-js-资源脚本问题\">☆</a>重复载入 Aplayer.js 资源脚本问题</h3>\n<p>(5.10以上版本的hexo不存在此问题)<br>\n本插件通过 <code>after_render:html</code>过滤器 , 将 <code>APlayer.js</code> 和 <code>Meting.js</code> 插入到使用了本插件标签 的 HTML 文件中:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"assets/js/aplayer.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"assets/js/meting.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>但是 <code>after_render:html</code> 在一些情形下可能无法被正常触发:</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-inject/issues/1\" target=\"_blank\" rel=\"noopener\">Does not work with hexo-renderer-jade</a></li>\n<li><code>after_render:html</code> 似乎在 Hexo 服务器模式默认配置中无法被调用 (<code>hexo server</code>), 遇到这种情况用户可能需要使用 <code>hexo-server</code> 的静态文件解析模式 ( <code>hexo server -s</code>) .</li>\n</ul>\n<p>如果在博客生成过程中，插件发现 <code>after_render:html</code> 没有被调用，那么插件将会通过 <code>after_post_render</code> 过滤器来植入脚本。但是使用 <code>after_post_render</code> 会有重复载入 <code>APlayer.js</code> 的情况（例如当一个页面中存在多篇博客时），以及一些非文章页面将无法使用本插件。</p>\n<p>如果想完全解决这个问题，用户可能需要自己在主题文件中手动加入 <code>Aplayer.js</code> 与 <code>Meting.js</code>，同时关闭插件的自动脚本插入功能：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">aplayer:</span></span><br><span class=\"line\"><span class=\"attr\">  asset_inject:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<center>END</center>\n<p> <br>\n <br>\n </p>\n<p>手动插入详见：<a href=\"https://www.tiexo.cn/aplayer/\" target=\"_blank\" rel=\"noopener\">Hexo音乐播放完美支持https和多平台</a><br>\n建议使用插件，手动插入不利于后期维护及排错······<br>\n本文原链接：<a href=\"https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md\" target=\"_blank\" rel=\"noopener\">https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md</a><br>\n基于原文，有删改。</p>\n","site":{"data":{}},"length":3984,"excerpt":"","more":"<p>hexo插入音乐，以前用网易云音乐可以直接生成外链播放器，但版权保护了以后，好多音乐都不能生成外链播放了。</p>\n<p>关于外链播放器，网上找了很久，好多解决方案都是把音乐放网盘，然后自己写一个播放插件加入到页面中，这个办法是不错，但它不适用于hexo这种依赖引擎自动渲染的网站。</p>\n<p>是可以把js等放在模板中，渲染的时候调用，但不是所有的网页都要插入音乐，放在模板中无疑会拖慢渲染速度，而且为了这个小东西，自己去改模板，有点复杂了。</p>\n<p>aplayer提供了一个不错的解决办法，<a href=\"https://github.com/MoePlayer/hexo-tag-aplayer\" target=\"_blank\" rel=\"noopener\">hexo-tag-aplayer</a>插件,可以绕过版权问题</p>\n<h2 id=\"安装\"><a class=\"header-anchor\" href=\"#安装\">☆</a>安装</h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure>\n<h2 id=\"依赖\"><a class=\"header-anchor\" href=\"#依赖\">☆</a>依赖</h2>\n<ul>\n<li>APlayer.js &gt; 1.8.0</li>\n<li>Meting.js &gt; 1.1.1</li>\n</ul>\n<h2 id=\"使用\"><a class=\"header-anchor\" href=\"#使用\">☆</a>使用</h2>\n<h3 id=\"直接使用办法\"><a class=\"header-anchor\" href=\"#直接使用办法\">☆</a>直接使用办法</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure>\n<p>注：此方法不支持一键调用资源，需要手动获取链接后填写，或者开启 Hexo 的 <a href=\"https://hexo.io/zh-cn/docs/asset-folders.html#%E6%96%87%E7%AB%A0%E8%B5%84%E6%BA%90%E6%96%87%E4%BB%B6%E5%A4%B9\" target=\"_blank\" rel=\"noopener\">文章资源文件夹</a> 功能，将图片、音乐文件、歌词文件放入与文章对应的资源文件夹中，然后直接引用：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;picture.jpg&quot; &quot;lrc:caffeine.txt&quot; %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"meingjs-支持\"><a class=\"header-anchor\" href=\"#meingjs-支持\">☆</a>MeingJS 支持</h3>\n<p><a href=\"https://github.com/metowolf/MetingJS\" target=\"_blank\" rel=\"noopener\">MetingJS</a> 是基于<a href=\"https://github.com/metowolf/Meting\" target=\"_blank\" rel=\"noopener\">Meting API</a> 的 APlayer 衍生播放器，引入 MetingJS 后，播放器将支持对于 QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放。</p>\n<p>（目前QQ音乐失效，因为QQ音乐屏蔽掉了歌曲ID）</p>\n<blockquote>\n<p>虾米音乐部分失效，无法解析 （2018.8.10）</p>\n</blockquote>\n<p>如果使用 MetingJS，请在 Hexo 配置文件 <code>_config.yml</code> 中设置：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">aplayer:</span></span><br><span class=\"line\"><span class=\"attr\">  meting:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p>接着就可以通过 <strong>{</strong>% meting …%<strong>}</strong> 在文章中使用 MetingJS 播放器了：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 简单示例 (id, server, type)  --&gt;</span><br><span class=\"line\">&#123;% meting &quot;108138&quot; &quot;netease&quot; &quot;song&quot; %&#125;</span><br></pre></td></tr></table></figure>\n\n    <div id=\"aplayer-DdncZDXL\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"108138\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"></div>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 进阶示例 --&gt;</span><br><span class=\"line\">&#123;% meting &quot;11100236&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:340px&quot; &quot;preload:none&quot; &quot;theme:#ad7a86&quot;%&#125;</span><br></pre></td></tr></table></figure>\n\n    <div id=\"aplayer-OTpetXOz\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"11100236\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<p>有关  <strong>{</strong>% meting %<strong>}</strong>  的选项列表如下:</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>默认值</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td><strong>必须值</strong></td>\n<td>歌曲 id / 播放列表 id / 相册 id / 搜索关键字</td>\n</tr>\n<tr>\n<td>server</td>\n<td><strong>必须值</strong></td>\n<td>音乐平台: <code>netease</code>, <code>tencent</code>, <code>kugou</code>, <code>xiami</code>, <code>baidu</code></td>\n</tr>\n<tr>\n<td>type</td>\n<td><strong>必须值</strong></td>\n<td><code>song</code>, <code>playlist</code>, <code>album</code>, <code>search</code>, <code>artist</code></td>\n</tr>\n<tr>\n<td>mode</td>\n<td><code>circulation</code></td>\n<td>列表播放模式, <code>circulation</code>, <code>random</code>, <code>single</code>, <code>order</code></td>\n</tr>\n<tr>\n<td>autoplay</td>\n<td><code>true</code></td>\n<td>自动播放，移动端浏览器暂时不支持此功能</td>\n</tr>\n<tr>\n<td>mutex</td>\n<td><code>true</code></td>\n<td>该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停</td>\n</tr>\n<tr>\n<td>listmaxheight</td>\n<td><code>340px</code></td>\n<td>播放列表的最大长度</td>\n</tr>\n<tr>\n<td>preload</td>\n<td><code>auto</code></td>\n<td>音乐文件预载入模式，可选项： <code>none</code>, <code>metadata</code>, <code>auto</code></td>\n</tr>\n<tr>\n<td>theme</td>\n<td><code>#ad7a86</code></td>\n<td>播放器风格色彩设置</td>\n</tr>\n</tbody>\n</table>\n<p>关于如何设置自建的 Meting API 服务器地址，以及其他 MetingJS 配置，请参考章节<a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE30-%E6%96%B0%E5%8A%9F%E8%83%BD\">自定义配置</a></p>\n<h3 id=\"pjax-兼容\"><a class=\"header-anchor\" href=\"#pjax-兼容\">☆</a>PJAX 兼容</h3>\n<p>若在 Hexo 中使用了 PJAX，可能需要自己手动清理 APlayer 全局实例：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"built_in\">document</span>).on(<span class=\"string\">'pjax:start'</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">window</span>.aplayers) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">window</span>.aplayers.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">window</span>.aplayers[i].destroy();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">window</span>.aplayers = [];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"自定义配置\"><a class=\"header-anchor\" href=\"#自定义配置\">☆</a>自定义配置</h2>\n<p>在 Hexo 配置文件  <code>_config.yml</code> 中配置：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">aplayer:</span></span><br><span class=\"line\"><span class=\"attr\">  script_dir:</span> <span class=\"string\">some/place</span>                        <span class=\"comment\"># Public 目录下脚本目录路径，默认: 'assets/js'</span></span><br><span class=\"line\"><span class=\"attr\">  style_dir:</span> <span class=\"string\">some/place</span>                         <span class=\"comment\"># Public 目录下样式目录路径，默认: 'assets/css'</span></span><br><span class=\"line\"><span class=\"attr\">  cdn:</span> <span class=\"attr\">http://xxx/aplayer.min.js</span>                <span class=\"comment\"># 引用 APlayer.js 外部 CDN 地址 (默认不开启)</span></span><br><span class=\"line\"><span class=\"attr\">  style_cdn:</span> <span class=\"attr\">http://xxx/aplayer.min.css</span>         <span class=\"comment\"># 引用 APlayer.css 外部 CDN 地址 (默认不开启)</span></span><br><span class=\"line\"><span class=\"attr\">  meting:</span> <span class=\"literal\">true</span>                                  <span class=\"comment\"># MetingJS 支持</span></span><br><span class=\"line\"><span class=\"attr\">  meting_api:</span> <span class=\"attr\">http://xxx/api.php</span>                <span class=\"comment\"># 自定义 Meting API 地址</span></span><br><span class=\"line\"><span class=\"attr\">  meting_cdn:</span> <span class=\"attr\">http://xxx/Meing.min.js</span>           <span class=\"comment\"># 引用 Meting.js 外部 CDN 地址 (默认不开启)</span></span><br><span class=\"line\"><span class=\"attr\">  asset_inject:</span> <span class=\"literal\">true</span>                            <span class=\"comment\"># 自动插入 Aplayer.js 与 Meting.js 资源脚本, 默认开启</span></span><br><span class=\"line\"><span class=\"attr\">  externalLink:</span> <span class=\"attr\">http://xxx/aplayer.min.js</span>       <span class=\"comment\"># 老版本参数，功能与参数 cdn 相同</span></span><br></pre></td></tr></table></figure>\n<p>如不需要自定义脚本，请不用在<code>_config.yml</code> 中配置这些内容。</p>\n<h2 id=\"故障排除\"><a class=\"header-anchor\" href=\"#故障排除\">☆</a>故障排除</h2>\n<h3 id=\"标签参数空格问题\"><a class=\"header-anchor\" href=\"#标签参数空格问题\">☆</a>标签参数空格问题</h3>\n<p>在 Hexo 标签中，用户可能无法直接在标签参数中<a href=\"https://github.com/hexojs/hexo/issues/1455\" target=\"_blank\" rel=\"noopener\">加入空格</a></p>\n<p>如果遇到这类问题，请直接将参数用双引号括起来使用，如下所示：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% aplayer &quot;Caffeine&quot; &quot;Jeff Williams&quot; &quot;caffeine.mp3&quot; &quot;autoplay&quot; &quot;width:70%&quot; &quot;lrc:caffeine.txt&quot; %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"重复载入-aplayer-js-资源脚本问题\"><a class=\"header-anchor\" href=\"#重复载入-aplayer-js-资源脚本问题\">☆</a>重复载入 Aplayer.js 资源脚本问题</h3>\n<p>(5.10以上版本的hexo不存在此问题)<br>\n本插件通过 <code>after_render:html</code>过滤器 , 将 <code>APlayer.js</code> 和 <code>Meting.js</code> 插入到使用了本插件标签 的 HTML 文件中:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    ...</span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"assets/js/aplayer.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"assets/js/meting.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">  ...</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>但是 <code>after_render:html</code> 在一些情形下可能无法被正常触发:</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-inject/issues/1\" target=\"_blank\" rel=\"noopener\">Does not work with hexo-renderer-jade</a></li>\n<li><code>after_render:html</code> 似乎在 Hexo 服务器模式默认配置中无法被调用 (<code>hexo server</code>), 遇到这种情况用户可能需要使用 <code>hexo-server</code> 的静态文件解析模式 ( <code>hexo server -s</code>) .</li>\n</ul>\n<p>如果在博客生成过程中，插件发现 <code>after_render:html</code> 没有被调用，那么插件将会通过 <code>after_post_render</code> 过滤器来植入脚本。但是使用 <code>after_post_render</code> 会有重复载入 <code>APlayer.js</code> 的情况（例如当一个页面中存在多篇博客时），以及一些非文章页面将无法使用本插件。</p>\n<p>如果想完全解决这个问题，用户可能需要自己在主题文件中手动加入 <code>Aplayer.js</code> 与 <code>Meting.js</code>，同时关闭插件的自动脚本插入功能：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">aplayer:</span></span><br><span class=\"line\"><span class=\"attr\">  asset_inject:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<center>END</center>\n<p> <br>\n <br>\n </p>\n<p>手动插入详见：<a href=\"https://www.tiexo.cn/aplayer/\" target=\"_blank\" rel=\"noopener\">Hexo音乐播放完美支持https和多平台</a><br>\n建议使用插件，手动插入不利于后期维护及排错······<br>\n本文原链接：<a href=\"https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md\" target=\"_blank\" rel=\"noopener\">https://github.com/MoePlayer/hexo-tag-aplayer/blob/master/docs/README-zh_cn.md</a><br>\n基于原文，有删改。</p>\n"},{"title":"Hello World","abbrlink":"4a17b156","date":"2018-01-02T12:47:08.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ntags:\n  - Testing\nabbrlink: 4a17b156\ndate: 2018-01-02 20:47:08\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"updated":"2020-02-20T06:06:59.399Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td30000sfkupkyq5ok5z","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"header-anchor\" href=\"#quick-start\">☆</a>Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"header-anchor\" href=\"#create-a-new-post\">☆</a>Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"header-anchor\" href=\"#run-server\">☆</a>Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"header-anchor\" href=\"#generate-static-files\">☆</a>Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"header-anchor\" href=\"#deploy-to-remote-sites\">☆</a>Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"length":426,"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"header-anchor\" href=\"#quick-start\">☆</a>Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"header-anchor\" href=\"#create-a-new-post\">☆</a>Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"header-anchor\" href=\"#run-server\">☆</a>Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"header-anchor\" href=\"#generate-static-files\">☆</a>Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"header-anchor\" href=\"#deploy-to-remote-sites\">☆</a>Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"docker及docker-compose的安装配置加速服务","copyright":true,"abbrlink":"bc197637","notshow":false,"description":"使用阿里云为docker加速","image":["https://data.singlelovely.cn/images/20200204225029.jpg!CoverPicture"],"date":"2020-02-04T14:47:00.000Z","password":null,"photos":[],"sticky":null,"_content":"\n{% cq %}本文系统全部以<span id = \"font-green\">Ubuntu18.04 Service</span>为例{% endcq %}\n\n### docker安装\n\n最近在服务器上部署应用，使用docker比较多，毕竟管理起来方便，腾讯云官方镜像已经默认换了腾讯的源，安装起来还可以，华为云的还是默认的源，下载速度非常不稳定。\n\n最先试的是把腾讯云的源直接拷贝到华为的机器这边，然后发现更不更新不了，直接就断开链接了，推测是腾讯那边作了鉴权啥的，然后换网上搜到的源，发现好多文章的源列表并不是完全的(或者更新不及时)，只是一部分，安装`docker`的时候会提示找不到包。\n\n这里附上清华的[开源镜像站](https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/)\n\n安装教程建议使用[官方文档](https://docs.docker.com/install/linux/docker-ce/ubuntu/)，以免出问题。\n\n### docker-compose安装\n\n首先放上[官方文档](https://docs.docker.com/compose/install/)\n\n因为某些原因，国内速度比较慢，运气不好的时候还会直接失败，以下为镜像地址：\n\n地址来自[DaoCloud](https://get.daocloud.io/#install-compose)\n\n```\ncurl -L https://get.daocloud.io/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n```\n\n### 配置加速服务\n\n这里选用阿里云的容器镜像加速器：[点击进入](https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors)\n\n按照操作文档配置就可以了\n\n下面为Ubuntu的配置方式\n\n1. 安装／升级Docker客户端\n推荐安装1.10.0以上版本的Docker客户端，参考文档 docker-ce\n\n2. 配置镜像加速器\n针对Docker客户端版本大于 1.10.0 的用户\n\n您可以通过修改`daemon`配置文件<span id = \"inline-blue\">/etc/docker/daemon.json</span>来使用加速器\n\n```\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://xxxxx.mirror.aliyuncs.com\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n<div class=\"note warning\"><p>因每个人的加速地址不同，所以上文中用xxxxx代替。</p></div>","source":"_posts/docker及docker-compose的安装配置加速服务.md","raw":"---\ntitle: docker及docker-compose的安装配置加速服务\ncopyright: true\nabbrlink: bc197637\nnotshow: false\ntags:\n  - docker\ncategories: docker\ndescription: 使用阿里云为docker加速\nimage:\n  - 'https://data.singlelovely.cn/images/20200204225029.jpg!CoverPicture'\ndate: 2020-02-04 22:47:00\npassword:\nphotos:\nsticky:\n---\n\n{% cq %}本文系统全部以<span id = \"font-green\">Ubuntu18.04 Service</span>为例{% endcq %}\n\n### docker安装\n\n最近在服务器上部署应用，使用docker比较多，毕竟管理起来方便，腾讯云官方镜像已经默认换了腾讯的源，安装起来还可以，华为云的还是默认的源，下载速度非常不稳定。\n\n最先试的是把腾讯云的源直接拷贝到华为的机器这边，然后发现更不更新不了，直接就断开链接了，推测是腾讯那边作了鉴权啥的，然后换网上搜到的源，发现好多文章的源列表并不是完全的(或者更新不及时)，只是一部分，安装`docker`的时候会提示找不到包。\n\n这里附上清华的[开源镜像站](https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/)\n\n安装教程建议使用[官方文档](https://docs.docker.com/install/linux/docker-ce/ubuntu/)，以免出问题。\n\n### docker-compose安装\n\n首先放上[官方文档](https://docs.docker.com/compose/install/)\n\n因为某些原因，国内速度比较慢，运气不好的时候还会直接失败，以下为镜像地址：\n\n地址来自[DaoCloud](https://get.daocloud.io/#install-compose)\n\n```\ncurl -L https://get.daocloud.io/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n```\n\n### 配置加速服务\n\n这里选用阿里云的容器镜像加速器：[点击进入](https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors)\n\n按照操作文档配置就可以了\n\n下面为Ubuntu的配置方式\n\n1. 安装／升级Docker客户端\n推荐安装1.10.0以上版本的Docker客户端，参考文档 docker-ce\n\n2. 配置镜像加速器\n针对Docker客户端版本大于 1.10.0 的用户\n\n您可以通过修改`daemon`配置文件<span id = \"inline-blue\">/etc/docker/daemon.json</span>来使用加速器\n\n```\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json <<-'EOF'\n{\n  \"registry-mirrors\": [\"https://xxxxx.mirror.aliyuncs.com\"]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n```\n\n<div class=\"note warning\"><p>因每个人的加速地址不同，所以上文中用xxxxx代替。</p></div>","slug":"docker及docker-compose的安装配置加速服务","published":1,"updated":"2020-02-20T06:06:59.398Z","comments":1,"layout":"post","link":"","_id":"ckec2td32000tfkupogws8svy","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><blockquote class=\"blockquote-center\"><p>本文系统全部以<span id=\"font-green\">Ubuntu18.04 Service</span>为例</p>\n</blockquote>\n<h3 id=\"docker安装\"><a class=\"header-anchor\" href=\"#docker安装\">☆</a>docker安装</h3>\n<p>最近在服务器上部署应用，使用docker比较多，毕竟管理起来方便，腾讯云官方镜像已经默认换了腾讯的源，安装起来还可以，华为云的还是默认的源，下载速度非常不稳定。</p>\n<p>最先试的是把腾讯云的源直接拷贝到华为的机器这边，然后发现更不更新不了，直接就断开链接了，推测是腾讯那边作了鉴权啥的，然后换网上搜到的源，发现好多文章的源列表并不是完全的(或者更新不及时)，只是一部分，安装<code>docker</code>的时候会提示找不到包。</p>\n<p>这里附上清华的<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\" target=\"_blank\" rel=\"noopener\">开源镜像站</a></p>\n<p>安装教程建议使用<a href=\"https://docs.docker.com/install/linux/docker-ce/ubuntu/\" target=\"_blank\" rel=\"noopener\">官方文档</a>，以免出问题。</p>\n<h3 id=\"docker-compose安装\"><a class=\"header-anchor\" href=\"#docker-compose安装\">☆</a>docker-compose安装</h3>\n<p>首先放上<a href=\"https://docs.docker.com/compose/install/\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p>因为某些原因，国内速度比较慢，运气不好的时候还会直接失败，以下为镜像地址：</p>\n<p>地址来自<a href=\"https://get.daocloud.io/#install-compose\" target=\"_blank\" rel=\"noopener\">DaoCloud</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br><span class=\"line\">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置加速服务\"><a class=\"header-anchor\" href=\"#配置加速服务\">☆</a>配置加速服务</h3>\n<p>这里选用阿里云的容器镜像加速器：<a href=\"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors\" target=\"_blank\" rel=\"noopener\">点击进入</a></p>\n<p>按照操作文档配置就可以了</p>\n<p>下面为Ubuntu的配置方式</p>\n<ol>\n<li>\n<p>安装／升级Docker客户端<br>\n推荐安装1.10.0以上版本的Docker客户端，参考文档 docker-ce</p>\n</li>\n<li>\n<p>配置镜像加速器<br>\n针对Docker客户端版本大于 1.10.0 的用户</p>\n</li>\n</ol>\n<p>您可以通过修改<code>daemon</code>配置文件<span id=\"inline-blue\">/etc/docker/daemon.json</span>来使用加速器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-&apos;EOF&apos;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [&quot;https://xxxxx.mirror.aliyuncs.com&quot;]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n<div class=\"note warning\"><p>因每个人的加速地址不同，所以上文中用xxxxx代替。</p></div>","site":{"data":{}},"length":976,"excerpt":"","more":"<blockquote class=\"blockquote-center\"><p>本文系统全部以<span id=\"font-green\">Ubuntu18.04 Service</span>为例</p>\n</blockquote>\n<h3 id=\"docker安装\"><a class=\"header-anchor\" href=\"#docker安装\">☆</a>docker安装</h3>\n<p>最近在服务器上部署应用，使用docker比较多，毕竟管理起来方便，腾讯云官方镜像已经默认换了腾讯的源，安装起来还可以，华为云的还是默认的源，下载速度非常不稳定。</p>\n<p>最先试的是把腾讯云的源直接拷贝到华为的机器这边，然后发现更不更新不了，直接就断开链接了，推测是腾讯那边作了鉴权啥的，然后换网上搜到的源，发现好多文章的源列表并不是完全的(或者更新不及时)，只是一部分，安装<code>docker</code>的时候会提示找不到包。</p>\n<p>这里附上清华的<a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\" target=\"_blank\" rel=\"noopener\">开源镜像站</a></p>\n<p>安装教程建议使用<a href=\"https://docs.docker.com/install/linux/docker-ce/ubuntu/\" target=\"_blank\" rel=\"noopener\">官方文档</a>，以免出问题。</p>\n<h3 id=\"docker-compose安装\"><a class=\"header-anchor\" href=\"#docker-compose安装\">☆</a>docker-compose安装</h3>\n<p>首先放上<a href=\"https://docs.docker.com/compose/install/\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p>因为某些原因，国内速度比较慢，运气不好的时候还会直接失败，以下为镜像地址：</p>\n<p>地址来自<a href=\"https://get.daocloud.io/#install-compose\" target=\"_blank\" rel=\"noopener\">DaoCloud</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br><span class=\"line\">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置加速服务\"><a class=\"header-anchor\" href=\"#配置加速服务\">☆</a>配置加速服务</h3>\n<p>这里选用阿里云的容器镜像加速器：<a href=\"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors\" target=\"_blank\" rel=\"noopener\">点击进入</a></p>\n<p>按照操作文档配置就可以了</p>\n<p>下面为Ubuntu的配置方式</p>\n<ol>\n<li>\n<p>安装／升级Docker客户端<br>\n推荐安装1.10.0以上版本的Docker客户端，参考文档 docker-ce</p>\n</li>\n<li>\n<p>配置镜像加速器<br>\n针对Docker客户端版本大于 1.10.0 的用户</p>\n</li>\n</ol>\n<p>您可以通过修改<code>daemon</code>配置文件<span id=\"inline-blue\">/etc/docker/daemon.json</span>来使用加速器</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mkdir -p /etc/docker</span><br><span class=\"line\">sudo tee /etc/docker/daemon.json &lt;&lt;-&apos;EOF&apos;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;registry-mirrors&quot;: [&quot;https://xxxxx.mirror.aliyuncs.com&quot;]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">EOF</span><br><span class=\"line\">sudo systemctl daemon-reload</span><br><span class=\"line\">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>\n<div class=\"note warning\"><p>因每个人的加速地址不同，所以上文中用xxxxx代替。</p></div>"},{"title":"jupyter notebook美化与配置自动补全","copyright":false,"abbrlink":"256ed997","notshow":false,"description":"是时候需要给生活点颜色看看了","date":"2019-08-17T16:30:00.000Z","password":null,"image":["https://data.singlelovely.cn/CoverPicture/256ed997.webp!CoverPicture"],"photos":[],"sticky":null,"_content":"\n## 具体配置请参看以下文章\n\nhttps://blog.csdn.net/az9996/article/details/88621028\n\n## 记录下我自己的配置\n\n```js\njt -t oceans16 -lineh 140  -tf ptmono -f firacode -ofs 12 -fs 13 -nfs 12 -T -N\n```\n\n## 上述文章中的错误更改\n\n按原文中的方法安装 `jupyter_contrib_nbextensions`和`jupyter_nbextensions_configurator` 时，会报以下错误\n\n```js\n(jupyter) λ conda install jupyter_contrib_nbextensions\nCollecting package metadata (current_repodata.json): done\nSolving environment: failed with current_repodata.json, will retry with next repodata source.\nCollecting package metadata (repodata.json): done\nSolving environment: failed\n\nPackagesNotFoundError: The following packages are not available from current channels:\n\n  - jupyter_contrib_nbextensions\n\nCurrent channels:\n\n  - https://repo.anaconda.com/pkgs/main/win-64\n  - https://repo.anaconda.com/pkgs/main/noarch\n  - https://repo.anaconda.com/pkgs/r/win-64\n  - https://repo.anaconda.com/pkgs/r/noarch\n  - https://repo.anaconda.com/pkgs/msys2/win-64\n  - https://repo.anaconda.com/pkgs/msys2/noarch\n\nTo search for alternate channels that may provide the conda package you're\nlooking for, navigate to\n\n    https://anaconda.org\n\nand use the search bar at the top of the page.\n```\n\n然后按照提示去官网查询，找到响应的包，会看到 `Info: This package contains files in non-standard labels.` 就是不在标准标签中的意思。\n\n![](https://data.singlelovely.cn/images/20190818002421.png)\n\n然后需要用以下命令安装\n\n```js\nconda install -c conda-forge jupyter_contrib_nbextensions\nconda install -c conda-forge jupyter_nbextensions_configurator\n```\n\n安装时候注意网络环境，不正确的网络异常的慢\n\n![](https://data.singlelovely.cn/images/20190818002516.png)","source":"_posts/jupyter notebook美化与配置自动补全.md","raw":"---\ntitle: jupyter notebook美化与配置自动补全\ncopyright: false\nabbrlink: 256ed997\nnotshow: false\ntags:\n  - python\ncategories: python\ndescription: 是时候需要给生活点颜色看看了\ndate: 2019-08-18 00:30:00\npassword:\nimage:\n- \"https://data.singlelovely.cn/CoverPicture/256ed997.webp!CoverPicture\"\nphotos:\nsticky:\n---\n\n## 具体配置请参看以下文章\n\nhttps://blog.csdn.net/az9996/article/details/88621028\n\n## 记录下我自己的配置\n\n```js\njt -t oceans16 -lineh 140  -tf ptmono -f firacode -ofs 12 -fs 13 -nfs 12 -T -N\n```\n\n## 上述文章中的错误更改\n\n按原文中的方法安装 `jupyter_contrib_nbextensions`和`jupyter_nbextensions_configurator` 时，会报以下错误\n\n```js\n(jupyter) λ conda install jupyter_contrib_nbextensions\nCollecting package metadata (current_repodata.json): done\nSolving environment: failed with current_repodata.json, will retry with next repodata source.\nCollecting package metadata (repodata.json): done\nSolving environment: failed\n\nPackagesNotFoundError: The following packages are not available from current channels:\n\n  - jupyter_contrib_nbextensions\n\nCurrent channels:\n\n  - https://repo.anaconda.com/pkgs/main/win-64\n  - https://repo.anaconda.com/pkgs/main/noarch\n  - https://repo.anaconda.com/pkgs/r/win-64\n  - https://repo.anaconda.com/pkgs/r/noarch\n  - https://repo.anaconda.com/pkgs/msys2/win-64\n  - https://repo.anaconda.com/pkgs/msys2/noarch\n\nTo search for alternate channels that may provide the conda package you're\nlooking for, navigate to\n\n    https://anaconda.org\n\nand use the search bar at the top of the page.\n```\n\n然后按照提示去官网查询，找到响应的包，会看到 `Info: This package contains files in non-standard labels.` 就是不在标准标签中的意思。\n\n![](https://data.singlelovely.cn/images/20190818002421.png)\n\n然后需要用以下命令安装\n\n```js\nconda install -c conda-forge jupyter_contrib_nbextensions\nconda install -c conda-forge jupyter_nbextensions_configurator\n```\n\n安装时候注意网络环境，不正确的网络异常的慢\n\n![](https://data.singlelovely.cn/images/20190818002516.png)","slug":"jupyter notebook美化与配置自动补全","published":1,"updated":"2020-02-20T06:06:59.406Z","comments":1,"layout":"post","link":"","_id":"ckec2td34000ufkupknnmttoo","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"具体配置请参看以下文章\"><a class=\"header-anchor\" href=\"#具体配置请参看以下文章\">☆</a>具体配置请参看以下文章</h2>\n<p><a href=\"https://blog.csdn.net/az9996/article/details/88621028\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/az9996/article/details/88621028</a></p>\n<h2 id=\"记录下我自己的配置\"><a class=\"header-anchor\" href=\"#记录下我自己的配置\">☆</a>记录下我自己的配置</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jt -t oceans16 -lineh <span class=\"number\">140</span>  -tf ptmono -f firacode -ofs <span class=\"number\">12</span> -fs <span class=\"number\">13</span> -nfs <span class=\"number\">12</span> -T -N</span><br></pre></td></tr></table></figure>\n<h2 id=\"上述文章中的错误更改\"><a class=\"header-anchor\" href=\"#上述文章中的错误更改\">☆</a>上述文章中的错误更改</h2>\n<p>按原文中的方法安装 <code>jupyter_contrib_nbextensions</code>和<code>jupyter_nbextensions_configurator</code> 时，会报以下错误</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(jupyter) λ conda install jupyter_contrib_nbextensions</span><br><span class=\"line\">Collecting package metadata (current_repodata.json): done</span><br><span class=\"line\">Solving environment: failed <span class=\"keyword\">with</span> current_repodata.json, will retry <span class=\"keyword\">with</span> next repodata source.</span><br><span class=\"line\">Collecting package metadata (repodata.json): done</span><br><span class=\"line\">Solving environment: failed</span><br><span class=\"line\"></span><br><span class=\"line\">PackagesNotFoundError: The following packages are not available <span class=\"keyword\">from</span> current channels:</span><br><span class=\"line\"></span><br><span class=\"line\">  - jupyter_contrib_nbextensions</span><br><span class=\"line\"></span><br><span class=\"line\">Current channels:</span><br><span class=\"line\"></span><br><span class=\"line\">  - https:<span class=\"comment\">//repo.anaconda.com/pkgs/main/win-64</span></span><br><span class=\"line\">  - https:<span class=\"comment\">//repo.anaconda.com/pkgs/main/noarch</span></span><br><span class=\"line\">  - https:<span class=\"comment\">//repo.anaconda.com/pkgs/r/win-64</span></span><br><span class=\"line\">  - https:<span class=\"comment\">//repo.anaconda.com/pkgs/r/noarch</span></span><br><span class=\"line\">  - https:<span class=\"comment\">//repo.anaconda.com/pkgs/msys2/win-64</span></span><br><span class=\"line\">  - https:<span class=\"comment\">//repo.anaconda.com/pkgs/msys2/noarch</span></span><br><span class=\"line\"></span><br><span class=\"line\">To search <span class=\"keyword\">for</span> alternate channels that may provide the conda package you<span class=\"string\">'re</span></span><br><span class=\"line\"><span class=\"string\">looking for, navigate to</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    https://anaconda.org</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">and use the search bar at the top of the page.</span></span><br></pre></td></tr></table></figure>\n<p>然后按照提示去官网查询，找到响应的包，会看到 <code>Info: This package contains files in non-standard labels.</code> 就是不在标准标签中的意思。</p>\n<p><img src=\"https://data.singlelovely.cn/images/20190818002421.png\" alt></p>\n<p>然后需要用以下命令安装</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install -c conda-forge jupyter_contrib_nbextensions</span><br><span class=\"line\">conda install -c conda-forge jupyter_nbextensions_configurator</span><br></pre></td></tr></table></figure>\n<p>安装时候注意网络环境，不正确的网络异常的慢</p>\n<p><img src=\"https://data.singlelovely.cn/images/20190818002516.png\" alt></p>\n","site":{"data":{}},"length":1389,"excerpt":"","more":"<h2 id=\"具体配置请参看以下文章\"><a class=\"header-anchor\" href=\"#具体配置请参看以下文章\">☆</a>具体配置请参看以下文章</h2>\n<p><a href=\"https://blog.csdn.net/az9996/article/details/88621028\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/az9996/article/details/88621028</a></p>\n<h2 id=\"记录下我自己的配置\"><a class=\"header-anchor\" href=\"#记录下我自己的配置\">☆</a>记录下我自己的配置</h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jt -t oceans16 -lineh <span class=\"number\">140</span>  -tf ptmono -f firacode -ofs <span class=\"number\">12</span> -fs <span class=\"number\">13</span> -nfs <span class=\"number\">12</span> -T -N</span><br></pre></td></tr></table></figure>\n<h2 id=\"上述文章中的错误更改\"><a class=\"header-anchor\" href=\"#上述文章中的错误更改\">☆</a>上述文章中的错误更改</h2>\n<p>按原文中的方法安装 <code>jupyter_contrib_nbextensions</code>和<code>jupyter_nbextensions_configurator</code> 时，会报以下错误</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(jupyter) λ conda install jupyter_contrib_nbextensions</span><br><span class=\"line\">Collecting package metadata (current_repodata.json): done</span><br><span class=\"line\">Solving environment: failed <span class=\"keyword\">with</span> current_repodata.json, will retry <span class=\"keyword\">with</span> next repodata source.</span><br><span class=\"line\">Collecting package metadata (repodata.json): done</span><br><span class=\"line\">Solving environment: failed</span><br><span class=\"line\"></span><br><span class=\"line\">PackagesNotFoundError: The following packages are not available <span class=\"keyword\">from</span> current channels:</span><br><span class=\"line\"></span><br><span class=\"line\">  - jupyter_contrib_nbextensions</span><br><span class=\"line\"></span><br><span class=\"line\">Current channels:</span><br><span class=\"line\"></span><br><span class=\"line\">  - https:<span class=\"comment\">//repo.anaconda.com/pkgs/main/win-64</span></span><br><span class=\"line\">  - https:<span class=\"comment\">//repo.anaconda.com/pkgs/main/noarch</span></span><br><span class=\"line\">  - https:<span class=\"comment\">//repo.anaconda.com/pkgs/r/win-64</span></span><br><span class=\"line\">  - https:<span class=\"comment\">//repo.anaconda.com/pkgs/r/noarch</span></span><br><span class=\"line\">  - https:<span class=\"comment\">//repo.anaconda.com/pkgs/msys2/win-64</span></span><br><span class=\"line\">  - https:<span class=\"comment\">//repo.anaconda.com/pkgs/msys2/noarch</span></span><br><span class=\"line\"></span><br><span class=\"line\">To search <span class=\"keyword\">for</span> alternate channels that may provide the conda package you<span class=\"string\">'re</span></span><br><span class=\"line\"><span class=\"string\">looking for, navigate to</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    https://anaconda.org</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">and use the search bar at the top of the page.</span></span><br></pre></td></tr></table></figure>\n<p>然后按照提示去官网查询，找到响应的包，会看到 <code>Info: This package contains files in non-standard labels.</code> 就是不在标准标签中的意思。</p>\n<p><img src=\"https://data.singlelovely.cn/images/20190818002421.png\" alt></p>\n<p>然后需要用以下命令安装</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda install -c conda-forge jupyter_contrib_nbextensions</span><br><span class=\"line\">conda install -c conda-forge jupyter_nbextensions_configurator</span><br></pre></td></tr></table></figure>\n<p>安装时候注意网络环境，不正确的网络异常的慢</p>\n<p><img src=\"https://data.singlelovely.cn/images/20190818002516.png\" alt></p>\n"},{"title":"hexo页面布局修改","copyright":true,"abbrlink":"8b3b02a7","date":"2018-04-03T12:00:59.000Z","password":null,"_content":"\n&emsp;&emsp;主要是为了解决about页面的文章目录自动弹出的问题\n\n这个问题困扰了很久，今天下雨天，正好静心看看文档，解决一下这个问题\n\n`注：本文以next主题为例`\n\nnext主题采用的是Swig模板，Swig模板可以参考 [Swig中文文档](http://www.iqianduan.net/blog/how_to_use_swig)\n\n### 主题介绍\n\n#### 更换主题\n创建 Hexo 主题非常容易，只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改  _config.yml 内的 theme 设定，即可切换主题。一个主题可能会有以下的结构：\n\n     ├── _config.yml      //这个是主题配置项文件\n     ├── languages        //这个是语言文件\n     ├── layout           //这个是模板文件\n     ├── scripts           \n     └── source     \n\t \n1.Layout\n布局文件夹。用于存放主题的模板文件，决定了网站内容的呈现方式，Hexo 内建 Swig 模板引擎，您可以另外安装插件来获得 EJS、Haml 或 Jade 支持，Hexo 根据模板文件的扩展名来决定所使用的模板引擎。\n\n     layout.ejs   - 使用 EJS\n\t layout.swig  - 使用 Swig\n\n2.source\n资源文件夹，除了模板以外的 Asset，例如 CSS、JavaScript 文件等，都应该放在这个文件夹中。文件或文件夹开头名称为 _（下划线线）或隐藏的文件会被忽略。\n如果文件可以被渲染的话，会经过解析然后储存到 public 文件夹，否则会直接拷贝到 public 文件夹。\n\n#### 模板\n模板决定了网站内容的呈现方式，每个主题至少都应包含一个 index 模板，以下是各页面相对应的模板名称：\n\n| 模板  |  用途    |   回调  |\n| -- | ---- | ---- |\n| index | 首页 |     |\n|    post   |   文章   |  index   |\n|    page   |   分页   |  index   |\n|   archive    |  归档    |  index   |\n|   category  |   分类归档   |  archive   |\n|    tag   |   标签归档   |  archive   |\n\n#### 局部模板\n局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：\n```\n{% codeblock partial/header.ejs %}\n<h1 id=\"logo\"><%= config.title %></h1>\n{% endcodeblock %}\n\n{% codeblock index.ejs %}\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n{% endcodeblock %}\n\n```\n生成：\n~~~\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n~~~\n\n\n#### 修改\n\n知道了模板对应的具体内容，就可以着手进行修改了，next主题页面模板大多使用局部模板进行组合，只需要增加或者减少组件的引用，就可以实现页面布局的修改。\n\n\n### 参考资料\n\nHexo官方网站 : https://hexo.io/\n\n>  \n> **暂时就这么多了，具体的没深入看**\n>    ","source":"_posts/hexo页面布局修改.md","raw":"---\ntitle: hexo页面布局修改\ntags:\n  - hexo\ncategories: hexo\ncopyright: true\nabbrlink: 8b3b02a7\ndate: 2018-04-03 20:00:59\npassword:\n---\n\n&emsp;&emsp;主要是为了解决about页面的文章目录自动弹出的问题\n\n这个问题困扰了很久，今天下雨天，正好静心看看文档，解决一下这个问题\n\n`注：本文以next主题为例`\n\nnext主题采用的是Swig模板，Swig模板可以参考 [Swig中文文档](http://www.iqianduan.net/blog/how_to_use_swig)\n\n### 主题介绍\n\n#### 更换主题\n创建 Hexo 主题非常容易，只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改  _config.yml 内的 theme 设定，即可切换主题。一个主题可能会有以下的结构：\n\n     ├── _config.yml      //这个是主题配置项文件\n     ├── languages        //这个是语言文件\n     ├── layout           //这个是模板文件\n     ├── scripts           \n     └── source     \n\t \n1.Layout\n布局文件夹。用于存放主题的模板文件，决定了网站内容的呈现方式，Hexo 内建 Swig 模板引擎，您可以另外安装插件来获得 EJS、Haml 或 Jade 支持，Hexo 根据模板文件的扩展名来决定所使用的模板引擎。\n\n     layout.ejs   - 使用 EJS\n\t layout.swig  - 使用 Swig\n\n2.source\n资源文件夹，除了模板以外的 Asset，例如 CSS、JavaScript 文件等，都应该放在这个文件夹中。文件或文件夹开头名称为 _（下划线线）或隐藏的文件会被忽略。\n如果文件可以被渲染的话，会经过解析然后储存到 public 文件夹，否则会直接拷贝到 public 文件夹。\n\n#### 模板\n模板决定了网站内容的呈现方式，每个主题至少都应包含一个 index 模板，以下是各页面相对应的模板名称：\n\n| 模板  |  用途    |   回调  |\n| -- | ---- | ---- |\n| index | 首页 |     |\n|    post   |   文章   |  index   |\n|    page   |   分页   |  index   |\n|   archive    |  归档    |  index   |\n|   category  |   分类归档   |  archive   |\n|    tag   |   标签归档   |  archive   |\n\n#### 局部模板\n局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：\n```\n{% codeblock partial/header.ejs %}\n<h1 id=\"logo\"><%= config.title %></h1>\n{% endcodeblock %}\n\n{% codeblock index.ejs %}\n<%- partial('partial/header') %>\n<div id=\"content\">Home page</div>\n{% endcodeblock %}\n\n```\n生成：\n~~~\n<h1 id=\"logo\">My Site</h1>\n<div id=\"content\">Home page</div>\n~~~\n\n\n#### 修改\n\n知道了模板对应的具体内容，就可以着手进行修改了，next主题页面模板大多使用局部模板进行组合，只需要增加或者减少组件的引用，就可以实现页面布局的修改。\n\n\n### 参考资料\n\nHexo官方网站 : https://hexo.io/\n\n>  \n> **暂时就这么多了，具体的没深入看**\n>    ","slug":"hexo页面布局修改","published":1,"updated":"2020-02-20T06:06:59.405Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td36000vfkup4quxiwmq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>  主要是为了解决about页面的文章目录自动弹出的问题</p>\n<p>这个问题困扰了很久，今天下雨天，正好静心看看文档，解决一下这个问题</p>\n<p><code>注：本文以next主题为例</code></p>\n<p>next主题采用的是Swig模板，Swig模板可以参考 <a href=\"http://www.iqianduan.net/blog/how_to_use_swig\" target=\"_blank\" rel=\"noopener\">Swig中文文档</a></p>\n<h3 id=\"主题介绍\"><a class=\"header-anchor\" href=\"#主题介绍\">☆</a>主题介绍</h3>\n<h4 id=\"更换主题\"><a class=\"header-anchor\" href=\"#更换主题\">☆</a>更换主题</h4>\n<p>创建 Hexo 主题非常容易，只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改  _config.yml 内的 theme 设定，即可切换主题。一个主题可能会有以下的结构：</p>\n<pre><code> ├── _config.yml      //这个是主题配置项文件\n ├── languages        //这个是语言文件\n ├── layout           //这个是模板文件\n ├── scripts           \n └── source     \n</code></pre>\n<p>1.Layout<br>\n布局文件夹。用于存放主题的模板文件，决定了网站内容的呈现方式，Hexo 内建 Swig 模板引擎，您可以另外安装插件来获得 EJS、Haml 或 Jade 支持，Hexo 根据模板文件的扩展名来决定所使用的模板引擎。</p>\n<pre><code> layout.ejs   - 使用 EJS\n layout.swig  - 使用 Swig\n</code></pre>\n<p>2.source<br>\n资源文件夹，除了模板以外的 Asset，例如 CSS、JavaScript 文件等，都应该放在这个文件夹中。文件或文件夹开头名称为 _（下划线线）或隐藏的文件会被忽略。<br>\n如果文件可以被渲染的话，会经过解析然后储存到 public 文件夹，否则会直接拷贝到 public 文件夹。</p>\n<h4 id=\"模板\"><a class=\"header-anchor\" href=\"#模板\">☆</a>模板</h4>\n<p>模板决定了网站内容的呈现方式，每个主题至少都应包含一个 index 模板，以下是各页面相对应的模板名称：</p>\n<table>\n<thead>\n<tr>\n<th>模板</th>\n<th>用途</th>\n<th>回调</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>index</td>\n<td>首页</td>\n<td></td>\n</tr>\n<tr>\n<td>post</td>\n<td>文章</td>\n<td>index</td>\n</tr>\n<tr>\n<td>page</td>\n<td>分页</td>\n<td>index</td>\n</tr>\n<tr>\n<td>archive</td>\n<td>归档</td>\n<td>index</td>\n</tr>\n<tr>\n<td>category</td>\n<td>分类归档</td>\n<td>archive</td>\n</tr>\n<tr>\n<td>tag</td>\n<td>标签归档</td>\n<td>archive</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"局部模板\"><a class=\"header-anchor\" href=\"#局部模板\">☆</a>局部模板</h4>\n<p>局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock partial/header.ejs %&#125;</span><br><span class=\"line\">&lt;h1 id=&quot;logo&quot;&gt;&lt;%= config.title %&gt;&lt;/h1&gt;</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% codeblock index.ejs %&#125;</span><br><span class=\"line\">&lt;%- partial(&apos;partial/header&apos;) %&gt;</span><br><span class=\"line\">&lt;div id=&quot;content&quot;&gt;Home page&lt;/div&gt;</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h1 id=&quot;logo&quot;&gt;My Site&lt;/h1&gt;</span><br><span class=\"line\">&lt;div id=&quot;content&quot;&gt;Home page&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改\"><a class=\"header-anchor\" href=\"#修改\">☆</a>修改</h4>\n<p>知道了模板对应的具体内容，就可以着手进行修改了，next主题页面模板大多使用局部模板进行组合，只需要增加或者减少组件的引用，就可以实现页面布局的修改。</p>\n<h3 id=\"参考资料\"><a class=\"header-anchor\" href=\"#参考资料\">☆</a>参考资料</h3>\n<p>Hexo官方网站 : <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/</a></p>\n<blockquote>\n<p><strong>暂时就这么多了，具体的没深入看</strong></p>\n</blockquote>\n","site":{"data":{}},"length":1432,"excerpt":"","more":"<p>  主要是为了解决about页面的文章目录自动弹出的问题</p>\n<p>这个问题困扰了很久，今天下雨天，正好静心看看文档，解决一下这个问题</p>\n<p><code>注：本文以next主题为例</code></p>\n<p>next主题采用的是Swig模板，Swig模板可以参考 <a href=\"http://www.iqianduan.net/blog/how_to_use_swig\" target=\"_blank\" rel=\"noopener\">Swig中文文档</a></p>\n<h3 id=\"主题介绍\"><a class=\"header-anchor\" href=\"#主题介绍\">☆</a>主题介绍</h3>\n<h4 id=\"更换主题\"><a class=\"header-anchor\" href=\"#更换主题\">☆</a>更换主题</h4>\n<p>创建 Hexo 主题非常容易，只要在 themes 文件夹内，新增一个任意名称的文件夹，并修改  _config.yml 内的 theme 设定，即可切换主题。一个主题可能会有以下的结构：</p>\n<pre><code> ├── _config.yml      //这个是主题配置项文件\n ├── languages        //这个是语言文件\n ├── layout           //这个是模板文件\n ├── scripts           \n └── source     \n</code></pre>\n<p>1.Layout<br>\n布局文件夹。用于存放主题的模板文件，决定了网站内容的呈现方式，Hexo 内建 Swig 模板引擎，您可以另外安装插件来获得 EJS、Haml 或 Jade 支持，Hexo 根据模板文件的扩展名来决定所使用的模板引擎。</p>\n<pre><code> layout.ejs   - 使用 EJS\n layout.swig  - 使用 Swig\n</code></pre>\n<p>2.source<br>\n资源文件夹，除了模板以外的 Asset，例如 CSS、JavaScript 文件等，都应该放在这个文件夹中。文件或文件夹开头名称为 _（下划线线）或隐藏的文件会被忽略。<br>\n如果文件可以被渲染的话，会经过解析然后储存到 public 文件夹，否则会直接拷贝到 public 文件夹。</p>\n<h4 id=\"模板\"><a class=\"header-anchor\" href=\"#模板\">☆</a>模板</h4>\n<p>模板决定了网站内容的呈现方式，每个主题至少都应包含一个 index 模板，以下是各页面相对应的模板名称：</p>\n<table>\n<thead>\n<tr>\n<th>模板</th>\n<th>用途</th>\n<th>回调</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>index</td>\n<td>首页</td>\n<td></td>\n</tr>\n<tr>\n<td>post</td>\n<td>文章</td>\n<td>index</td>\n</tr>\n<tr>\n<td>page</td>\n<td>分页</td>\n<td>index</td>\n</tr>\n<tr>\n<td>archive</td>\n<td>归档</td>\n<td>index</td>\n</tr>\n<tr>\n<td>category</td>\n<td>分类归档</td>\n<td>archive</td>\n</tr>\n<tr>\n<td>tag</td>\n<td>标签归档</td>\n<td>archive</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"局部模板\"><a class=\"header-anchor\" href=\"#局部模板\">☆</a>局部模板</h4>\n<p>局部模板让您在不同模板之间共享相同的组件，例如页首（Header）、页脚（Footer）或侧边栏（Sidebar）等，可利用局部模板功能分割为个别文件，让维护更加便利。举例来说：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% codeblock partial/header.ejs %&#125;</span><br><span class=\"line\">&lt;h1 id=&quot;logo&quot;&gt;&lt;%= config.title %&gt;&lt;/h1&gt;</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% codeblock index.ejs %&#125;</span><br><span class=\"line\">&lt;%- partial(&apos;partial/header&apos;) %&gt;</span><br><span class=\"line\">&lt;div id=&quot;content&quot;&gt;Home page&lt;/div&gt;</span><br><span class=\"line\">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure>\n<p>生成：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;h1 id=&quot;logo&quot;&gt;My Site&lt;/h1&gt;</span><br><span class=\"line\">&lt;div id=&quot;content&quot;&gt;Home page&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改\"><a class=\"header-anchor\" href=\"#修改\">☆</a>修改</h4>\n<p>知道了模板对应的具体内容，就可以着手进行修改了，next主题页面模板大多使用局部模板进行组合，只需要增加或者减少组件的引用，就可以实现页面布局的修改。</p>\n<h3 id=\"参考资料\"><a class=\"header-anchor\" href=\"#参考资料\">☆</a>参考资料</h3>\n<p>Hexo官方网站 : <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">https://hexo.io/</a></p>\n<blockquote>\n<p><strong>暂时就这么多了，具体的没深入看</strong></p>\n</blockquote>\n"},{"title":"hexo折腾记","copyright":true,"abbrlink":"fa20dd9d","date":"2018-01-27T11:15:42.000Z","_content":"\n&emsp;&emsp;折腾好久，终于，博客上线了，想要实现的效果和功能也基本全部实现，在这记录一下折腾的过程，供以后参考。\n\n## hexo安装\n\n### 什么是Hexo ?\n&emsp;&emsp; Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub等平台上。\n\n### 安装步骤\n\n - 安装Git\n - 安装Node.js\n - 安装Hexo\n - Github创建仓库\n - 推送网站\n \n ### hexo安装过程\n &emsp;&emsp;Git和Node.js安装请直接百度下载安装包，进行安装，如不想改变路径，默认一直点下一步就行。\n \n 使用npm命令安装hexo（npm命令需要Node.js支持）\n 在任意目录打开Git（右键，选择Git Bash Here），输入\n ```\n npm install -g hexo-cli \n ```\n 这个安装时间视网速快慢，耐心等待安装完成\n \n 然后初始化博客，在想要保存博客文件的目录打开git，输入：\n ```\n hexo init\n ```\n 等待安装完成，然后输入：\n ```\n hexo g\n hexo d\n ```\n 打开浏览器，输入localhost：4000，就可以看到博客了\n \n ## 博客同步到GitHub\n ### GitHub创建仓库\n &emsp;&emsp;登录GitHub后，点击New repository创建新仓库，仓库名称必须为：**用户名/github.io**\n ![   ][1]\n ### 绑定GitHub仓库与本地的hexo文件\n &emsp;&emsp; 在hexo的安装目录下，找到**config.yml** 文件，打开，在末尾找到deploy,填入以下内容：\n ```\n deploy:\n  type: git                #同步方式\n  repository:               #GitHub仓库地址\n  branch: master              #仓库所属分支\n ```\n ### Git绑定GitHub\n打开Git Bash，设置user.name和user.email配置信息，分别输入以下内容，然后回车。\n```\ngit config --global user.name \"GitHub用户名\"\ngit config --global user.email \"GitHub注册邮箱\"\n```\n然后，生成ssh密钥文件（一直回车就行）：\n```\nssh-keygen -t rsa -C \"GitHub注册邮箱\"\n```\n![       ][2]\n生成的密钥文件，默认存储在用户目录下 **.ssh** 文件夹中，其中 **id_rsa**为私钥，**id_rsa.pub**为公钥，将公4钥绑定到GitHub账户上（请自行百度），然后在 git bash 中输入：\n```\n$ ssh -T git@github.com\n```\n如果是第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated， but GitHub does not provide shell access ，这就表示已成功连上github。\n![enter description here][3]\n然后在本地的hexo目录中打开 git bash ，输入：\n```\nhexo d\n```\n博客就会同步上传到GitHub，然后在浏览器输入：**GitHub用户名/github.io**，就可以看到网站了。\n\n\n## 主题更换与美化\n本博客采用了next主题，以下内容均以[next主题][4]为例。\n### 更换next主题\n进入hexo安装目录，在git中输入以下内容便会自动下载next主题到`themes/next`目录下面\n```\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n然后打开站点配置文件`-config.yml`找到theme更改为next并保存\n![            ][5]\n\n然后执行`hexo g` 和 `hexo d`将更改同步\n\n### next主题美化\n#### 添加rss\nRSS的主要功能是实现订阅，让别人可以实时的订阅你博客的内容\n在hexo的安装目录下，执行：\n```\nnpm install hexo-generator-feed --save\n```\n然后执行`hexo g` 和 `hexo s`,打开localhost：4000；就能看到效果了\n#### 开启统计功能\n\n安装插件：npm install hexo-wordcount --save\n\n在主题配置文件中找到以下字段，按自己需要将其设置成true即可\n```\npost_wordcount:\n  item_text: true\n  wordcount: true\n  min2read: true\n  totalcount: false\n  separated_meta: true\n```\n#### 开启分享功能\n在主题配置文件中找到以下字段，在`jiathis:`后面输入true即可\n```\njiathis: true\n# Warning: JiaThis does not support https.\nadd_this_id: xxx\n```\n`add_this_id:`为分享统计功能，可以去jiathis的官网注册一个账号，然后把自己的id输入，就可以在jiathis上看到详细的统计数据\n如需修改想要展示的分享按钮可以编辑：`themes/next/layout/_partials/share/jiathis.swig`进行修改\n\n#### 添加百度/谷歌/本地 自定义站点内容搜索\n安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：\n```\n$ npm install hexo-generator-searchdb --save\n```\n编辑 站点配置文件，新增以下内容到任意位置：\n```\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n ```\n编辑 主题配置文件，启用本地搜索功能：\n```\n# Local search\nlocal_search:\n  enable: true\n```\n#### 在网站底部加入访问量统计\n\n编辑主题配置文件，修改如下内容：\n```\nbusuanzi_count:\n  # count values only if the other configs are false\n  enable: true\n  # custom uv span for the whole site\n  site_uv: true\n  site_uv_header: <i class=\"fa fa-user\"></i> 访问人数\n  site_uv_footer:\n  # custom pv span for the whole site\n  site_pv: true\n  site_pv_header: <i class=\"fa fa-eye\"></i> 总访问量\n  site_pv_footer:\n  # custom pv span for one page only\n  page_pv: true\n  page_pv_header: <i class=\"fa fa-file-o\"></i> 阅读数\n  page_pv_footer:\n```\n#### 加入文章字数统计\n切换到根目录下，然后运行如下代码\n```\n$ npm install hexo-wordcount --save\n```\n然后在`/themes/next/layout/_partials/footer.swig`文件尾部加上：\n```\n<div class=\"theme-info\">\n  <div class=\"powered-by\"></div>\n  <span class=\"post-count\">博客全站共{{ totalcount(site) }}字</span>\n</div>\n```\n\n当前时间：2018年05月06日 23时55分15秒\n\n\n#### 添加点击爱心效果\n\n**创建js文件**\n在/themes/next/source/js/src下新建文件clicklove.js，接着把该链接下的代码拷贝粘贴到clicklove.js文件中。\n代码如下：\n```\n!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n```\n**修改_layout.swig**\n在\\themes\\next\\layout\\_layout.swig文件末尾添加：\n```\n<!-- 页面点击小红心 -->\n<script type=\"text/javascript\" src=\"/js/src/clicklove.js\"></script>\n```\n#### 动态背景配置文件位置\n\\hexo\\themes\\next\\source\\lib\\canvas-nest\\canvas-nest.min.js\n\n修改[方法](https://github.com/hustcc/canvas-nest.js/blob/master/README-zh.md)\n\n\n\n\n\n### 右侧目录前标位置\n在站点配置文件中\n```\nanchors:\n    level: 2\n    collisionSuffix: 'v'\n    permalink: true\n    permalinkClass: header-anchor\n    permalinkSymbol: ☆\n\n```\n\n### hexo s 卡住加载不出来\n\n最近在用hexo 搭建github pages 时，遇到一个问题，\n\nhexo安装没错，也能成功运行。启动也没错。\n\n就是不能访问。。\n\n原因是：\n\n你的电脑端口被占用了。\n\nhexo默认的端口是4000，如果你的电脑安装了福昕阅读器，，就是他，没错，坑爹吧！！！！\n\n启动hexo s 的时候，用这个命令，换一个端口。\n\nhexo s -p 5000    \n\n换成5000端口，果断可以访问。\n\n当前时间：2018-05-26 21:59:48\n\n\n\n### 末尾版权信息\n\nhexo next自带版权开启\n```\n#Declare license on posts\n#版权信息\npost_copyright:\n  enable: true\n  license: CC BY-NC-SA 4.0\n  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\n```\n配置文件路径：\\hexo\\themes\\next\\layout\\_macro\\post-copyright.swig\n```diff\n+{% if page.copyright %}\n<ul class=\"post-copyright\">\n  <li class=\"post-copyright-author\">\n    <strong>{{ __('post.copyright.author') + __('symbol.colon') }}</strong>\n    {{ post.author | default(config.author) }}\n  </li>\n  <li class=\"post-copyright-link\">\n    <strong>{{ __('post.copyright.link') + __('symbol.colon') }}</strong>\n    <a href=\"{{ post.url | default(post.permalink) }}\" title=\"{{ post.title }}\">{{ post.url | default(post.permalink) }}</a>\n  </li>\n  <li class=\"post-copyright-license\">\n    <strong>{{ __('post.copyright.license_title') + __('symbol.colon') }} </strong>\n    {{ __('post.copyright.license_content', theme.post_copyright.license_url, theme.post_copyright.license) }}\n  </li>\n</ul>\n+{% endif %}\n```\n\n\n布局文件路径：\\hexo\\themes\\next\\layout\\_macro\\post.swig\n\n\n自定义版权配置文件路径：\\hexo\\themes\\next\\layout\\_macro\\my-copyright.swig\n```\n    <div>\n          {% if not is_index %}\n            {% include 'my-copyright.swig' %}\n          {% endif %}\n    </div>\n```\n\n### 首页隐藏指定文章\n\n修改主题的index.swig：\\hexo\\themes\\next\\layout\\index.swig\n```diff\n{% block content %}\n  <section id=\"posts\" class=\"posts-expand\">\n    {% for post in page.posts %}\n+      {% if post.notshow != true %}  \n        {{ post_template.render(post, true) }}\n+      {% endif %}           \n    {% endfor %}\n  </section>\n```\n\n\n\n\n\n\n\n\n\n未完待续······\n\n\n\n\n\n  [1]: https://data.singlelovely.cn/xsj/20182/hexo.png\n  [2]: https://data.singlelovely.cn/xsj/20182/hexo3.png\n  [3]: https://data.singlelovely.cn/xsj/20182/hexo2.png\n  [4]: http://theme-next.iissnan.com/\n  [5]: https://data.singlelovely.cn/xsj/20182/214.png ","source":"_posts/hexo折腾记.md","raw":"---\ntitle: hexo折腾记\ncopyright: true\ntags:\n  - hexo\ncategories: hexo\nabbrlink: fa20dd9d\ndate: 2018-01-27 19:15:42\n---\n\n&emsp;&emsp;折腾好久，终于，博客上线了，想要实现的效果和功能也基本全部实现，在这记录一下折腾的过程，供以后参考。\n\n## hexo安装\n\n### 什么是Hexo ?\n&emsp;&emsp; Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub等平台上。\n\n### 安装步骤\n\n - 安装Git\n - 安装Node.js\n - 安装Hexo\n - Github创建仓库\n - 推送网站\n \n ### hexo安装过程\n &emsp;&emsp;Git和Node.js安装请直接百度下载安装包，进行安装，如不想改变路径，默认一直点下一步就行。\n \n 使用npm命令安装hexo（npm命令需要Node.js支持）\n 在任意目录打开Git（右键，选择Git Bash Here），输入\n ```\n npm install -g hexo-cli \n ```\n 这个安装时间视网速快慢，耐心等待安装完成\n \n 然后初始化博客，在想要保存博客文件的目录打开git，输入：\n ```\n hexo init\n ```\n 等待安装完成，然后输入：\n ```\n hexo g\n hexo d\n ```\n 打开浏览器，输入localhost：4000，就可以看到博客了\n \n ## 博客同步到GitHub\n ### GitHub创建仓库\n &emsp;&emsp;登录GitHub后，点击New repository创建新仓库，仓库名称必须为：**用户名/github.io**\n ![   ][1]\n ### 绑定GitHub仓库与本地的hexo文件\n &emsp;&emsp; 在hexo的安装目录下，找到**config.yml** 文件，打开，在末尾找到deploy,填入以下内容：\n ```\n deploy:\n  type: git                #同步方式\n  repository:               #GitHub仓库地址\n  branch: master              #仓库所属分支\n ```\n ### Git绑定GitHub\n打开Git Bash，设置user.name和user.email配置信息，分别输入以下内容，然后回车。\n```\ngit config --global user.name \"GitHub用户名\"\ngit config --global user.email \"GitHub注册邮箱\"\n```\n然后，生成ssh密钥文件（一直回车就行）：\n```\nssh-keygen -t rsa -C \"GitHub注册邮箱\"\n```\n![       ][2]\n生成的密钥文件，默认存储在用户目录下 **.ssh** 文件夹中，其中 **id_rsa**为私钥，**id_rsa.pub**为公钥，将公4钥绑定到GitHub账户上（请自行百度），然后在 git bash 中输入：\n```\n$ ssh -T git@github.com\n```\n如果是第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated， but GitHub does not provide shell access ，这就表示已成功连上github。\n![enter description here][3]\n然后在本地的hexo目录中打开 git bash ，输入：\n```\nhexo d\n```\n博客就会同步上传到GitHub，然后在浏览器输入：**GitHub用户名/github.io**，就可以看到网站了。\n\n\n## 主题更换与美化\n本博客采用了next主题，以下内容均以[next主题][4]为例。\n### 更换next主题\n进入hexo安装目录，在git中输入以下内容便会自动下载next主题到`themes/next`目录下面\n```\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n```\n然后打开站点配置文件`-config.yml`找到theme更改为next并保存\n![            ][5]\n\n然后执行`hexo g` 和 `hexo d`将更改同步\n\n### next主题美化\n#### 添加rss\nRSS的主要功能是实现订阅，让别人可以实时的订阅你博客的内容\n在hexo的安装目录下，执行：\n```\nnpm install hexo-generator-feed --save\n```\n然后执行`hexo g` 和 `hexo s`,打开localhost：4000；就能看到效果了\n#### 开启统计功能\n\n安装插件：npm install hexo-wordcount --save\n\n在主题配置文件中找到以下字段，按自己需要将其设置成true即可\n```\npost_wordcount:\n  item_text: true\n  wordcount: true\n  min2read: true\n  totalcount: false\n  separated_meta: true\n```\n#### 开启分享功能\n在主题配置文件中找到以下字段，在`jiathis:`后面输入true即可\n```\njiathis: true\n# Warning: JiaThis does not support https.\nadd_this_id: xxx\n```\n`add_this_id:`为分享统计功能，可以去jiathis的官网注册一个账号，然后把自己的id输入，就可以在jiathis上看到详细的统计数据\n如需修改想要展示的分享按钮可以编辑：`themes/next/layout/_partials/share/jiathis.swig`进行修改\n\n#### 添加百度/谷歌/本地 自定义站点内容搜索\n安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：\n```\n$ npm install hexo-generator-searchdb --save\n```\n编辑 站点配置文件，新增以下内容到任意位置：\n```\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n ```\n编辑 主题配置文件，启用本地搜索功能：\n```\n# Local search\nlocal_search:\n  enable: true\n```\n#### 在网站底部加入访问量统计\n\n编辑主题配置文件，修改如下内容：\n```\nbusuanzi_count:\n  # count values only if the other configs are false\n  enable: true\n  # custom uv span for the whole site\n  site_uv: true\n  site_uv_header: <i class=\"fa fa-user\"></i> 访问人数\n  site_uv_footer:\n  # custom pv span for the whole site\n  site_pv: true\n  site_pv_header: <i class=\"fa fa-eye\"></i> 总访问量\n  site_pv_footer:\n  # custom pv span for one page only\n  page_pv: true\n  page_pv_header: <i class=\"fa fa-file-o\"></i> 阅读数\n  page_pv_footer:\n```\n#### 加入文章字数统计\n切换到根目录下，然后运行如下代码\n```\n$ npm install hexo-wordcount --save\n```\n然后在`/themes/next/layout/_partials/footer.swig`文件尾部加上：\n```\n<div class=\"theme-info\">\n  <div class=\"powered-by\"></div>\n  <span class=\"post-count\">博客全站共{{ totalcount(site) }}字</span>\n</div>\n```\n\n当前时间：2018年05月06日 23时55分15秒\n\n\n#### 添加点击爱心效果\n\n**创建js文件**\n在/themes/next/source/js/src下新建文件clicklove.js，接着把该链接下的代码拷贝粘贴到clicklove.js文件中。\n代码如下：\n```\n!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e<d.length;e++)d[e].alpha<=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=\"left:\"+d[e].x+\"px;top:\"+d[e].y+\"px;opacity:\"+d[e].alpha+\";transform:scale(\"+d[e].scale+\",\"+d[e].scale+\") rotate(45deg);background:\"+d[e].color+\";z-index:99999\");requestAnimationFrame(r)}function o(){var t=\"function\"==typeof e.onclick&&e.onclick;e.onclick=function(e){t&&t(),i(e)}}function i(e){var a=t.createElement(\"div\");a.className=\"heart\",d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(\"style\");a.type=\"text/css\";try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(\"head\")[0].appendChild(a)}function s(){return\"rgb(\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\",\"+~~(255*Math.random())+\")\"}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document);\n```\n**修改_layout.swig**\n在\\themes\\next\\layout\\_layout.swig文件末尾添加：\n```\n<!-- 页面点击小红心 -->\n<script type=\"text/javascript\" src=\"/js/src/clicklove.js\"></script>\n```\n#### 动态背景配置文件位置\n\\hexo\\themes\\next\\source\\lib\\canvas-nest\\canvas-nest.min.js\n\n修改[方法](https://github.com/hustcc/canvas-nest.js/blob/master/README-zh.md)\n\n\n\n\n\n### 右侧目录前标位置\n在站点配置文件中\n```\nanchors:\n    level: 2\n    collisionSuffix: 'v'\n    permalink: true\n    permalinkClass: header-anchor\n    permalinkSymbol: ☆\n\n```\n\n### hexo s 卡住加载不出来\n\n最近在用hexo 搭建github pages 时，遇到一个问题，\n\nhexo安装没错，也能成功运行。启动也没错。\n\n就是不能访问。。\n\n原因是：\n\n你的电脑端口被占用了。\n\nhexo默认的端口是4000，如果你的电脑安装了福昕阅读器，，就是他，没错，坑爹吧！！！！\n\n启动hexo s 的时候，用这个命令，换一个端口。\n\nhexo s -p 5000    \n\n换成5000端口，果断可以访问。\n\n当前时间：2018-05-26 21:59:48\n\n\n\n### 末尾版权信息\n\nhexo next自带版权开启\n```\n#Declare license on posts\n#版权信息\npost_copyright:\n  enable: true\n  license: CC BY-NC-SA 4.0\n  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\n```\n配置文件路径：\\hexo\\themes\\next\\layout\\_macro\\post-copyright.swig\n```diff\n+{% if page.copyright %}\n<ul class=\"post-copyright\">\n  <li class=\"post-copyright-author\">\n    <strong>{{ __('post.copyright.author') + __('symbol.colon') }}</strong>\n    {{ post.author | default(config.author) }}\n  </li>\n  <li class=\"post-copyright-link\">\n    <strong>{{ __('post.copyright.link') + __('symbol.colon') }}</strong>\n    <a href=\"{{ post.url | default(post.permalink) }}\" title=\"{{ post.title }}\">{{ post.url | default(post.permalink) }}</a>\n  </li>\n  <li class=\"post-copyright-license\">\n    <strong>{{ __('post.copyright.license_title') + __('symbol.colon') }} </strong>\n    {{ __('post.copyright.license_content', theme.post_copyright.license_url, theme.post_copyright.license) }}\n  </li>\n</ul>\n+{% endif %}\n```\n\n\n布局文件路径：\\hexo\\themes\\next\\layout\\_macro\\post.swig\n\n\n自定义版权配置文件路径：\\hexo\\themes\\next\\layout\\_macro\\my-copyright.swig\n```\n    <div>\n          {% if not is_index %}\n            {% include 'my-copyright.swig' %}\n          {% endif %}\n    </div>\n```\n\n### 首页隐藏指定文章\n\n修改主题的index.swig：\\hexo\\themes\\next\\layout\\index.swig\n```diff\n{% block content %}\n  <section id=\"posts\" class=\"posts-expand\">\n    {% for post in page.posts %}\n+      {% if post.notshow != true %}  \n        {{ post_template.render(post, true) }}\n+      {% endif %}           \n    {% endfor %}\n  </section>\n```\n\n\n\n\n\n\n\n\n\n未完待续······\n\n\n\n\n\n  [1]: https://data.singlelovely.cn/xsj/20182/hexo.png\n  [2]: https://data.singlelovely.cn/xsj/20182/hexo3.png\n  [3]: https://data.singlelovely.cn/xsj/20182/hexo2.png\n  [4]: http://theme-next.iissnan.com/\n  [5]: https://data.singlelovely.cn/xsj/20182/214.png ","slug":"hexo折腾记","published":1,"updated":"2020-02-20T06:06:59.402Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td37000wfkupjg1cvv4c","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>  折腾好久，终于，博客上线了，想要实现的效果和功能也基本全部实现，在这记录一下折腾的过程，供以后参考。</p>\n<h2 id=\"hexo安装\"><a class=\"header-anchor\" href=\"#hexo安装\">☆</a>hexo安装</h2>\n<h3 id=\"什么是hexo\"><a class=\"header-anchor\" href=\"#什么是hexo\">☆</a>什么是Hexo ?</h3>\n<p>   Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub等平台上。</p>\n<h3 id=\"安装步骤\"><a class=\"header-anchor\" href=\"#安装步骤\">☆</a>安装步骤</h3>\n<ul>\n<li>安装Git</li>\n<li>安装Node.js</li>\n<li>安装Hexo</li>\n<li>Github创建仓库</li>\n<li>推送网站</li>\n</ul>\n<h3 id=\"hexo安装过程\"><a class=\"header-anchor\" href=\"#hexo安装过程\">☆</a>hexo安装过程</h3>\n<p>  Git和Node.js安装请直接百度下载安装包，进行安装，如不想改变路径，默认一直点下一步就行。</p>\n<p>使用npm命令安装hexo（npm命令需要Node.js支持）<br>\n在任意目录打开Git（右键，选择Git Bash Here），输入</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>这个安装时间视网速快慢，耐心等待安装完成</p>\n<p>然后初始化博客，在想要保存博客文件的目录打开git，输入：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>等待安装完成，然后输入：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>打开浏览器，输入localhost：4000，就可以看到博客了</p>\n<h2 id=\"博客同步到github\"><a class=\"header-anchor\" href=\"#博客同步到github\">☆</a>博客同步到GitHub</h2>\n<h3 id=\"github创建仓库\"><a class=\"header-anchor\" href=\"#github创建仓库\">☆</a>GitHub创建仓库</h3>\n<p>  登录GitHub后，点击New repository创建新仓库，仓库名称必须为：<strong>用户名/github.io</strong><br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/hexo.png\" alt=\"   \"></p>\n<h3 id=\"绑定github仓库与本地的hexo文件\"><a class=\"header-anchor\" href=\"#绑定github仓库与本地的hexo文件\">☆</a>绑定GitHub仓库与本地的hexo文件</h3>\n<p>   在hexo的安装目录下，找到<strong>config.yml</strong> 文件，打开，在末尾找到deploy,填入以下内容：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\"> type: git                #同步方式</span><br><span class=\"line\"> repository:               #GitHub仓库地址</span><br><span class=\"line\"> branch: master              #仓库所属分支</span><br></pre></td></tr></table></figure>\n<h3 id=\"git绑定github\"><a class=\"header-anchor\" href=\"#git绑定github\">☆</a>Git绑定GitHub</h3>\n<p>打开Git Bash，设置user.name和user.email配置信息，分别输入以下内容，然后回车。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;GitHub用户名&quot;</span><br><span class=\"line\">git config --global user.email &quot;GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>\n<p>然后，生成ssh密钥文件（一直回车就行）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/hexo3.png\" alt=\"       \"><br>\n生成的密钥文件，默认存储在用户目录下 <strong>.ssh</strong> 文件夹中，其中 <strong>id_rsa</strong>为私钥，<strong>id_rsa.pub</strong>为公钥，将公4钥绑定到GitHub账户上（请自行百度），然后在 git bash 中输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>如果是第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated， but GitHub does not provide shell access ，这就表示已成功连上github。<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/hexo2.png\" alt=\"enter description here\"><br>\n然后在本地的hexo目录中打开 git bash ，输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>博客就会同步上传到GitHub，然后在浏览器输入：<strong>GitHub用户名/github.io</strong>，就可以看到网站了。</p>\n<h2 id=\"主题更换与美化\"><a class=\"header-anchor\" href=\"#主题更换与美化\">☆</a>主题更换与美化</h2>\n<p>本博客采用了next主题，以下内容均以<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">next主题</a>为例。</p>\n<h3 id=\"更换next主题\"><a class=\"header-anchor\" href=\"#更换next主题\">☆</a>更换next主题</h3>\n<p>进入hexo安装目录，在git中输入以下内容便会自动下载next主题到<code>themes/next</code>目录下面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<p>然后打开站点配置文件<code>-config.yml</code>找到theme更改为next并保存<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/214.png\" alt=\"            \"></p>\n<p>然后执行<code>hexo g</code> 和 <code>hexo d</code>将更改同步</p>\n<h3 id=\"next主题美化\"><a class=\"header-anchor\" href=\"#next主题美化\">☆</a>next主题美化</h3>\n<h4 id=\"添加rss\"><a class=\"header-anchor\" href=\"#添加rss\">☆</a>添加rss</h4>\n<p>RSS的主要功能是实现订阅，让别人可以实时的订阅你博客的内容<br>\n在hexo的安装目录下，执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n<p>然后执行<code>hexo g</code> 和 <code>hexo s</code>,打开localhost：4000；就能看到效果了</p>\n<h4 id=\"开启统计功能\"><a class=\"header-anchor\" href=\"#开启统计功能\">☆</a>开启统计功能</h4>\n<p>安装插件：npm install hexo-wordcount --save</p>\n<p>在主题配置文件中找到以下字段，按自己需要将其设置成true即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post_wordcount:</span><br><span class=\"line\">  item_text: true</span><br><span class=\"line\">  wordcount: true</span><br><span class=\"line\">  min2read: true</span><br><span class=\"line\">  totalcount: false</span><br><span class=\"line\">  separated_meta: true</span><br></pre></td></tr></table></figure>\n<h4 id=\"开启分享功能\"><a class=\"header-anchor\" href=\"#开启分享功能\">☆</a>开启分享功能</h4>\n<p>在主题配置文件中找到以下字段，在<code>jiathis:</code>后面输入true即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jiathis: true</span><br><span class=\"line\"># Warning: JiaThis does not support https.</span><br><span class=\"line\">add_this_id: xxx</span><br></pre></td></tr></table></figure>\n<p><code>add_this_id:</code>为分享统计功能，可以去jiathis的官网注册一个账号，然后把自己的id输入，就可以在jiathis上看到详细的统计数据<br>\n如需修改想要展示的分享按钮可以编辑：<code>themes/next/layout/_partials/share/jiathis.swig</code>进行修改</p>\n<h4 id=\"添加百度-谷歌-本地-自定义站点内容搜索\"><a class=\"header-anchor\" href=\"#添加百度-谷歌-本地-自定义站点内容搜索\">☆</a>添加百度/谷歌/本地 自定义站点内容搜索</h4>\n<p>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<p>编辑 站点配置文件，新增以下内容到任意位置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n<p>编辑 主题配置文件，启用本地搜索功能：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Local search</span><br><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br></pre></td></tr></table></figure>\n<h4 id=\"在网站底部加入访问量统计\"><a class=\"header-anchor\" href=\"#在网站底部加入访问量统计\">☆</a>在网站底部加入访问量统计</h4>\n<p>编辑主题配置文件，修改如下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">busuanzi_count:</span><br><span class=\"line\">  # count values only if the other configs are false</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # custom uv span for the whole site</span><br><span class=\"line\">  site_uv: true</span><br><span class=\"line\">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; 访问人数</span><br><span class=\"line\">  site_uv_footer:</span><br><span class=\"line\">  # custom pv span for the whole site</span><br><span class=\"line\">  site_pv: true</span><br><span class=\"line\">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; 总访问量</span><br><span class=\"line\">  site_pv_footer:</span><br><span class=\"line\">  # custom pv span for one page only</span><br><span class=\"line\">  page_pv: true</span><br><span class=\"line\">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; 阅读数</span><br><span class=\"line\">  page_pv_footer:</span><br></pre></td></tr></table></figure>\n<h4 id=\"加入文章字数统计\"><a class=\"header-anchor\" href=\"#加入文章字数统计\">☆</a>加入文章字数统计</h4>\n<p>切换到根目录下，然后运行如下代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>\n<p>然后在<code>/themes/next/layout/_partials/footer.swig</code>文件尾部加上：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;theme-info&quot;&gt;</span><br><span class=\"line\">  &lt;div class=&quot;powered-by&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">  &lt;span class=&quot;post-count&quot;&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>当前时间：2018年05月06日 23时55分15秒</p>\n<h4 id=\"添加点击爱心效果\"><a class=\"header-anchor\" href=\"#添加点击爱心效果\">☆</a>添加点击爱心效果</h4>\n<p><strong>创建js文件</strong><br>\n在/themes/next/source/js/src下新建文件clicklove.js，接着把该链接下的代码拷贝粘贴到clicklove.js文件中。<br>\n代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure>\n<p><strong>修改_layout.swig</strong><br>\n在\\themes\\next\\layout_layout.swig文件末尾添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面点击小红心 --&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"动态背景配置文件位置\"><a class=\"header-anchor\" href=\"#动态背景配置文件位置\">☆</a>动态背景配置文件位置</h4>\n<p>\\hexo\\themes\\next\\source\\lib\\canvas-nest\\canvas-nest.min.js</p>\n<p>修改<a href=\"https://github.com/hustcc/canvas-nest.js/blob/master/README-zh.md\" target=\"_blank\" rel=\"noopener\">方法</a></p>\n<h3 id=\"右侧目录前标位置\"><a class=\"header-anchor\" href=\"#右侧目录前标位置\">☆</a>右侧目录前标位置</h3>\n<p>在站点配置文件中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">anchors:</span><br><span class=\"line\">    level: 2</span><br><span class=\"line\">    collisionSuffix: &apos;v&apos;</span><br><span class=\"line\">    permalink: true</span><br><span class=\"line\">    permalinkClass: header-anchor</span><br><span class=\"line\">    permalinkSymbol: ☆</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-s-卡住加载不出来\"><a class=\"header-anchor\" href=\"#hexo-s-卡住加载不出来\">☆</a>hexo s 卡住加载不出来</h3>\n<p>最近在用hexo 搭建github pages 时，遇到一个问题，</p>\n<p>hexo安装没错，也能成功运行。启动也没错。</p>\n<p>就是不能访问。。</p>\n<p>原因是：</p>\n<p>你的电脑端口被占用了。</p>\n<p>hexo默认的端口是4000，如果你的电脑安装了福昕阅读器，，就是他，没错，坑爹吧！！！！</p>\n<p>启动hexo s 的时候，用这个命令，换一个端口。</p>\n<p>hexo s -p 5000</p>\n<p>换成5000端口，果断可以访问。</p>\n<p>当前时间：2018-05-26 21:59:48</p>\n<h3 id=\"末尾版权信息\"><a class=\"header-anchor\" href=\"#末尾版权信息\">☆</a>末尾版权信息</h3>\n<p>hexo next自带版权开启</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#Declare license on posts</span><br><span class=\"line\">#版权信息</span><br><span class=\"line\">post_copyright:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  license: CC BY-NC-SA 4.0</span><br><span class=\"line\">  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh</span><br></pre></td></tr></table></figure>\n<p>配置文件路径：\\hexo\\themes\\next\\layout_macro\\post-copyright.swig</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"addition\">+&#123;% if page.copyright %&#125;</span></span><br><span class=\"line\">&lt;ul class=\"post-copyright\"&gt;</span><br><span class=\"line\">  &lt;li class=\"post-copyright-author\"&gt;</span><br><span class=\"line\">    &lt;strong&gt;&#123;&#123; __('post.copyright.author') + __('symbol.colon') &#125;&#125;&lt;/strong&gt;</span><br><span class=\"line\">    &#123;&#123; post.author | default(config.author) &#125;&#125;</span><br><span class=\"line\">  &lt;/li&gt;</span><br><span class=\"line\">  &lt;li class=\"post-copyright-link\"&gt;</span><br><span class=\"line\">    &lt;strong&gt;&#123;&#123; __('post.copyright.link') + __('symbol.colon') &#125;&#125;&lt;/strong&gt;</span><br><span class=\"line\">    &lt;a href=\"&#123;&#123; post.url | default(post.permalink) &#125;&#125;\" title=\"&#123;&#123; post.title &#125;&#125;\"&gt;&#123;&#123; post.url | default(post.permalink) &#125;&#125;&lt;/a&gt;</span><br><span class=\"line\">  &lt;/li&gt;</span><br><span class=\"line\">  &lt;li class=\"post-copyright-license\"&gt;</span><br><span class=\"line\">    &lt;strong&gt;&#123;&#123; __('post.copyright.license_title') + __('symbol.colon') &#125;&#125; &lt;/strong&gt;</span><br><span class=\"line\">    &#123;&#123; __('post.copyright.license_content', theme.post_copyright.license_url, theme.post_copyright.license) &#125;&#125;</span><br><span class=\"line\">  &lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"><span class=\"addition\">+&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>\n<p>布局文件路径：\\hexo\\themes\\next\\layout_macro\\post.swig</p>\n<p>自定义版权配置文件路径：\\hexo\\themes\\next\\layout_macro\\my-copyright.swig</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">      &#123;% if not is_index %&#125;</span><br><span class=\"line\">        &#123;% include &apos;my-copyright.swig&apos; %&#125;</span><br><span class=\"line\">      &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"首页隐藏指定文章\"><a class=\"header-anchor\" href=\"#首页隐藏指定文章\">☆</a>首页隐藏指定文章</h3>\n<p>修改主题的index.swig：\\hexo\\themes\\next\\layout\\index.swig</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\">  &lt;section id=\"posts\" class=\"posts-expand\"&gt;</span><br><span class=\"line\">    &#123;% for post in page.posts %&#125;</span><br><span class=\"line\"><span class=\"addition\">+      &#123;% if post.notshow != true %&#125;  </span></span><br><span class=\"line\">        &#123;&#123; post_template.render(post, true) &#125;&#125;</span><br><span class=\"line\"><span class=\"addition\">+      &#123;% endif %&#125;           </span></span><br><span class=\"line\">    &#123;% endfor %&#125;</span><br><span class=\"line\">  &lt;/section&gt;</span><br></pre></td></tr></table></figure>\n<p>未完待续······</p>\n","site":{"data":{}},"length":7808,"excerpt":"","more":"<p>  折腾好久，终于，博客上线了，想要实现的效果和功能也基本全部实现，在这记录一下折腾的过程，供以后参考。</p>\n<h2 id=\"hexo安装\"><a class=\"header-anchor\" href=\"#hexo安装\">☆</a>hexo安装</h2>\n<h3 id=\"什么是hexo\"><a class=\"header-anchor\" href=\"#什么是hexo\">☆</a>什么是Hexo ?</h3>\n<p>   Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub等平台上。</p>\n<h3 id=\"安装步骤\"><a class=\"header-anchor\" href=\"#安装步骤\">☆</a>安装步骤</h3>\n<ul>\n<li>安装Git</li>\n<li>安装Node.js</li>\n<li>安装Hexo</li>\n<li>Github创建仓库</li>\n<li>推送网站</li>\n</ul>\n<h3 id=\"hexo安装过程\"><a class=\"header-anchor\" href=\"#hexo安装过程\">☆</a>hexo安装过程</h3>\n<p>  Git和Node.js安装请直接百度下载安装包，进行安装，如不想改变路径，默认一直点下一步就行。</p>\n<p>使用npm命令安装hexo（npm命令需要Node.js支持）<br>\n在任意目录打开Git（右键，选择Git Bash Here），输入</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>这个安装时间视网速快慢，耐心等待安装完成</p>\n<p>然后初始化博客，在想要保存博客文件的目录打开git，输入：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>等待安装完成，然后输入：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>打开浏览器，输入localhost：4000，就可以看到博客了</p>\n<h2 id=\"博客同步到github\"><a class=\"header-anchor\" href=\"#博客同步到github\">☆</a>博客同步到GitHub</h2>\n<h3 id=\"github创建仓库\"><a class=\"header-anchor\" href=\"#github创建仓库\">☆</a>GitHub创建仓库</h3>\n<p>  登录GitHub后，点击New repository创建新仓库，仓库名称必须为：<strong>用户名/github.io</strong><br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/hexo.png\" alt=\"   \"></p>\n<h3 id=\"绑定github仓库与本地的hexo文件\"><a class=\"header-anchor\" href=\"#绑定github仓库与本地的hexo文件\">☆</a>绑定GitHub仓库与本地的hexo文件</h3>\n<p>   在hexo的安装目录下，找到<strong>config.yml</strong> 文件，打开，在末尾找到deploy,填入以下内容：</p>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\"> type: git                #同步方式</span><br><span class=\"line\"> repository:               #GitHub仓库地址</span><br><span class=\"line\"> branch: master              #仓库所属分支</span><br></pre></td></tr></table></figure>\n<h3 id=\"git绑定github\"><a class=\"header-anchor\" href=\"#git绑定github\">☆</a>Git绑定GitHub</h3>\n<p>打开Git Bash，设置user.name和user.email配置信息，分别输入以下内容，然后回车。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;GitHub用户名&quot;</span><br><span class=\"line\">git config --global user.email &quot;GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>\n<p>然后，生成ssh密钥文件（一直回车就行）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;GitHub注册邮箱&quot;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/hexo3.png\" alt=\"       \"><br>\n生成的密钥文件，默认存储在用户目录下 <strong>.ssh</strong> 文件夹中，其中 <strong>id_rsa</strong>为私钥，<strong>id_rsa.pub</strong>为公钥，将公4钥绑定到GitHub账户上（请自行百度），然后在 git bash 中输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>\n<p>如果是第一次的会提示是否continue，输入yes就会看到：You’ve successfully authenticated， but GitHub does not provide shell access ，这就表示已成功连上github。<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/hexo2.png\" alt=\"enter description here\"><br>\n然后在本地的hexo目录中打开 git bash ，输入：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<p>博客就会同步上传到GitHub，然后在浏览器输入：<strong>GitHub用户名/github.io</strong>，就可以看到网站了。</p>\n<h2 id=\"主题更换与美化\"><a class=\"header-anchor\" href=\"#主题更换与美化\">☆</a>主题更换与美化</h2>\n<p>本博客采用了next主题，以下内容均以<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">next主题</a>为例。</p>\n<h3 id=\"更换next主题\"><a class=\"header-anchor\" href=\"#更换next主题\">☆</a>更换next主题</h3>\n<p>进入hexo安装目录，在git中输入以下内容便会自动下载next主题到<code>themes/next</code>目录下面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<p>然后打开站点配置文件<code>-config.yml</code>找到theme更改为next并保存<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/214.png\" alt=\"            \"></p>\n<p>然后执行<code>hexo g</code> 和 <code>hexo d</code>将更改同步</p>\n<h3 id=\"next主题美化\"><a class=\"header-anchor\" href=\"#next主题美化\">☆</a>next主题美化</h3>\n<h4 id=\"添加rss\"><a class=\"header-anchor\" href=\"#添加rss\">☆</a>添加rss</h4>\n<p>RSS的主要功能是实现订阅，让别人可以实时的订阅你博客的内容<br>\n在hexo的安装目录下，执行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n<p>然后执行<code>hexo g</code> 和 <code>hexo s</code>,打开localhost：4000；就能看到效果了</p>\n<h4 id=\"开启统计功能\"><a class=\"header-anchor\" href=\"#开启统计功能\">☆</a>开启统计功能</h4>\n<p>安装插件：npm install hexo-wordcount --save</p>\n<p>在主题配置文件中找到以下字段，按自己需要将其设置成true即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post_wordcount:</span><br><span class=\"line\">  item_text: true</span><br><span class=\"line\">  wordcount: true</span><br><span class=\"line\">  min2read: true</span><br><span class=\"line\">  totalcount: false</span><br><span class=\"line\">  separated_meta: true</span><br></pre></td></tr></table></figure>\n<h4 id=\"开启分享功能\"><a class=\"header-anchor\" href=\"#开启分享功能\">☆</a>开启分享功能</h4>\n<p>在主题配置文件中找到以下字段，在<code>jiathis:</code>后面输入true即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">jiathis: true</span><br><span class=\"line\"># Warning: JiaThis does not support https.</span><br><span class=\"line\">add_this_id: xxx</span><br></pre></td></tr></table></figure>\n<p><code>add_this_id:</code>为分享统计功能，可以去jiathis的官网注册一个账号，然后把自己的id输入，就可以在jiathis上看到详细的统计数据<br>\n如需修改想要展示的分享按钮可以编辑：<code>themes/next/layout/_partials/share/jiathis.swig</code>进行修改</p>\n<h4 id=\"添加百度-谷歌-本地-自定义站点内容搜索\"><a class=\"header-anchor\" href=\"#添加百度-谷歌-本地-自定义站点内容搜索\">☆</a>添加百度/谷歌/本地 自定义站点内容搜索</h4>\n<p>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>\n<p>编辑 站点配置文件，新增以下内容到任意位置：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">search:</span><br><span class=\"line\">  path: search.xml</span><br><span class=\"line\">  field: post</span><br><span class=\"line\">  format: html</span><br><span class=\"line\">  limit: 10000</span><br></pre></td></tr></table></figure>\n<p>编辑 主题配置文件，启用本地搜索功能：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Local search</span><br><span class=\"line\">local_search:</span><br><span class=\"line\">  enable: true</span><br></pre></td></tr></table></figure>\n<h4 id=\"在网站底部加入访问量统计\"><a class=\"header-anchor\" href=\"#在网站底部加入访问量统计\">☆</a>在网站底部加入访问量统计</h4>\n<p>编辑主题配置文件，修改如下内容：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">busuanzi_count:</span><br><span class=\"line\">  # count values only if the other configs are false</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  # custom uv span for the whole site</span><br><span class=\"line\">  site_uv: true</span><br><span class=\"line\">  site_uv_header: &lt;i class=&quot;fa fa-user&quot;&gt;&lt;/i&gt; 访问人数</span><br><span class=\"line\">  site_uv_footer:</span><br><span class=\"line\">  # custom pv span for the whole site</span><br><span class=\"line\">  site_pv: true</span><br><span class=\"line\">  site_pv_header: &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; 总访问量</span><br><span class=\"line\">  site_pv_footer:</span><br><span class=\"line\">  # custom pv span for one page only</span><br><span class=\"line\">  page_pv: true</span><br><span class=\"line\">  page_pv_header: &lt;i class=&quot;fa fa-file-o&quot;&gt;&lt;/i&gt; 阅读数</span><br><span class=\"line\">  page_pv_footer:</span><br></pre></td></tr></table></figure>\n<h4 id=\"加入文章字数统计\"><a class=\"header-anchor\" href=\"#加入文章字数统计\">☆</a>加入文章字数统计</h4>\n<p>切换到根目录下，然后运行如下代码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>\n<p>然后在<code>/themes/next/layout/_partials/footer.swig</code>文件尾部加上：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div class=&quot;theme-info&quot;&gt;</span><br><span class=\"line\">  &lt;div class=&quot;powered-by&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">  &lt;span class=&quot;post-count&quot;&gt;博客全站共&#123;&#123; totalcount(site) &#125;&#125;字&lt;/span&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p>当前时间：2018年05月06日 23时55分15秒</p>\n<h4 id=\"添加点击爱心效果\"><a class=\"header-anchor\" href=\"#添加点击爱心效果\">☆</a>添加点击爱心效果</h4>\n<p><strong>创建js文件</strong><br>\n在/themes/next/source/js/src下新建文件clicklove.js，接着把该链接下的代码拷贝粘贴到clicklove.js文件中。<br>\n代码如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure>\n<p><strong>修改_layout.swig</strong><br>\n在\\themes\\next\\layout_layout.swig文件末尾添加：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 页面点击小红心 --&gt;</span><br><span class=\"line\">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"动态背景配置文件位置\"><a class=\"header-anchor\" href=\"#动态背景配置文件位置\">☆</a>动态背景配置文件位置</h4>\n<p>\\hexo\\themes\\next\\source\\lib\\canvas-nest\\canvas-nest.min.js</p>\n<p>修改<a href=\"https://github.com/hustcc/canvas-nest.js/blob/master/README-zh.md\" target=\"_blank\" rel=\"noopener\">方法</a></p>\n<h3 id=\"右侧目录前标位置\"><a class=\"header-anchor\" href=\"#右侧目录前标位置\">☆</a>右侧目录前标位置</h3>\n<p>在站点配置文件中</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">anchors:</span><br><span class=\"line\">    level: 2</span><br><span class=\"line\">    collisionSuffix: &apos;v&apos;</span><br><span class=\"line\">    permalink: true</span><br><span class=\"line\">    permalinkClass: header-anchor</span><br><span class=\"line\">    permalinkSymbol: ☆</span><br></pre></td></tr></table></figure>\n<h3 id=\"hexo-s-卡住加载不出来\"><a class=\"header-anchor\" href=\"#hexo-s-卡住加载不出来\">☆</a>hexo s 卡住加载不出来</h3>\n<p>最近在用hexo 搭建github pages 时，遇到一个问题，</p>\n<p>hexo安装没错，也能成功运行。启动也没错。</p>\n<p>就是不能访问。。</p>\n<p>原因是：</p>\n<p>你的电脑端口被占用了。</p>\n<p>hexo默认的端口是4000，如果你的电脑安装了福昕阅读器，，就是他，没错，坑爹吧！！！！</p>\n<p>启动hexo s 的时候，用这个命令，换一个端口。</p>\n<p>hexo s -p 5000</p>\n<p>换成5000端口，果断可以访问。</p>\n<p>当前时间：2018-05-26 21:59:48</p>\n<h3 id=\"末尾版权信息\"><a class=\"header-anchor\" href=\"#末尾版权信息\">☆</a>末尾版权信息</h3>\n<p>hexo next自带版权开启</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#Declare license on posts</span><br><span class=\"line\">#版权信息</span><br><span class=\"line\">post_copyright:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  license: CC BY-NC-SA 4.0</span><br><span class=\"line\">  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh</span><br></pre></td></tr></table></figure>\n<p>配置文件路径：\\hexo\\themes\\next\\layout_macro\\post-copyright.swig</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"addition\">+&#123;% if page.copyright %&#125;</span></span><br><span class=\"line\">&lt;ul class=\"post-copyright\"&gt;</span><br><span class=\"line\">  &lt;li class=\"post-copyright-author\"&gt;</span><br><span class=\"line\">    &lt;strong&gt;&#123;&#123; __('post.copyright.author') + __('symbol.colon') &#125;&#125;&lt;/strong&gt;</span><br><span class=\"line\">    &#123;&#123; post.author | default(config.author) &#125;&#125;</span><br><span class=\"line\">  &lt;/li&gt;</span><br><span class=\"line\">  &lt;li class=\"post-copyright-link\"&gt;</span><br><span class=\"line\">    &lt;strong&gt;&#123;&#123; __('post.copyright.link') + __('symbol.colon') &#125;&#125;&lt;/strong&gt;</span><br><span class=\"line\">    &lt;a href=\"&#123;&#123; post.url | default(post.permalink) &#125;&#125;\" title=\"&#123;&#123; post.title &#125;&#125;\"&gt;&#123;&#123; post.url | default(post.permalink) &#125;&#125;&lt;/a&gt;</span><br><span class=\"line\">  &lt;/li&gt;</span><br><span class=\"line\">  &lt;li class=\"post-copyright-license\"&gt;</span><br><span class=\"line\">    &lt;strong&gt;&#123;&#123; __('post.copyright.license_title') + __('symbol.colon') &#125;&#125; &lt;/strong&gt;</span><br><span class=\"line\">    &#123;&#123; __('post.copyright.license_content', theme.post_copyright.license_url, theme.post_copyright.license) &#125;&#125;</span><br><span class=\"line\">  &lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"><span class=\"addition\">+&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>\n<p>布局文件路径：\\hexo\\themes\\next\\layout_macro\\post.swig</p>\n<p>自定义版权配置文件路径：\\hexo\\themes\\next\\layout_macro\\my-copyright.swig</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div&gt;</span><br><span class=\"line\">      &#123;% if not is_index %&#125;</span><br><span class=\"line\">        &#123;% include &apos;my-copyright.swig&apos; %&#125;</span><br><span class=\"line\">      &#123;% endif %&#125;</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"首页隐藏指定文章\"><a class=\"header-anchor\" href=\"#首页隐藏指定文章\">☆</a>首页隐藏指定文章</h3>\n<p>修改主题的index.swig：\\hexo\\themes\\next\\layout\\index.swig</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% block content %&#125;</span><br><span class=\"line\">  &lt;section id=\"posts\" class=\"posts-expand\"&gt;</span><br><span class=\"line\">    &#123;% for post in page.posts %&#125;</span><br><span class=\"line\"><span class=\"addition\">+      &#123;% if post.notshow != true %&#125;  </span></span><br><span class=\"line\">        &#123;&#123; post_template.render(post, true) &#125;&#125;</span><br><span class=\"line\"><span class=\"addition\">+      &#123;% endif %&#125;           </span></span><br><span class=\"line\">    &#123;% endfor %&#125;</span><br><span class=\"line\">  &lt;/section&gt;</span><br></pre></td></tr></table></figure>\n<p>未完待续······</p>\n"},{"title":"hexo的HttpRequestException问题","copyright":true,"abbrlink":"b04d82e3","date":"2018-03-05T08:15:08.000Z","password":null,"_content":"\n今天同步hexo的时候突然出现了这样的报错\n\n```\nfatal: HttpRequestException encountered.\n   ▒▒▒▒▒▒▒▒ʱ▒▒▒▒\nbash: /dev/tty: No such device or address\nerror: failed to execute prompt script (exit code 1)\nfatal: could not read Username for 'https://github.com': No error\nFATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html\nError: fatal: HttpRequestException encountered.\n   ��������ʱ����\nbash: /dev/tty: No such device or address\nerror: failed to execute prompt script (exit code 1)\nfatal: could not read Username for 'https://github.com': No error\n\n    at ChildProcess.<anonymous> (H:\\hexo\\node_modules\\hexo-util\\lib\\spawn.js:37:17)\n    at emitTwo (events.js:126:13)\n    at ChildProcess.emit (events.js:214:7)\n    at ChildProcess.cp.emit (H:\\hexo\\node_modules\\cross-spawn\\lib\\enoent.js:40:29)\n    at maybeClose (internal/child_process.js:925:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:209:5)\n```\n\n这个问题困扰了很久，解决办法是更改` 站点配置文件 `\n\n原来是\n```\ndeploy:\n  type: git\n  repository: https://github.com/zyd16888/zyd16888.github.io.git\n  branch: master\n\n```\n改成\n```\ndeploy:\n  type: git\n  repository: git@github.com:zyd16888/zyd16888.github.io.git\n  branch: master\n```\n\n问题解决···········出错原因表面看上去是应为https协议问题，改成ssh协议就行，不过hexo应该是支持https协议的········\n\n\n\n\n","source":"_posts/hexo的HttpRequestException问题.md","raw":"---\ntitle: hexo的HttpRequestException问题\ntags:\n  - hexo\ncategories: hexo\ncopyright: true\nabbrlink: b04d82e3\ndate: 2018-03-05 16:15:08\npassword:\n---\n\n今天同步hexo的时候突然出现了这样的报错\n\n```\nfatal: HttpRequestException encountered.\n   ▒▒▒▒▒▒▒▒ʱ▒▒▒▒\nbash: /dev/tty: No such device or address\nerror: failed to execute prompt script (exit code 1)\nfatal: could not read Username for 'https://github.com': No error\nFATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html\nError: fatal: HttpRequestException encountered.\n   ��������ʱ����\nbash: /dev/tty: No such device or address\nerror: failed to execute prompt script (exit code 1)\nfatal: could not read Username for 'https://github.com': No error\n\n    at ChildProcess.<anonymous> (H:\\hexo\\node_modules\\hexo-util\\lib\\spawn.js:37:17)\n    at emitTwo (events.js:126:13)\n    at ChildProcess.emit (events.js:214:7)\n    at ChildProcess.cp.emit (H:\\hexo\\node_modules\\cross-spawn\\lib\\enoent.js:40:29)\n    at maybeClose (internal/child_process.js:925:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:209:5)\n```\n\n这个问题困扰了很久，解决办法是更改` 站点配置文件 `\n\n原来是\n```\ndeploy:\n  type: git\n  repository: https://github.com/zyd16888/zyd16888.github.io.git\n  branch: master\n\n```\n改成\n```\ndeploy:\n  type: git\n  repository: git@github.com:zyd16888/zyd16888.github.io.git\n  branch: master\n```\n\n问题解决···········出错原因表面看上去是应为https协议问题，改成ssh协议就行，不过hexo应该是支持https协议的········\n\n\n\n\n","slug":"hexo的HttpRequestException问题","published":1,"updated":"2020-02-20T06:06:59.403Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td38000xfkupty9l91be","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>今天同步hexo的时候突然出现了这样的报错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatal: HttpRequestException encountered.</span><br><span class=\"line\">   ▒▒▒▒▒▒▒▒ʱ▒▒▒▒</span><br><span class=\"line\">bash: /dev/tty: No such device or address</span><br><span class=\"line\">error: failed to execute prompt script (exit code 1)</span><br><span class=\"line\">fatal: could not read Username for &apos;https://github.com&apos;: No error</span><br><span class=\"line\">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class=\"line\">Error: fatal: HttpRequestException encountered.</span><br><span class=\"line\">   ��������ʱ����</span><br><span class=\"line\">bash: /dev/tty: No such device or address</span><br><span class=\"line\">error: failed to execute prompt script (exit code 1)</span><br><span class=\"line\">fatal: could not read Username for &apos;https://github.com&apos;: No error</span><br><span class=\"line\"></span><br><span class=\"line\">    at ChildProcess.&lt;anonymous&gt; (H:\\hexo\\node_modules\\hexo-util\\lib\\spawn.js:37:17)</span><br><span class=\"line\">    at emitTwo (events.js:126:13)</span><br><span class=\"line\">    at ChildProcess.emit (events.js:214:7)</span><br><span class=\"line\">    at ChildProcess.cp.emit (H:\\hexo\\node_modules\\cross-spawn\\lib\\enoent.js:40:29)</span><br><span class=\"line\">    at maybeClose (internal/child_process.js:925:16)</span><br><span class=\"line\">    at Process.ChildProcess._handle.onexit (internal/child_process.js:209:5)</span><br></pre></td></tr></table></figure>\n<p>这个问题困扰了很久，解决办法是更改<code>站点配置文件</code></p>\n<p>原来是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: https://github.com/zyd16888/zyd16888.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: git@github.com:zyd16888/zyd16888.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>问题解决···········出错原因表面看上去是应为https协议问题，改成ssh协议就行，不过hexo应该是支持https协议的········</p>\n","site":{"data":{}},"length":1287,"excerpt":"","more":"<p>今天同步hexo的时候突然出现了这样的报错</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatal: HttpRequestException encountered.</span><br><span class=\"line\">   ▒▒▒▒▒▒▒▒ʱ▒▒▒▒</span><br><span class=\"line\">bash: /dev/tty: No such device or address</span><br><span class=\"line\">error: failed to execute prompt script (exit code 1)</span><br><span class=\"line\">fatal: could not read Username for &apos;https://github.com&apos;: No error</span><br><span class=\"line\">FATAL Something&apos;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class=\"line\">Error: fatal: HttpRequestException encountered.</span><br><span class=\"line\">   ��������ʱ����</span><br><span class=\"line\">bash: /dev/tty: No such device or address</span><br><span class=\"line\">error: failed to execute prompt script (exit code 1)</span><br><span class=\"line\">fatal: could not read Username for &apos;https://github.com&apos;: No error</span><br><span class=\"line\"></span><br><span class=\"line\">    at ChildProcess.&lt;anonymous&gt; (H:\\hexo\\node_modules\\hexo-util\\lib\\spawn.js:37:17)</span><br><span class=\"line\">    at emitTwo (events.js:126:13)</span><br><span class=\"line\">    at ChildProcess.emit (events.js:214:7)</span><br><span class=\"line\">    at ChildProcess.cp.emit (H:\\hexo\\node_modules\\cross-spawn\\lib\\enoent.js:40:29)</span><br><span class=\"line\">    at maybeClose (internal/child_process.js:925:16)</span><br><span class=\"line\">    at Process.ChildProcess._handle.onexit (internal/child_process.js:209:5)</span><br></pre></td></tr></table></figure>\n<p>这个问题困扰了很久，解决办法是更改<code>站点配置文件</code></p>\n<p>原来是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: https://github.com/zyd16888/zyd16888.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>改成</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repository: git@github.com:zyd16888/zyd16888.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>问题解决···········出错原因表面看上去是应为https协议问题，改成ssh协议就行，不过hexo应该是支持https协议的········</p>\n"},{"title":"linux常用命令","copyright":true,"abbrlink":"fe4ef317","notshow":false,"description":"记录一下常用命令，方便复习、查找","image":["https://data.singlelovely.cn/CoverPicture/fe4ef317.png!CoverPicture"],"date":"2020-07-21T05:49:00.000Z","password":null,"photos":[],"sticky":null,"_content":"\n### 群组管理\n\n- addgroup friends\n    - 创建\n\n- usermod\n    - 修改用户账户\n    - -l：对用户重命名，但是 /home 目录中的用户家目录名不会改变，需要手动修改\n    - -g：修改用户所在群组。此用户的家目录里的所有文件的所在群组会相应改变\n    - -a：追加\n    - usermod -g friends dong\n    - usermod -G friends,happy,funny dong\n    - usermod -aG good dong\n\n- groups\n    - 获知用户属于哪个群组\n\n- delgroup\n    - 删除群组\n\n- chown\n    - 改变文件的所有者\n    - chown dong file.txt\n\n- chgrp\n    - 改变文件的群组\n    - chgrp dong file.txt\n    - -R：递归\n    - chown -R oscar:oscar /home/dong\n\n\n\n### 权限管理\n\n- chmod \n    - 修改访问权限\n\n目录权限说明：\n\n- d：英语 directory 的缩写，表示“目录”。就是说这是一个目录；\n- l：英语 link 的缩写，表示“链接”。就是说这是一个链接；\n- r：英语 read 的缩写，表示“读”。就是说可以读这个文件；\n- w：英语 write 的缩写，表示“写”。就是说可以写这个文件，也就是可- 以修改；\n- x：英语 execute 的缩写，表示“执行，运行”。就是说可以运行这个文件。\n\n文件访问权限：`-rw-r--r--`\n\n- - 第一个短横表示这是一个普通文件。如果此处是 d，那么表示目录；如果是 l，那么表示链接等等；\n- rw- 表明文件的所有者（此处是 oscar）对文件有读、写的权限，但是没有运行的权限。也很好理解，因为这是一个普通文件，默认没有可执行的属性。记住：如果有 w 权限（写的权限），那么表明也有删除此文件的权限；\n- r-- 表明文件所在的群组（此处是 oscar）的其他用户（除了 oscar 之外）只可以读此文件，但不能写也不能执行，“可远观而不可亵玩焉”；\n- r-- 表示其他用户（除去 oscar 这个群组的用户）只可以读此文件，但不能写也不能执行。\n\n- 数字管理权限\n    - r : 4 , w : 2 , x : 1\n    - chmod 640 renamed_file\n        - 文件所有者读写\n        - 文件所在群组其他用户读\n        - 除此以外其他用户无权限\n\n|权限|数字|计算|\n|:---|:---|:---|\n|——|0|0+0+0|\n|r-|4|4+0+0|\n|-w-|2|0+2+0|\n|-x|1|0+0+1|\n|rw-|6|4+2+0|\n|-wx|3|0+2+1|\n|r-x|5|4+0+1|\n|rwx|7|4+2+1|\n\n- 字母分配权限\n    - u：user 的缩写，是英语“用户”的意思。表示所有者；\n    - g：group 的缩写，是英语“群组”的意思。表示群组用户；\n    - o：other 的缩写，是英语“其他”的意思。表示其他用户；\n    - a：all 的缩写，是英语“所有”的意思。表示所有用户。\n    - +：加号，表示添加权限；\n    - -：减号，表示去除权限；\n    - =：等号，表示分配权限。\n\n```\n#文件 file.txt 的所有者增加读和运行的权限。\nchmod u+rx file.txt\n\n#文件 file.txt 的群组其他用户增加读的权限。\nchmod g+r file.txt \n\n#文件 file.txt 的其他用户移除读的权限。\nchmod o-r file.txt \n\n#文件 file.txt 的群组其他用户增加读的权限，其他用户移除读的权限。\nchmod g+r o-r file.txt \n\n#文件 file.txt 的群组其他用户和其他用户均移除读的权限。\nchmod go-r file.txt \n\n#文件 file.txt 的所有用户增加运行的权限。\nchmod +x file.txt \n\n#文件 file.txt 的所有者分配读，写和执行的权限；\n#群组其他用户分配读的权限，不能写或执行；\n#其他用户没有任何权限。\nchmod u=rwx,g=r,o=- file.txt \n```\n\n- -R 参数：递归地修改访问权限\n\n### 编辑\n\n- nano\n    - -m 激活鼠标\n    - -i 激活自动缩进\n    - -A 激活智能Home\n    - `/etc/nanorc` 配置文件\n\n```  .nanorc\nset mouse\nset autoindent\nset smarthome\n```\n\n### 软件相关\n\n源文件：`/etc/apt/sources.list`\n\n更新软件包缓存：`sudo apt update`\n\n更新软件包：`sudo apt upgrade`\n\n查询软件包： `apt-cache show package_name`\n\n安装软件包： `sudo dpkg -i *.deb`\n\n卸载：`sudo dpkg -r xxx`\n\n安装手册\n```\nsudo apt-get install manpages-de  manpages-de-dev  manpages-dev glibc-doc manpages-posix-dev manpages-posix\n```\napropos : 查找功能\n\n### 查找文件\n\n- locate\n    - locate renamed_file\n    - 在数据库中查找\n- sudo updatedb\n    - 更新文件数据库\n- find\n    - find \"何处\"\"何物\"\"做什么\"\n    - find /var/log -name \"syslog\"\n    - find /var -size +10M\n    - find /var -size -50k\n    - find /var -size +20G\n    - -type d ：只查找目录类型。d 是 directory 的首字母，表示“目录”\n    - -type f ：只查找文件类型。f 是 file 的首字母，表示“文件”\n\n- grep 查找数据\n    - grep text file\n    - -i 参数：忽略大小写\n    - -n 参数：显示行号\n    - -v 参数：只显示文本不在的行\n    - -r 参数：在所有子目录和子文件中查找\n    - -E 参数：正则表达式 ： `grep -E Alias .bashrc` 或 `egrep`\n\n### 流、输出重定向、输入、管道\n- \\> results.txt ：将标准输出重定向到 results.txt 文件中\n- 2> errors.log ：将标准错误输出重定向到 errors.log 文件中\n- 2>&1：将标准错误输出重定向到与标准输出相同的地方\n    - `cat not_exist_file.csv > results.txt 2>&1`\n    - `cat not_exist_file.csv >> results.txt 2>&1`\n\n- <：从文件中读取\n- <<：从键盘读取\n    - `sort -n << END` END：结束符\n\n管道符号 | 可以将命令连接起来，好像一个个对接的管道一样，前一个命令的输出成为后一个命令的输入\n\n### 监视活动\n\n- w\n- date\n- uptime：运行时间\n- tload：负载变化\n- ps, ps -ef, ps -efH, ps -u user\n- ps -aux ：通过 CPU 和内存使用来过滤进程\n    - ps -aux | less\n    - `ps -aux --sort -pcpu | less` 根据 CPU 使用率来降序排列\n    - `ps -aux --sort -pmem | less`根据内存使用率来降序排列\n    - `ps -aux --sort -pcpu,+pmem | head`将 CPU 和 内存 参数合并到一起，并通过管道显示前 10 个结果\n- pstree：以树形结构显示进程\n- top：进程的动态列表\n- Ctrl+C\n- kill\n- kill 程序名\n- halt：关闭系统\n- reboot：重启系统\n- poweroff：直接关机\n---\n- at 命令：延时执行一个程序\n    - at 22:10\n    - at now +7 weeks : 7周后执行\n- atq：列出正在执行的at任务\n- atrm：删除正在执行的at任务\n- crontab：定时执行任务\n    - -e：修改crontab文件\n    - -l：显示crontab文件\n    - -r：删除crontab文件\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/linux常用命令.md","raw":"---\ntitle: linux常用命令\ncopyright: true\nabbrlink: fe4ef317\nnotshow: false\ndescription: 记录一下常用命令，方便复习、查找\nimage:\n  - 'https://data.singlelovely.cn/CoverPicture/fe4ef317.png!CoverPicture'\ntags:\n  - Linux\n  - 学习\ncategories: Linux\ndate: 2020-07-21 13:49:00\npassword:\nphotos:\nsticky:\n---\n\n### 群组管理\n\n- addgroup friends\n    - 创建\n\n- usermod\n    - 修改用户账户\n    - -l：对用户重命名，但是 /home 目录中的用户家目录名不会改变，需要手动修改\n    - -g：修改用户所在群组。此用户的家目录里的所有文件的所在群组会相应改变\n    - -a：追加\n    - usermod -g friends dong\n    - usermod -G friends,happy,funny dong\n    - usermod -aG good dong\n\n- groups\n    - 获知用户属于哪个群组\n\n- delgroup\n    - 删除群组\n\n- chown\n    - 改变文件的所有者\n    - chown dong file.txt\n\n- chgrp\n    - 改变文件的群组\n    - chgrp dong file.txt\n    - -R：递归\n    - chown -R oscar:oscar /home/dong\n\n\n\n### 权限管理\n\n- chmod \n    - 修改访问权限\n\n目录权限说明：\n\n- d：英语 directory 的缩写，表示“目录”。就是说这是一个目录；\n- l：英语 link 的缩写，表示“链接”。就是说这是一个链接；\n- r：英语 read 的缩写，表示“读”。就是说可以读这个文件；\n- w：英语 write 的缩写，表示“写”。就是说可以写这个文件，也就是可- 以修改；\n- x：英语 execute 的缩写，表示“执行，运行”。就是说可以运行这个文件。\n\n文件访问权限：`-rw-r--r--`\n\n- - 第一个短横表示这是一个普通文件。如果此处是 d，那么表示目录；如果是 l，那么表示链接等等；\n- rw- 表明文件的所有者（此处是 oscar）对文件有读、写的权限，但是没有运行的权限。也很好理解，因为这是一个普通文件，默认没有可执行的属性。记住：如果有 w 权限（写的权限），那么表明也有删除此文件的权限；\n- r-- 表明文件所在的群组（此处是 oscar）的其他用户（除了 oscar 之外）只可以读此文件，但不能写也不能执行，“可远观而不可亵玩焉”；\n- r-- 表示其他用户（除去 oscar 这个群组的用户）只可以读此文件，但不能写也不能执行。\n\n- 数字管理权限\n    - r : 4 , w : 2 , x : 1\n    - chmod 640 renamed_file\n        - 文件所有者读写\n        - 文件所在群组其他用户读\n        - 除此以外其他用户无权限\n\n|权限|数字|计算|\n|:---|:---|:---|\n|——|0|0+0+0|\n|r-|4|4+0+0|\n|-w-|2|0+2+0|\n|-x|1|0+0+1|\n|rw-|6|4+2+0|\n|-wx|3|0+2+1|\n|r-x|5|4+0+1|\n|rwx|7|4+2+1|\n\n- 字母分配权限\n    - u：user 的缩写，是英语“用户”的意思。表示所有者；\n    - g：group 的缩写，是英语“群组”的意思。表示群组用户；\n    - o：other 的缩写，是英语“其他”的意思。表示其他用户；\n    - a：all 的缩写，是英语“所有”的意思。表示所有用户。\n    - +：加号，表示添加权限；\n    - -：减号，表示去除权限；\n    - =：等号，表示分配权限。\n\n```\n#文件 file.txt 的所有者增加读和运行的权限。\nchmod u+rx file.txt\n\n#文件 file.txt 的群组其他用户增加读的权限。\nchmod g+r file.txt \n\n#文件 file.txt 的其他用户移除读的权限。\nchmod o-r file.txt \n\n#文件 file.txt 的群组其他用户增加读的权限，其他用户移除读的权限。\nchmod g+r o-r file.txt \n\n#文件 file.txt 的群组其他用户和其他用户均移除读的权限。\nchmod go-r file.txt \n\n#文件 file.txt 的所有用户增加运行的权限。\nchmod +x file.txt \n\n#文件 file.txt 的所有者分配读，写和执行的权限；\n#群组其他用户分配读的权限，不能写或执行；\n#其他用户没有任何权限。\nchmod u=rwx,g=r,o=- file.txt \n```\n\n- -R 参数：递归地修改访问权限\n\n### 编辑\n\n- nano\n    - -m 激活鼠标\n    - -i 激活自动缩进\n    - -A 激活智能Home\n    - `/etc/nanorc` 配置文件\n\n```  .nanorc\nset mouse\nset autoindent\nset smarthome\n```\n\n### 软件相关\n\n源文件：`/etc/apt/sources.list`\n\n更新软件包缓存：`sudo apt update`\n\n更新软件包：`sudo apt upgrade`\n\n查询软件包： `apt-cache show package_name`\n\n安装软件包： `sudo dpkg -i *.deb`\n\n卸载：`sudo dpkg -r xxx`\n\n安装手册\n```\nsudo apt-get install manpages-de  manpages-de-dev  manpages-dev glibc-doc manpages-posix-dev manpages-posix\n```\napropos : 查找功能\n\n### 查找文件\n\n- locate\n    - locate renamed_file\n    - 在数据库中查找\n- sudo updatedb\n    - 更新文件数据库\n- find\n    - find \"何处\"\"何物\"\"做什么\"\n    - find /var/log -name \"syslog\"\n    - find /var -size +10M\n    - find /var -size -50k\n    - find /var -size +20G\n    - -type d ：只查找目录类型。d 是 directory 的首字母，表示“目录”\n    - -type f ：只查找文件类型。f 是 file 的首字母，表示“文件”\n\n- grep 查找数据\n    - grep text file\n    - -i 参数：忽略大小写\n    - -n 参数：显示行号\n    - -v 参数：只显示文本不在的行\n    - -r 参数：在所有子目录和子文件中查找\n    - -E 参数：正则表达式 ： `grep -E Alias .bashrc` 或 `egrep`\n\n### 流、输出重定向、输入、管道\n- \\> results.txt ：将标准输出重定向到 results.txt 文件中\n- 2> errors.log ：将标准错误输出重定向到 errors.log 文件中\n- 2>&1：将标准错误输出重定向到与标准输出相同的地方\n    - `cat not_exist_file.csv > results.txt 2>&1`\n    - `cat not_exist_file.csv >> results.txt 2>&1`\n\n- <：从文件中读取\n- <<：从键盘读取\n    - `sort -n << END` END：结束符\n\n管道符号 | 可以将命令连接起来，好像一个个对接的管道一样，前一个命令的输出成为后一个命令的输入\n\n### 监视活动\n\n- w\n- date\n- uptime：运行时间\n- tload：负载变化\n- ps, ps -ef, ps -efH, ps -u user\n- ps -aux ：通过 CPU 和内存使用来过滤进程\n    - ps -aux | less\n    - `ps -aux --sort -pcpu | less` 根据 CPU 使用率来降序排列\n    - `ps -aux --sort -pmem | less`根据内存使用率来降序排列\n    - `ps -aux --sort -pcpu,+pmem | head`将 CPU 和 内存 参数合并到一起，并通过管道显示前 10 个结果\n- pstree：以树形结构显示进程\n- top：进程的动态列表\n- Ctrl+C\n- kill\n- kill 程序名\n- halt：关闭系统\n- reboot：重启系统\n- poweroff：直接关机\n---\n- at 命令：延时执行一个程序\n    - at 22:10\n    - at now +7 weeks : 7周后执行\n- atq：列出正在执行的at任务\n- atrm：删除正在执行的at任务\n- crontab：定时执行任务\n    - -e：修改crontab文件\n    - -l：显示crontab文件\n    - -r：删除crontab文件\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"linux常用命令","published":1,"updated":"2020-08-24T06:01:10.788Z","comments":1,"layout":"post","link":"","_id":"ckec2td39000yfkupxsc2qpvw","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h3 id=\"群组管理\"><a class=\"header-anchor\" href=\"#群组管理\">☆</a>群组管理</h3>\n<ul>\n<li>\n<p>addgroup friends</p>\n<ul>\n<li>创建</li>\n</ul>\n</li>\n<li>\n<p>usermod</p>\n<ul>\n<li>修改用户账户</li>\n<li>-l：对用户重命名，但是 /home 目录中的用户家目录名不会改变，需要手动修改</li>\n<li>-g：修改用户所在群组。此用户的家目录里的所有文件的所在群组会相应改变</li>\n<li>-a：追加</li>\n<li>usermod -g friends dong</li>\n<li>usermod -G friends,happy,funny dong</li>\n<li>usermod -aG good dong</li>\n</ul>\n</li>\n<li>\n<p>groups</p>\n<ul>\n<li>获知用户属于哪个群组</li>\n</ul>\n</li>\n<li>\n<p>delgroup</p>\n<ul>\n<li>删除群组</li>\n</ul>\n</li>\n<li>\n<p>chown</p>\n<ul>\n<li>改变文件的所有者</li>\n<li>chown dong file.txt</li>\n</ul>\n</li>\n<li>\n<p>chgrp</p>\n<ul>\n<li>改变文件的群组</li>\n<li>chgrp dong file.txt</li>\n<li>-R：递归</li>\n<li>chown -R oscar:oscar /home/dong</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"权限管理\"><a class=\"header-anchor\" href=\"#权限管理\">☆</a>权限管理</h3>\n<ul>\n<li>chmod\n<ul>\n<li>修改访问权限</li>\n</ul>\n</li>\n</ul>\n<p>目录权限说明：</p>\n<ul>\n<li>d：英语 directory 的缩写，表示“目录”。就是说这是一个目录；</li>\n<li>l：英语 link 的缩写，表示“链接”。就是说这是一个链接；</li>\n<li>r：英语 read 的缩写，表示“读”。就是说可以读这个文件；</li>\n<li>w：英语 write 的缩写，表示“写”。就是说可以写这个文件，也就是可- 以修改；</li>\n<li>x：英语 execute 的缩写，表示“执行，运行”。就是说可以运行这个文件。</li>\n</ul>\n<p>文件访问权限：<code>-rw-r--r--</code></p>\n<ul>\n<li>\n<ul>\n<li>第一个短横表示这是一个普通文件。如果此处是 d，那么表示目录；如果是 l，那么表示链接等等；</li>\n</ul>\n</li>\n<li>\n<p>rw- 表明文件的所有者（此处是 oscar）对文件有读、写的权限，但是没有运行的权限。也很好理解，因为这是一个普通文件，默认没有可执行的属性。记住：如果有 w 权限（写的权限），那么表明也有删除此文件的权限；</p>\n</li>\n<li>\n<p>r-- 表明文件所在的群组（此处是 oscar）的其他用户（除了 oscar 之外）只可以读此文件，但不能写也不能执行，“可远观而不可亵玩焉”；</p>\n</li>\n<li>\n<p>r-- 表示其他用户（除去 oscar 这个群组的用户）只可以读此文件，但不能写也不能执行。</p>\n</li>\n<li>\n<p>数字管理权限</p>\n<ul>\n<li>r : 4 , w : 2 , x : 1</li>\n<li>chmod 640 renamed_file\n<ul>\n<li>文件所有者读写</li>\n<li>文件所在群组其他用户读</li>\n<li>除此以外其他用户无权限</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">权限</th>\n<th style=\"text-align:left\">数字</th>\n<th style=\"text-align:left\">计算</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">——</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">0+0+0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">r-</td>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">4+0+0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-w-</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">0+2+0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-x</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">0+0+1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">rw-</td>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:left\">4+2+0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-wx</td>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">0+2+1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">r-x</td>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\">4+0+1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">rwx</td>\n<td style=\"text-align:left\">7</td>\n<td style=\"text-align:left\">4+2+1</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>字母分配权限\n<ul>\n<li>u：user 的缩写，是英语“用户”的意思。表示所有者；</li>\n<li>g：group 的缩写，是英语“群组”的意思。表示群组用户；</li>\n<li>o：other 的缩写，是英语“其他”的意思。表示其他用户；</li>\n<li>a：all 的缩写，是英语“所有”的意思。表示所有用户。</li>\n<li>+：加号，表示添加权限；</li>\n<li>-：减号，表示去除权限；</li>\n<li>=：等号，表示分配权限。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#文件 file.txt 的所有者增加读和运行的权限。</span><br><span class=\"line\">chmod u+rx file.txt</span><br><span class=\"line\"></span><br><span class=\"line\">#文件 file.txt 的群组其他用户增加读的权限。</span><br><span class=\"line\">chmod g+r file.txt </span><br><span class=\"line\"></span><br><span class=\"line\">#文件 file.txt 的其他用户移除读的权限。</span><br><span class=\"line\">chmod o-r file.txt </span><br><span class=\"line\"></span><br><span class=\"line\">#文件 file.txt 的群组其他用户增加读的权限，其他用户移除读的权限。</span><br><span class=\"line\">chmod g+r o-r file.txt </span><br><span class=\"line\"></span><br><span class=\"line\">#文件 file.txt 的群组其他用户和其他用户均移除读的权限。</span><br><span class=\"line\">chmod go-r file.txt </span><br><span class=\"line\"></span><br><span class=\"line\">#文件 file.txt 的所有用户增加运行的权限。</span><br><span class=\"line\">chmod +x file.txt </span><br><span class=\"line\"></span><br><span class=\"line\">#文件 file.txt 的所有者分配读，写和执行的权限；</span><br><span class=\"line\">#群组其他用户分配读的权限，不能写或执行；</span><br><span class=\"line\">#其他用户没有任何权限。</span><br><span class=\"line\">chmod u=rwx,g=r,o=- file.txt</span><br></pre></td></tr></table></figure>\n<ul>\n<li>-R 参数：递归地修改访问权限</li>\n</ul>\n<h3 id=\"编辑\"><a class=\"header-anchor\" href=\"#编辑\">☆</a>编辑</h3>\n<ul>\n<li>nano\n<ul>\n<li>-m 激活鼠标</li>\n<li>-i 激活自动缩进</li>\n<li>-A 激活智能Home</li>\n<li><code>/etc/nanorc</code> 配置文件</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set mouse</span><br><span class=\"line\">set autoindent</span><br><span class=\"line\">set smarthome</span><br></pre></td></tr></table></figure>\n<h3 id=\"软件相关\"><a class=\"header-anchor\" href=\"#软件相关\">☆</a>软件相关</h3>\n<p>源文件：<code>/etc/apt/sources.list</code></p>\n<p>更新软件包缓存：<code>sudo apt update</code></p>\n<p>更新软件包：<code>sudo apt upgrade</code></p>\n<p>查询软件包： <code>apt-cache show package_name</code></p>\n<p>安装软件包： <code>sudo dpkg -i *.deb</code></p>\n<p>卸载：<code>sudo dpkg -r xxx</code></p>\n<p>安装手册</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install manpages-de  manpages-de-dev  manpages-dev glibc-doc manpages-posix-dev manpages-posix</span><br></pre></td></tr></table></figure>\n<p>apropos : 查找功能</p>\n<h3 id=\"查找文件\"><a class=\"header-anchor\" href=\"#查找文件\">☆</a>查找文件</h3>\n<ul>\n<li>\n<p>locate</p>\n<ul>\n<li>locate renamed_file</li>\n<li>在数据库中查找</li>\n</ul>\n</li>\n<li>\n<p>sudo updatedb</p>\n<ul>\n<li>更新文件数据库</li>\n</ul>\n</li>\n<li>\n<p>find</p>\n<ul>\n<li>find “何处”“何物”“做什么”</li>\n<li>find /var/log -name “syslog”</li>\n<li>find /var -size +10M</li>\n<li>find /var -size -50k</li>\n<li>find /var -size +20G</li>\n<li>-type d ：只查找目录类型。d 是 directory 的首字母，表示“目录”</li>\n<li>-type f ：只查找文件类型。f 是 file 的首字母，表示“文件”</li>\n</ul>\n</li>\n<li>\n<p>grep 查找数据</p>\n<ul>\n<li>grep text file</li>\n<li>-i 参数：忽略大小写</li>\n<li>-n 参数：显示行号</li>\n<li>-v 参数：只显示文本不在的行</li>\n<li>-r 参数：在所有子目录和子文件中查找</li>\n<li>-E 参数：正则表达式 ： <code>grep -E Alias .bashrc</code> 或 <code>egrep</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"流-输出重定向-输入-管道\"><a class=\"header-anchor\" href=\"#流-输出重定向-输入-管道\">☆</a>流、输出重定向、输入、管道</h3>\n<ul>\n<li>\n<p>&gt; results.txt ：将标准输出重定向到 results.txt 文件中</p>\n</li>\n<li>\n<p>2&gt; errors.log ：将标准错误输出重定向到 errors.log 文件中</p>\n</li>\n<li>\n<p>2&gt;&amp;1：将标准错误输出重定向到与标准输出相同的地方</p>\n<ul>\n<li><code>cat not_exist_file.csv &gt; results.txt 2&gt;&amp;1</code></li>\n<li><code>cat not_exist_file.csv &gt;&gt; results.txt 2&gt;&amp;1</code></li>\n</ul>\n</li>\n<li>\n<p>&lt;：从文件中读取</p>\n</li>\n<li>\n<p>&lt;&lt;：从键盘读取</p>\n<ul>\n<li><code>sort -n &lt;&lt; END</code> END：结束符</li>\n</ul>\n</li>\n</ul>\n<p>管道符号 | 可以将命令连接起来，好像一个个对接的管道一样，前一个命令的输出成为后一个命令的输入</p>\n<h3 id=\"监视活动\"><a class=\"header-anchor\" href=\"#监视活动\">☆</a>监视活动</h3>\n<ul>\n<li>w</li>\n<li>date</li>\n<li>uptime：运行时间</li>\n<li>tload：负载变化</li>\n<li>ps, ps -ef, ps -efH, ps -u user</li>\n<li>ps -aux ：通过 CPU 和内存使用来过滤进程\n<ul>\n<li>ps -aux | less</li>\n<li><code>ps -aux --sort -pcpu | less</code> 根据 CPU 使用率来降序排列</li>\n<li><code>ps -aux --sort -pmem | less</code>根据内存使用率来降序排列</li>\n<li><code>ps -aux --sort -pcpu,+pmem | head</code>将 CPU 和 内存 参数合并到一起，并通过管道显示前 10 个结果</li>\n</ul>\n</li>\n<li>pstree：以树形结构显示进程</li>\n<li>top：进程的动态列表</li>\n<li>Ctrl+C</li>\n<li>kill</li>\n<li>kill 程序名</li>\n<li>halt：关闭系统</li>\n<li>reboot：重启系统</li>\n<li>poweroff：直接关机</li>\n</ul>\n<hr>\n<ul>\n<li>at 命令：延时执行一个程序\n<ul>\n<li>at 22:10</li>\n<li>at now +7 weeks : 7周后执行</li>\n</ul>\n</li>\n<li>atq：列出正在执行的at任务</li>\n<li>atrm：删除正在执行的at任务</li>\n<li>crontab：定时执行任务\n<ul>\n<li>-e：修改crontab文件</li>\n<li>-l：显示crontab文件</li>\n<li>-r：删除crontab文件</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":3092,"excerpt":"","more":"<h3 id=\"群组管理\"><a class=\"header-anchor\" href=\"#群组管理\">☆</a>群组管理</h3>\n<ul>\n<li>\n<p>addgroup friends</p>\n<ul>\n<li>创建</li>\n</ul>\n</li>\n<li>\n<p>usermod</p>\n<ul>\n<li>修改用户账户</li>\n<li>-l：对用户重命名，但是 /home 目录中的用户家目录名不会改变，需要手动修改</li>\n<li>-g：修改用户所在群组。此用户的家目录里的所有文件的所在群组会相应改变</li>\n<li>-a：追加</li>\n<li>usermod -g friends dong</li>\n<li>usermod -G friends,happy,funny dong</li>\n<li>usermod -aG good dong</li>\n</ul>\n</li>\n<li>\n<p>groups</p>\n<ul>\n<li>获知用户属于哪个群组</li>\n</ul>\n</li>\n<li>\n<p>delgroup</p>\n<ul>\n<li>删除群组</li>\n</ul>\n</li>\n<li>\n<p>chown</p>\n<ul>\n<li>改变文件的所有者</li>\n<li>chown dong file.txt</li>\n</ul>\n</li>\n<li>\n<p>chgrp</p>\n<ul>\n<li>改变文件的群组</li>\n<li>chgrp dong file.txt</li>\n<li>-R：递归</li>\n<li>chown -R oscar:oscar /home/dong</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"权限管理\"><a class=\"header-anchor\" href=\"#权限管理\">☆</a>权限管理</h3>\n<ul>\n<li>chmod\n<ul>\n<li>修改访问权限</li>\n</ul>\n</li>\n</ul>\n<p>目录权限说明：</p>\n<ul>\n<li>d：英语 directory 的缩写，表示“目录”。就是说这是一个目录；</li>\n<li>l：英语 link 的缩写，表示“链接”。就是说这是一个链接；</li>\n<li>r：英语 read 的缩写，表示“读”。就是说可以读这个文件；</li>\n<li>w：英语 write 的缩写，表示“写”。就是说可以写这个文件，也就是可- 以修改；</li>\n<li>x：英语 execute 的缩写，表示“执行，运行”。就是说可以运行这个文件。</li>\n</ul>\n<p>文件访问权限：<code>-rw-r--r--</code></p>\n<ul>\n<li>\n<ul>\n<li>第一个短横表示这是一个普通文件。如果此处是 d，那么表示目录；如果是 l，那么表示链接等等；</li>\n</ul>\n</li>\n<li>\n<p>rw- 表明文件的所有者（此处是 oscar）对文件有读、写的权限，但是没有运行的权限。也很好理解，因为这是一个普通文件，默认没有可执行的属性。记住：如果有 w 权限（写的权限），那么表明也有删除此文件的权限；</p>\n</li>\n<li>\n<p>r-- 表明文件所在的群组（此处是 oscar）的其他用户（除了 oscar 之外）只可以读此文件，但不能写也不能执行，“可远观而不可亵玩焉”；</p>\n</li>\n<li>\n<p>r-- 表示其他用户（除去 oscar 这个群组的用户）只可以读此文件，但不能写也不能执行。</p>\n</li>\n<li>\n<p>数字管理权限</p>\n<ul>\n<li>r : 4 , w : 2 , x : 1</li>\n<li>chmod 640 renamed_file\n<ul>\n<li>文件所有者读写</li>\n<li>文件所在群组其他用户读</li>\n<li>除此以外其他用户无权限</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">权限</th>\n<th style=\"text-align:left\">数字</th>\n<th style=\"text-align:left\">计算</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">——</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">0+0+0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">r-</td>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">4+0+0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-w-</td>\n<td style=\"text-align:left\">2</td>\n<td style=\"text-align:left\">0+2+0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-x</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">0+0+1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">rw-</td>\n<td style=\"text-align:left\">6</td>\n<td style=\"text-align:left\">4+2+0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">-wx</td>\n<td style=\"text-align:left\">3</td>\n<td style=\"text-align:left\">0+2+1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">r-x</td>\n<td style=\"text-align:left\">5</td>\n<td style=\"text-align:left\">4+0+1</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">rwx</td>\n<td style=\"text-align:left\">7</td>\n<td style=\"text-align:left\">4+2+1</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>字母分配权限\n<ul>\n<li>u：user 的缩写，是英语“用户”的意思。表示所有者；</li>\n<li>g：group 的缩写，是英语“群组”的意思。表示群组用户；</li>\n<li>o：other 的缩写，是英语“其他”的意思。表示其他用户；</li>\n<li>a：all 的缩写，是英语“所有”的意思。表示所有用户。</li>\n<li>+：加号，表示添加权限；</li>\n<li>-：减号，表示去除权限；</li>\n<li>=：等号，表示分配权限。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#文件 file.txt 的所有者增加读和运行的权限。</span><br><span class=\"line\">chmod u+rx file.txt</span><br><span class=\"line\"></span><br><span class=\"line\">#文件 file.txt 的群组其他用户增加读的权限。</span><br><span class=\"line\">chmod g+r file.txt </span><br><span class=\"line\"></span><br><span class=\"line\">#文件 file.txt 的其他用户移除读的权限。</span><br><span class=\"line\">chmod o-r file.txt </span><br><span class=\"line\"></span><br><span class=\"line\">#文件 file.txt 的群组其他用户增加读的权限，其他用户移除读的权限。</span><br><span class=\"line\">chmod g+r o-r file.txt </span><br><span class=\"line\"></span><br><span class=\"line\">#文件 file.txt 的群组其他用户和其他用户均移除读的权限。</span><br><span class=\"line\">chmod go-r file.txt </span><br><span class=\"line\"></span><br><span class=\"line\">#文件 file.txt 的所有用户增加运行的权限。</span><br><span class=\"line\">chmod +x file.txt </span><br><span class=\"line\"></span><br><span class=\"line\">#文件 file.txt 的所有者分配读，写和执行的权限；</span><br><span class=\"line\">#群组其他用户分配读的权限，不能写或执行；</span><br><span class=\"line\">#其他用户没有任何权限。</span><br><span class=\"line\">chmod u=rwx,g=r,o=- file.txt</span><br></pre></td></tr></table></figure>\n<ul>\n<li>-R 参数：递归地修改访问权限</li>\n</ul>\n<h3 id=\"编辑\"><a class=\"header-anchor\" href=\"#编辑\">☆</a>编辑</h3>\n<ul>\n<li>nano\n<ul>\n<li>-m 激活鼠标</li>\n<li>-i 激活自动缩进</li>\n<li>-A 激活智能Home</li>\n<li><code>/etc/nanorc</code> 配置文件</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set mouse</span><br><span class=\"line\">set autoindent</span><br><span class=\"line\">set smarthome</span><br></pre></td></tr></table></figure>\n<h3 id=\"软件相关\"><a class=\"header-anchor\" href=\"#软件相关\">☆</a>软件相关</h3>\n<p>源文件：<code>/etc/apt/sources.list</code></p>\n<p>更新软件包缓存：<code>sudo apt update</code></p>\n<p>更新软件包：<code>sudo apt upgrade</code></p>\n<p>查询软件包： <code>apt-cache show package_name</code></p>\n<p>安装软件包： <code>sudo dpkg -i *.deb</code></p>\n<p>卸载：<code>sudo dpkg -r xxx</code></p>\n<p>安装手册</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install manpages-de  manpages-de-dev  manpages-dev glibc-doc manpages-posix-dev manpages-posix</span><br></pre></td></tr></table></figure>\n<p>apropos : 查找功能</p>\n<h3 id=\"查找文件\"><a class=\"header-anchor\" href=\"#查找文件\">☆</a>查找文件</h3>\n<ul>\n<li>\n<p>locate</p>\n<ul>\n<li>locate renamed_file</li>\n<li>在数据库中查找</li>\n</ul>\n</li>\n<li>\n<p>sudo updatedb</p>\n<ul>\n<li>更新文件数据库</li>\n</ul>\n</li>\n<li>\n<p>find</p>\n<ul>\n<li>find “何处”“何物”“做什么”</li>\n<li>find /var/log -name “syslog”</li>\n<li>find /var -size +10M</li>\n<li>find /var -size -50k</li>\n<li>find /var -size +20G</li>\n<li>-type d ：只查找目录类型。d 是 directory 的首字母，表示“目录”</li>\n<li>-type f ：只查找文件类型。f 是 file 的首字母，表示“文件”</li>\n</ul>\n</li>\n<li>\n<p>grep 查找数据</p>\n<ul>\n<li>grep text file</li>\n<li>-i 参数：忽略大小写</li>\n<li>-n 参数：显示行号</li>\n<li>-v 参数：只显示文本不在的行</li>\n<li>-r 参数：在所有子目录和子文件中查找</li>\n<li>-E 参数：正则表达式 ： <code>grep -E Alias .bashrc</code> 或 <code>egrep</code></li>\n</ul>\n</li>\n</ul>\n<h3 id=\"流-输出重定向-输入-管道\"><a class=\"header-anchor\" href=\"#流-输出重定向-输入-管道\">☆</a>流、输出重定向、输入、管道</h3>\n<ul>\n<li>\n<p>&gt; results.txt ：将标准输出重定向到 results.txt 文件中</p>\n</li>\n<li>\n<p>2&gt; errors.log ：将标准错误输出重定向到 errors.log 文件中</p>\n</li>\n<li>\n<p>2&gt;&amp;1：将标准错误输出重定向到与标准输出相同的地方</p>\n<ul>\n<li><code>cat not_exist_file.csv &gt; results.txt 2&gt;&amp;1</code></li>\n<li><code>cat not_exist_file.csv &gt;&gt; results.txt 2&gt;&amp;1</code></li>\n</ul>\n</li>\n<li>\n<p>&lt;：从文件中读取</p>\n</li>\n<li>\n<p>&lt;&lt;：从键盘读取</p>\n<ul>\n<li><code>sort -n &lt;&lt; END</code> END：结束符</li>\n</ul>\n</li>\n</ul>\n<p>管道符号 | 可以将命令连接起来，好像一个个对接的管道一样，前一个命令的输出成为后一个命令的输入</p>\n<h3 id=\"监视活动\"><a class=\"header-anchor\" href=\"#监视活动\">☆</a>监视活动</h3>\n<ul>\n<li>w</li>\n<li>date</li>\n<li>uptime：运行时间</li>\n<li>tload：负载变化</li>\n<li>ps, ps -ef, ps -efH, ps -u user</li>\n<li>ps -aux ：通过 CPU 和内存使用来过滤进程\n<ul>\n<li>ps -aux | less</li>\n<li><code>ps -aux --sort -pcpu | less</code> 根据 CPU 使用率来降序排列</li>\n<li><code>ps -aux --sort -pmem | less</code>根据内存使用率来降序排列</li>\n<li><code>ps -aux --sort -pcpu,+pmem | head</code>将 CPU 和 内存 参数合并到一起，并通过管道显示前 10 个结果</li>\n</ul>\n</li>\n<li>pstree：以树形结构显示进程</li>\n<li>top：进程的动态列表</li>\n<li>Ctrl+C</li>\n<li>kill</li>\n<li>kill 程序名</li>\n<li>halt：关闭系统</li>\n<li>reboot：重启系统</li>\n<li>poweroff：直接关机</li>\n</ul>\n<hr>\n<ul>\n<li>at 命令：延时执行一个程序\n<ul>\n<li>at 22:10</li>\n<li>at now +7 weeks : 7周后执行</li>\n</ul>\n</li>\n<li>atq：列出正在执行的at任务</li>\n<li>atrm：删除正在执行的at任务</li>\n<li>crontab：定时执行任务\n<ul>\n<li>-e：修改crontab文件</li>\n<li>-l：显示crontab文件</li>\n<li>-r：删除crontab文件</li>\n</ul>\n</li>\n</ul>\n"},{"title":"linux折腾小记","copyright":true,"abbrlink":"5fdb7ae9","notshow":false,"description":"用户、shell、oh-my-zsh、systemd、磁盘","image":["https://data.singlelovely.cn/CoverPicture/c6360c4.png!CoverPicture"],"date":"2020-02-21T15:28:00.000Z","password":null,"photos":[],"sticky":null,"_content":"\n主要记录一下最近在服务器上遇到的问题及解决办法，以便事后查找，以免忘记。\n\n## 用户\n\n### 创建\n\n一把梭：\n\n```\nsudo useradd -r -m -s /bin/bash username\n```\n\n- -r：建立系统账号\n- -m：自动建立用户的登入目录\n- -s：指定用户登入后所使用的shell\n\n正常方式：\n\n```\nsudo adduser username\n```\n\n这种方式创建的用户，登陆以后只要一个$，没有显示用户名和路径。\n\n查看 `/etc/passwd` 后发现，新建的用户未指定 shell，需要指定一下\n```\nsudo usermod -s /bin/bash username\n```\n\n### 授权\n\n编辑 `/etc/sudoers` 文件，root 用户可以直接编辑，其他用户使用以下命令授权\n```diff\n+ sudo chmod u+w /etc/sudoers  授权\n- sudo chmod u-w /etc/sudoers  撤销\n```\n然后增加以下行（按需添加）\n```\nyouuser            ALL=(ALL)                ALL\n%youuser           ALL=(ALL)                ALL\nyouuser            ALL=(ALL)                NOPASSWD: ALL\n%youuser           ALL=(ALL)                NOPASSWD: ALL\n```\n\n1. 允许用户youuser执行sudo命令(需要输入密码).\n2. 允许用户组youuser里面的用户执行sudo命令(需要输入密码).\n3. 允许用户youuser执行sudo命令,并且在执行的时候不输入密码.\n4. 允许用户组youuser里面的用户执行sudo命令,并且在执行的时候不输入密码.\n\n### 改密\n\n- passwd `username`\n\n### 删除\n\n1. `sudo userdel username`\n2. `sudo rm -rf /home/username`\n3. 删除或者注释掉`/etc/sudoers`中关于要删除用户的配置。\n\n- `sudo deluser --remove-home username`\n- `sudo deluser -r username`\n\n## oh-my-zsh\n\n### 安装 zsh\n\n```\nsudo apt install zsh\nzsh --version\n```\n\n### 安装 oh-my-zsh\n\n参考 ： https://github.com/nianxiongdi/oh-my-zsh\n\n### 插件\n\n```shell ~/.zshrc\n#zhs的主题\nZSH_THEME=\"ys\"\n\n#z命令快速跳转目录     x命令解压一切文件\nplugins=(\n    git z zsh-autosuggestions extract web-search zsh-syntax-highlighting\n)\n\n#自动补全插件\nsource ~/.oh-my-zsh/plugins/incr/incr.zsh\n```\n\n`zsh-autosuggestions`与`zsh-syntax-highlighting`需手动安装\n\n地址：[zsh-autosuggestions](https://github.com/zsh-users/zsh-autosuggestions)、[zsh-syntax-highlighting](https://github.com/zsh-users/zsh-syntax-highlighting)\n\n### 自动部署\n\n计划中。。。\n\n## systemd\n\n[参考](https://blog.csdn.net/weixin_37766296/article/details/80192633)\n\n## 磁盘\n\n\n\n## nohup &\n\nnohup: 加在一个命令的最前面，表示不挂断的运行命令\n\n&: 加载一个命令的最后面，表示这个命令放在后台执行\n\n### 查看后台运行的命令\n\n- jobs\n- pa\n\n例：`ps -aux|grep python`\n\n  - a: 显示所有程序\n  - u: 以用户为主的格式来显示\n  - x: 显示所有程序，不以终端机来区分\n\n### 关闭后台运行的程序\n\n`kill %pid`\n\n### 前后台进程的切换与控制\n\n- fg\n  - 将后台中的命令调至前台继续运行\n  -  fg %pid\n- Ctrl + z\n  - 将一个正在前台执行的命令放到后台，并且处于暂停状态\n- bg\n  - 将一个在后台暂停的命令，变成在后台继续执行\n  - bg %pid\n","source":"_posts/linux折腾小记.md","raw":"---\ntitle: linux折腾小记\ncopyright: true\nabbrlink: 5fdb7ae9\nnotshow: false\ndescription: 用户、shell、oh-my-zsh、systemd、磁盘\nimage:\n  - 'https://data.singlelovely.cn/CoverPicture/c6360c4.png!CoverPicture'\ndate: 2020-02-21 23:28:00\ntags:\n- Linux\ncategories: Linux\npassword:\nphotos:\nsticky:\n---\n\n主要记录一下最近在服务器上遇到的问题及解决办法，以便事后查找，以免忘记。\n\n## 用户\n\n### 创建\n\n一把梭：\n\n```\nsudo useradd -r -m -s /bin/bash username\n```\n\n- -r：建立系统账号\n- -m：自动建立用户的登入目录\n- -s：指定用户登入后所使用的shell\n\n正常方式：\n\n```\nsudo adduser username\n```\n\n这种方式创建的用户，登陆以后只要一个$，没有显示用户名和路径。\n\n查看 `/etc/passwd` 后发现，新建的用户未指定 shell，需要指定一下\n```\nsudo usermod -s /bin/bash username\n```\n\n### 授权\n\n编辑 `/etc/sudoers` 文件，root 用户可以直接编辑，其他用户使用以下命令授权\n```diff\n+ sudo chmod u+w /etc/sudoers  授权\n- sudo chmod u-w /etc/sudoers  撤销\n```\n然后增加以下行（按需添加）\n```\nyouuser            ALL=(ALL)                ALL\n%youuser           ALL=(ALL)                ALL\nyouuser            ALL=(ALL)                NOPASSWD: ALL\n%youuser           ALL=(ALL)                NOPASSWD: ALL\n```\n\n1. 允许用户youuser执行sudo命令(需要输入密码).\n2. 允许用户组youuser里面的用户执行sudo命令(需要输入密码).\n3. 允许用户youuser执行sudo命令,并且在执行的时候不输入密码.\n4. 允许用户组youuser里面的用户执行sudo命令,并且在执行的时候不输入密码.\n\n### 改密\n\n- passwd `username`\n\n### 删除\n\n1. `sudo userdel username`\n2. `sudo rm -rf /home/username`\n3. 删除或者注释掉`/etc/sudoers`中关于要删除用户的配置。\n\n- `sudo deluser --remove-home username`\n- `sudo deluser -r username`\n\n## oh-my-zsh\n\n### 安装 zsh\n\n```\nsudo apt install zsh\nzsh --version\n```\n\n### 安装 oh-my-zsh\n\n参考 ： https://github.com/nianxiongdi/oh-my-zsh\n\n### 插件\n\n```shell ~/.zshrc\n#zhs的主题\nZSH_THEME=\"ys\"\n\n#z命令快速跳转目录     x命令解压一切文件\nplugins=(\n    git z zsh-autosuggestions extract web-search zsh-syntax-highlighting\n)\n\n#自动补全插件\nsource ~/.oh-my-zsh/plugins/incr/incr.zsh\n```\n\n`zsh-autosuggestions`与`zsh-syntax-highlighting`需手动安装\n\n地址：[zsh-autosuggestions](https://github.com/zsh-users/zsh-autosuggestions)、[zsh-syntax-highlighting](https://github.com/zsh-users/zsh-syntax-highlighting)\n\n### 自动部署\n\n计划中。。。\n\n## systemd\n\n[参考](https://blog.csdn.net/weixin_37766296/article/details/80192633)\n\n## 磁盘\n\n\n\n## nohup &\n\nnohup: 加在一个命令的最前面，表示不挂断的运行命令\n\n&: 加载一个命令的最后面，表示这个命令放在后台执行\n\n### 查看后台运行的命令\n\n- jobs\n- pa\n\n例：`ps -aux|grep python`\n\n  - a: 显示所有程序\n  - u: 以用户为主的格式来显示\n  - x: 显示所有程序，不以终端机来区分\n\n### 关闭后台运行的程序\n\n`kill %pid`\n\n### 前后台进程的切换与控制\n\n- fg\n  - 将后台中的命令调至前台继续运行\n  -  fg %pid\n- Ctrl + z\n  - 将一个正在前台执行的命令放到后台，并且处于暂停状态\n- bg\n  - 将一个在后台暂停的命令，变成在后台继续执行\n  - bg %pid\n","slug":"linux折腾小记","published":1,"updated":"2020-08-24T05:51:20.094Z","comments":1,"layout":"post","link":"","_id":"ckec2td3b000zfkupc2soz335","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>主要记录一下最近在服务器上遇到的问题及解决办法，以便事后查找，以免忘记。</p>\n<h2 id=\"用户\"><a class=\"header-anchor\" href=\"#用户\">☆</a>用户</h2>\n<h3 id=\"创建\"><a class=\"header-anchor\" href=\"#创建\">☆</a>创建</h3>\n<p>一把梭：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo useradd -r -m -s /bin/bash username</span><br></pre></td></tr></table></figure>\n<ul>\n<li>-r：建立系统账号</li>\n<li>-m：自动建立用户的登入目录</li>\n<li>-s：指定用户登入后所使用的shell</li>\n</ul>\n<p>正常方式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo adduser username</span><br></pre></td></tr></table></figure>\n<p>这种方式创建的用户，登陆以后只要一个$，没有显示用户名和路径。</p>\n<p>查看 <code>/etc/passwd</code> 后发现，新建的用户未指定 shell，需要指定一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo usermod -s /bin/bash username</span><br></pre></td></tr></table></figure>\n<h3 id=\"授权\"><a class=\"header-anchor\" href=\"#授权\">☆</a>授权</h3>\n<p>编辑 <code>/etc/sudoers</code> 文件，root 用户可以直接编辑，其他用户使用以下命令授权</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"addition\">+ sudo chmod u+w /etc/sudoers  授权</span></span><br><span class=\"line\"><span class=\"deletion\">- sudo chmod u-w /etc/sudoers  撤销</span></span><br></pre></td></tr></table></figure>\n<p>然后增加以下行（按需添加）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">youuser            ALL=(ALL)                ALL</span><br><span class=\"line\">%youuser           ALL=(ALL)                ALL</span><br><span class=\"line\">youuser            ALL=(ALL)                NOPASSWD: ALL</span><br><span class=\"line\">%youuser           ALL=(ALL)                NOPASSWD: ALL</span><br></pre></td></tr></table></figure>\n<ol>\n<li>允许用户youuser执行sudo命令(需要输入密码).</li>\n<li>允许用户组youuser里面的用户执行sudo命令(需要输入密码).</li>\n<li>允许用户youuser执行sudo命令,并且在执行的时候不输入密码.</li>\n<li>允许用户组youuser里面的用户执行sudo命令,并且在执行的时候不输入密码.</li>\n</ol>\n<h3 id=\"改密\"><a class=\"header-anchor\" href=\"#改密\">☆</a>改密</h3>\n<ul>\n<li>passwd <code>username</code></li>\n</ul>\n<h3 id=\"删除\"><a class=\"header-anchor\" href=\"#删除\">☆</a>删除</h3>\n<ol>\n<li><code>sudo userdel username</code></li>\n<li><code>sudo rm -rf /home/username</code></li>\n<li>删除或者注释掉<code>/etc/sudoers</code>中关于要删除用户的配置。</li>\n</ol>\n<ul>\n<li><code>sudo deluser --remove-home username</code></li>\n<li><code>sudo deluser -r username</code></li>\n</ul>\n<h2 id=\"oh-my-zsh\"><a class=\"header-anchor\" href=\"#oh-my-zsh\">☆</a>oh-my-zsh</h2>\n<h3 id=\"安装-zsh\"><a class=\"header-anchor\" href=\"#安装-zsh\">☆</a>安装 zsh</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install zsh</span><br><span class=\"line\">zsh --version</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装-oh-my-zsh\"><a class=\"header-anchor\" href=\"#安装-oh-my-zsh\">☆</a>安装 oh-my-zsh</h3>\n<p>参考 ： <a href=\"https://github.com/nianxiongdi/oh-my-zsh\" target=\"_blank\" rel=\"noopener\">https://github.com/nianxiongdi/oh-my-zsh</a></p>\n<h3 id=\"插件\"><a class=\"header-anchor\" href=\"#插件\">☆</a>插件</h3>\n<figure class=\"highlight shell\"><figcaption><span>~/.zshrc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">zhs的主题</span></span><br><span class=\"line\">ZSH_THEME=\"ys\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">z命令快速跳转目录     x命令解压一切文件</span></span><br><span class=\"line\">plugins=(</span><br><span class=\"line\">    git z zsh-autosuggestions extract web-search zsh-syntax-highlighting</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">自动补全插件</span></span><br><span class=\"line\">source ~/.oh-my-zsh/plugins/incr/incr.zsh</span><br></pre></td></tr></table></figure>\n<p><code>zsh-autosuggestions</code>与<code>zsh-syntax-highlighting</code>需手动安装</p>\n<p>地址：<a href=\"https://github.com/zsh-users/zsh-autosuggestions\" target=\"_blank\" rel=\"noopener\">zsh-autosuggestions</a>、<a href=\"https://github.com/zsh-users/zsh-syntax-highlighting\" target=\"_blank\" rel=\"noopener\">zsh-syntax-highlighting</a></p>\n<h3 id=\"自动部署\"><a class=\"header-anchor\" href=\"#自动部署\">☆</a>自动部署</h3>\n<p>计划中。。。</p>\n<h2 id=\"systemd\"><a class=\"header-anchor\" href=\"#systemd\">☆</a>systemd</h2>\n<p><a href=\"https://blog.csdn.net/weixin_37766296/article/details/80192633\" target=\"_blank\" rel=\"noopener\">参考</a></p>\n<h2 id=\"磁盘\"><a class=\"header-anchor\" href=\"#磁盘\">☆</a>磁盘</h2>\n<h2 id=\"nohup\"><a class=\"header-anchor\" href=\"#nohup\">☆</a>nohup &amp;</h2>\n<p>nohup: 加在一个命令的最前面，表示不挂断的运行命令</p>\n<p>&amp;: 加载一个命令的最后面，表示这个命令放在后台执行</p>\n<h3 id=\"查看后台运行的命令\"><a class=\"header-anchor\" href=\"#查看后台运行的命令\">☆</a>查看后台运行的命令</h3>\n<ul>\n<li>jobs</li>\n<li>pa</li>\n</ul>\n<p>例：<code>ps -aux|grep python</code></p>\n<ul>\n<li>a: 显示所有程序</li>\n<li>u: 以用户为主的格式来显示</li>\n<li>x: 显示所有程序，不以终端机来区分</li>\n</ul>\n<h3 id=\"关闭后台运行的程序\"><a class=\"header-anchor\" href=\"#关闭后台运行的程序\">☆</a>关闭后台运行的程序</h3>\n<p><code>kill %pid</code></p>\n<h3 id=\"前后台进程的切换与控制\"><a class=\"header-anchor\" href=\"#前后台进程的切换与控制\">☆</a>前后台进程的切换与控制</h3>\n<ul>\n<li>fg\n<ul>\n<li>将后台中的命令调至前台继续运行</li>\n<li>fg %pid</li>\n</ul>\n</li>\n<li>Ctrl + z\n<ul>\n<li>将一个正在前台执行的命令放到后台，并且处于暂停状态</li>\n</ul>\n</li>\n<li>bg\n<ul>\n<li>将一个在后台暂停的命令，变成在后台继续执行</li>\n<li>bg %pid</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":1588,"excerpt":"","more":"<p>主要记录一下最近在服务器上遇到的问题及解决办法，以便事后查找，以免忘记。</p>\n<h2 id=\"用户\"><a class=\"header-anchor\" href=\"#用户\">☆</a>用户</h2>\n<h3 id=\"创建\"><a class=\"header-anchor\" href=\"#创建\">☆</a>创建</h3>\n<p>一把梭：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo useradd -r -m -s /bin/bash username</span><br></pre></td></tr></table></figure>\n<ul>\n<li>-r：建立系统账号</li>\n<li>-m：自动建立用户的登入目录</li>\n<li>-s：指定用户登入后所使用的shell</li>\n</ul>\n<p>正常方式：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo adduser username</span><br></pre></td></tr></table></figure>\n<p>这种方式创建的用户，登陆以后只要一个$，没有显示用户名和路径。</p>\n<p>查看 <code>/etc/passwd</code> 后发现，新建的用户未指定 shell，需要指定一下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo usermod -s /bin/bash username</span><br></pre></td></tr></table></figure>\n<h3 id=\"授权\"><a class=\"header-anchor\" href=\"#授权\">☆</a>授权</h3>\n<p>编辑 <code>/etc/sudoers</code> 文件，root 用户可以直接编辑，其他用户使用以下命令授权</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"addition\">+ sudo chmod u+w /etc/sudoers  授权</span></span><br><span class=\"line\"><span class=\"deletion\">- sudo chmod u-w /etc/sudoers  撤销</span></span><br></pre></td></tr></table></figure>\n<p>然后增加以下行（按需添加）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">youuser            ALL=(ALL)                ALL</span><br><span class=\"line\">%youuser           ALL=(ALL)                ALL</span><br><span class=\"line\">youuser            ALL=(ALL)                NOPASSWD: ALL</span><br><span class=\"line\">%youuser           ALL=(ALL)                NOPASSWD: ALL</span><br></pre></td></tr></table></figure>\n<ol>\n<li>允许用户youuser执行sudo命令(需要输入密码).</li>\n<li>允许用户组youuser里面的用户执行sudo命令(需要输入密码).</li>\n<li>允许用户youuser执行sudo命令,并且在执行的时候不输入密码.</li>\n<li>允许用户组youuser里面的用户执行sudo命令,并且在执行的时候不输入密码.</li>\n</ol>\n<h3 id=\"改密\"><a class=\"header-anchor\" href=\"#改密\">☆</a>改密</h3>\n<ul>\n<li>passwd <code>username</code></li>\n</ul>\n<h3 id=\"删除\"><a class=\"header-anchor\" href=\"#删除\">☆</a>删除</h3>\n<ol>\n<li><code>sudo userdel username</code></li>\n<li><code>sudo rm -rf /home/username</code></li>\n<li>删除或者注释掉<code>/etc/sudoers</code>中关于要删除用户的配置。</li>\n</ol>\n<ul>\n<li><code>sudo deluser --remove-home username</code></li>\n<li><code>sudo deluser -r username</code></li>\n</ul>\n<h2 id=\"oh-my-zsh\"><a class=\"header-anchor\" href=\"#oh-my-zsh\">☆</a>oh-my-zsh</h2>\n<h3 id=\"安装-zsh\"><a class=\"header-anchor\" href=\"#安装-zsh\">☆</a>安装 zsh</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install zsh</span><br><span class=\"line\">zsh --version</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装-oh-my-zsh\"><a class=\"header-anchor\" href=\"#安装-oh-my-zsh\">☆</a>安装 oh-my-zsh</h3>\n<p>参考 ： <a href=\"https://github.com/nianxiongdi/oh-my-zsh\" target=\"_blank\" rel=\"noopener\">https://github.com/nianxiongdi/oh-my-zsh</a></p>\n<h3 id=\"插件\"><a class=\"header-anchor\" href=\"#插件\">☆</a>插件</h3>\n<figure class=\"highlight shell\"><figcaption><span>~/.zshrc</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">zhs的主题</span></span><br><span class=\"line\">ZSH_THEME=\"ys\"</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">z命令快速跳转目录     x命令解压一切文件</span></span><br><span class=\"line\">plugins=(</span><br><span class=\"line\">    git z zsh-autosuggestions extract web-search zsh-syntax-highlighting</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">自动补全插件</span></span><br><span class=\"line\">source ~/.oh-my-zsh/plugins/incr/incr.zsh</span><br></pre></td></tr></table></figure>\n<p><code>zsh-autosuggestions</code>与<code>zsh-syntax-highlighting</code>需手动安装</p>\n<p>地址：<a href=\"https://github.com/zsh-users/zsh-autosuggestions\" target=\"_blank\" rel=\"noopener\">zsh-autosuggestions</a>、<a href=\"https://github.com/zsh-users/zsh-syntax-highlighting\" target=\"_blank\" rel=\"noopener\">zsh-syntax-highlighting</a></p>\n<h3 id=\"自动部署\"><a class=\"header-anchor\" href=\"#自动部署\">☆</a>自动部署</h3>\n<p>计划中。。。</p>\n<h2 id=\"systemd\"><a class=\"header-anchor\" href=\"#systemd\">☆</a>systemd</h2>\n<p><a href=\"https://blog.csdn.net/weixin_37766296/article/details/80192633\" target=\"_blank\" rel=\"noopener\">参考</a></p>\n<h2 id=\"磁盘\"><a class=\"header-anchor\" href=\"#磁盘\">☆</a>磁盘</h2>\n<h2 id=\"nohup\"><a class=\"header-anchor\" href=\"#nohup\">☆</a>nohup &amp;</h2>\n<p>nohup: 加在一个命令的最前面，表示不挂断的运行命令</p>\n<p>&amp;: 加载一个命令的最后面，表示这个命令放在后台执行</p>\n<h3 id=\"查看后台运行的命令\"><a class=\"header-anchor\" href=\"#查看后台运行的命令\">☆</a>查看后台运行的命令</h3>\n<ul>\n<li>jobs</li>\n<li>pa</li>\n</ul>\n<p>例：<code>ps -aux|grep python</code></p>\n<ul>\n<li>a: 显示所有程序</li>\n<li>u: 以用户为主的格式来显示</li>\n<li>x: 显示所有程序，不以终端机来区分</li>\n</ul>\n<h3 id=\"关闭后台运行的程序\"><a class=\"header-anchor\" href=\"#关闭后台运行的程序\">☆</a>关闭后台运行的程序</h3>\n<p><code>kill %pid</code></p>\n<h3 id=\"前后台进程的切换与控制\"><a class=\"header-anchor\" href=\"#前后台进程的切换与控制\">☆</a>前后台进程的切换与控制</h3>\n<ul>\n<li>fg\n<ul>\n<li>将后台中的命令调至前台继续运行</li>\n<li>fg %pid</li>\n</ul>\n</li>\n<li>Ctrl + z\n<ul>\n<li>将一个正在前台执行的命令放到后台，并且处于暂停状态</li>\n</ul>\n</li>\n<li>bg\n<ul>\n<li>将一个在后台暂停的命令，变成在后台继续执行</li>\n<li>bg %pid</li>\n</ul>\n</li>\n</ul>\n"},{"title":"Linux系统的vps（kvm架构）安装vnc","copyright":true,"abbrlink":"30631cd4","date":"2018-02-06T12:47:08.000Z","password":null,"_content":"\n&emsp; &emsp;vps服务商提供的系统一般是不带图形化界面的（Ubuntu部分会有），但有时有些软件必须要图形化界面才能操作，所以需要手动安装vnc，通过vnc实现图形化界面的访问。\n\n&emsp; &emsp;目前大多数的一键安装包都是基于ovz架构的vps，kvm架构的由于不能直接安装XFCE，会提示找不到数据源，需要通过其他方法实现。\n\n`本教程使用 搬瓦工的Centos 6 x86_64 系统，其他系统自测`\n\n### 准备工作\n1、安装Centos 6 64位系统，最好是自带bbr的，速度会更高。\n![][1]\n2、使用终端模拟软件连接vps，推荐使用SecureCRT或者Xshell5。\n### 可视化桌面安装\n\n#### 升级系统和安装图形界面\n依次执行下面代码：\n```\nyum -y update\nyum groupinstall \"Desktop\" -y\n```\n#### 安装Tight VNC\n```\nyum install tigervnc-server -y\n```\n#### 创建用户\n```\nadduser vncuser\n\nsu vncuser\nvncpasswd\n```\n`vncpasswd`输入后会提示输入密码，并确认。\n然后输入`su root`以回到root账户下，回到root账户时会要求输入root密码。\n\n#### 设置连接端口和分辨率\n输入\n```\nvi /etc/sysconfig/vncservers\n```\n键盘上点击I键进入编辑模式，在文件最后添加（分辨率自己调节）\n```\nVNCSERVERS=\"2:vncuser\"\nVNCSERVERARGS=\"-geometry 1080×1920\"\n```\n![][2]\n然后输入`:wq`保存并退出\n\n#### 启动vnc并设置开机自启\n启动vnc，重启将start改为restart即可\n```\nservice vncserver start\n```\n设置开机自启\n```\nchkconfig vncserver on\n```\n### 连接远程桌面\n打开vnc客户端，输入`服务器地址:1`例如`104.207.128.86:1`,然后输入密码就可以看到远程桌面了\n![][3]\n\n\n&emsp; &emsp;有了远程桌面以后么，就可以干一些挂机等在终端界面无法操作的事情啦········\n\n  [1]: https://data.singlelovely.cn/xsj/20182/@%5DV0D9K8Y%7BTOL3LD6%28~UWDM.png\n  [2]: https://data.singlelovely.cn/xsj/20182/%5BU4HMPKB9TOC1%5BN8%2809IQPL.png?75|imageslim\n  [3]: https://data.singlelovely.cn/xsj/20182/37N0~QI8JIR@4BL32IGWDTT.png?75|imageslim","source":"_posts/kvm+Linux远程桌面.md","raw":"---\ntitle: Linux系统的vps（kvm架构）安装vnc\ntags: vps\ncategories: vps\ncopyright: true\nabbrlink: 30631cd4\ndate: 2018-02-06 20:47:08\npassword:\n---\n\n&emsp; &emsp;vps服务商提供的系统一般是不带图形化界面的（Ubuntu部分会有），但有时有些软件必须要图形化界面才能操作，所以需要手动安装vnc，通过vnc实现图形化界面的访问。\n\n&emsp; &emsp;目前大多数的一键安装包都是基于ovz架构的vps，kvm架构的由于不能直接安装XFCE，会提示找不到数据源，需要通过其他方法实现。\n\n`本教程使用 搬瓦工的Centos 6 x86_64 系统，其他系统自测`\n\n### 准备工作\n1、安装Centos 6 64位系统，最好是自带bbr的，速度会更高。\n![][1]\n2、使用终端模拟软件连接vps，推荐使用SecureCRT或者Xshell5。\n### 可视化桌面安装\n\n#### 升级系统和安装图形界面\n依次执行下面代码：\n```\nyum -y update\nyum groupinstall \"Desktop\" -y\n```\n#### 安装Tight VNC\n```\nyum install tigervnc-server -y\n```\n#### 创建用户\n```\nadduser vncuser\n\nsu vncuser\nvncpasswd\n```\n`vncpasswd`输入后会提示输入密码，并确认。\n然后输入`su root`以回到root账户下，回到root账户时会要求输入root密码。\n\n#### 设置连接端口和分辨率\n输入\n```\nvi /etc/sysconfig/vncservers\n```\n键盘上点击I键进入编辑模式，在文件最后添加（分辨率自己调节）\n```\nVNCSERVERS=\"2:vncuser\"\nVNCSERVERARGS=\"-geometry 1080×1920\"\n```\n![][2]\n然后输入`:wq`保存并退出\n\n#### 启动vnc并设置开机自启\n启动vnc，重启将start改为restart即可\n```\nservice vncserver start\n```\n设置开机自启\n```\nchkconfig vncserver on\n```\n### 连接远程桌面\n打开vnc客户端，输入`服务器地址:1`例如`104.207.128.86:1`,然后输入密码就可以看到远程桌面了\n![][3]\n\n\n&emsp; &emsp;有了远程桌面以后么，就可以干一些挂机等在终端界面无法操作的事情啦········\n\n  [1]: https://data.singlelovely.cn/xsj/20182/@%5DV0D9K8Y%7BTOL3LD6%28~UWDM.png\n  [2]: https://data.singlelovely.cn/xsj/20182/%5BU4HMPKB9TOC1%5BN8%2809IQPL.png?75|imageslim\n  [3]: https://data.singlelovely.cn/xsj/20182/37N0~QI8JIR@4BL32IGWDTT.png?75|imageslim","slug":"kvm+Linux远程桌面","published":1,"updated":"2020-02-20T06:06:59.407Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3c0010fkup68b4uskn","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>   vps服务商提供的系统一般是不带图形化界面的（Ubuntu部分会有），但有时有些软件必须要图形化界面才能操作，所以需要手动安装vnc，通过vnc实现图形化界面的访问。</p>\n<p>   目前大多数的一键安装包都是基于ovz架构的vps，kvm架构的由于不能直接安装XFCE，会提示找不到数据源，需要通过其他方法实现。</p>\n<p><code>本教程使用 搬瓦工的Centos 6 x86_64 系统，其他系统自测</code></p>\n<h3 id=\"准备工作\"><a class=\"header-anchor\" href=\"#准备工作\">☆</a>准备工作</h3>\n<p>1、安装Centos 6 64位系统，最好是自带bbr的，速度会更高。<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/@%5DV0D9K8Y%7BTOL3LD6%28~UWDM.png\" alt><br>\n2、使用终端模拟软件连接vps，推荐使用SecureCRT或者Xshell5。</p>\n<h3 id=\"可视化桌面安装\"><a class=\"header-anchor\" href=\"#可视化桌面安装\">☆</a>可视化桌面安装</h3>\n<h4 id=\"升级系统和安装图形界面\"><a class=\"header-anchor\" href=\"#升级系统和安装图形界面\">☆</a>升级系统和安装图形界面</h4>\n<p>依次执行下面代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y update</span><br><span class=\"line\">yum groupinstall &quot;Desktop&quot; -y</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装tight-vnc\"><a class=\"header-anchor\" href=\"#安装tight-vnc\">☆</a>安装Tight VNC</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install tigervnc-server -y</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建用户\"><a class=\"header-anchor\" href=\"#创建用户\">☆</a>创建用户</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser vncuser</span><br><span class=\"line\"></span><br><span class=\"line\">su vncuser</span><br><span class=\"line\">vncpasswd</span><br></pre></td></tr></table></figure>\n<p><code>vncpasswd</code>输入后会提示输入密码，并确认。<br>\n然后输入<code>su root</code>以回到root账户下，回到root账户时会要求输入root密码。</p>\n<h4 id=\"设置连接端口和分辨率\"><a class=\"header-anchor\" href=\"#设置连接端口和分辨率\">☆</a>设置连接端口和分辨率</h4>\n<p>输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/vncservers</span><br></pre></td></tr></table></figure>\n<p>键盘上点击I键进入编辑模式，在文件最后添加（分辨率自己调节）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VNCSERVERS=&quot;2:vncuser&quot;</span><br><span class=\"line\">VNCSERVERARGS=&quot;-geometry 1080×1920&quot;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%5BU4HMPKB9TOC1%5BN8%2809IQPL.png?75%7Cimageslim\" alt><br>\n然后输入<code>:wq</code>保存并退出</p>\n<h4 id=\"启动vnc并设置开机自启\"><a class=\"header-anchor\" href=\"#启动vnc并设置开机自启\">☆</a>启动vnc并设置开机自启</h4>\n<p>启动vnc，重启将start改为restart即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service vncserver start</span><br></pre></td></tr></table></figure>\n<p>设置开机自启</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chkconfig vncserver on</span><br></pre></td></tr></table></figure>\n<h3 id=\"连接远程桌面\"><a class=\"header-anchor\" href=\"#连接远程桌面\">☆</a>连接远程桌面</h3>\n<p>打开vnc客户端，输入<code>服务器地址:1</code>例如<code>104.207.128.86:1</code>,然后输入密码就可以看到远程桌面了<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/37N0~QI8JIR@4BL32IGWDTT.png?75%7Cimageslim\" alt></p>\n<p>   有了远程桌面以后么，就可以干一些挂机等在终端界面无法操作的事情啦········</p>\n","site":{"data":{}},"length":861,"excerpt":"","more":"<p>   vps服务商提供的系统一般是不带图形化界面的（Ubuntu部分会有），但有时有些软件必须要图形化界面才能操作，所以需要手动安装vnc，通过vnc实现图形化界面的访问。</p>\n<p>   目前大多数的一键安装包都是基于ovz架构的vps，kvm架构的由于不能直接安装XFCE，会提示找不到数据源，需要通过其他方法实现。</p>\n<p><code>本教程使用 搬瓦工的Centos 6 x86_64 系统，其他系统自测</code></p>\n<h3 id=\"准备工作\"><a class=\"header-anchor\" href=\"#准备工作\">☆</a>准备工作</h3>\n<p>1、安装Centos 6 64位系统，最好是自带bbr的，速度会更高。<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/@%5DV0D9K8Y%7BTOL3LD6%28~UWDM.png\" alt><br>\n2、使用终端模拟软件连接vps，推荐使用SecureCRT或者Xshell5。</p>\n<h3 id=\"可视化桌面安装\"><a class=\"header-anchor\" href=\"#可视化桌面安装\">☆</a>可视化桌面安装</h3>\n<h4 id=\"升级系统和安装图形界面\"><a class=\"header-anchor\" href=\"#升级系统和安装图形界面\">☆</a>升级系统和安装图形界面</h4>\n<p>依次执行下面代码：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y update</span><br><span class=\"line\">yum groupinstall &quot;Desktop&quot; -y</span><br></pre></td></tr></table></figure>\n<h4 id=\"安装tight-vnc\"><a class=\"header-anchor\" href=\"#安装tight-vnc\">☆</a>安装Tight VNC</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install tigervnc-server -y</span><br></pre></td></tr></table></figure>\n<h4 id=\"创建用户\"><a class=\"header-anchor\" href=\"#创建用户\">☆</a>创建用户</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser vncuser</span><br><span class=\"line\"></span><br><span class=\"line\">su vncuser</span><br><span class=\"line\">vncpasswd</span><br></pre></td></tr></table></figure>\n<p><code>vncpasswd</code>输入后会提示输入密码，并确认。<br>\n然后输入<code>su root</code>以回到root账户下，回到root账户时会要求输入root密码。</p>\n<h4 id=\"设置连接端口和分辨率\"><a class=\"header-anchor\" href=\"#设置连接端口和分辨率\">☆</a>设置连接端口和分辨率</h4>\n<p>输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/vncservers</span><br></pre></td></tr></table></figure>\n<p>键盘上点击I键进入编辑模式，在文件最后添加（分辨率自己调节）</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VNCSERVERS=&quot;2:vncuser&quot;</span><br><span class=\"line\">VNCSERVERARGS=&quot;-geometry 1080×1920&quot;</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%5BU4HMPKB9TOC1%5BN8%2809IQPL.png?75%7Cimageslim\" alt><br>\n然后输入<code>:wq</code>保存并退出</p>\n<h4 id=\"启动vnc并设置开机自启\"><a class=\"header-anchor\" href=\"#启动vnc并设置开机自启\">☆</a>启动vnc并设置开机自启</h4>\n<p>启动vnc，重启将start改为restart即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service vncserver start</span><br></pre></td></tr></table></figure>\n<p>设置开机自启</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chkconfig vncserver on</span><br></pre></td></tr></table></figure>\n<h3 id=\"连接远程桌面\"><a class=\"header-anchor\" href=\"#连接远程桌面\">☆</a>连接远程桌面</h3>\n<p>打开vnc客户端，输入<code>服务器地址:1</code>例如<code>104.207.128.86:1</code>,然后输入密码就可以看到远程桌面了<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/37N0~QI8JIR@4BL32IGWDTT.png?75%7Cimageslim\" alt></p>\n<p>   有了远程桌面以后么，就可以干一些挂机等在终端界面无法操作的事情啦········</p>\n"},{"title":"nginx配置","copyright":true,"abbrlink":"2bee8b90","notshow":false,"description":"nginx常用配置记录","image":["https://data.singlelovely.cn/images/20200130185945.gif!CoverPicture"],"date":"2020-01-30T11:14:00.000Z","password":null,"photos":[],"sticky":null,"_content":"\n最近折腾的web应用比较多，在nginx使用中踩了不少坑，记录一下，以便以后查询\n\n### 安装\n\n```\napt update\napt install -y nginx\n```\n\n### 配置文件路径\n\n<span id = \"font-blue\"> /etc/nginx/conf.d </span>\n\n建议每个站点单独建一个 `***.conf` 放在此目录\n\n### ssl证书位置\n\n默认相对目录为 <span id = \"font-blue\">/etc/nginx</span> ，建议新建一个目录来存放，如 /etc/nginx/cert，\n则在配置中填写为： `cert/证书名`\n\n<div class=\"note success\"><p>亦可将证书放在其他地方，配置文件中使用绝对路径</p></div>\n\n### http配置\n\n```json\nserver {\n    listen      80;                        # 站点监听端口\n    server_name zfile.singlelovely.cn ;    # 站点域名\n    root        /www/test;                  # 网站根目录\n    index       index.html index.htm index.jsp;\n}\n```\n\n### https配置\n\n```json\nserver {\n        listen          443;\n        server_name     zfile.singlelovely.cn;\n        ssl             on;\n        root            /www/test;\n        index       index.html index.htm index.jsp\n        ssl_certificate         cert/1_zfile.singlelovely.cn_bundle.crt;\n        ssl_certificate_key     cert/2_zfile.singlelovely.cn.key;\n        ssl_session_timeout     5m;\n        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n        ssl_prefer_server_ciphers on;\n}\n```\n\n### 反向代理配置\n\n```json\nlocation / {\n                proxy_pass      http://127.0.0.1:666;\n                index index.html index.htm;\n                proxy_redirect off;\n                proxy_buffer_size 4k;\n                proxy_buffers 4 32k;\n                proxy_busy_buffers_size 64k;\n                proxy_send_timeout 300;\n                proxy_read_timeout 300;\n                proxy_set_header Host $host;\n                proxy_set_header X-Real-IP $remote_addr;\n        }\n```\n\n### http 强制重定向到https\n\n<p id = \"div-border-left-purple\">rewrite ^ https://$http_host$request_uri? permanent;</p>\n\n### 检查配置问题\n\n<span id = \"font-green\">nginx -t</span>\n\n### 重启服务\n\n<span id = \"font-green\">service nginx restart</span>\n","source":"_posts/nginx配置.md","raw":"---\ntitle: nginx配置\ncopyright: true\nabbrlink: 2bee8b90\nnotshow: false\ndescription: nginx常用配置记录\nimage:\n  - 'https://data.singlelovely.cn/images/20200130185945.gif!CoverPicture'\ndate: 2020-01-30 19:14:00\ntags: \n- Linux\n- Ubuntu\ncategories: Linux\npassword:\nphotos:\nsticky:\n---\n\n最近折腾的web应用比较多，在nginx使用中踩了不少坑，记录一下，以便以后查询\n\n### 安装\n\n```\napt update\napt install -y nginx\n```\n\n### 配置文件路径\n\n<span id = \"font-blue\"> /etc/nginx/conf.d </span>\n\n建议每个站点单独建一个 `***.conf` 放在此目录\n\n### ssl证书位置\n\n默认相对目录为 <span id = \"font-blue\">/etc/nginx</span> ，建议新建一个目录来存放，如 /etc/nginx/cert，\n则在配置中填写为： `cert/证书名`\n\n<div class=\"note success\"><p>亦可将证书放在其他地方，配置文件中使用绝对路径</p></div>\n\n### http配置\n\n```json\nserver {\n    listen      80;                        # 站点监听端口\n    server_name zfile.singlelovely.cn ;    # 站点域名\n    root        /www/test;                  # 网站根目录\n    index       index.html index.htm index.jsp;\n}\n```\n\n### https配置\n\n```json\nserver {\n        listen          443;\n        server_name     zfile.singlelovely.cn;\n        ssl             on;\n        root            /www/test;\n        index       index.html index.htm index.jsp\n        ssl_certificate         cert/1_zfile.singlelovely.cn_bundle.crt;\n        ssl_certificate_key     cert/2_zfile.singlelovely.cn.key;\n        ssl_session_timeout     5m;\n        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n        ssl_prefer_server_ciphers on;\n}\n```\n\n### 反向代理配置\n\n```json\nlocation / {\n                proxy_pass      http://127.0.0.1:666;\n                index index.html index.htm;\n                proxy_redirect off;\n                proxy_buffer_size 4k;\n                proxy_buffers 4 32k;\n                proxy_busy_buffers_size 64k;\n                proxy_send_timeout 300;\n                proxy_read_timeout 300;\n                proxy_set_header Host $host;\n                proxy_set_header X-Real-IP $remote_addr;\n        }\n```\n\n### http 强制重定向到https\n\n<p id = \"div-border-left-purple\">rewrite ^ https://$http_host$request_uri? permanent;</p>\n\n### 检查配置问题\n\n<span id = \"font-green\">nginx -t</span>\n\n### 重启服务\n\n<span id = \"font-green\">service nginx restart</span>\n","slug":"nginx配置","published":1,"updated":"2020-08-24T05:51:54.666Z","comments":1,"layout":"post","link":"","_id":"ckec2td3d0011fkupyfb39jks","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>最近折腾的web应用比较多，在nginx使用中踩了不少坑，记录一下，以便以后查询</p>\n<h3 id=\"安装\"><a class=\"header-anchor\" href=\"#安装\">☆</a>安装</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt update</span><br><span class=\"line\">apt install -y nginx</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置文件路径\"><a class=\"header-anchor\" href=\"#配置文件路径\">☆</a>配置文件路径</h3>\n<p><span id=\"font-blue\"> /etc/nginx/conf.d </span></p>\n<p>建议每个站点单独建一个 <code>***.conf</code> 放在此目录</p>\n<h3 id=\"ssl证书位置\"><a class=\"header-anchor\" href=\"#ssl证书位置\">☆</a>ssl证书位置</h3>\n<p>默认相对目录为 <span id=\"font-blue\">/etc/nginx</span> ，建议新建一个目录来存放，如 /etc/nginx/cert，<br>\n则在配置中填写为： <code>cert/证书名</code></p>\n<div class=\"note success\"><p>亦可将证书放在其他地方，配置文件中使用绝对路径</p></div>\n<h3 id=\"http配置\"><a class=\"header-anchor\" href=\"#http配置\">☆</a>http配置</h3>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen      80;                        # 站点监听端口</span><br><span class=\"line\">    server_name zfile.singlelovely.cn ;    # 站点域名</span><br><span class=\"line\">    root        /www/test;                  # 网站根目录</span><br><span class=\"line\">    index       index.html index.htm index.jsp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"https配置\"><a class=\"header-anchor\" href=\"#https配置\">☆</a>https配置</h3>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen          443;</span><br><span class=\"line\">        server_name     zfile.singlelovely.cn;</span><br><span class=\"line\">        ssl             on;</span><br><span class=\"line\">        root            /www/test;</span><br><span class=\"line\">        index       index.html index.htm index.jsp</span><br><span class=\"line\">        ssl_certificate         cert/1_zfile.singlelovely.cn_bundle.crt;</span><br><span class=\"line\">        ssl_certificate_key     cert/2_zfile.singlelovely.cn.key;</span><br><span class=\"line\">        ssl_session_timeout     5m;</span><br><span class=\"line\">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class=\"line\">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\">        ssl_prefer_server_ciphers on;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"反向代理配置\"><a class=\"header-anchor\" href=\"#反向代理配置\">☆</a>反向代理配置</h3>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location / &#123;</span><br><span class=\"line\">                proxy_pass      http://127.0.0.1:666;</span><br><span class=\"line\">                index index.html index.htm;</span><br><span class=\"line\">                proxy_redirect off;</span><br><span class=\"line\">                proxy_buffer_size 4k;</span><br><span class=\"line\">                proxy_buffers 4 32k;</span><br><span class=\"line\">                proxy_busy_buffers_size 64k;</span><br><span class=\"line\">                proxy_send_timeout 300;</span><br><span class=\"line\">                proxy_read_timeout 300;</span><br><span class=\"line\">                proxy_set_header Host $host;</span><br><span class=\"line\">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"http-强制重定向到https\"><a class=\"header-anchor\" href=\"#http-强制重定向到https\">☆</a>http 强制重定向到https</h3>\n<p id=\"div-border-left-purple\">rewrite ^ https://$http_host$request_uri? permanent;</p>\n<h3 id=\"检查配置问题\"><a class=\"header-anchor\" href=\"#检查配置问题\">☆</a>检查配置问题</h3>\n<p><span id=\"font-green\">nginx -t</span></p>\n<h3 id=\"重启服务\"><a class=\"header-anchor\" href=\"#重启服务\">☆</a>重启服务</h3>\n<p><span id=\"font-green\">service nginx restart</span></p>\n","site":{"data":{}},"length":1623,"excerpt":"","more":"<p>最近折腾的web应用比较多，在nginx使用中踩了不少坑，记录一下，以便以后查询</p>\n<h3 id=\"安装\"><a class=\"header-anchor\" href=\"#安装\">☆</a>安装</h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt update</span><br><span class=\"line\">apt install -y nginx</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置文件路径\"><a class=\"header-anchor\" href=\"#配置文件路径\">☆</a>配置文件路径</h3>\n<p><span id=\"font-blue\"> /etc/nginx/conf.d </span></p>\n<p>建议每个站点单独建一个 <code>***.conf</code> 放在此目录</p>\n<h3 id=\"ssl证书位置\"><a class=\"header-anchor\" href=\"#ssl证书位置\">☆</a>ssl证书位置</h3>\n<p>默认相对目录为 <span id=\"font-blue\">/etc/nginx</span> ，建议新建一个目录来存放，如 /etc/nginx/cert，<br>\n则在配置中填写为： <code>cert/证书名</code></p>\n<div class=\"note success\"><p>亦可将证书放在其他地方，配置文件中使用绝对路径</p></div>\n<h3 id=\"http配置\"><a class=\"header-anchor\" href=\"#http配置\">☆</a>http配置</h3>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen      80;                        # 站点监听端口</span><br><span class=\"line\">    server_name zfile.singlelovely.cn ;    # 站点域名</span><br><span class=\"line\">    root        /www/test;                  # 网站根目录</span><br><span class=\"line\">    index       index.html index.htm index.jsp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"https配置\"><a class=\"header-anchor\" href=\"#https配置\">☆</a>https配置</h3>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen          443;</span><br><span class=\"line\">        server_name     zfile.singlelovely.cn;</span><br><span class=\"line\">        ssl             on;</span><br><span class=\"line\">        root            /www/test;</span><br><span class=\"line\">        index       index.html index.htm index.jsp</span><br><span class=\"line\">        ssl_certificate         cert/1_zfile.singlelovely.cn_bundle.crt;</span><br><span class=\"line\">        ssl_certificate_key     cert/2_zfile.singlelovely.cn.key;</span><br><span class=\"line\">        ssl_session_timeout     5m;</span><br><span class=\"line\">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class=\"line\">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class=\"line\">        ssl_prefer_server_ciphers on;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"反向代理配置\"><a class=\"header-anchor\" href=\"#反向代理配置\">☆</a>反向代理配置</h3>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location / &#123;</span><br><span class=\"line\">                proxy_pass      http://127.0.0.1:666;</span><br><span class=\"line\">                index index.html index.htm;</span><br><span class=\"line\">                proxy_redirect off;</span><br><span class=\"line\">                proxy_buffer_size 4k;</span><br><span class=\"line\">                proxy_buffers 4 32k;</span><br><span class=\"line\">                proxy_busy_buffers_size 64k;</span><br><span class=\"line\">                proxy_send_timeout 300;</span><br><span class=\"line\">                proxy_read_timeout 300;</span><br><span class=\"line\">                proxy_set_header Host $host;</span><br><span class=\"line\">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"http-强制重定向到https\"><a class=\"header-anchor\" href=\"#http-强制重定向到https\">☆</a>http 强制重定向到https</h3>\n<p id=\"div-border-left-purple\">rewrite ^ https://$http_host$request_uri? permanent;</p>\n<h3 id=\"检查配置问题\"><a class=\"header-anchor\" href=\"#检查配置问题\">☆</a>检查配置问题</h3>\n<p><span id=\"font-green\">nginx -t</span></p>\n<h3 id=\"重启服务\"><a class=\"header-anchor\" href=\"#重启服务\">☆</a>重启服务</h3>\n<p><span id=\"font-green\">service nginx restart</span></p>\n"},{"title":"hexo优化基于NexT6.4","copyright":"ture","abbrlink":"13c8d3a0","notshow":false,"date":"2018-08-02T13:07:40.000Z","password":null,"description":"增加6.0+的新特性,去掉部分过时的功能","image":["https://data.singlelovely.cn/xsj/2018/8/9/hexo-next-optimization-title.jpg"],"sticky":null,"_content":"\n安装的插件：\n\n#### RSS\n\nnpm install hexo-generator-feed --save\n\n#### 字数统计\n\n##### next主题为5.x版本\n\n安装 ：npm install hexo-wordcount --save\n\n然后在主题配置文件中启用\n\n##### next主题为6.03+版本\n\n安装：npm install hexo-symbols-count-time --save\n\n打开 ：~\\blog\\_config.yml\n\n添加\n\n```yml\nsymbols_count_time:\n  symbols: true\n  time: true\n  total_symbols: true\n  total_time: false\n```\n\n然后在主题配置文件中启用\n\n#### 自定义站点内容搜索\n\n安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：\n\n npm install hexo-generator-searchdb --save\n编辑 站点配置文件，新增以下内容到任意位置：\n\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n编辑 主题配置文件，启用本地搜索功能：\n\n\\# Local search\nlocal_search:\n  enable: true\n  \n#### 链接持久化\n\nnpm install hexo-abbrlink --save\n\npermalink: post/:abbrlink.html\npermalink_defaults:\nabbrlink:\n  alg: crc32  # 算法：crc16(default) and crc32\n  rep: hex    # 进制：dec(default) and hex\n\n#### 修改标签云\n\n```[swig] 位置：\\blog\\themes\\next\\layout\\page.swig\n{{ tagcloud({min_font: 13, max_font: 31, amount: 1000, color: true, start_color: '#9733EE', end_color: '#FF512F'}) }}\n```\n\n修改对应参数值即可，参数说明见 [Hexo 官方文档](https://hexo.io/zh-cn/docs/helpers.html#tagcloud)，颜色可以参考[这个网站](https://uigradients.com)，自己去纠结……\n\n#### 末尾版权信息\n\nhexo next自带版权开启\n\n```yml\n#Declare license on posts\n#版权信息\npost_copyright:\n  enable: true\n  license: CC BY-NC-SA 4.0\n  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\n```\n\n配置文件路径：\\hexo\\themes\\next\\layout\\_macro\\post-copyright.swig\n\n```diff\n+{% if page.copyright %}\n<ul class=\"post-copyright\">\n  <li class=\"post-copyright-author\">\n    <strong>{{ __('post.copyright.author') + __('symbol.colon') }}</strong>\n    {{ post.author | default(config.author) }}\n  </li>\n  <li class=\"post-copyright-link\">\n    <strong>{{ __('post.copyright.link') + __('symbol.colon') }}</strong>\n    <a href=\"{{ post.url | default(post.permalink) }}\" title=\"{{ post.title }}\">{{ post.url | default(post.permalink) }}</a>\n  </li>\n  <li class=\"post-copyright-license\">\n    <strong>{{ __('post.copyright.license_title') + __('symbol.colon') }} </strong>\n    {{ __('post.copyright.license_content', theme.post_copyright.license_url, theme.post_copyright.license) }}\n  </li>\n</ul>\n+{% endif %}\n```\n\n布局文件路径：\\hexo\\themes\\next\\layout\\_macro\\post.swig\n\n#### 侧栏加入已运行的时间\n\n我们都有自己的生日，都知道自己的岁数，那为什么不给博客加上，让读者知道博客的年纪呢？操作很简单，而且不是精确到年而是精确到秒，233333～\n\n首先要加入下面代码：\n\n```html 文件位置:~/blog/themes/next/layout/_custom/sidebar.swig\n<div id=\"days\"></div>\n<script>\nfunction show_date_time(){\nwindow.setTimeout(\"show_date_time()\", 1000);\nBirthDay=new Date(\"05/27/2017 15:13:14\");\ntoday=new Date();\ntimeold=(today.getTime()-BirthDay.getTime());\nsectimeold=timeold/1000\nsecondsold=Math.floor(sectimeold);\nmsPerDay=24*60*60*1000\ne_daysold=timeold/msPerDay\ndaysold=Math.floor(e_daysold);\ne_hrsold=(e_daysold-daysold)*24;\nhrsold=setzero(Math.floor(e_hrsold));\ne_minsold=(e_hrsold-hrsold)*60;\nminsold=setzero(Math.floor((e_hrsold-hrsold)*60));\nseconds=setzero(Math.floor((e_minsold-minsold)*60));\ndocument.getElementById('days').innerHTML=\"已运行\"+daysold+\"天\"+hrsold+\"小时\"+minsold+\"分\"+seconds+\"秒\";\n}\nfunction setzero(i){\nif (i<10)\n{i=\"0\" + i};\nreturn i;\n}\nshow_date_time();\n</script>\n```\n\n上面Date的值记得改为你自己的，且按上面格式，然后修改：\n\n```diff 文件位置：~/blog/themes/next/layout/_macro/sidebar.swig\n        {# Blogroll #}\n        {% if theme.links %}\n          <div class=\"links-of-blogroll motion-element {{ \"links-of-blogroll-\" + theme.links_layout | default('inline') }}\">\n            <div class=\"links-of-blogroll-title\">\n              <i class=\"fa  fa-fw fa-{{ theme.links_icon | default('globe') | lower }}\"></i>\n              {{ theme.links_title }}&nbsp;\n              <i class=\"fa  fa-fw fa-{{ theme.links_icon | default('globe') | lower }}\"></i>\n            </div>\n            <ul class=\"links-of-blogroll-list\">\n              {% for name, link in theme.links %}\n                <li class=\"links-of-blogroll-item\">\n                  <a href=\"{{ link }}\" title=\"{{ name }}\" target=\"_blank\">{{ name }}</a>\n                </li>\n              {% endfor %}\n            </ul>\n+        {% include '../_custom/sidebar.swig' %}\n          </div>\n         {% endif %}\n\n-        {% include '../_custom/sidebar.swig' %}\n```\n\n这样就可以了！当然，要是不喜欢颜色，感觉不好看，就可以在上文所提的`custom.styl`加入：\n\n```styl 文件位置：~/blog/themes/next/source/css/_custom/custom.styl\n// 自定义的侧栏时间样式\n#days {\n    display: block;\n    color: rgb(7, 179, 155);\n    font-size: 13px;\n    margin-top: 15px;\n}\n```\n\n#### 修改页面宽度\n\n打开　\\themes\\next\\source\\css\\_variables\\custom.styl\n添加\n```\n$main-desktop                   = 1200px\n$content-desktop                = 900px\n```\n以上适用于（NexT5.x版本），6.0+应该写\n```\n$content-desktop-large          = 830px\n\n```\n\n#### 修改模板文件（增加div，布局调整，避免互相影响）\n\n**~\\blog\\themes\\next\\layout\\_macro\\post.swig**\n\n```diff\n-  <div class=\"post-block\">\n+  <div class=\"post-block index\">\n```\n\n**~\\blog\\themes\\next\\layout\\_macro\\post-collapse.swig**\n\n```diff\n{% macro render(post) %}\n+ <div class=\"post-block archives_title\">\n  <article class=\"post post-type-{{ post.type | default('normal') }}\" itemscope itemtype=\"http://schema.org/Article\">\n    <header class=\"post-header\">\n\t`\n\t`\n\t`\n    </header>\n  </article>\n+ </div>\n{% endmacro %}\n\n```\n\n#### 评分上面加文字\n\n**~/blog/themes/next/layout/_macro/post.swig**\n\n```diff\n        {% if theme.rating.enable %}\n          <div class=\"wp_rating\">\n+             <div style=\"color: rgba(0, 0, 0, 0.75); font-size:13px; letter-spacing:3px\">(&gt;来评分吧&lt;)</div>\n            <div id=\"wpac-rating\"></div>\n          </div>\n        {% endif %}\n```\n\n然后 Ctrl + F 搜索rating，找到这段，对比我给出的，在绿色这行所示的位置，加上自己想要的说明和样式即可。\n\n#### 压缩文件\n\ngulp.js 是基于流的自动化构建工具，我们可以使用 Gulp 为 Hexo 压缩文件\n首先任意目录全局安装：\n\n```npm\nnpm install gulp -g\n```\n\n然后到站点文件夹根目录：\n\n```npm\n npm install gulp-minify-css --save\n npm install gulp-uglify --save\n npm install gulp-htmlmin --save\n npm install gulp-htmlclean --save\n npm install gulp-imagemin --save\n```\n\n打开　\\blog\\\n\n新建　gulpfile.js\n\n写入\n\n```javascript\nvar gulp = require('gulp');\n\n//Plugins模块获取\nvar minifycss = require('gulp-minify-css');\nvar uglify = require('gulp-uglify');\nvar htmlmin = require('gulp-htmlmin');\nvar htmlclean = require('gulp-htmlclean');\nvar imagemin = require('gulp-imagemin');\n\n// 压缩css文件\ngulp.task('minify-css', function() {\n  return gulp.src('./public/**/*.css')\n  .pipe(minifycss())\n  .pipe(gulp.dest('./public'));\n});\n// 压缩html文件\ngulp.task('minify-html', function() {\n  return gulp.src(['./public/**/*.html','!./public/**/politics/*'])\n  .pipe(htmlclean())\n  .pipe(htmlmin({\n    removeComments: true,\n    minifyJS: true,\n    minifyCSS: true,\n    minifyURLs: true,\n  }))\n  .pipe(gulp.dest('./public'))\n});\n// 压缩js文件\ngulp.task('minify-js', function() {\n    return gulp.src(['./public/**/.js','!./public/js/**/*min.js'])\n        .pipe(uglify())\n        .pipe(gulp.dest('./public'));\n});\n// 压缩 public/images 目录内图片\ngulp.task('minify-images', function() {\n    gulp.src('./public/images/**/*.*')\n        .pipe(imagemin({\n           optimizationLevel: 5, //类型：Number  默认：3  取值范围：0-7（优化等级）\n           progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片\n           interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染\n           multipass: false, //类型：Boolean 默认：false 多次优化svg直到完全优化\n        }))\n        .pipe(gulp.dest('./public/uploads'));\n});\n// 默认任务\ngulp.task('default', [\n  'minify-html','minify-css','minify-js','minify-images'\n]);\n\n```\n\n#### 文末结束标记\n\n打开　\\themes\\next\\layout\\_macro\\\n\n新建　passage-end-tag.swig\n\n写入\n\n```swig\n{% if theme.passage_end_tag.enabled %}\n<div style=\"text-align:center;color: #ccc;font-size:15px;\"><br/><br/><br/>\n-------------文章结束啦 ~\\(≧▽≦)/~ 感谢您的阅读-------------</div>\n<br/>\n\n```\n\n打开　\\themes\\next\\layout\\_macro\\post.swig\n\n查找　wechat\n\n添加，如下内容\n\n```diff\n   {#####################}\n\n+  <div>\n+  {% if not is_index %}\n+    {% include 'passage-end-tag.swig' %}\n+  {% endif %}\n+  </div>\n\n    {% if theme.wechat_subscriber.enabled and not is_index %}\n```\n\n打开　\\themes\\next\\_config.yml\n\n添加\n\n```yml\n\n# 文章末尾添加“本文结束”标记\npassage_end_tag:\n  enabled: true\n\n\n```\n\n#### Live2d看板娘\n\n{% note primary %}\nlive2d官方[文档](https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md)\n{% endnote %}\n\n安装  npm install --save hexo-helper-live2d\n\n下载模型包：[live2d-widget-models](https://github.com/xiazeyu/live2d-widget-models)\n\n解压 \n\n将`packages`中的文件放到`node_modules`中\n\n打开  ~\\blog\\_config.yml\n\n添加\n\n```yml\nlive2d:\n  enable: true\n  scriptFrom: local\n  pluginRootPath: live2dw/\n  pluginJsPath: lib/\n  pluginModelPath: assets/\n  tagMode: false\n  debug: false\n  model:\n    use: live2d-widget-model-miku  #模板目录，在node_modules里\n  display:\n    position: left\n    width: 150\n    height: 300\n  mobile:\n    show: false\n```\n\n#### 引入自定义文件（用于样式定制）\n\n打开　\\themes\\next\\layout\\_custom\\\n\n新建　custom.swig\n\n打开　\\themes\\next\\layout\\_layout.swig\n\n在 \\</body> 前添加\n\n```\n{% include '_custom/custom.swig' %}\n```\n\n#### 评论输入打字礼花及震动特效\n\n下载　 activate-power-mode.js\n\n放置　activate-power-mode.js 至 CDN\n\n打开　\\themes\\next\\layout\\_custom\\custom.swig\n\n添加\n\n```javascript\n<!-- 打字礼花及震动特效 -->\n<script type=\"text/javascript\" src=\"https://qianling-1254036047.cos.ap-chengdu.myqcloud.com/js/activate-power-mode.js\"></script>\n<script>\n    POWERMODE.colorful = true; // ture 为启用礼花特效\n    POWERMODE.shake = false; // false 为禁用震动特效\n    document.body.addEventListener('input', POWERMODE);\n</script>\n```\n\n#### 添加emoji\n\n<div class =\"note success\"><p>参考自 ：<a href=\"https://www.jianshu.com/p/57e22584b277#emoji%E6%8F%92%E4%BB%B6\">emoji插件</a></p></div>\n\n#### 站点地图生成\n\n安装\n\n```npm\nnpm install hexo-generator-sitemap --save\nnpm install hexo-generator-baidu-sitemap --save\n\n```\n\n在<span id=\"inline-blue\">站点配置文件</span>中启用\n\n```yml\n# 自动生成sitemap\nsitemap:\npath: sitemap.xml\nbaidusitemap:\npath: baidusitemap.xml\n```\n\n#### 文章加密码\n\n##### 方式一：修改模板配置文件（不推荐）\n\n<span id = \"font-blue\">打开</span> ~\\blog\\themes\\next6.4\\layout\\_partials\\head\\\n\n<span id = \"font-blue\">新建</span> password.swig\n\n<span id = \"font-blue\">写入</span>\n\n```javascript\n\n<script>\n    (function () {\n        if ('{{ page.password }}') {\n            if (prompt('请输入文章密码') !== '{{ page.password }}') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"https://www.singlelovely.cn\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script>\n```\n<span id = \"font-blue\">然后打开</span>~\\blog\\themes\\next6.4\\layout\\_partials\\head\\head.swig\n\n<span id = \"font-blue\">写入</span>\n```diff\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=2\"/>\n<meta name=\"theme-color\" content=\"{{ theme.android_chrome_color }}\">\n\n+ {% if not is_index %}\n+   {% include 'password.swig' %}\n+ {% endif %}\n\n{% if theme.needmoreshare2.enable %}\n```\n<span id = \"font-red\">最后</span> 在需要加密的文章前面增加属性<span id=\"inline-yellow\"> password </span>\n\n##### 方式二 ：使用插件进行加密\n\n<span id = \"font-blue\">插件地址：</span> https://github.com/MikeCoder/hexo-blog-encrypt\n\n#### 首页文章摘要图\n\n##### 方式一：只在首页显示，文章中不显示\n\n<span id = \"font-blue\">打开</span> ~\\blog\\themes\\next6.4\\layout\\_macro\\post.swig\n\n<span id = \"font-blue\">搜索：</span> <span id=\"inline-green\"> post.description</span>\n\n<span id = \"font-blue\">下面添加：</span> \n```\n\n{% if post.image %}\n            <div class=\"out-img-topic\">\n              <img src={{ post.image }} class=\"img-topic\" />\n            </div>\n {% endif %}\n\n```\n然后在<span id = \"font-blue\">文章</span> 中写：\n```\nimage: \n- \"http://oz2tkq0zj.bkt.clouddn.com/17-11-9/52323298.jpg\"\n```\n##### 方式二：首页和文章中都显示\n\n<span id = \"font-blue\">直接</span>在<span id = \"font-blue\">文章</span> 中写（默认支持）：\n```\nphotos: \n- \"http://oz2tkq0zj.bkt.clouddn.com/17-11-9/52323298.jpg\"\n```\n\n#### 文章置顶\n\n<span id = \"font-blue\">打开</span>　\\blog\\node_modules\\hexo-generator-index\\lib\\generator.js\n\n<span id = \"font-blue\">将内容修改为　</span>\n\n```javascript\n'use strict';\nvar pagination = require('hexo-pagination');\nmodule.exports = function(locals){\n  var config = this.config;\n  var posts = locals.posts;\n    posts.data = posts.data.sort(function(a, b) {\n        if(a.sticky && b.sticky) { // 两篇文章sticky都有定义\n            if(a.sticky == b.sticky) return b.date - a.date; // 若sticky值一样则按照文章日期降序排\n            else return b.sticky - a.sticky; // 否则按照sticky值降序排\n        }\n        else if(a.sticky && !b.sticky) { // 以下是只有一篇文章sticky有定义，那么将有sticky的排在前面（这里用异或操作居然不行233）\n            return -1;\n        }\n        else if(!a.sticky && b.sticky) {\n            return 1;\n        }\n        else return b.date - a.date; // 都没定义按照文章日期降序排\n    });\n  var paginationDir = config.pagination_dir || 'page';\n  return pagination('', posts, {\n    perPage: config.index_generator.per_page,\n    layout: ['index', 'archive'],\n    format: paginationDir + '/%d/',\n    data: {\n      __index: true\n    }\n  });\n};\n\n```\n<span id = \"font-blue\">使用方法</span>\n\n在文章中添加 sticky 值，数值越大文章越靠前，如\n\n```\ntitle: hexo优化基于NexT6.4\ncopyright: false\nabbrlink: 13c8d3a0\nnotshow: false\ntags: \n- hexo \ncategories: hexo\ndate: 2018-08-02 21:07:40\npassword: \ndescription: 增加6.0+的新特性,去掉部分过时的功能\nimage: \n- \"https://data.singlelovely.cn/xsj/2018/8/9/hexo-next-optimization-title.jpg\"\nsticky: 10\n\n```","source":"_posts/hexo优化基于NexT6.4.md","raw":"---\ntitle: hexo优化基于NexT6.4\ncopyright: ture\nabbrlink: 13c8d3a0\nnotshow: false\ntags: \n- hexo \ncategories: hexo\ndate: 2018-08-02 21:07:40\npassword: \ndescription: 增加6.0+的新特性,去掉部分过时的功能\nimage: \n- \"https://data.singlelovely.cn/xsj/2018/8/9/hexo-next-optimization-title.jpg\"\nsticky:  \n---\n\n安装的插件：\n\n#### RSS\n\nnpm install hexo-generator-feed --save\n\n#### 字数统计\n\n##### next主题为5.x版本\n\n安装 ：npm install hexo-wordcount --save\n\n然后在主题配置文件中启用\n\n##### next主题为6.03+版本\n\n安装：npm install hexo-symbols-count-time --save\n\n打开 ：~\\blog\\_config.yml\n\n添加\n\n```yml\nsymbols_count_time:\n  symbols: true\n  time: true\n  total_symbols: true\n  total_time: false\n```\n\n然后在主题配置文件中启用\n\n#### 自定义站点内容搜索\n\n安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：\n\n npm install hexo-generator-searchdb --save\n编辑 站点配置文件，新增以下内容到任意位置：\n\nsearch:\n  path: search.xml\n  field: post\n  format: html\n  limit: 10000\n编辑 主题配置文件，启用本地搜索功能：\n\n\\# Local search\nlocal_search:\n  enable: true\n  \n#### 链接持久化\n\nnpm install hexo-abbrlink --save\n\npermalink: post/:abbrlink.html\npermalink_defaults:\nabbrlink:\n  alg: crc32  # 算法：crc16(default) and crc32\n  rep: hex    # 进制：dec(default) and hex\n\n#### 修改标签云\n\n```[swig] 位置：\\blog\\themes\\next\\layout\\page.swig\n{{ tagcloud({min_font: 13, max_font: 31, amount: 1000, color: true, start_color: '#9733EE', end_color: '#FF512F'}) }}\n```\n\n修改对应参数值即可，参数说明见 [Hexo 官方文档](https://hexo.io/zh-cn/docs/helpers.html#tagcloud)，颜色可以参考[这个网站](https://uigradients.com)，自己去纠结……\n\n#### 末尾版权信息\n\nhexo next自带版权开启\n\n```yml\n#Declare license on posts\n#版权信息\npost_copyright:\n  enable: true\n  license: CC BY-NC-SA 4.0\n  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh\n```\n\n配置文件路径：\\hexo\\themes\\next\\layout\\_macro\\post-copyright.swig\n\n```diff\n+{% if page.copyright %}\n<ul class=\"post-copyright\">\n  <li class=\"post-copyright-author\">\n    <strong>{{ __('post.copyright.author') + __('symbol.colon') }}</strong>\n    {{ post.author | default(config.author) }}\n  </li>\n  <li class=\"post-copyright-link\">\n    <strong>{{ __('post.copyright.link') + __('symbol.colon') }}</strong>\n    <a href=\"{{ post.url | default(post.permalink) }}\" title=\"{{ post.title }}\">{{ post.url | default(post.permalink) }}</a>\n  </li>\n  <li class=\"post-copyright-license\">\n    <strong>{{ __('post.copyright.license_title') + __('symbol.colon') }} </strong>\n    {{ __('post.copyright.license_content', theme.post_copyright.license_url, theme.post_copyright.license) }}\n  </li>\n</ul>\n+{% endif %}\n```\n\n布局文件路径：\\hexo\\themes\\next\\layout\\_macro\\post.swig\n\n#### 侧栏加入已运行的时间\n\n我们都有自己的生日，都知道自己的岁数，那为什么不给博客加上，让读者知道博客的年纪呢？操作很简单，而且不是精确到年而是精确到秒，233333～\n\n首先要加入下面代码：\n\n```html 文件位置:~/blog/themes/next/layout/_custom/sidebar.swig\n<div id=\"days\"></div>\n<script>\nfunction show_date_time(){\nwindow.setTimeout(\"show_date_time()\", 1000);\nBirthDay=new Date(\"05/27/2017 15:13:14\");\ntoday=new Date();\ntimeold=(today.getTime()-BirthDay.getTime());\nsectimeold=timeold/1000\nsecondsold=Math.floor(sectimeold);\nmsPerDay=24*60*60*1000\ne_daysold=timeold/msPerDay\ndaysold=Math.floor(e_daysold);\ne_hrsold=(e_daysold-daysold)*24;\nhrsold=setzero(Math.floor(e_hrsold));\ne_minsold=(e_hrsold-hrsold)*60;\nminsold=setzero(Math.floor((e_hrsold-hrsold)*60));\nseconds=setzero(Math.floor((e_minsold-minsold)*60));\ndocument.getElementById('days').innerHTML=\"已运行\"+daysold+\"天\"+hrsold+\"小时\"+minsold+\"分\"+seconds+\"秒\";\n}\nfunction setzero(i){\nif (i<10)\n{i=\"0\" + i};\nreturn i;\n}\nshow_date_time();\n</script>\n```\n\n上面Date的值记得改为你自己的，且按上面格式，然后修改：\n\n```diff 文件位置：~/blog/themes/next/layout/_macro/sidebar.swig\n        {# Blogroll #}\n        {% if theme.links %}\n          <div class=\"links-of-blogroll motion-element {{ \"links-of-blogroll-\" + theme.links_layout | default('inline') }}\">\n            <div class=\"links-of-blogroll-title\">\n              <i class=\"fa  fa-fw fa-{{ theme.links_icon | default('globe') | lower }}\"></i>\n              {{ theme.links_title }}&nbsp;\n              <i class=\"fa  fa-fw fa-{{ theme.links_icon | default('globe') | lower }}\"></i>\n            </div>\n            <ul class=\"links-of-blogroll-list\">\n              {% for name, link in theme.links %}\n                <li class=\"links-of-blogroll-item\">\n                  <a href=\"{{ link }}\" title=\"{{ name }}\" target=\"_blank\">{{ name }}</a>\n                </li>\n              {% endfor %}\n            </ul>\n+        {% include '../_custom/sidebar.swig' %}\n          </div>\n         {% endif %}\n\n-        {% include '../_custom/sidebar.swig' %}\n```\n\n这样就可以了！当然，要是不喜欢颜色，感觉不好看，就可以在上文所提的`custom.styl`加入：\n\n```styl 文件位置：~/blog/themes/next/source/css/_custom/custom.styl\n// 自定义的侧栏时间样式\n#days {\n    display: block;\n    color: rgb(7, 179, 155);\n    font-size: 13px;\n    margin-top: 15px;\n}\n```\n\n#### 修改页面宽度\n\n打开　\\themes\\next\\source\\css\\_variables\\custom.styl\n添加\n```\n$main-desktop                   = 1200px\n$content-desktop                = 900px\n```\n以上适用于（NexT5.x版本），6.0+应该写\n```\n$content-desktop-large          = 830px\n\n```\n\n#### 修改模板文件（增加div，布局调整，避免互相影响）\n\n**~\\blog\\themes\\next\\layout\\_macro\\post.swig**\n\n```diff\n-  <div class=\"post-block\">\n+  <div class=\"post-block index\">\n```\n\n**~\\blog\\themes\\next\\layout\\_macro\\post-collapse.swig**\n\n```diff\n{% macro render(post) %}\n+ <div class=\"post-block archives_title\">\n  <article class=\"post post-type-{{ post.type | default('normal') }}\" itemscope itemtype=\"http://schema.org/Article\">\n    <header class=\"post-header\">\n\t`\n\t`\n\t`\n    </header>\n  </article>\n+ </div>\n{% endmacro %}\n\n```\n\n#### 评分上面加文字\n\n**~/blog/themes/next/layout/_macro/post.swig**\n\n```diff\n        {% if theme.rating.enable %}\n          <div class=\"wp_rating\">\n+             <div style=\"color: rgba(0, 0, 0, 0.75); font-size:13px; letter-spacing:3px\">(&gt;来评分吧&lt;)</div>\n            <div id=\"wpac-rating\"></div>\n          </div>\n        {% endif %}\n```\n\n然后 Ctrl + F 搜索rating，找到这段，对比我给出的，在绿色这行所示的位置，加上自己想要的说明和样式即可。\n\n#### 压缩文件\n\ngulp.js 是基于流的自动化构建工具，我们可以使用 Gulp 为 Hexo 压缩文件\n首先任意目录全局安装：\n\n```npm\nnpm install gulp -g\n```\n\n然后到站点文件夹根目录：\n\n```npm\n npm install gulp-minify-css --save\n npm install gulp-uglify --save\n npm install gulp-htmlmin --save\n npm install gulp-htmlclean --save\n npm install gulp-imagemin --save\n```\n\n打开　\\blog\\\n\n新建　gulpfile.js\n\n写入\n\n```javascript\nvar gulp = require('gulp');\n\n//Plugins模块获取\nvar minifycss = require('gulp-minify-css');\nvar uglify = require('gulp-uglify');\nvar htmlmin = require('gulp-htmlmin');\nvar htmlclean = require('gulp-htmlclean');\nvar imagemin = require('gulp-imagemin');\n\n// 压缩css文件\ngulp.task('minify-css', function() {\n  return gulp.src('./public/**/*.css')\n  .pipe(minifycss())\n  .pipe(gulp.dest('./public'));\n});\n// 压缩html文件\ngulp.task('minify-html', function() {\n  return gulp.src(['./public/**/*.html','!./public/**/politics/*'])\n  .pipe(htmlclean())\n  .pipe(htmlmin({\n    removeComments: true,\n    minifyJS: true,\n    minifyCSS: true,\n    minifyURLs: true,\n  }))\n  .pipe(gulp.dest('./public'))\n});\n// 压缩js文件\ngulp.task('minify-js', function() {\n    return gulp.src(['./public/**/.js','!./public/js/**/*min.js'])\n        .pipe(uglify())\n        .pipe(gulp.dest('./public'));\n});\n// 压缩 public/images 目录内图片\ngulp.task('minify-images', function() {\n    gulp.src('./public/images/**/*.*')\n        .pipe(imagemin({\n           optimizationLevel: 5, //类型：Number  默认：3  取值范围：0-7（优化等级）\n           progressive: true, //类型：Boolean 默认：false 无损压缩jpg图片\n           interlaced: false, //类型：Boolean 默认：false 隔行扫描gif进行渲染\n           multipass: false, //类型：Boolean 默认：false 多次优化svg直到完全优化\n        }))\n        .pipe(gulp.dest('./public/uploads'));\n});\n// 默认任务\ngulp.task('default', [\n  'minify-html','minify-css','minify-js','minify-images'\n]);\n\n```\n\n#### 文末结束标记\n\n打开　\\themes\\next\\layout\\_macro\\\n\n新建　passage-end-tag.swig\n\n写入\n\n```swig\n{% if theme.passage_end_tag.enabled %}\n<div style=\"text-align:center;color: #ccc;font-size:15px;\"><br/><br/><br/>\n-------------文章结束啦 ~\\(≧▽≦)/~ 感谢您的阅读-------------</div>\n<br/>\n\n```\n\n打开　\\themes\\next\\layout\\_macro\\post.swig\n\n查找　wechat\n\n添加，如下内容\n\n```diff\n   {#####################}\n\n+  <div>\n+  {% if not is_index %}\n+    {% include 'passage-end-tag.swig' %}\n+  {% endif %}\n+  </div>\n\n    {% if theme.wechat_subscriber.enabled and not is_index %}\n```\n\n打开　\\themes\\next\\_config.yml\n\n添加\n\n```yml\n\n# 文章末尾添加“本文结束”标记\npassage_end_tag:\n  enabled: true\n\n\n```\n\n#### Live2d看板娘\n\n{% note primary %}\nlive2d官方[文档](https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md)\n{% endnote %}\n\n安装  npm install --save hexo-helper-live2d\n\n下载模型包：[live2d-widget-models](https://github.com/xiazeyu/live2d-widget-models)\n\n解压 \n\n将`packages`中的文件放到`node_modules`中\n\n打开  ~\\blog\\_config.yml\n\n添加\n\n```yml\nlive2d:\n  enable: true\n  scriptFrom: local\n  pluginRootPath: live2dw/\n  pluginJsPath: lib/\n  pluginModelPath: assets/\n  tagMode: false\n  debug: false\n  model:\n    use: live2d-widget-model-miku  #模板目录，在node_modules里\n  display:\n    position: left\n    width: 150\n    height: 300\n  mobile:\n    show: false\n```\n\n#### 引入自定义文件（用于样式定制）\n\n打开　\\themes\\next\\layout\\_custom\\\n\n新建　custom.swig\n\n打开　\\themes\\next\\layout\\_layout.swig\n\n在 \\</body> 前添加\n\n```\n{% include '_custom/custom.swig' %}\n```\n\n#### 评论输入打字礼花及震动特效\n\n下载　 activate-power-mode.js\n\n放置　activate-power-mode.js 至 CDN\n\n打开　\\themes\\next\\layout\\_custom\\custom.swig\n\n添加\n\n```javascript\n<!-- 打字礼花及震动特效 -->\n<script type=\"text/javascript\" src=\"https://qianling-1254036047.cos.ap-chengdu.myqcloud.com/js/activate-power-mode.js\"></script>\n<script>\n    POWERMODE.colorful = true; // ture 为启用礼花特效\n    POWERMODE.shake = false; // false 为禁用震动特效\n    document.body.addEventListener('input', POWERMODE);\n</script>\n```\n\n#### 添加emoji\n\n<div class =\"note success\"><p>参考自 ：<a href=\"https://www.jianshu.com/p/57e22584b277#emoji%E6%8F%92%E4%BB%B6\">emoji插件</a></p></div>\n\n#### 站点地图生成\n\n安装\n\n```npm\nnpm install hexo-generator-sitemap --save\nnpm install hexo-generator-baidu-sitemap --save\n\n```\n\n在<span id=\"inline-blue\">站点配置文件</span>中启用\n\n```yml\n# 自动生成sitemap\nsitemap:\npath: sitemap.xml\nbaidusitemap:\npath: baidusitemap.xml\n```\n\n#### 文章加密码\n\n##### 方式一：修改模板配置文件（不推荐）\n\n<span id = \"font-blue\">打开</span> ~\\blog\\themes\\next6.4\\layout\\_partials\\head\\\n\n<span id = \"font-blue\">新建</span> password.swig\n\n<span id = \"font-blue\">写入</span>\n\n```javascript\n\n<script>\n    (function () {\n        if ('{{ page.password }}') {\n            if (prompt('请输入文章密码') !== '{{ page.password }}') {\n                alert('密码错误！');\n                if (history.length === 1) {\n                    location.replace(\"https://www.singlelovely.cn\"); // 这里替换成你的首页\n                } else {\n                    history.back();\n                }\n            }\n        }\n    })();\n</script>\n```\n<span id = \"font-blue\">然后打开</span>~\\blog\\themes\\next6.4\\layout\\_partials\\head\\head.swig\n\n<span id = \"font-blue\">写入</span>\n```diff\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=2\"/>\n<meta name=\"theme-color\" content=\"{{ theme.android_chrome_color }}\">\n\n+ {% if not is_index %}\n+   {% include 'password.swig' %}\n+ {% endif %}\n\n{% if theme.needmoreshare2.enable %}\n```\n<span id = \"font-red\">最后</span> 在需要加密的文章前面增加属性<span id=\"inline-yellow\"> password </span>\n\n##### 方式二 ：使用插件进行加密\n\n<span id = \"font-blue\">插件地址：</span> https://github.com/MikeCoder/hexo-blog-encrypt\n\n#### 首页文章摘要图\n\n##### 方式一：只在首页显示，文章中不显示\n\n<span id = \"font-blue\">打开</span> ~\\blog\\themes\\next6.4\\layout\\_macro\\post.swig\n\n<span id = \"font-blue\">搜索：</span> <span id=\"inline-green\"> post.description</span>\n\n<span id = \"font-blue\">下面添加：</span> \n```\n\n{% if post.image %}\n            <div class=\"out-img-topic\">\n              <img src={{ post.image }} class=\"img-topic\" />\n            </div>\n {% endif %}\n\n```\n然后在<span id = \"font-blue\">文章</span> 中写：\n```\nimage: \n- \"http://oz2tkq0zj.bkt.clouddn.com/17-11-9/52323298.jpg\"\n```\n##### 方式二：首页和文章中都显示\n\n<span id = \"font-blue\">直接</span>在<span id = \"font-blue\">文章</span> 中写（默认支持）：\n```\nphotos: \n- \"http://oz2tkq0zj.bkt.clouddn.com/17-11-9/52323298.jpg\"\n```\n\n#### 文章置顶\n\n<span id = \"font-blue\">打开</span>　\\blog\\node_modules\\hexo-generator-index\\lib\\generator.js\n\n<span id = \"font-blue\">将内容修改为　</span>\n\n```javascript\n'use strict';\nvar pagination = require('hexo-pagination');\nmodule.exports = function(locals){\n  var config = this.config;\n  var posts = locals.posts;\n    posts.data = posts.data.sort(function(a, b) {\n        if(a.sticky && b.sticky) { // 两篇文章sticky都有定义\n            if(a.sticky == b.sticky) return b.date - a.date; // 若sticky值一样则按照文章日期降序排\n            else return b.sticky - a.sticky; // 否则按照sticky值降序排\n        }\n        else if(a.sticky && !b.sticky) { // 以下是只有一篇文章sticky有定义，那么将有sticky的排在前面（这里用异或操作居然不行233）\n            return -1;\n        }\n        else if(!a.sticky && b.sticky) {\n            return 1;\n        }\n        else return b.date - a.date; // 都没定义按照文章日期降序排\n    });\n  var paginationDir = config.pagination_dir || 'page';\n  return pagination('', posts, {\n    perPage: config.index_generator.per_page,\n    layout: ['index', 'archive'],\n    format: paginationDir + '/%d/',\n    data: {\n      __index: true\n    }\n  });\n};\n\n```\n<span id = \"font-blue\">使用方法</span>\n\n在文章中添加 sticky 值，数值越大文章越靠前，如\n\n```\ntitle: hexo优化基于NexT6.4\ncopyright: false\nabbrlink: 13c8d3a0\nnotshow: false\ntags: \n- hexo \ncategories: hexo\ndate: 2018-08-02 21:07:40\npassword: \ndescription: 增加6.0+的新特性,去掉部分过时的功能\nimage: \n- \"https://data.singlelovely.cn/xsj/2018/8/9/hexo-next-optimization-title.jpg\"\nsticky: 10\n\n```","slug":"hexo优化基于NexT6.4","published":1,"updated":"2020-02-20T06:06:59.401Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3e0012fkup44b16a5j","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>安装的插件：</p>\n<h4 id=\"rss\"><a class=\"header-anchor\" href=\"#rss\">☆</a>RSS</h4>\n<p>npm install hexo-generator-feed --save</p>\n<h4 id=\"字数统计\"><a class=\"header-anchor\" href=\"#字数统计\">☆</a>字数统计</h4>\n<h5 id=\"next主题为5-x版本\"><a class=\"header-anchor\" href=\"#next主题为5-x版本\">☆</a>next主题为5.x版本</h5>\n<p>安装 ：npm install hexo-wordcount --save</p>\n<p>然后在主题配置文件中启用</p>\n<h5 id=\"next主题为6-03-版本\"><a class=\"header-anchor\" href=\"#next主题为6-03-版本\">☆</a>next主题为6.03+版本</h5>\n<p>安装：npm install hexo-symbols-count-time --save</p>\n<p>打开 ：~\\blog_config.yml</p>\n<p>添加</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">symbols_count_time:</span></span><br><span class=\"line\"><span class=\"attr\">  symbols:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  time:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  total_symbols:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  total_time:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p>然后在主题配置文件中启用</p>\n<h4 id=\"自定义站点内容搜索\"><a class=\"header-anchor\" href=\"#自定义站点内容搜索\">☆</a>自定义站点内容搜索</h4>\n<p>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：</p>\n<p>npm install hexo-generator-searchdb --save<br>\n编辑 站点配置文件，新增以下内容到任意位置：</p>\n<p>search:<br>\npath: search.xml<br>\nfield: post<br>\nformat: html<br>\nlimit: 10000<br>\n编辑 主题配置文件，启用本地搜索功能：</p>\n<p># Local search<br>\nlocal_search:<br>\nenable: true</p>\n<h4 id=\"链接持久化\"><a class=\"header-anchor\" href=\"#链接持久化\">☆</a>链接持久化</h4>\n<p>npm install hexo-abbrlink --save</p>\n<p>permalink: post/:abbrlink.html<br>\npermalink_defaults:<br>\nabbrlink:<br>\nalg: crc32  # 算法：crc16(default) and crc32<br>\nrep: hex    # 进制：dec(default) and hex</p>\n<h4 id=\"修改标签云\"><a class=\"header-anchor\" href=\"#修改标签云\">☆</a>修改标签云</h4>\n<figure class=\"highlight plain\"><figcaption><span>位置：\\blog\\themes\\next\\layout\\page.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; tagcloud(&#123;min_font: 13, max_font: 31, amount: 1000, color: true, start_color: &apos;#9733EE&apos;, end_color: &apos;#FF512F&apos;&#125;) &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>修改对应参数值即可，参数说明见 <a href=\"https://hexo.io/zh-cn/docs/helpers.html#tagcloud\" target=\"_blank\" rel=\"noopener\">Hexo 官方文档</a>，颜色可以参考<a href=\"https://uigradients.com\" target=\"_blank\" rel=\"noopener\">这个网站</a>，自己去纠结……</p>\n<h4 id=\"末尾版权信息\"><a class=\"header-anchor\" href=\"#末尾版权信息\">☆</a>末尾版权信息</h4>\n<p>hexo next自带版权开启</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Declare license on posts</span></span><br><span class=\"line\"><span class=\"comment\">#版权信息</span></span><br><span class=\"line\"><span class=\"attr\">post_copyright:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  license:</span> <span class=\"string\">CC</span> <span class=\"string\">BY-NC-SA</span> <span class=\"number\">4.0</span></span><br><span class=\"line\"><span class=\"attr\">  license_url:</span> <span class=\"attr\">https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh</span></span><br></pre></td></tr></table></figure>\n<p>配置文件路径：\\hexo\\themes\\next\\layout_macro\\post-copyright.swig</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"addition\">+&#123;% if page.copyright %&#125;</span></span><br><span class=\"line\">&lt;ul class=\"post-copyright\"&gt;</span><br><span class=\"line\">  &lt;li class=\"post-copyright-author\"&gt;</span><br><span class=\"line\">    &lt;strong&gt;&#123;&#123; __('post.copyright.author') + __('symbol.colon') &#125;&#125;&lt;/strong&gt;</span><br><span class=\"line\">    &#123;&#123; post.author | default(config.author) &#125;&#125;</span><br><span class=\"line\">  &lt;/li&gt;</span><br><span class=\"line\">  &lt;li class=\"post-copyright-link\"&gt;</span><br><span class=\"line\">    &lt;strong&gt;&#123;&#123; __('post.copyright.link') + __('symbol.colon') &#125;&#125;&lt;/strong&gt;</span><br><span class=\"line\">    &lt;a href=\"&#123;&#123; post.url | default(post.permalink) &#125;&#125;\" title=\"&#123;&#123; post.title &#125;&#125;\"&gt;&#123;&#123; post.url | default(post.permalink) &#125;&#125;&lt;/a&gt;</span><br><span class=\"line\">  &lt;/li&gt;</span><br><span class=\"line\">  &lt;li class=\"post-copyright-license\"&gt;</span><br><span class=\"line\">    &lt;strong&gt;&#123;&#123; __('post.copyright.license_title') + __('symbol.colon') &#125;&#125; &lt;/strong&gt;</span><br><span class=\"line\">    &#123;&#123; __('post.copyright.license_content', theme.post_copyright.license_url, theme.post_copyright.license) &#125;&#125;</span><br><span class=\"line\">  &lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"><span class=\"addition\">+&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>\n<p>布局文件路径：\\hexo\\themes\\next\\layout_macro\\post.swig</p>\n<h4 id=\"侧栏加入已运行的时间\"><a class=\"header-anchor\" href=\"#侧栏加入已运行的时间\">☆</a>侧栏加入已运行的时间</h4>\n<p>我们都有自己的生日，都知道自己的岁数，那为什么不给博客加上，让读者知道博客的年纪呢？操作很简单，而且不是精确到年而是精确到秒，233333～</p>\n<p>首先要加入下面代码：</p>\n<figure class=\"highlight html\"><figcaption><span>文件位置:~/blog/themes/next/layout/_custom/sidebar.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"days\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">show_date_time</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"built_in\">window</span>.setTimeout(<span class=\"string\">\"show_date_time()\"</span>, <span class=\"number\">1000</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">BirthDay=<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"string\">\"05/27/2017 15:13:14\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">today=<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span></span><br><span class=\"line\"><span class=\"undefined\">timeold=(today.getTime()-BirthDay.getTime());</span></span><br><span class=\"line\"><span class=\"undefined\">sectimeold=timeold/1000</span></span><br><span class=\"line\"><span class=\"javascript\">secondsold=<span class=\"built_in\">Math</span>.floor(sectimeold);</span></span><br><span class=\"line\"><span class=\"undefined\">msPerDay=24*60*60*1000</span></span><br><span class=\"line\"><span class=\"undefined\">e_daysold=timeold/msPerDay</span></span><br><span class=\"line\"><span class=\"javascript\">daysold=<span class=\"built_in\">Math</span>.floor(e_daysold);</span></span><br><span class=\"line\"><span class=\"undefined\">e_hrsold=(e_daysold-daysold)*24;</span></span><br><span class=\"line\"><span class=\"javascript\">hrsold=setzero(<span class=\"built_in\">Math</span>.floor(e_hrsold));</span></span><br><span class=\"line\"><span class=\"undefined\">e_minsold=(e_hrsold-hrsold)*60;</span></span><br><span class=\"line\"><span class=\"javascript\">minsold=setzero(<span class=\"built_in\">Math</span>.floor((e_hrsold-hrsold)*<span class=\"number\">60</span>));</span></span><br><span class=\"line\"><span class=\"javascript\">seconds=setzero(<span class=\"built_in\">Math</span>.floor((e_minsold-minsold)*<span class=\"number\">60</span>));</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'days'</span>).innerHTML=<span class=\"string\">\"已运行\"</span>+daysold+<span class=\"string\">\"天\"</span>+hrsold+<span class=\"string\">\"小时\"</span>+minsold+<span class=\"string\">\"分\"</span>+seconds+<span class=\"string\">\"秒\"</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setzero</span>(<span class=\"params\">i</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">if</span> (i&lt;<span class=\"number\">10</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">&#123;i=<span class=\"string\">\"0\"</span> + i&#125;;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">return</span> i;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">show_date_time();</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面Date的值记得改为你自己的，且按上面格式，然后修改：</p>\n<figure class=\"highlight diff\"><figcaption><span>文件位置：~/blog/themes/next/layout/_macro/sidebar.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        &#123;# Blogroll #&#125;</span><br><span class=\"line\">        &#123;% if theme.links %&#125;</span><br><span class=\"line\">          &lt;div class=\"links-of-blogroll motion-element &#123;&#123; \"links-of-blogroll-\" + theme.links_layout | default('inline') &#125;&#125;\"&gt;</span><br><span class=\"line\">            &lt;div class=\"links-of-blogroll-title\"&gt;</span><br><span class=\"line\">              &lt;i class=\"fa  fa-fw fa-&#123;&#123; theme.links_icon | default('globe') | lower &#125;&#125;\"&gt;&lt;/i&gt;</span><br><span class=\"line\">              &#123;&#123; theme.links_title &#125;&#125;&amp;nbsp;</span><br><span class=\"line\">              &lt;i class=\"fa  fa-fw fa-&#123;&#123; theme.links_icon | default('globe') | lower &#125;&#125;\"&gt;&lt;/i&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;ul class=\"links-of-blogroll-list\"&gt;</span><br><span class=\"line\">              &#123;% for name, link in theme.links %&#125;</span><br><span class=\"line\">                &lt;li class=\"links-of-blogroll-item\"&gt;</span><br><span class=\"line\">                  &lt;a href=\"&#123;&#123; link &#125;&#125;\" title=\"&#123;&#123; name &#125;&#125;\" target=\"_blank\"&gt;&#123;&#123; name &#125;&#125;&lt;/a&gt;</span><br><span class=\"line\">                &lt;/li&gt;</span><br><span class=\"line\">              &#123;% endfor %&#125;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br><span class=\"line\"><span class=\"addition\">+        &#123;% include '../_custom/sidebar.swig' %&#125;</span></span><br><span class=\"line\">          &lt;/div&gt;</span><br><span class=\"line\">         &#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">-        &#123;% include '../_custom/sidebar.swig' %&#125;</span></span><br></pre></td></tr></table></figure>\n<p>这样就可以了！当然，要是不喜欢颜色，感觉不好看，就可以在上文所提的<code>custom.styl</code>加入：</p>\n<figure class=\"highlight styl\"><figcaption><span>文件位置：~/blog/themes/next/source/css/_custom/custom.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 自定义的侧栏时间样式</span></span><br><span class=\"line\"><span class=\"selector-id\">#days</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: rgb(<span class=\"number\">7</span>, <span class=\"number\">179</span>, <span class=\"number\">155</span>);</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">13px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改页面宽度\"><a class=\"header-anchor\" href=\"#修改页面宽度\">☆</a>修改页面宽度</h4>\n<p>打开　\\themes\\next\\source\\css_variables\\custom.styl<br>\n添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$main-desktop                   = 1200px</span><br><span class=\"line\">$content-desktop                = 900px</span><br></pre></td></tr></table></figure>\n<p>以上适用于（NexT5.x版本），6.0+应该写</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$content-desktop-large          = 830px</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改模板文件-增加div-布局调整-避免互相影响\"><a class=\"header-anchor\" href=\"#修改模板文件-增加div-布局调整-避免互相影响\">☆</a>修改模板文件（增加div，布局调整，避免互相影响）</h4>\n<p><strong>~\\blog\\themes\\next\\layout_macro\\post.swig</strong></p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">-  &lt;div class=\"post-block\"&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+  &lt;div class=\"post-block index\"&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>~\\blog\\themes\\next\\layout_macro\\post-collapse.swig</strong></p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% macro render(post) %&#125;</span><br><span class=\"line\"><span class=\"addition\">+ &lt;div class=\"post-block archives_title\"&gt;</span></span><br><span class=\"line\">  &lt;article class=\"post post-type-&#123;&#123; post.type | default('normal') &#125;&#125;\" itemscope itemtype=\"http://schema.org/Article\"&gt;</span><br><span class=\"line\">    &lt;header class=\"post-header\"&gt;</span><br><span class=\"line\">\t`</span><br><span class=\"line\">\t`</span><br><span class=\"line\">\t`</span><br><span class=\"line\">    &lt;/header&gt;</span><br><span class=\"line\">  &lt;/article&gt;</span><br><span class=\"line\"><span class=\"addition\">+ &lt;/div&gt;</span></span><br><span class=\"line\">&#123;% endmacro %&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"评分上面加文字\"><a class=\"header-anchor\" href=\"#评分上面加文字\">☆</a>评分上面加文字</h4>\n<p><strong>~/blog/themes/next/layout/_macro/post.swig</strong></p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        &#123;% if theme.rating.enable %&#125;</span><br><span class=\"line\">          &lt;div class=\"wp_rating\"&gt;</span><br><span class=\"line\"><span class=\"addition\">+             &lt;div style=\"color: rgba(0, 0, 0, 0.75); font-size:13px; letter-spacing:3px\"&gt;(&amp;gt;来评分吧&amp;lt;)&lt;/div&gt;</span></span><br><span class=\"line\">            &lt;div id=\"wpac-rating\"&gt;&lt;/div&gt;</span><br><span class=\"line\">          &lt;/div&gt;</span><br><span class=\"line\">        &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>然后 Ctrl + F 搜索rating，找到这段，对比我给出的，在绿色这行所示的位置，加上自己想要的说明和样式即可。</p>\n<h4 id=\"压缩文件\"><a class=\"header-anchor\" href=\"#压缩文件\">☆</a>压缩文件</h4>\n<p>gulp.js 是基于流的自动化构建工具，我们可以使用 Gulp 为 Hexo 压缩文件<br>\n首先任意目录全局安装：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp -g</span><br></pre></td></tr></table></figure>\n<p>然后到站点文件夹根目录：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp-minify-css --save</span><br><span class=\"line\">npm install gulp-uglify --save</span><br><span class=\"line\">npm install gulp-htmlmin --save</span><br><span class=\"line\">npm install gulp-htmlclean --save</span><br><span class=\"line\">npm install gulp-imagemin --save</span><br></pre></td></tr></table></figure>\n<p>打开　\\blog\\</p>\n<p>新建　gulpfile.js</p>\n<p>写入</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Plugins模块获取</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> minifycss = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minify-css'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> htmlmin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-htmlmin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> htmlclean = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-htmlclean'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-imagemin'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 压缩css文件</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./public/**/*.css'</span>)</span><br><span class=\"line\">  .pipe(minifycss())</span><br><span class=\"line\">  .pipe(gulp.dest(<span class=\"string\">'./public'</span>));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 压缩html文件</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.src([<span class=\"string\">'./public/**/*.html'</span>,<span class=\"string\">'!./public/**/politics/*'</span>])</span><br><span class=\"line\">  .pipe(htmlclean())</span><br><span class=\"line\">  .pipe(htmlmin(&#123;</span><br><span class=\"line\">    removeComments: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    minifyJS: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    minifyCSS: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    minifyURLs: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  &#125;))</span><br><span class=\"line\">  .pipe(gulp.dest(<span class=\"string\">'./public'</span>))</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 压缩js文件</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src([<span class=\"string\">'./public/**/.js'</span>,<span class=\"string\">'!./public/js/**/*min.js'</span>])</span><br><span class=\"line\">        .pipe(uglify())</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public'</span>));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 压缩 public/images 目录内图片</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-images'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    gulp.src(<span class=\"string\">'./public/images/**/*.*'</span>)</span><br><span class=\"line\">        .pipe(imagemin(&#123;</span><br><span class=\"line\">           optimizationLevel: <span class=\"number\">5</span>, <span class=\"comment\">//类型：Number  默认：3  取值范围：0-7（优化等级）</span></span><br><span class=\"line\">           progressive: <span class=\"literal\">true</span>, <span class=\"comment\">//类型：Boolean 默认：false 无损压缩jpg图片</span></span><br><span class=\"line\">           interlaced: <span class=\"literal\">false</span>, <span class=\"comment\">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span></span><br><span class=\"line\">           multipass: <span class=\"literal\">false</span>, <span class=\"comment\">//类型：Boolean 默认：false 多次优化svg直到完全优化</span></span><br><span class=\"line\">        &#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public/uploads'</span>));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 默认任务</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [</span><br><span class=\"line\">  <span class=\"string\">'minify-html'</span>,<span class=\"string\">'minify-css'</span>,<span class=\"string\">'minify-js'</span>,<span class=\"string\">'minify-images'</span></span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>\n<h4 id=\"文末结束标记\"><a class=\"header-anchor\" href=\"#文末结束标记\">☆</a>文末结束标记</h4>\n<p>打开　\\themes\\next\\layout_macro\\</p>\n<p>新建　passage-end-tag.swig</p>\n<p>写入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if theme.passage_end_tag.enabled %&#125;</span><br><span class=\"line\">&lt;div style=&quot;text-align:center;color: #ccc;font-size:15px;&quot;&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</span><br><span class=\"line\">-------------文章结束啦 ~\\(≧▽≦)/~ 感谢您的阅读-------------&lt;/div&gt;</span><br><span class=\"line\">&lt;br/&gt;</span><br></pre></td></tr></table></figure>\n<p>打开　\\themes\\next\\layout_macro\\post.swig</p>\n<p>查找　wechat</p>\n<p>添加，如下内容</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &#123;#####################&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"addition\">+  &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+  &#123;% if not is_index %&#125;</span></span><br><span class=\"line\"><span class=\"addition\">+    &#123;% include 'passage-end-tag.swig' %&#125;</span></span><br><span class=\"line\"><span class=\"addition\">+  &#123;% endif %&#125;</span></span><br><span class=\"line\"><span class=\"addition\">+  &lt;/div&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% if theme.wechat_subscriber.enabled and not is_index %&#125;</span><br></pre></td></tr></table></figure>\n<p>打开　\\themes\\next_config.yml</p>\n<p>添加</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文章末尾添加“本文结束”标记</span></span><br><span class=\"line\"><span class=\"attr\">passage_end_tag:</span></span><br><span class=\"line\"><span class=\"attr\">  enabled:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"live2d看板娘\"><a class=\"header-anchor\" href=\"#live2d看板娘\">☆</a>Live2d看板娘</h4>\n<div class=\"note primary\"><p>live2d官方<a href=\"https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md\" target=\"_blank\" rel=\"noopener\">文档</a></p></div>\n<p>安装  npm install --save hexo-helper-live2d</p>\n<p>下载模型包：<a href=\"https://github.com/xiazeyu/live2d-widget-models\" target=\"_blank\" rel=\"noopener\">live2d-widget-models</a></p>\n<p>解压</p>\n<p>将<code>packages</code>中的文件放到<code>node_modules</code>中</p>\n<p>打开  ~\\blog_config.yml</p>\n<p>添加</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">live2d:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  scriptFrom:</span> <span class=\"string\">local</span></span><br><span class=\"line\"><span class=\"attr\">  pluginRootPath:</span> <span class=\"string\">live2dw/</span></span><br><span class=\"line\"><span class=\"attr\">  pluginJsPath:</span> <span class=\"string\">lib/</span></span><br><span class=\"line\"><span class=\"attr\">  pluginModelPath:</span> <span class=\"string\">assets/</span></span><br><span class=\"line\"><span class=\"attr\">  tagMode:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  debug:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  model:</span></span><br><span class=\"line\"><span class=\"attr\">    use:</span> <span class=\"string\">live2d-widget-model-miku</span>  <span class=\"comment\">#模板目录，在node_modules里</span></span><br><span class=\"line\"><span class=\"attr\">  display:</span></span><br><span class=\"line\"><span class=\"attr\">    position:</span> <span class=\"string\">left</span></span><br><span class=\"line\"><span class=\"attr\">    width:</span> <span class=\"number\">150</span></span><br><span class=\"line\"><span class=\"attr\">    height:</span> <span class=\"number\">300</span></span><br><span class=\"line\"><span class=\"attr\">  mobile:</span></span><br><span class=\"line\"><span class=\"attr\">    show:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"引入自定义文件-用于样式定制\"><a class=\"header-anchor\" href=\"#引入自定义文件-用于样式定制\">☆</a>引入自定义文件（用于样式定制）</h4>\n<p>打开　\\themes\\next\\layout_custom\\</p>\n<p>新建　custom.swig</p>\n<p>打开　\\themes\\next\\layout_layout.swig</p>\n<p>在 &lt;/body&gt; 前添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% include &apos;_custom/custom.swig&apos; %&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"评论输入打字礼花及震动特效\"><a class=\"header-anchor\" href=\"#评论输入打字礼花及震动特效\">☆</a>评论输入打字礼花及震动特效</h4>\n<p>下载　 activate-power-mode.js</p>\n<p>放置　activate-power-mode.js 至 CDN</p>\n<p>打开　\\themes\\next\\layout_custom\\custom.swig</p>\n<p>添加</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 打字礼花及震动特效 --&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"https://qianling-1254036047.cos.ap-chengdu.myqcloud.com/js/activate-power-mode.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    POWERMODE.colorful = <span class=\"literal\">true</span>; <span class=\"comment\">// ture 为启用礼花特效</span></span><br><span class=\"line\">    POWERMODE.shake = <span class=\"literal\">false</span>; <span class=\"comment\">// false 为禁用震动特效</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.addEventListener(<span class=\"string\">'input'</span>, POWERMODE);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"添加emoji\"><a class=\"header-anchor\" href=\"#添加emoji\">☆</a>添加emoji</h4>\n<div class=\"note success\"><p>参考自 ：<a href=\"https://www.jianshu.com/p/57e22584b277#emoji%E6%8F%92%E4%BB%B6\" target=\"_blank\" rel=\"noopener\">emoji插件</a></p></div>\n<h4 id=\"站点地图生成\"><a class=\"header-anchor\" href=\"#站点地图生成\">☆</a>站点地图生成</h4>\n<p>安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n<p>在<span id=\"inline-blue\">站点配置文件</span>中启用</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 自动生成sitemap</span></span><br><span class=\"line\"><span class=\"attr\">sitemap:</span></span><br><span class=\"line\"><span class=\"attr\">path:</span> <span class=\"string\">sitemap.xml</span></span><br><span class=\"line\"><span class=\"attr\">baidusitemap:</span></span><br><span class=\"line\"><span class=\"attr\">path:</span> <span class=\"string\">baidusitemap.xml</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"文章加密码\"><a class=\"header-anchor\" href=\"#文章加密码\">☆</a>文章加密码</h4>\n<h5 id=\"方式一：修改模板配置文件-不推荐\"><a class=\"header-anchor\" href=\"#方式一：修改模板配置文件-不推荐\">☆</a>方式一：修改模板配置文件（不推荐）</h5>\n<p><span id=\"font-blue\">打开</span> ~\\blog\\themes\\next6.4\\layout_partials\\head\\</p>\n<p><span id=\"font-blue\">新建</span> password.swig</p>\n<p><span id=\"font-blue\">写入</span></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">'&#123;&#123; page.password &#125;&#125;'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (prompt(<span class=\"string\">'请输入文章密码'</span>) !== <span class=\"string\">'&#123;&#123; page.password &#125;&#125;'</span>) &#123;</span><br><span class=\"line\">                alert(<span class=\"string\">'密码错误！'</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (history.length === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    location.replace(<span class=\"string\">\"https://www.singlelovely.cn\"</span>); <span class=\"comment\">// 这里替换成你的首页</span></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    history.back();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)();</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p><span id=\"font-blue\">然后打开</span>~\\blog\\themes\\next6.4\\layout_partials\\head\\head.swig</p>\n<p><span id=\"font-blue\">写入</span></p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=2\"/&gt;</span><br><span class=\"line\">&lt;meta name=\"theme-color\" content=\"&#123;&#123; theme.android_chrome_color &#125;&#125;\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"addition\">+ &#123;% if not is_index %&#125;</span></span><br><span class=\"line\"><span class=\"addition\">+   &#123;% include 'password.swig' %&#125;</span></span><br><span class=\"line\"><span class=\"addition\">+ &#123;% endif %&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% if theme.needmoreshare2.enable %&#125;</span><br></pre></td></tr></table></figure>\n<p><span id=\"font-red\">最后</span> 在需要加密的文章前面增加属性<span id=\"inline-yellow\"> password </span></p>\n<h5 id=\"方式二-：使用插件进行加密\"><a class=\"header-anchor\" href=\"#方式二-：使用插件进行加密\">☆</a>方式二 ：使用插件进行加密</h5>\n<p><span id=\"font-blue\">插件地址：</span> <a href=\"https://github.com/MikeCoder/hexo-blog-encrypt\" target=\"_blank\" rel=\"noopener\">https://github.com/MikeCoder/hexo-blog-encrypt</a></p>\n<h4 id=\"首页文章摘要图\"><a class=\"header-anchor\" href=\"#首页文章摘要图\">☆</a>首页文章摘要图</h4>\n<h5 id=\"方式一：只在首页显示-文章中不显示\"><a class=\"header-anchor\" href=\"#方式一：只在首页显示-文章中不显示\">☆</a>方式一：只在首页显示，文章中不显示</h5>\n<p><span id=\"font-blue\">打开</span> ~\\blog\\themes\\next6.4\\layout_macro\\post.swig</p>\n<p><span id=\"font-blue\">搜索：</span> <span id=\"inline-green\"> post.description</span></p>\n<p><span id=\"font-blue\">下面添加：</span></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;% if post.image %&#125;</span><br><span class=\"line\">            &lt;div class=&quot;out-img-topic&quot;&gt;</span><br><span class=\"line\">              &lt;img src=&#123;&#123; post.image &#125;&#125; class=&quot;img-topic&quot; /&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\"> &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在<span id=\"font-blue\">文章</span> 中写：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">image: </span><br><span class=\"line\">- &quot;http://oz2tkq0zj.bkt.clouddn.com/17-11-9/52323298.jpg&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"方式二：首页和文章中都显示\"><a class=\"header-anchor\" href=\"#方式二：首页和文章中都显示\">☆</a>方式二：首页和文章中都显示</h5>\n<p><span id=\"font-blue\">直接</span>在<span id=\"font-blue\">文章</span> 中写（默认支持）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">photos: </span><br><span class=\"line\">- &quot;http://oz2tkq0zj.bkt.clouddn.com/17-11-9/52323298.jpg&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"文章置顶\"><a class=\"header-anchor\" href=\"#文章置顶\">☆</a>文章置顶</h4>\n<p><span id=\"font-blue\">打开</span>　\\blog\\node_modules\\hexo-generator-index\\lib\\generator.js</p>\n<p><span id=\"font-blue\">将内容修改为　</span></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> config = <span class=\"keyword\">this</span>.config;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> posts = locals.posts;</span><br><span class=\"line\">    posts.data = posts.data.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a.sticky &amp;&amp; b.sticky) &#123; <span class=\"comment\">// 两篇文章sticky都有定义</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a.sticky == b.sticky) <span class=\"keyword\">return</span> b.date - a.date; <span class=\"comment\">// 若sticky值一样则按照文章日期降序排</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.sticky - a.sticky; <span class=\"comment\">// 否则按照sticky值降序排</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a.sticky &amp;&amp; !b.sticky) &#123; <span class=\"comment\">// 以下是只有一篇文章sticky有定义，那么将有sticky的排在前面（这里用异或操作居然不行233）</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!a.sticky &amp;&amp; b.sticky) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.date - a.date; <span class=\"comment\">// 都没定义按照文章日期降序排</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> paginationDir = config.pagination_dir || <span class=\"string\">'page'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pagination(<span class=\"string\">''</span>, posts, &#123;</span><br><span class=\"line\">    perPage: config.index_generator.per_page,</span><br><span class=\"line\">    layout: [<span class=\"string\">'index'</span>, <span class=\"string\">'archive'</span>],</span><br><span class=\"line\">    format: paginationDir + <span class=\"string\">'/%d/'</span>,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      __index: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><span id=\"font-blue\">使用方法</span></p>\n<p>在文章中添加 sticky 值，数值越大文章越靠前，如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: hexo优化基于NexT6.4</span><br><span class=\"line\">copyright: false</span><br><span class=\"line\">abbrlink: 13c8d3a0</span><br><span class=\"line\">notshow: false</span><br><span class=\"line\">tags: </span><br><span class=\"line\">- hexo </span><br><span class=\"line\">categories: hexo</span><br><span class=\"line\">date: 2018-08-02 21:07:40</span><br><span class=\"line\">password: </span><br><span class=\"line\">description: 增加6.0+的新特性,去掉部分过时的功能</span><br><span class=\"line\">image: </span><br><span class=\"line\">- &quot;https://data.singlelovely.cn/xsj/2018/8/9/hexo-next-optimization-title.jpg&quot;</span><br><span class=\"line\">sticky: 10</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":12720,"excerpt":"","more":"<p>安装的插件：</p>\n<h4 id=\"rss\"><a class=\"header-anchor\" href=\"#rss\">☆</a>RSS</h4>\n<p>npm install hexo-generator-feed --save</p>\n<h4 id=\"字数统计\"><a class=\"header-anchor\" href=\"#字数统计\">☆</a>字数统计</h4>\n<h5 id=\"next主题为5-x版本\"><a class=\"header-anchor\" href=\"#next主题为5-x版本\">☆</a>next主题为5.x版本</h5>\n<p>安装 ：npm install hexo-wordcount --save</p>\n<p>然后在主题配置文件中启用</p>\n<h5 id=\"next主题为6-03-版本\"><a class=\"header-anchor\" href=\"#next主题为6-03-版本\">☆</a>next主题为6.03+版本</h5>\n<p>安装：npm install hexo-symbols-count-time --save</p>\n<p>打开 ：~\\blog_config.yml</p>\n<p>添加</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">symbols_count_time:</span></span><br><span class=\"line\"><span class=\"attr\">  symbols:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  time:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  total_symbols:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  total_time:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<p>然后在主题配置文件中启用</p>\n<h4 id=\"自定义站点内容搜索\"><a class=\"header-anchor\" href=\"#自定义站点内容搜索\">☆</a>自定义站点内容搜索</h4>\n<p>安装 hexo-generator-searchdb，在站点的根目录下执行以下命令：</p>\n<p>npm install hexo-generator-searchdb --save<br>\n编辑 站点配置文件，新增以下内容到任意位置：</p>\n<p>search:<br>\npath: search.xml<br>\nfield: post<br>\nformat: html<br>\nlimit: 10000<br>\n编辑 主题配置文件，启用本地搜索功能：</p>\n<p># Local search<br>\nlocal_search:<br>\nenable: true</p>\n<h4 id=\"链接持久化\"><a class=\"header-anchor\" href=\"#链接持久化\">☆</a>链接持久化</h4>\n<p>npm install hexo-abbrlink --save</p>\n<p>permalink: post/:abbrlink.html<br>\npermalink_defaults:<br>\nabbrlink:<br>\nalg: crc32  # 算法：crc16(default) and crc32<br>\nrep: hex    # 进制：dec(default) and hex</p>\n<h4 id=\"修改标签云\"><a class=\"header-anchor\" href=\"#修改标签云\">☆</a>修改标签云</h4>\n<figure class=\"highlight plain\"><figcaption><span>位置：\\blog\\themes\\next\\layout\\page.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123; tagcloud(&#123;min_font: 13, max_font: 31, amount: 1000, color: true, start_color: &apos;#9733EE&apos;, end_color: &apos;#FF512F&apos;&#125;) &#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>修改对应参数值即可，参数说明见 <a href=\"https://hexo.io/zh-cn/docs/helpers.html#tagcloud\" target=\"_blank\" rel=\"noopener\">Hexo 官方文档</a>，颜色可以参考<a href=\"https://uigradients.com\" target=\"_blank\" rel=\"noopener\">这个网站</a>，自己去纠结……</p>\n<h4 id=\"末尾版权信息\"><a class=\"header-anchor\" href=\"#末尾版权信息\">☆</a>末尾版权信息</h4>\n<p>hexo next自带版权开启</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#Declare license on posts</span></span><br><span class=\"line\"><span class=\"comment\">#版权信息</span></span><br><span class=\"line\"><span class=\"attr\">post_copyright:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  license:</span> <span class=\"string\">CC</span> <span class=\"string\">BY-NC-SA</span> <span class=\"number\">4.0</span></span><br><span class=\"line\"><span class=\"attr\">  license_url:</span> <span class=\"attr\">https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh</span></span><br></pre></td></tr></table></figure>\n<p>配置文件路径：\\hexo\\themes\\next\\layout_macro\\post-copyright.swig</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"addition\">+&#123;% if page.copyright %&#125;</span></span><br><span class=\"line\">&lt;ul class=\"post-copyright\"&gt;</span><br><span class=\"line\">  &lt;li class=\"post-copyright-author\"&gt;</span><br><span class=\"line\">    &lt;strong&gt;&#123;&#123; __('post.copyright.author') + __('symbol.colon') &#125;&#125;&lt;/strong&gt;</span><br><span class=\"line\">    &#123;&#123; post.author | default(config.author) &#125;&#125;</span><br><span class=\"line\">  &lt;/li&gt;</span><br><span class=\"line\">  &lt;li class=\"post-copyright-link\"&gt;</span><br><span class=\"line\">    &lt;strong&gt;&#123;&#123; __('post.copyright.link') + __('symbol.colon') &#125;&#125;&lt;/strong&gt;</span><br><span class=\"line\">    &lt;a href=\"&#123;&#123; post.url | default(post.permalink) &#125;&#125;\" title=\"&#123;&#123; post.title &#125;&#125;\"&gt;&#123;&#123; post.url | default(post.permalink) &#125;&#125;&lt;/a&gt;</span><br><span class=\"line\">  &lt;/li&gt;</span><br><span class=\"line\">  &lt;li class=\"post-copyright-license\"&gt;</span><br><span class=\"line\">    &lt;strong&gt;&#123;&#123; __('post.copyright.license_title') + __('symbol.colon') &#125;&#125; &lt;/strong&gt;</span><br><span class=\"line\">    &#123;&#123; __('post.copyright.license_content', theme.post_copyright.license_url, theme.post_copyright.license) &#125;&#125;</span><br><span class=\"line\">  &lt;/li&gt;</span><br><span class=\"line\">&lt;/ul&gt;</span><br><span class=\"line\"><span class=\"addition\">+&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>\n<p>布局文件路径：\\hexo\\themes\\next\\layout_macro\\post.swig</p>\n<h4 id=\"侧栏加入已运行的时间\"><a class=\"header-anchor\" href=\"#侧栏加入已运行的时间\">☆</a>侧栏加入已运行的时间</h4>\n<p>我们都有自己的生日，都知道自己的岁数，那为什么不给博客加上，让读者知道博客的年纪呢？操作很简单，而且不是精确到年而是精确到秒，233333～</p>\n<p>首先要加入下面代码：</p>\n<figure class=\"highlight html\"><figcaption><span>文件位置:~/blog/themes/next/layout/_custom/sidebar.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"days\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">show_date_time</span>(<span class=\"params\"></span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"built_in\">window</span>.setTimeout(<span class=\"string\">\"show_date_time()\"</span>, <span class=\"number\">1000</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">BirthDay=<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>(<span class=\"string\">\"05/27/2017 15:13:14\"</span>);</span></span><br><span class=\"line\"><span class=\"javascript\">today=<span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span></span><br><span class=\"line\"><span class=\"undefined\">timeold=(today.getTime()-BirthDay.getTime());</span></span><br><span class=\"line\"><span class=\"undefined\">sectimeold=timeold/1000</span></span><br><span class=\"line\"><span class=\"javascript\">secondsold=<span class=\"built_in\">Math</span>.floor(sectimeold);</span></span><br><span class=\"line\"><span class=\"undefined\">msPerDay=24*60*60*1000</span></span><br><span class=\"line\"><span class=\"undefined\">e_daysold=timeold/msPerDay</span></span><br><span class=\"line\"><span class=\"javascript\">daysold=<span class=\"built_in\">Math</span>.floor(e_daysold);</span></span><br><span class=\"line\"><span class=\"undefined\">e_hrsold=(e_daysold-daysold)*24;</span></span><br><span class=\"line\"><span class=\"javascript\">hrsold=setzero(<span class=\"built_in\">Math</span>.floor(e_hrsold));</span></span><br><span class=\"line\"><span class=\"undefined\">e_minsold=(e_hrsold-hrsold)*60;</span></span><br><span class=\"line\"><span class=\"javascript\">minsold=setzero(<span class=\"built_in\">Math</span>.floor((e_hrsold-hrsold)*<span class=\"number\">60</span>));</span></span><br><span class=\"line\"><span class=\"javascript\">seconds=setzero(<span class=\"built_in\">Math</span>.floor((e_minsold-minsold)*<span class=\"number\">60</span>));</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'days'</span>).innerHTML=<span class=\"string\">\"已运行\"</span>+daysold+<span class=\"string\">\"天\"</span>+hrsold+<span class=\"string\">\"小时\"</span>+minsold+<span class=\"string\">\"分\"</span>+seconds+<span class=\"string\">\"秒\"</span>;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setzero</span>(<span class=\"params\">i</span>)</span>&#123;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">if</span> (i&lt;<span class=\"number\">10</span>)</span></span><br><span class=\"line\"><span class=\"javascript\">&#123;i=<span class=\"string\">\"0\"</span> + i&#125;;</span></span><br><span class=\"line\"><span class=\"javascript\"><span class=\"keyword\">return</span> i;</span></span><br><span class=\"line\"><span class=\"undefined\">&#125;</span></span><br><span class=\"line\"><span class=\"undefined\">show_date_time();</span></span><br><span class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>上面Date的值记得改为你自己的，且按上面格式，然后修改：</p>\n<figure class=\"highlight diff\"><figcaption><span>文件位置：~/blog/themes/next/layout/_macro/sidebar.swig</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        &#123;# Blogroll #&#125;</span><br><span class=\"line\">        &#123;% if theme.links %&#125;</span><br><span class=\"line\">          &lt;div class=\"links-of-blogroll motion-element &#123;&#123; \"links-of-blogroll-\" + theme.links_layout | default('inline') &#125;&#125;\"&gt;</span><br><span class=\"line\">            &lt;div class=\"links-of-blogroll-title\"&gt;</span><br><span class=\"line\">              &lt;i class=\"fa  fa-fw fa-&#123;&#123; theme.links_icon | default('globe') | lower &#125;&#125;\"&gt;&lt;/i&gt;</span><br><span class=\"line\">              &#123;&#123; theme.links_title &#125;&#125;&amp;nbsp;</span><br><span class=\"line\">              &lt;i class=\"fa  fa-fw fa-&#123;&#123; theme.links_icon | default('globe') | lower &#125;&#125;\"&gt;&lt;/i&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\">            &lt;ul class=\"links-of-blogroll-list\"&gt;</span><br><span class=\"line\">              &#123;% for name, link in theme.links %&#125;</span><br><span class=\"line\">                &lt;li class=\"links-of-blogroll-item\"&gt;</span><br><span class=\"line\">                  &lt;a href=\"&#123;&#123; link &#125;&#125;\" title=\"&#123;&#123; name &#125;&#125;\" target=\"_blank\"&gt;&#123;&#123; name &#125;&#125;&lt;/a&gt;</span><br><span class=\"line\">                &lt;/li&gt;</span><br><span class=\"line\">              &#123;% endfor %&#125;</span><br><span class=\"line\">            &lt;/ul&gt;</span><br><span class=\"line\"><span class=\"addition\">+        &#123;% include '../_custom/sidebar.swig' %&#125;</span></span><br><span class=\"line\">          &lt;/div&gt;</span><br><span class=\"line\">         &#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"deletion\">-        &#123;% include '../_custom/sidebar.swig' %&#125;</span></span><br></pre></td></tr></table></figure>\n<p>这样就可以了！当然，要是不喜欢颜色，感觉不好看，就可以在上文所提的<code>custom.styl</code>加入：</p>\n<figure class=\"highlight styl\"><figcaption><span>文件位置：~/blog/themes/next/source/css/_custom/custom.styl</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 自定义的侧栏时间样式</span></span><br><span class=\"line\"><span class=\"selector-id\">#days</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: rgb(<span class=\"number\">7</span>, <span class=\"number\">179</span>, <span class=\"number\">155</span>);</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">13px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">margin-top</span>: <span class=\"number\">15px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改页面宽度\"><a class=\"header-anchor\" href=\"#修改页面宽度\">☆</a>修改页面宽度</h4>\n<p>打开　\\themes\\next\\source\\css_variables\\custom.styl<br>\n添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$main-desktop                   = 1200px</span><br><span class=\"line\">$content-desktop                = 900px</span><br></pre></td></tr></table></figure>\n<p>以上适用于（NexT5.x版本），6.0+应该写</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$content-desktop-large          = 830px</span><br></pre></td></tr></table></figure>\n<h4 id=\"修改模板文件-增加div-布局调整-避免互相影响\"><a class=\"header-anchor\" href=\"#修改模板文件-增加div-布局调整-避免互相影响\">☆</a>修改模板文件（增加div，布局调整，避免互相影响）</h4>\n<p><strong>~\\blog\\themes\\next\\layout_macro\\post.swig</strong></p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"deletion\">-  &lt;div class=\"post-block\"&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+  &lt;div class=\"post-block index\"&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>~\\blog\\themes\\next\\layout_macro\\post-collapse.swig</strong></p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% macro render(post) %&#125;</span><br><span class=\"line\"><span class=\"addition\">+ &lt;div class=\"post-block archives_title\"&gt;</span></span><br><span class=\"line\">  &lt;article class=\"post post-type-&#123;&#123; post.type | default('normal') &#125;&#125;\" itemscope itemtype=\"http://schema.org/Article\"&gt;</span><br><span class=\"line\">    &lt;header class=\"post-header\"&gt;</span><br><span class=\"line\">\t`</span><br><span class=\"line\">\t`</span><br><span class=\"line\">\t`</span><br><span class=\"line\">    &lt;/header&gt;</span><br><span class=\"line\">  &lt;/article&gt;</span><br><span class=\"line\"><span class=\"addition\">+ &lt;/div&gt;</span></span><br><span class=\"line\">&#123;% endmacro %&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"评分上面加文字\"><a class=\"header-anchor\" href=\"#评分上面加文字\">☆</a>评分上面加文字</h4>\n<p><strong>~/blog/themes/next/layout/_macro/post.swig</strong></p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        &#123;% if theme.rating.enable %&#125;</span><br><span class=\"line\">          &lt;div class=\"wp_rating\"&gt;</span><br><span class=\"line\"><span class=\"addition\">+             &lt;div style=\"color: rgba(0, 0, 0, 0.75); font-size:13px; letter-spacing:3px\"&gt;(&amp;gt;来评分吧&amp;lt;)&lt;/div&gt;</span></span><br><span class=\"line\">            &lt;div id=\"wpac-rating\"&gt;&lt;/div&gt;</span><br><span class=\"line\">          &lt;/div&gt;</span><br><span class=\"line\">        &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>然后 Ctrl + F 搜索rating，找到这段，对比我给出的，在绿色这行所示的位置，加上自己想要的说明和样式即可。</p>\n<h4 id=\"压缩文件\"><a class=\"header-anchor\" href=\"#压缩文件\">☆</a>压缩文件</h4>\n<p>gulp.js 是基于流的自动化构建工具，我们可以使用 Gulp 为 Hexo 压缩文件<br>\n首先任意目录全局安装：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp -g</span><br></pre></td></tr></table></figure>\n<p>然后到站点文件夹根目录：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install gulp-minify-css --save</span><br><span class=\"line\">npm install gulp-uglify --save</span><br><span class=\"line\">npm install gulp-htmlmin --save</span><br><span class=\"line\">npm install gulp-htmlclean --save</span><br><span class=\"line\">npm install gulp-imagemin --save</span><br></pre></td></tr></table></figure>\n<p>打开　\\blog\\</p>\n<p>新建　gulpfile.js</p>\n<p>写入</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gulp = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Plugins模块获取</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> minifycss = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-minify-css'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> uglify = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-uglify'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> htmlmin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-htmlmin'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> htmlclean = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-htmlclean'</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> imagemin = <span class=\"built_in\">require</span>(<span class=\"string\">'gulp-imagemin'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 压缩css文件</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-css'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.src(<span class=\"string\">'./public/**/*.css'</span>)</span><br><span class=\"line\">  .pipe(minifycss())</span><br><span class=\"line\">  .pipe(gulp.dest(<span class=\"string\">'./public'</span>));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 压缩html文件</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-html'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> gulp.src([<span class=\"string\">'./public/**/*.html'</span>,<span class=\"string\">'!./public/**/politics/*'</span>])</span><br><span class=\"line\">  .pipe(htmlclean())</span><br><span class=\"line\">  .pipe(htmlmin(&#123;</span><br><span class=\"line\">    removeComments: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    minifyJS: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    minifyCSS: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    minifyURLs: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  &#125;))</span><br><span class=\"line\">  .pipe(gulp.dest(<span class=\"string\">'./public'</span>))</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 压缩js文件</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> gulp.src([<span class=\"string\">'./public/**/.js'</span>,<span class=\"string\">'!./public/js/**/*min.js'</span>])</span><br><span class=\"line\">        .pipe(uglify())</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public'</span>));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 压缩 public/images 目录内图片</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'minify-images'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    gulp.src(<span class=\"string\">'./public/images/**/*.*'</span>)</span><br><span class=\"line\">        .pipe(imagemin(&#123;</span><br><span class=\"line\">           optimizationLevel: <span class=\"number\">5</span>, <span class=\"comment\">//类型：Number  默认：3  取值范围：0-7（优化等级）</span></span><br><span class=\"line\">           progressive: <span class=\"literal\">true</span>, <span class=\"comment\">//类型：Boolean 默认：false 无损压缩jpg图片</span></span><br><span class=\"line\">           interlaced: <span class=\"literal\">false</span>, <span class=\"comment\">//类型：Boolean 默认：false 隔行扫描gif进行渲染</span></span><br><span class=\"line\">           multipass: <span class=\"literal\">false</span>, <span class=\"comment\">//类型：Boolean 默认：false 多次优化svg直到完全优化</span></span><br><span class=\"line\">        &#125;))</span><br><span class=\"line\">        .pipe(gulp.dest(<span class=\"string\">'./public/uploads'</span>));</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 默认任务</span></span><br><span class=\"line\">gulp.task(<span class=\"string\">'default'</span>, [</span><br><span class=\"line\">  <span class=\"string\">'minify-html'</span>,<span class=\"string\">'minify-css'</span>,<span class=\"string\">'minify-js'</span>,<span class=\"string\">'minify-images'</span></span><br><span class=\"line\">]);</span><br></pre></td></tr></table></figure>\n<h4 id=\"文末结束标记\"><a class=\"header-anchor\" href=\"#文末结束标记\">☆</a>文末结束标记</h4>\n<p>打开　\\themes\\next\\layout_macro\\</p>\n<p>新建　passage-end-tag.swig</p>\n<p>写入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% if theme.passage_end_tag.enabled %&#125;</span><br><span class=\"line\">&lt;div style=&quot;text-align:center;color: #ccc;font-size:15px;&quot;&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;</span><br><span class=\"line\">-------------文章结束啦 ~\\(≧▽≦)/~ 感谢您的阅读-------------&lt;/div&gt;</span><br><span class=\"line\">&lt;br/&gt;</span><br></pre></td></tr></table></figure>\n<p>打开　\\themes\\next\\layout_macro\\post.swig</p>\n<p>查找　wechat</p>\n<p>添加，如下内容</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &#123;#####################&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"addition\">+  &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"addition\">+  &#123;% if not is_index %&#125;</span></span><br><span class=\"line\"><span class=\"addition\">+    &#123;% include 'passage-end-tag.swig' %&#125;</span></span><br><span class=\"line\"><span class=\"addition\">+  &#123;% endif %&#125;</span></span><br><span class=\"line\"><span class=\"addition\">+  &lt;/div&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#123;% if theme.wechat_subscriber.enabled and not is_index %&#125;</span><br></pre></td></tr></table></figure>\n<p>打开　\\themes\\next_config.yml</p>\n<p>添加</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文章末尾添加“本文结束”标记</span></span><br><span class=\"line\"><span class=\"attr\">passage_end_tag:</span></span><br><span class=\"line\"><span class=\"attr\">  enabled:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"live2d看板娘\"><a class=\"header-anchor\" href=\"#live2d看板娘\">☆</a>Live2d看板娘</h4>\n<div class=\"note primary\"><p>live2d官方<a href=\"https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md\" target=\"_blank\" rel=\"noopener\">文档</a></p></div>\n<p>安装  npm install --save hexo-helper-live2d</p>\n<p>下载模型包：<a href=\"https://github.com/xiazeyu/live2d-widget-models\" target=\"_blank\" rel=\"noopener\">live2d-widget-models</a></p>\n<p>解压</p>\n<p>将<code>packages</code>中的文件放到<code>node_modules</code>中</p>\n<p>打开  ~\\blog_config.yml</p>\n<p>添加</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">live2d:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  scriptFrom:</span> <span class=\"string\">local</span></span><br><span class=\"line\"><span class=\"attr\">  pluginRootPath:</span> <span class=\"string\">live2dw/</span></span><br><span class=\"line\"><span class=\"attr\">  pluginJsPath:</span> <span class=\"string\">lib/</span></span><br><span class=\"line\"><span class=\"attr\">  pluginModelPath:</span> <span class=\"string\">assets/</span></span><br><span class=\"line\"><span class=\"attr\">  tagMode:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  debug:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  model:</span></span><br><span class=\"line\"><span class=\"attr\">    use:</span> <span class=\"string\">live2d-widget-model-miku</span>  <span class=\"comment\">#模板目录，在node_modules里</span></span><br><span class=\"line\"><span class=\"attr\">  display:</span></span><br><span class=\"line\"><span class=\"attr\">    position:</span> <span class=\"string\">left</span></span><br><span class=\"line\"><span class=\"attr\">    width:</span> <span class=\"number\">150</span></span><br><span class=\"line\"><span class=\"attr\">    height:</span> <span class=\"number\">300</span></span><br><span class=\"line\"><span class=\"attr\">  mobile:</span></span><br><span class=\"line\"><span class=\"attr\">    show:</span> <span class=\"literal\">false</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"引入自定义文件-用于样式定制\"><a class=\"header-anchor\" href=\"#引入自定义文件-用于样式定制\">☆</a>引入自定义文件（用于样式定制）</h4>\n<p>打开　\\themes\\next\\layout_custom\\</p>\n<p>新建　custom.swig</p>\n<p>打开　\\themes\\next\\layout_layout.swig</p>\n<p>在 &lt;/body&gt; 前添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% include &apos;_custom/custom.swig&apos; %&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"评论输入打字礼花及震动特效\"><a class=\"header-anchor\" href=\"#评论输入打字礼花及震动特效\">☆</a>评论输入打字礼花及震动特效</h4>\n<p>下载　 activate-power-mode.js</p>\n<p>放置　activate-power-mode.js 至 CDN</p>\n<p>打开　\\themes\\next\\layout_custom\\custom.swig</p>\n<p>添加</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!-- 打字礼花及震动特效 --&gt;</span><br><span class=\"line\">&lt;script type=<span class=\"string\">\"text/javascript\"</span> src=<span class=\"string\">\"https://qianling-1254036047.cos.ap-chengdu.myqcloud.com/js/activate-power-mode.js\"</span>&gt;<span class=\"xml\"><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    POWERMODE.colorful = <span class=\"literal\">true</span>; <span class=\"comment\">// ture 为启用礼花特效</span></span><br><span class=\"line\">    POWERMODE.shake = <span class=\"literal\">false</span>; <span class=\"comment\">// false 为禁用震动特效</span></span><br><span class=\"line\">    <span class=\"built_in\">document</span>.body.addEventListener(<span class=\"string\">'input'</span>, POWERMODE);</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"添加emoji\"><a class=\"header-anchor\" href=\"#添加emoji\">☆</a>添加emoji</h4>\n<div class=\"note success\"><p>参考自 ：<a href=\"https://www.jianshu.com/p/57e22584b277#emoji%E6%8F%92%E4%BB%B6\" target=\"_blank\" rel=\"noopener\">emoji插件</a></p></div>\n<h4 id=\"站点地图生成\"><a class=\"header-anchor\" href=\"#站点地图生成\">☆</a>站点地图生成</h4>\n<p>安装</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br><span class=\"line\">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure>\n<p>在<span id=\"inline-blue\">站点配置文件</span>中启用</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 自动生成sitemap</span></span><br><span class=\"line\"><span class=\"attr\">sitemap:</span></span><br><span class=\"line\"><span class=\"attr\">path:</span> <span class=\"string\">sitemap.xml</span></span><br><span class=\"line\"><span class=\"attr\">baidusitemap:</span></span><br><span class=\"line\"><span class=\"attr\">path:</span> <span class=\"string\">baidusitemap.xml</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"文章加密码\"><a class=\"header-anchor\" href=\"#文章加密码\">☆</a>文章加密码</h4>\n<h5 id=\"方式一：修改模板配置文件-不推荐\"><a class=\"header-anchor\" href=\"#方式一：修改模板配置文件-不推荐\">☆</a>方式一：修改模板配置文件（不推荐）</h5>\n<p><span id=\"font-blue\">打开</span> ~\\blog\\themes\\next6.4\\layout_partials\\head\\</p>\n<p><span id=\"font-blue\">新建</span> password.swig</p>\n<p><span id=\"font-blue\">写入</span></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">'&#123;&#123; page.password &#125;&#125;'</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (prompt(<span class=\"string\">'请输入文章密码'</span>) !== <span class=\"string\">'&#123;&#123; page.password &#125;&#125;'</span>) &#123;</span><br><span class=\"line\">                alert(<span class=\"string\">'密码错误！'</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (history.length === <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    location.replace(<span class=\"string\">\"https://www.singlelovely.cn\"</span>); <span class=\"comment\">// 这里替换成你的首页</span></span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    history.back();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)();</span><br><span class=\"line\">&lt;<span class=\"regexp\">/script&gt;</span></span><br></pre></td></tr></table></figure>\n<p><span id=\"font-blue\">然后打开</span>~\\blog\\themes\\next6.4\\layout_partials\\head\\head.swig</p>\n<p><span id=\"font-blue\">写入</span></p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=2\"/&gt;</span><br><span class=\"line\">&lt;meta name=\"theme-color\" content=\"&#123;&#123; theme.android_chrome_color &#125;&#125;\"&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"addition\">+ &#123;% if not is_index %&#125;</span></span><br><span class=\"line\"><span class=\"addition\">+   &#123;% include 'password.swig' %&#125;</span></span><br><span class=\"line\"><span class=\"addition\">+ &#123;% endif %&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% if theme.needmoreshare2.enable %&#125;</span><br></pre></td></tr></table></figure>\n<p><span id=\"font-red\">最后</span> 在需要加密的文章前面增加属性<span id=\"inline-yellow\"> password </span></p>\n<h5 id=\"方式二-：使用插件进行加密\"><a class=\"header-anchor\" href=\"#方式二-：使用插件进行加密\">☆</a>方式二 ：使用插件进行加密</h5>\n<p><span id=\"font-blue\">插件地址：</span> <a href=\"https://github.com/MikeCoder/hexo-blog-encrypt\" target=\"_blank\" rel=\"noopener\">https://github.com/MikeCoder/hexo-blog-encrypt</a></p>\n<h4 id=\"首页文章摘要图\"><a class=\"header-anchor\" href=\"#首页文章摘要图\">☆</a>首页文章摘要图</h4>\n<h5 id=\"方式一：只在首页显示-文章中不显示\"><a class=\"header-anchor\" href=\"#方式一：只在首页显示-文章中不显示\">☆</a>方式一：只在首页显示，文章中不显示</h5>\n<p><span id=\"font-blue\">打开</span> ~\\blog\\themes\\next6.4\\layout_macro\\post.swig</p>\n<p><span id=\"font-blue\">搜索：</span> <span id=\"inline-green\"> post.description</span></p>\n<p><span id=\"font-blue\">下面添加：</span></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;% if post.image %&#125;</span><br><span class=\"line\">            &lt;div class=&quot;out-img-topic&quot;&gt;</span><br><span class=\"line\">              &lt;img src=&#123;&#123; post.image &#125;&#125; class=&quot;img-topic&quot; /&gt;</span><br><span class=\"line\">            &lt;/div&gt;</span><br><span class=\"line\"> &#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在<span id=\"font-blue\">文章</span> 中写：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">image: </span><br><span class=\"line\">- &quot;http://oz2tkq0zj.bkt.clouddn.com/17-11-9/52323298.jpg&quot;</span><br></pre></td></tr></table></figure>\n<h5 id=\"方式二：首页和文章中都显示\"><a class=\"header-anchor\" href=\"#方式二：首页和文章中都显示\">☆</a>方式二：首页和文章中都显示</h5>\n<p><span id=\"font-blue\">直接</span>在<span id=\"font-blue\">文章</span> 中写（默认支持）：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">photos: </span><br><span class=\"line\">- &quot;http://oz2tkq0zj.bkt.clouddn.com/17-11-9/52323298.jpg&quot;</span><br></pre></td></tr></table></figure>\n<h4 id=\"文章置顶\"><a class=\"header-anchor\" href=\"#文章置顶\">☆</a>文章置顶</h4>\n<p><span id=\"font-blue\">打开</span>　\\blog\\node_modules\\hexo-generator-index\\lib\\generator.js</p>\n<p><span id=\"font-blue\">将内容修改为　</span></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> pagination = <span class=\"built_in\">require</span>(<span class=\"string\">'hexo-pagination'</span>);</span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">locals</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> config = <span class=\"keyword\">this</span>.config;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> posts = locals.posts;</span><br><span class=\"line\">    posts.data = posts.data.sort(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">a, b</span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a.sticky &amp;&amp; b.sticky) &#123; <span class=\"comment\">// 两篇文章sticky都有定义</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a.sticky == b.sticky) <span class=\"keyword\">return</span> b.date - a.date; <span class=\"comment\">// 若sticky值一样则按照文章日期降序排</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.sticky - a.sticky; <span class=\"comment\">// 否则按照sticky值降序排</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(a.sticky &amp;&amp; !b.sticky) &#123; <span class=\"comment\">// 以下是只有一篇文章sticky有定义，那么将有sticky的排在前面（这里用异或操作居然不行233）</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!a.sticky &amp;&amp; b.sticky) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> b.date - a.date; <span class=\"comment\">// 都没定义按照文章日期降序排</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> paginationDir = config.pagination_dir || <span class=\"string\">'page'</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> pagination(<span class=\"string\">''</span>, posts, &#123;</span><br><span class=\"line\">    perPage: config.index_generator.per_page,</span><br><span class=\"line\">    layout: [<span class=\"string\">'index'</span>, <span class=\"string\">'archive'</span>],</span><br><span class=\"line\">    format: paginationDir + <span class=\"string\">'/%d/'</span>,</span><br><span class=\"line\">    data: &#123;</span><br><span class=\"line\">      __index: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><span id=\"font-blue\">使用方法</span></p>\n<p>在文章中添加 sticky 值，数值越大文章越靠前，如</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">title: hexo优化基于NexT6.4</span><br><span class=\"line\">copyright: false</span><br><span class=\"line\">abbrlink: 13c8d3a0</span><br><span class=\"line\">notshow: false</span><br><span class=\"line\">tags: </span><br><span class=\"line\">- hexo </span><br><span class=\"line\">categories: hexo</span><br><span class=\"line\">date: 2018-08-02 21:07:40</span><br><span class=\"line\">password: </span><br><span class=\"line\">description: 增加6.0+的新特性,去掉部分过时的功能</span><br><span class=\"line\">image: </span><br><span class=\"line\">- &quot;https://data.singlelovely.cn/xsj/2018/8/9/hexo-next-optimization-title.jpg&quot;</span><br><span class=\"line\">sticky: 10</span><br></pre></td></tr></table></figure>"},{"title":"Markdown简介","copyright":false,"abbrlink":"936c5fbe","date":"2018-01-29T02:56:18.000Z","password":null,"_content":"\n\n## 主要内容\n> #### Markdown*是什么*？\n> #### *谁*创造了它？\n> #### *为什么*要使用它？\n> #### *怎么*使用？\n> #### *谁*在用？\n> #### 尝试一下\n\n## 正文\n### 1. Markdown*是什么*？\n**Markdown**是一种轻量级**标记语言**，它以纯文本形式(*易读、易写、易更改*)编写文档，并最终以HTML格式发布。    \n**Markdown**也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。    \n\n### 2. *谁*创造了它？\n它由[**Aaron Swartz**](http://www.aaronsw.com/)和**John Gruber**共同设计，**Aaron Swartz**就是那位于去年（*2013年1月11日*）自杀,有着**开挂**一般人生经历的程序员。维基百科对他的[介绍](http://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8)是：**软件工程师、作家、政治组织者、互联网活动家、维基百科人**。    \n\n他有着足以让你跪拜的人生经历：    \n+ **14岁**参与RSS 1.0规格标准的制订。     \n+ **2004**年入读**斯坦福**，之后退学。   \n+ **2005**年创建[Infogami](http://infogami.org/)，之后与[Reddit](http://www.reddit.com/)合并成为其合伙人。   \n+ **2010**年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。   \n+ **2011**年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。     \n+ **2013**年1月自杀身亡。    \n\n![Aaron Swartz][1]\n\n天才都有早逝的归途。\n\n\n### 3. *为什么*要使用它？\n+ 它是易读（看起开舒服）、易写（语法简单）、易更改**纯文本**。处处体现着**极简主义**的影子。\n+ 兼容HTML，可以转换为HTML格式发布。\n+ 跨平台使用。\n+ 越来越多的网站支持Markdown。\n+ 更方便清晰的组织你的电子邮件。（Markdown-here, Airmail）\n+ 摆脱Word（我不是认真的）。\n\n### 4. *怎么*使用？\n如果不算**扩展**，Markdown的语法绝对**简单**到让你爱不释手。\n\nMarkdown语法主要分为如下几大部分：\n**标题**，**段落**，**区块引用**，**代码区块**，**强调**，**列表**，**分割线**，**链接**，**图片**，**反斜杠 `\\`**，**符号'`'**。\n\n#### 4.1 标题\n两种形式：  \n1）使用`=`和`-`标记一级和二级标题。\n> 一级标题   \n> `=========`   \n> 二级标题    \n> `---------`\n\n效果：\n> 一级标题   \n> =========   \n> 二级标题\n> ---------  \n\n2）使用`#`，可表示1-6级标题。\n> \\# 一级标题   \n> \\## 二级标题   \n> \\### 三级标题   \n> \\#### 四级标题   \n> \\##### 五级标题   \n> \\###### 六级标题    \n\n效果：\n> # 一级标题   \n> ## 二级标题   \n> ### 三级标题   \n> #### 四级标题   \n> ##### 五级标题   \n> ###### 六级标题\n\n#### 4.2 段落\n段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用**两个以上**空格加上回车（引用中换行省略回车）。\n\n#### 4.3 区块引用\n在段落的每行或者只在第一行使用符号`>`,还可使用多个嵌套引用，如：\n> \\> 区块引用  \n> \\>> 嵌套引用  \n\n效果：\n> 区块引用  \n>> 嵌套引用\n\n#### 4.4 代码区块\n代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如    \n普通段落：\n\nvoid main()    \n{    \n    printf(\"Hello, Markdown.\");    \n}    \n\n代码区块：\n\n    void main()\n    {\n        printf(\"Hello, Markdown.\");\n    }\n\n**注意**:需要和普通段落之间存在空行。\n\n#### 4.5 强调\n在强调内容两侧分别加上`*`或者`_`，如：\n> \\*斜体\\*，\\_斜体\\_    \n> \\*\\*粗体\\*\\*，\\_\\_粗体\\_\\_\n\n效果：\n> *斜体*，_斜体_    \n> **粗体**，__粗体__\n\n#### 4.6 列表\n使用`·`、`+`、或`-`标记无序列表，如：\n> \\-（+\\*） 第一项\n> \\-（+\\*） 第二项\n> \\- （+\\*）第三项\n\n**注意**：标记后面最少有一个_空格_或_制表符_。若不在引用区块中，必须和前方段落之间存在空行。\n\n效果：\n> + 第一项\n> + 第二项\n> + 第三项\n\n有序列表的标记方式是将上述的符号换成数字,并辅以`.`，如：\n> 1 . 第一项   \n> 2 . 第二项    \n> 3 . 第三项    \n\n效果：\n> 1. 第一项\n> 2. 第二项\n> 3. 第三项\n\n#### 4.7 分割线\n分割线最常使用就是三个或以上`*`，还可以使用`-`和`_`。\n\n#### 4.8 链接\n链接可以由两种形式生成：**行内式**和**参考式**。    \n**行内式**：\n> \\[younghz的Markdown库\\]\\(https:://github.com/younghz/Markdown \"Markdown\"\\)。\n\n效果：\n> [younghz的Markdown库](https:://github.com/younghz/Markdown \"Markdown\")。\n\n**参考式**：\n> \\[younghz的Markdown库1\\]\\[1\\]    \n> \\[younghz的Markdown库2\\]\\[2\\]    \n> \\[1\\]:https:://github.com/younghz/Markdown \"Markdown\"    \n> \\[2\\]:https:://github.com/younghz/Markdown \"Markdown\"    \n\n效果：\n> [younghz的Markdown库1][2]    \n> [younghz的Markdown库2][3]\n\n**注意**：上述的`[1]:https:://github.com/younghz/Markdown \"Markdown\"`不出现在区块中。\n\n#### 4.9 图片\n添加图片的形式和链接相似，只需在链接的基础上前方加一个`！`。\n#### 4.10 反斜杠`\\`\n相当于**反转义**作用。使符号成为普通符号。\n#### 4.11 符号'`'\n起到标记作用。如：\n>\\`ctrl+a\\`\n\n效果：\n>`ctrl+a`    \n\n#### 5. *谁*在用？\nMarkdown的使用者：\n+ GitHub\n+ 简书\n+ Stack Overflow\n+ Apollo\n+ Moodle\n+ Reddit\n+ 等等\n\n#### 6. 尝试一下\n+ **Chrome**下的插件诸如`stackedit`与`markdown-here`等非常方便，也不用担心平台受限。\n+ **在线**的dillinger.io评价也不错   \n+ **Windowns**下的MarkdownPad也用过，不过免费版的体验不是很好。    \n+ **Mac**下的Mou是国人贡献的，口碑很好。\n+ **Linux**下的ReText不错。    \n\n**当然，最终境界永远都是笔下是语法，心中格式化 :)。**\n\n****\n**注意**：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。\n虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber]\n(http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/)。\n****\n以上基本是所有traditonal markdown的语法。\n\n### 其它：\n列表的使用(非traditonal markdown)：\n\n用`|`表示表格纵向边界，表头和表内容用`-`隔开，并可用`:`进行对齐设置，两边都有`:`则表示居中，若不加`:`则默认左对齐。\n\n|代码库                              |链接                                |\n|:------------------------------------:|------------------------------------|\n|MarkDown                              |[https://github.com/younghz/Markdown](https://github.com/younghz/Markdown \"Markdown\")|\n|MarkDownCopy                              |[https://github.com/younghz/Markdown](https://github.com/younghz/Markdown \"Markdown\")|\n\n\n关于其它扩展语法可参见具体工具的使用说明。\n\n本文转载自：https://github.com/younghz/Markdown\n\n\n  [1]: https://data.singlelovely.cn/xsj/20181/Aaron_Swartz.jpg?imageView2/2/w/300/h/400/q/75|imageslim \"Aaron_Swartz\"\n  [2]: https:://github.com/younghz/Markdown \"Markdown\"\n  [3]: https:://github.com/younghz/Markdown \"Markdown\"","source":"_posts/markdown语法.md","raw":"---\ntitle: Markdown简介\ntags:\n  - hexo\ncategories: hexo\ncopyright: false\nabbrlink: 936c5fbe\ndate: 2018-01-29 10:56:18\npassword:\n---\n\n\n## 主要内容\n> #### Markdown*是什么*？\n> #### *谁*创造了它？\n> #### *为什么*要使用它？\n> #### *怎么*使用？\n> #### *谁*在用？\n> #### 尝试一下\n\n## 正文\n### 1. Markdown*是什么*？\n**Markdown**是一种轻量级**标记语言**，它以纯文本形式(*易读、易写、易更改*)编写文档，并最终以HTML格式发布。    \n**Markdown**也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。    \n\n### 2. *谁*创造了它？\n它由[**Aaron Swartz**](http://www.aaronsw.com/)和**John Gruber**共同设计，**Aaron Swartz**就是那位于去年（*2013年1月11日*）自杀,有着**开挂**一般人生经历的程序员。维基百科对他的[介绍](http://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8)是：**软件工程师、作家、政治组织者、互联网活动家、维基百科人**。    \n\n他有着足以让你跪拜的人生经历：    \n+ **14岁**参与RSS 1.0规格标准的制订。     \n+ **2004**年入读**斯坦福**，之后退学。   \n+ **2005**年创建[Infogami](http://infogami.org/)，之后与[Reddit](http://www.reddit.com/)合并成为其合伙人。   \n+ **2010**年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。   \n+ **2011**年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。     \n+ **2013**年1月自杀身亡。    \n\n![Aaron Swartz][1]\n\n天才都有早逝的归途。\n\n\n### 3. *为什么*要使用它？\n+ 它是易读（看起开舒服）、易写（语法简单）、易更改**纯文本**。处处体现着**极简主义**的影子。\n+ 兼容HTML，可以转换为HTML格式发布。\n+ 跨平台使用。\n+ 越来越多的网站支持Markdown。\n+ 更方便清晰的组织你的电子邮件。（Markdown-here, Airmail）\n+ 摆脱Word（我不是认真的）。\n\n### 4. *怎么*使用？\n如果不算**扩展**，Markdown的语法绝对**简单**到让你爱不释手。\n\nMarkdown语法主要分为如下几大部分：\n**标题**，**段落**，**区块引用**，**代码区块**，**强调**，**列表**，**分割线**，**链接**，**图片**，**反斜杠 `\\`**，**符号'`'**。\n\n#### 4.1 标题\n两种形式：  \n1）使用`=`和`-`标记一级和二级标题。\n> 一级标题   \n> `=========`   \n> 二级标题    \n> `---------`\n\n效果：\n> 一级标题   \n> =========   \n> 二级标题\n> ---------  \n\n2）使用`#`，可表示1-6级标题。\n> \\# 一级标题   \n> \\## 二级标题   \n> \\### 三级标题   \n> \\#### 四级标题   \n> \\##### 五级标题   \n> \\###### 六级标题    \n\n效果：\n> # 一级标题   \n> ## 二级标题   \n> ### 三级标题   \n> #### 四级标题   \n> ##### 五级标题   \n> ###### 六级标题\n\n#### 4.2 段落\n段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用**两个以上**空格加上回车（引用中换行省略回车）。\n\n#### 4.3 区块引用\n在段落的每行或者只在第一行使用符号`>`,还可使用多个嵌套引用，如：\n> \\> 区块引用  \n> \\>> 嵌套引用  \n\n效果：\n> 区块引用  \n>> 嵌套引用\n\n#### 4.4 代码区块\n代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如    \n普通段落：\n\nvoid main()    \n{    \n    printf(\"Hello, Markdown.\");    \n}    \n\n代码区块：\n\n    void main()\n    {\n        printf(\"Hello, Markdown.\");\n    }\n\n**注意**:需要和普通段落之间存在空行。\n\n#### 4.5 强调\n在强调内容两侧分别加上`*`或者`_`，如：\n> \\*斜体\\*，\\_斜体\\_    \n> \\*\\*粗体\\*\\*，\\_\\_粗体\\_\\_\n\n效果：\n> *斜体*，_斜体_    \n> **粗体**，__粗体__\n\n#### 4.6 列表\n使用`·`、`+`、或`-`标记无序列表，如：\n> \\-（+\\*） 第一项\n> \\-（+\\*） 第二项\n> \\- （+\\*）第三项\n\n**注意**：标记后面最少有一个_空格_或_制表符_。若不在引用区块中，必须和前方段落之间存在空行。\n\n效果：\n> + 第一项\n> + 第二项\n> + 第三项\n\n有序列表的标记方式是将上述的符号换成数字,并辅以`.`，如：\n> 1 . 第一项   \n> 2 . 第二项    \n> 3 . 第三项    \n\n效果：\n> 1. 第一项\n> 2. 第二项\n> 3. 第三项\n\n#### 4.7 分割线\n分割线最常使用就是三个或以上`*`，还可以使用`-`和`_`。\n\n#### 4.8 链接\n链接可以由两种形式生成：**行内式**和**参考式**。    \n**行内式**：\n> \\[younghz的Markdown库\\]\\(https:://github.com/younghz/Markdown \"Markdown\"\\)。\n\n效果：\n> [younghz的Markdown库](https:://github.com/younghz/Markdown \"Markdown\")。\n\n**参考式**：\n> \\[younghz的Markdown库1\\]\\[1\\]    \n> \\[younghz的Markdown库2\\]\\[2\\]    \n> \\[1\\]:https:://github.com/younghz/Markdown \"Markdown\"    \n> \\[2\\]:https:://github.com/younghz/Markdown \"Markdown\"    \n\n效果：\n> [younghz的Markdown库1][2]    \n> [younghz的Markdown库2][3]\n\n**注意**：上述的`[1]:https:://github.com/younghz/Markdown \"Markdown\"`不出现在区块中。\n\n#### 4.9 图片\n添加图片的形式和链接相似，只需在链接的基础上前方加一个`！`。\n#### 4.10 反斜杠`\\`\n相当于**反转义**作用。使符号成为普通符号。\n#### 4.11 符号'`'\n起到标记作用。如：\n>\\`ctrl+a\\`\n\n效果：\n>`ctrl+a`    \n\n#### 5. *谁*在用？\nMarkdown的使用者：\n+ GitHub\n+ 简书\n+ Stack Overflow\n+ Apollo\n+ Moodle\n+ Reddit\n+ 等等\n\n#### 6. 尝试一下\n+ **Chrome**下的插件诸如`stackedit`与`markdown-here`等非常方便，也不用担心平台受限。\n+ **在线**的dillinger.io评价也不错   \n+ **Windowns**下的MarkdownPad也用过，不过免费版的体验不是很好。    \n+ **Mac**下的Mou是国人贡献的，口碑很好。\n+ **Linux**下的ReText不错。    \n\n**当然，最终境界永远都是笔下是语法，心中格式化 :)。**\n\n****\n**注意**：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。\n虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber]\n(http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/)。\n****\n以上基本是所有traditonal markdown的语法。\n\n### 其它：\n列表的使用(非traditonal markdown)：\n\n用`|`表示表格纵向边界，表头和表内容用`-`隔开，并可用`:`进行对齐设置，两边都有`:`则表示居中，若不加`:`则默认左对齐。\n\n|代码库                              |链接                                |\n|:------------------------------------:|------------------------------------|\n|MarkDown                              |[https://github.com/younghz/Markdown](https://github.com/younghz/Markdown \"Markdown\")|\n|MarkDownCopy                              |[https://github.com/younghz/Markdown](https://github.com/younghz/Markdown \"Markdown\")|\n\n\n关于其它扩展语法可参见具体工具的使用说明。\n\n本文转载自：https://github.com/younghz/Markdown\n\n\n  [1]: https://data.singlelovely.cn/xsj/20181/Aaron_Swartz.jpg?imageView2/2/w/300/h/400/q/75|imageslim \"Aaron_Swartz\"\n  [2]: https:://github.com/younghz/Markdown \"Markdown\"\n  [3]: https:://github.com/younghz/Markdown \"Markdown\"","slug":"markdown语法","published":1,"updated":"2020-02-20T06:06:59.408Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3f0013fkupnl0mmgjm","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"主要内容\"><a class=\"header-anchor\" href=\"#主要内容\">☆</a>主要内容</h2>\n<blockquote>\n<h4 id=\"markdown是什么？\"><a class=\"header-anchor\" href=\"#markdown是什么？\">☆</a>Markdown<em>是什么</em>？</h4>\n<h4 id=\"谁创造了它？\"><a class=\"header-anchor\" href=\"#谁创造了它？\">☆</a><em>谁</em>创造了它？</h4>\n<h4 id=\"为什么要使用它？\"><a class=\"header-anchor\" href=\"#为什么要使用它？\">☆</a><em>为什么</em>要使用它？</h4>\n<h4 id=\"怎么使用？\"><a class=\"header-anchor\" href=\"#怎么使用？\">☆</a><em>怎么</em>使用？</h4>\n<h4 id=\"谁在用？\"><a class=\"header-anchor\" href=\"#谁在用？\">☆</a><em>谁</em>在用？</h4>\n<h4 id=\"尝试一下\"><a class=\"header-anchor\" href=\"#尝试一下\">☆</a>尝试一下</h4>\n</blockquote>\n<h2 id=\"正文\"><a class=\"header-anchor\" href=\"#正文\">☆</a>正文</h2>\n<h3 id=\"1-markdown是什么？\"><a class=\"header-anchor\" href=\"#1-markdown是什么？\">☆</a>1. Markdown<em>是什么</em>？</h3>\n<p><strong>Markdown</strong>是一种轻量级<strong>标记语言</strong>，它以纯文本形式(<em>易读、易写、易更改</em>)编写文档，并最终以HTML格式发布。<br>\n<strong>Markdown</strong>也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。</p>\n<h3 id=\"2-谁创造了它？\"><a class=\"header-anchor\" href=\"#2-谁创造了它？\">☆</a>2. <em>谁</em>创造了它？</h3>\n<p>它由<a href=\"http://www.aaronsw.com/\" target=\"_blank\" rel=\"noopener\"><strong>Aaron Swartz</strong></a>和<strong>John Gruber</strong>共同设计，<strong>Aaron Swartz</strong>就是那位于去年（<em>2013年1月11日</em>）自杀,有着<strong>开挂</strong>一般人生经历的程序员。维基百科对他的<a href=\"http://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8\" target=\"_blank\" rel=\"noopener\">介绍</a>是：<strong>软件工程师、作家、政治组织者、互联网活动家、维基百科人</strong>。</p>\n<p>他有着足以让你跪拜的人生经历：</p>\n<ul>\n<li><strong>14岁</strong>参与RSS 1.0规格标准的制订。</li>\n<li><strong>2004</strong>年入读<strong>斯坦福</strong>，之后退学。</li>\n<li><strong>2005</strong>年创建<a href=\"http://infogami.org/\" target=\"_blank\" rel=\"noopener\">Infogami</a>，之后与<a href=\"http://www.reddit.com/\" target=\"_blank\" rel=\"noopener\">Reddit</a>合并成为其合伙人。</li>\n<li><strong>2010</strong>年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。</li>\n<li><strong>2011</strong>年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。</li>\n<li><strong>2013</strong>年1月自杀身亡。</li>\n</ul>\n<p><img src=\"https://data.singlelovely.cn/xsj/20181/Aaron_Swartz.jpg?imageView2/2/w/300/h/400/q/75%7Cimageslim\" alt=\"Aaron Swartz\" title=\"Aaron_Swartz\"></p>\n<p>天才都有早逝的归途。</p>\n<h3 id=\"3-为什么要使用它？\"><a class=\"header-anchor\" href=\"#3-为什么要使用它？\">☆</a>3. <em>为什么</em>要使用它？</h3>\n<ul>\n<li>它是易读（看起开舒服）、易写（语法简单）、易更改<strong>纯文本</strong>。处处体现着<strong>极简主义</strong>的影子。</li>\n<li>兼容HTML，可以转换为HTML格式发布。</li>\n<li>跨平台使用。</li>\n<li>越来越多的网站支持Markdown。</li>\n<li>更方便清晰的组织你的电子邮件。（Markdown-here, Airmail）</li>\n<li>摆脱Word（我不是认真的）。</li>\n</ul>\n<h3 id=\"4-怎么使用？\"><a class=\"header-anchor\" href=\"#4-怎么使用？\">☆</a>4. <em>怎么</em>使用？</h3>\n<p>如果不算<strong>扩展</strong>，Markdown的语法绝对<strong>简单</strong>到让你爱不释手。</p>\n<p>Markdown语法主要分为如下几大部分：<br>\n<strong>标题</strong>，<strong>段落</strong>，<strong>区块引用</strong>，<strong>代码区块</strong>，<strong>强调</strong>，<strong>列表</strong>，<strong>分割线</strong>，<strong>链接</strong>，<strong>图片</strong>，<strong>反斜杠 <code>\\</code></strong>，<strong>符号’`’</strong>。</p>\n<h4 id=\"4-1-标题\"><a class=\"header-anchor\" href=\"#4-1-标题\">☆</a>4.1 标题</h4>\n<p>两种形式：<br>\n1）使用<code>=</code>和<code>-</code>标记一级和二级标题。</p>\n<blockquote>\n<p>一级标题<br>\n<code>=========</code><br>\n二级标题<br>\n<code>---------</code></p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<h1>一级标题</h1>\n<h2 id=\"二级标题\"><a class=\"header-anchor\" href=\"#二级标题\">☆</a>二级标题</h2>\n</blockquote>\n<p>2）使用<code>#</code>，可表示1-6级标题。</p>\n<blockquote>\n<p># 一级标题<br>\n## 二级标题<br>\n### 三级标题<br>\n#### 四级标题<br>\n##### 五级标题<br>\n###### 六级标题</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<h1>一级标题</h1>\n<h2 id=\"二级标题-v2\"><a class=\"header-anchor\" href=\"#二级标题-v2\">☆</a>二级标题</h2>\n<h3 id=\"三级标题\"><a class=\"header-anchor\" href=\"#三级标题\">☆</a>三级标题</h3>\n<h4 id=\"四级标题\"><a class=\"header-anchor\" href=\"#四级标题\">☆</a>四级标题</h4>\n<h5 id=\"五级标题\"><a class=\"header-anchor\" href=\"#五级标题\">☆</a>五级标题</h5>\n<h6 id=\"六级标题\"><a class=\"header-anchor\" href=\"#六级标题\">☆</a>六级标题</h6>\n</blockquote>\n<h4 id=\"4-2-段落\"><a class=\"header-anchor\" href=\"#4-2-段落\">☆</a>4.2 段落</h4>\n<p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用<strong>两个以上</strong>空格加上回车（引用中换行省略回车）。</p>\n<h4 id=\"4-3-区块引用\"><a class=\"header-anchor\" href=\"#4-3-区块引用\">☆</a>4.3 区块引用</h4>\n<p>在段落的每行或者只在第一行使用符号<code>&gt;</code>,还可使用多个嵌套引用，如：</p>\n<blockquote>\n<p>&gt; 区块引用<br>\n&gt;&gt; 嵌套引用</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p>区块引用</p>\n<blockquote>\n<p>嵌套引用</p>\n</blockquote>\n</blockquote>\n<h4 id=\"4-4-代码区块\"><a class=\"header-anchor\" href=\"#4-4-代码区块\">☆</a>4.4 代码区块</h4>\n<p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如<br>\n普通段落：</p>\n<p>void main()<br>\n{<br>\nprintf(“Hello, Markdown.”);<br>\n}</p>\n<p>代码区块：</p>\n<pre><code>void main()\n{\n    printf(&quot;Hello, Markdown.&quot;);\n}\n</code></pre>\n<p><strong>注意</strong>:需要和普通段落之间存在空行。</p>\n<h4 id=\"4-5-强调\"><a class=\"header-anchor\" href=\"#4-5-强调\">☆</a>4.5 强调</h4>\n<p>在强调内容两侧分别加上<code>*</code>或者<code>_</code>，如：</p>\n<blockquote>\n<p>*斜体*，_斜体_<br>\n**粗体**，__粗体__</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p><em>斜体</em>，<em>斜体</em><br>\n<strong>粗体</strong>，<strong>粗体</strong></p>\n</blockquote>\n<h4 id=\"4-6-列表\"><a class=\"header-anchor\" href=\"#4-6-列表\">☆</a>4.6 列表</h4>\n<p>使用<code>·</code>、<code>+</code>、或<code>-</code>标记无序列表，如：</p>\n<blockquote>\n<p>-（+*） 第一项<br>\n-（+*） 第二项<br>\n- （+*）第三项</p>\n</blockquote>\n<p><strong>注意</strong>：标记后面最少有一个_空格_或_制表符_。若不在引用区块中，必须和前方段落之间存在空行。</p>\n<p>效果：</p>\n<blockquote>\n<ul>\n<li>第一项</li>\n<li>第二项</li>\n<li>第三项</li>\n</ul>\n</blockquote>\n<p>有序列表的标记方式是将上述的符号换成数字,并辅以<code>.</code>，如：</p>\n<blockquote>\n<p>1 . 第一项<br>\n2 . 第二项<br>\n3 . 第三项</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<ol>\n<li>第一项</li>\n<li>第二项</li>\n<li>第三项</li>\n</ol>\n</blockquote>\n<h4 id=\"4-7-分割线\"><a class=\"header-anchor\" href=\"#4-7-分割线\">☆</a>4.7 分割线</h4>\n<p>分割线最常使用就是三个或以上<code>*</code>，还可以使用<code>-</code>和<code>_</code>。</p>\n<h4 id=\"4-8-链接\"><a class=\"header-anchor\" href=\"#4-8-链接\">☆</a>4.8 链接</h4>\n<p>链接可以由两种形式生成：<strong>行内式</strong>和<strong>参考式</strong>。<br>\n<strong>行内式</strong>：</p>\n<blockquote>\n<p>[younghz的Markdown库](https:😕/github.com/younghz/Markdown “Markdown”)。</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p><a href=\"https:://github.com/younghz/Markdown\" title=\"Markdown\" target=\"_blank\" rel=\"noopener\">younghz的Markdown库</a>。</p>\n</blockquote>\n<p><strong>参考式</strong>：</p>\n<blockquote>\n<p>[younghz的Markdown库1][1]<br>\n[younghz的Markdown库2][2]<br>\n[1]:https:😕/github.com/younghz/Markdown “Markdown”<br>\n[2]:https:😕/github.com/younghz/Markdown “Markdown”</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p><a href=\"https:://github.com/younghz/Markdown\" title=\"Markdown\" target=\"_blank\" rel=\"noopener\">younghz的Markdown库1</a><br>\n<a href=\"https:://github.com/younghz/Markdown\" title=\"Markdown\" target=\"_blank\" rel=\"noopener\">younghz的Markdown库2</a></p>\n</blockquote>\n<p><strong>注意</strong>：上述的<code>[1]:https:://github.com/younghz/Markdown &quot;Markdown&quot;</code>不出现在区块中。</p>\n<h4 id=\"4-9-图片\"><a class=\"header-anchor\" href=\"#4-9-图片\">☆</a>4.9 图片</h4>\n<p>添加图片的形式和链接相似，只需在链接的基础上前方加一个<code>！</code>。</p>\n<h4 id=\"4-10-反斜杠\"><a class=\"header-anchor\" href=\"#4-10-反斜杠\">☆</a>4.10 反斜杠<code>\\</code></h4>\n<p>相当于<strong>反转义</strong>作用。使符号成为普通符号。</p>\n<h4 id=\"4-11-符号\"><a class=\"header-anchor\" href=\"#4-11-符号\">☆</a>4.11 符号’`’</h4>\n<p>起到标记作用。如：</p>\n<blockquote>\n<p>`ctrl+a`</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p><code>ctrl+a</code></p>\n</blockquote>\n<h4 id=\"5-谁在用？\"><a class=\"header-anchor\" href=\"#5-谁在用？\">☆</a>5. <em>谁</em>在用？</h4>\n<p>Markdown的使用者：</p>\n<ul>\n<li>GitHub</li>\n<li>简书</li>\n<li>Stack Overflow</li>\n<li>Apollo</li>\n<li>Moodle</li>\n<li>Reddit</li>\n<li>等等</li>\n</ul>\n<h4 id=\"6-尝试一下\"><a class=\"header-anchor\" href=\"#6-尝试一下\">☆</a>6. 尝试一下</h4>\n<ul>\n<li><strong>Chrome</strong>下的插件诸如<code>stackedit</code>与<code>markdown-here</code>等非常方便，也不用担心平台受限。</li>\n<li><strong>在线</strong>的dillinger.io评价也不错</li>\n<li><strong>Windowns</strong>下的MarkdownPad也用过，不过免费版的体验不是很好。</li>\n<li><strong>Mac</strong>下的Mou是国人贡献的，口碑很好。</li>\n<li><strong>Linux</strong>下的ReText不错。</li>\n</ul>\n<p><strong>当然，最终境界永远都是笔下是语法，心中格式化 😃。</strong></p>\n<hr>\n<p><strong>注意</strong>：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。<br>\n虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber]<br>\n(<a href=\"http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/\" target=\"_blank\" rel=\"noopener\">http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/</a>)。</p>\n<hr>\n<p>以上基本是所有traditonal markdown的语法。</p>\n<h3 id=\"其它：\"><a class=\"header-anchor\" href=\"#其它：\">☆</a>其它：</h3>\n<p>列表的使用(非traditonal markdown)：</p>\n<p>用<code>|</code>表示表格纵向边界，表头和表内容用<code>-</code>隔开，并可用<code>:</code>进行对齐设置，两边都有<code>:</code>则表示居中，若不加<code>:</code>则默认左对齐。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">代码库</th>\n<th>链接</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">MarkDown</td>\n<td><a href=\"https://github.com/younghz/Markdown\" title=\"Markdown\" target=\"_blank\" rel=\"noopener\">https://github.com/younghz/Markdown</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MarkDownCopy</td>\n<td><a href=\"https://github.com/younghz/Markdown\" title=\"Markdown\" target=\"_blank\" rel=\"noopener\">https://github.com/younghz/Markdown</a></td>\n</tr>\n</tbody>\n</table>\n<p>关于其它扩展语法可参见具体工具的使用说明。</p>\n<p>本文转载自：<a href=\"https://github.com/younghz/Markdown\" target=\"_blank\" rel=\"noopener\">https://github.com/younghz/Markdown</a></p>\n","site":{"data":{}},"length":2690,"excerpt":"","more":"<h2 id=\"主要内容\"><a class=\"header-anchor\" href=\"#主要内容\">☆</a>主要内容</h2>\n<blockquote>\n<h4 id=\"markdown是什么？\"><a class=\"header-anchor\" href=\"#markdown是什么？\">☆</a>Markdown<em>是什么</em>？</h4>\n<h4 id=\"谁创造了它？\"><a class=\"header-anchor\" href=\"#谁创造了它？\">☆</a><em>谁</em>创造了它？</h4>\n<h4 id=\"为什么要使用它？\"><a class=\"header-anchor\" href=\"#为什么要使用它？\">☆</a><em>为什么</em>要使用它？</h4>\n<h4 id=\"怎么使用？\"><a class=\"header-anchor\" href=\"#怎么使用？\">☆</a><em>怎么</em>使用？</h4>\n<h4 id=\"谁在用？\"><a class=\"header-anchor\" href=\"#谁在用？\">☆</a><em>谁</em>在用？</h4>\n<h4 id=\"尝试一下\"><a class=\"header-anchor\" href=\"#尝试一下\">☆</a>尝试一下</h4>\n</blockquote>\n<h2 id=\"正文\"><a class=\"header-anchor\" href=\"#正文\">☆</a>正文</h2>\n<h3 id=\"1-markdown是什么？\"><a class=\"header-anchor\" href=\"#1-markdown是什么？\">☆</a>1. Markdown<em>是什么</em>？</h3>\n<p><strong>Markdown</strong>是一种轻量级<strong>标记语言</strong>，它以纯文本形式(<em>易读、易写、易更改</em>)编写文档，并最终以HTML格式发布。<br>\n<strong>Markdown</strong>也可以理解为将以MARKDOWN语法编写的语言转换成HTML内容的工具。</p>\n<h3 id=\"2-谁创造了它？\"><a class=\"header-anchor\" href=\"#2-谁创造了它？\">☆</a>2. <em>谁</em>创造了它？</h3>\n<p>它由<a href=\"http://www.aaronsw.com/\" target=\"_blank\" rel=\"noopener\"><strong>Aaron Swartz</strong></a>和<strong>John Gruber</strong>共同设计，<strong>Aaron Swartz</strong>就是那位于去年（<em>2013年1月11日</em>）自杀,有着<strong>开挂</strong>一般人生经历的程序员。维基百科对他的<a href=\"http://zh.wikipedia.org/wiki/%E4%BA%9A%E4%BC%A6%C2%B7%E6%96%AF%E6%B2%83%E8%8C%A8\" target=\"_blank\" rel=\"noopener\">介绍</a>是：<strong>软件工程师、作家、政治组织者、互联网活动家、维基百科人</strong>。</p>\n<p>他有着足以让你跪拜的人生经历：</p>\n<ul>\n<li><strong>14岁</strong>参与RSS 1.0规格标准的制订。</li>\n<li><strong>2004</strong>年入读<strong>斯坦福</strong>，之后退学。</li>\n<li><strong>2005</strong>年创建<a href=\"http://infogami.org/\" target=\"_blank\" rel=\"noopener\">Infogami</a>，之后与<a href=\"http://www.reddit.com/\" target=\"_blank\" rel=\"noopener\">Reddit</a>合并成为其合伙人。</li>\n<li><strong>2010</strong>年创立求进会（Demand Progress），积极参与禁止网络盗版法案（SOPA）活动，最终该提案被撤回。</li>\n<li><strong>2011</strong>年7月19日，因被控从MIT和JSTOR下载480万篇学术论文并以免费形式上传于网络被捕。</li>\n<li><strong>2013</strong>年1月自杀身亡。</li>\n</ul>\n<p><img src=\"https://data.singlelovely.cn/xsj/20181/Aaron_Swartz.jpg?imageView2/2/w/300/h/400/q/75%7Cimageslim\" alt=\"Aaron Swartz\" title=\"Aaron_Swartz\"></p>\n<p>天才都有早逝的归途。</p>\n<h3 id=\"3-为什么要使用它？\"><a class=\"header-anchor\" href=\"#3-为什么要使用它？\">☆</a>3. <em>为什么</em>要使用它？</h3>\n<ul>\n<li>它是易读（看起开舒服）、易写（语法简单）、易更改<strong>纯文本</strong>。处处体现着<strong>极简主义</strong>的影子。</li>\n<li>兼容HTML，可以转换为HTML格式发布。</li>\n<li>跨平台使用。</li>\n<li>越来越多的网站支持Markdown。</li>\n<li>更方便清晰的组织你的电子邮件。（Markdown-here, Airmail）</li>\n<li>摆脱Word（我不是认真的）。</li>\n</ul>\n<h3 id=\"4-怎么使用？\"><a class=\"header-anchor\" href=\"#4-怎么使用？\">☆</a>4. <em>怎么</em>使用？</h3>\n<p>如果不算<strong>扩展</strong>，Markdown的语法绝对<strong>简单</strong>到让你爱不释手。</p>\n<p>Markdown语法主要分为如下几大部分：<br>\n<strong>标题</strong>，<strong>段落</strong>，<strong>区块引用</strong>，<strong>代码区块</strong>，<strong>强调</strong>，<strong>列表</strong>，<strong>分割线</strong>，<strong>链接</strong>，<strong>图片</strong>，<strong>反斜杠 <code>\\</code></strong>，<strong>符号’`’</strong>。</p>\n<h4 id=\"4-1-标题\"><a class=\"header-anchor\" href=\"#4-1-标题\">☆</a>4.1 标题</h4>\n<p>两种形式：<br>\n1）使用<code>=</code>和<code>-</code>标记一级和二级标题。</p>\n<blockquote>\n<p>一级标题<br>\n<code>=========</code><br>\n二级标题<br>\n<code>---------</code></p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<h1>一级标题</h1>\n<h2 id=\"二级标题\"><a class=\"header-anchor\" href=\"#二级标题\">☆</a>二级标题</h2>\n</blockquote>\n<p>2）使用<code>#</code>，可表示1-6级标题。</p>\n<blockquote>\n<p># 一级标题<br>\n## 二级标题<br>\n### 三级标题<br>\n#### 四级标题<br>\n##### 五级标题<br>\n###### 六级标题</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<h1>一级标题</h1>\n<h2 id=\"二级标题-v2\"><a class=\"header-anchor\" href=\"#二级标题-v2\">☆</a>二级标题</h2>\n<h3 id=\"三级标题\"><a class=\"header-anchor\" href=\"#三级标题\">☆</a>三级标题</h3>\n<h4 id=\"四级标题\"><a class=\"header-anchor\" href=\"#四级标题\">☆</a>四级标题</h4>\n<h5 id=\"五级标题\"><a class=\"header-anchor\" href=\"#五级标题\">☆</a>五级标题</h5>\n<h6 id=\"六级标题\"><a class=\"header-anchor\" href=\"#六级标题\">☆</a>六级标题</h6>\n</blockquote>\n<h4 id=\"4-2-段落\"><a class=\"header-anchor\" href=\"#4-2-段落\">☆</a>4.2 段落</h4>\n<p>段落的前后要有空行，所谓的空行是指没有文字内容。若想在段内强制换行的方式是使用<strong>两个以上</strong>空格加上回车（引用中换行省略回车）。</p>\n<h4 id=\"4-3-区块引用\"><a class=\"header-anchor\" href=\"#4-3-区块引用\">☆</a>4.3 区块引用</h4>\n<p>在段落的每行或者只在第一行使用符号<code>&gt;</code>,还可使用多个嵌套引用，如：</p>\n<blockquote>\n<p>&gt; 区块引用<br>\n&gt;&gt; 嵌套引用</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p>区块引用</p>\n<blockquote>\n<p>嵌套引用</p>\n</blockquote>\n</blockquote>\n<h4 id=\"4-4-代码区块\"><a class=\"header-anchor\" href=\"#4-4-代码区块\">☆</a>4.4 代码区块</h4>\n<p>代码区块的建立是在每行加上4个空格或者一个制表符（如同写代码一样）。如<br>\n普通段落：</p>\n<p>void main()<br>\n{<br>\nprintf(“Hello, Markdown.”);<br>\n}</p>\n<p>代码区块：</p>\n<pre><code>void main()\n{\n    printf(&quot;Hello, Markdown.&quot;);\n}\n</code></pre>\n<p><strong>注意</strong>:需要和普通段落之间存在空行。</p>\n<h4 id=\"4-5-强调\"><a class=\"header-anchor\" href=\"#4-5-强调\">☆</a>4.5 强调</h4>\n<p>在强调内容两侧分别加上<code>*</code>或者<code>_</code>，如：</p>\n<blockquote>\n<p>*斜体*，_斜体_<br>\n**粗体**，__粗体__</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p><em>斜体</em>，<em>斜体</em><br>\n<strong>粗体</strong>，<strong>粗体</strong></p>\n</blockquote>\n<h4 id=\"4-6-列表\"><a class=\"header-anchor\" href=\"#4-6-列表\">☆</a>4.6 列表</h4>\n<p>使用<code>·</code>、<code>+</code>、或<code>-</code>标记无序列表，如：</p>\n<blockquote>\n<p>-（+*） 第一项<br>\n-（+*） 第二项<br>\n- （+*）第三项</p>\n</blockquote>\n<p><strong>注意</strong>：标记后面最少有一个_空格_或_制表符_。若不在引用区块中，必须和前方段落之间存在空行。</p>\n<p>效果：</p>\n<blockquote>\n<ul>\n<li>第一项</li>\n<li>第二项</li>\n<li>第三项</li>\n</ul>\n</blockquote>\n<p>有序列表的标记方式是将上述的符号换成数字,并辅以<code>.</code>，如：</p>\n<blockquote>\n<p>1 . 第一项<br>\n2 . 第二项<br>\n3 . 第三项</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<ol>\n<li>第一项</li>\n<li>第二项</li>\n<li>第三项</li>\n</ol>\n</blockquote>\n<h4 id=\"4-7-分割线\"><a class=\"header-anchor\" href=\"#4-7-分割线\">☆</a>4.7 分割线</h4>\n<p>分割线最常使用就是三个或以上<code>*</code>，还可以使用<code>-</code>和<code>_</code>。</p>\n<h4 id=\"4-8-链接\"><a class=\"header-anchor\" href=\"#4-8-链接\">☆</a>4.8 链接</h4>\n<p>链接可以由两种形式生成：<strong>行内式</strong>和<strong>参考式</strong>。<br>\n<strong>行内式</strong>：</p>\n<blockquote>\n<p>[younghz的Markdown库](https:😕/github.com/younghz/Markdown “Markdown”)。</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p><a href=\"https:://github.com/younghz/Markdown\" title=\"Markdown\" target=\"_blank\" rel=\"noopener\">younghz的Markdown库</a>。</p>\n</blockquote>\n<p><strong>参考式</strong>：</p>\n<blockquote>\n<p>[younghz的Markdown库1][1]<br>\n[younghz的Markdown库2][2]<br>\n[1]:https:😕/github.com/younghz/Markdown “Markdown”<br>\n[2]:https:😕/github.com/younghz/Markdown “Markdown”</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p><a href=\"https:://github.com/younghz/Markdown\" title=\"Markdown\" target=\"_blank\" rel=\"noopener\">younghz的Markdown库1</a><br>\n<a href=\"https:://github.com/younghz/Markdown\" title=\"Markdown\" target=\"_blank\" rel=\"noopener\">younghz的Markdown库2</a></p>\n</blockquote>\n<p><strong>注意</strong>：上述的<code>[1]:https:://github.com/younghz/Markdown &quot;Markdown&quot;</code>不出现在区块中。</p>\n<h4 id=\"4-9-图片\"><a class=\"header-anchor\" href=\"#4-9-图片\">☆</a>4.9 图片</h4>\n<p>添加图片的形式和链接相似，只需在链接的基础上前方加一个<code>！</code>。</p>\n<h4 id=\"4-10-反斜杠\"><a class=\"header-anchor\" href=\"#4-10-反斜杠\">☆</a>4.10 反斜杠<code>\\</code></h4>\n<p>相当于<strong>反转义</strong>作用。使符号成为普通符号。</p>\n<h4 id=\"4-11-符号\"><a class=\"header-anchor\" href=\"#4-11-符号\">☆</a>4.11 符号’`’</h4>\n<p>起到标记作用。如：</p>\n<blockquote>\n<p>`ctrl+a`</p>\n</blockquote>\n<p>效果：</p>\n<blockquote>\n<p><code>ctrl+a</code></p>\n</blockquote>\n<h4 id=\"5-谁在用？\"><a class=\"header-anchor\" href=\"#5-谁在用？\">☆</a>5. <em>谁</em>在用？</h4>\n<p>Markdown的使用者：</p>\n<ul>\n<li>GitHub</li>\n<li>简书</li>\n<li>Stack Overflow</li>\n<li>Apollo</li>\n<li>Moodle</li>\n<li>Reddit</li>\n<li>等等</li>\n</ul>\n<h4 id=\"6-尝试一下\"><a class=\"header-anchor\" href=\"#6-尝试一下\">☆</a>6. 尝试一下</h4>\n<ul>\n<li><strong>Chrome</strong>下的插件诸如<code>stackedit</code>与<code>markdown-here</code>等非常方便，也不用担心平台受限。</li>\n<li><strong>在线</strong>的dillinger.io评价也不错</li>\n<li><strong>Windowns</strong>下的MarkdownPad也用过，不过免费版的体验不是很好。</li>\n<li><strong>Mac</strong>下的Mou是国人贡献的，口碑很好。</li>\n<li><strong>Linux</strong>下的ReText不错。</li>\n</ul>\n<p><strong>当然，最终境界永远都是笔下是语法，心中格式化 😃。</strong></p>\n<hr>\n<p><strong>注意</strong>：不同的Markdown解释器或工具对相应语法（扩展语法）的解释效果不尽相同，具体可参见工具的使用说明。<br>\n虽然有人想出面搞一个所谓的标准化的Markdown，[没想到还惹怒了健在的创始人John Gruber]<br>\n(<a href=\"http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/\" target=\"_blank\" rel=\"noopener\">http://blog.codinghorror.com/standard-markdown-is-now-common-markdown/</a>)。</p>\n<hr>\n<p>以上基本是所有traditonal markdown的语法。</p>\n<h3 id=\"其它：\"><a class=\"header-anchor\" href=\"#其它：\">☆</a>其它：</h3>\n<p>列表的使用(非traditonal markdown)：</p>\n<p>用<code>|</code>表示表格纵向边界，表头和表内容用<code>-</code>隔开，并可用<code>:</code>进行对齐设置，两边都有<code>:</code>则表示居中，若不加<code>:</code>则默认左对齐。</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">代码库</th>\n<th>链接</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">MarkDown</td>\n<td><a href=\"https://github.com/younghz/Markdown\" title=\"Markdown\" target=\"_blank\" rel=\"noopener\">https://github.com/younghz/Markdown</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">MarkDownCopy</td>\n<td><a href=\"https://github.com/younghz/Markdown\" title=\"Markdown\" target=\"_blank\" rel=\"noopener\">https://github.com/younghz/Markdown</a></td>\n</tr>\n</tbody>\n</table>\n<p>关于其它扩展语法可参见具体工具的使用说明。</p>\n<p>本文转载自：<a href=\"https://github.com/younghz/Markdown\" target=\"_blank\" rel=\"noopener\">https://github.com/younghz/Markdown</a></p>\n"},{"title":"request模块","abbrlink":"16dd4349","date":"2018-05-24T12:47:32.000Z","copyright":null,"password":null,"_content":"## request模块的学习\n \n### 使用前\n \t- pip install requests\n\n### 发送get，post请求，获取响应\n- response = request.get(url)       #发送get请求，请求url地址对应的响应\n- response = request.post(url,data={请求体的字典})    #发送post请求\n\n### response的方法\n- response.text\n\t- 该方式往往会出现乱码，出现乱码使用response.encoding=\"utf-8\"\n- response.content.decode()\n\t- 把响应的二进制字节类型转化为str型\n- response.request.url #发送请求的url地址\n- response.rul  #response响应的url地址\n- response.erquest.headers  #请求头\n- response.headers  #响应请求\n\n### 获取网页源码的正确打开方式\n- 1.response.content.decode()\n- 2.response.content.decode(\"gbk\") \n- 3.response.text\n\n### 发送带harder的请求\n- 为了模拟浏览器，获取和浏览器一样的内容\n```python\nheaders = {\n\"User-Agent\":\"Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Mobile Safari/537.36\",\n\"Referer\":\"https://fanyi.baidu.com/?aldtype=16047\"}\n\nresponse = requests.get(url,headers=hesders)\n```\n### 使用超时参数\n- requests.get(url,headers=headers,timeout=3) #3秒内必须返回响应，否则报错\n\n### retrying模块\n  - pip install retrying\n ```python\n from retrying import retry\n \n @retry(stop_max_attempt_number=3)\n def fun1():\n \tprint(\"this is fun1\")\n\traise ValueError(\"this is error\")\n ```\n\n\n\n\n### 处理cookie相关请求\n\n- 直接携带cookie请求url地址\n\t- 1.cookie放在headers中\n\t  ```python\n\t  headers = {\"User-Agent\":\".......\",\"Cookie\":\"cookie 字符串\"}\n\t  ```\n\t- 2.cookie字典传给cookies参数\n\t\t- requests.get(url,cookies=cookie_dict)\n\t\n\t- 先发送post请求，获取cookie，带上cookie请求登陆后的页面\n\t\t- 1. session = requests.session()  #session具有的方法和requests一样\n\t\t- 2. session.post(url,data,headers) #服务器设置在本地的cookie会保存在session\n\t\t- 3. session.get(url) #会带上之前保存在session中的cookie，能够请求成功\n\t\t","source":"_posts/request模块.md","raw":"---\ntitle: request模块\ntags:\n  - 爬虫\n  - python\nabbrlink: 16dd4349\ndate: 2018-05-24 20:47:32\ncategories:\ncopyright:\npassword:\n---\n## request模块的学习\n \n### 使用前\n \t- pip install requests\n\n### 发送get，post请求，获取响应\n- response = request.get(url)       #发送get请求，请求url地址对应的响应\n- response = request.post(url,data={请求体的字典})    #发送post请求\n\n### response的方法\n- response.text\n\t- 该方式往往会出现乱码，出现乱码使用response.encoding=\"utf-8\"\n- response.content.decode()\n\t- 把响应的二进制字节类型转化为str型\n- response.request.url #发送请求的url地址\n- response.rul  #response响应的url地址\n- response.erquest.headers  #请求头\n- response.headers  #响应请求\n\n### 获取网页源码的正确打开方式\n- 1.response.content.decode()\n- 2.response.content.decode(\"gbk\") \n- 3.response.text\n\n### 发送带harder的请求\n- 为了模拟浏览器，获取和浏览器一样的内容\n```python\nheaders = {\n\"User-Agent\":\"Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Mobile Safari/537.36\",\n\"Referer\":\"https://fanyi.baidu.com/?aldtype=16047\"}\n\nresponse = requests.get(url,headers=hesders)\n```\n### 使用超时参数\n- requests.get(url,headers=headers,timeout=3) #3秒内必须返回响应，否则报错\n\n### retrying模块\n  - pip install retrying\n ```python\n from retrying import retry\n \n @retry(stop_max_attempt_number=3)\n def fun1():\n \tprint(\"this is fun1\")\n\traise ValueError(\"this is error\")\n ```\n\n\n\n\n### 处理cookie相关请求\n\n- 直接携带cookie请求url地址\n\t- 1.cookie放在headers中\n\t  ```python\n\t  headers = {\"User-Agent\":\".......\",\"Cookie\":\"cookie 字符串\"}\n\t  ```\n\t- 2.cookie字典传给cookies参数\n\t\t- requests.get(url,cookies=cookie_dict)\n\t\n\t- 先发送post请求，获取cookie，带上cookie请求登陆后的页面\n\t\t- 1. session = requests.session()  #session具有的方法和requests一样\n\t\t- 2. session.post(url,data,headers) #服务器设置在本地的cookie会保存在session\n\t\t- 3. session.get(url) #会带上之前保存在session中的cookie，能够请求成功\n\t\t","slug":"request模块","published":1,"updated":"2020-02-20T06:06:59.409Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3g0014fkupfj2p6xky","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"request模块的学习\"><a class=\"header-anchor\" href=\"#request模块的学习\">☆</a>request模块的学习</h2>\n<h3 id=\"使用前\"><a class=\"header-anchor\" href=\"#使用前\">☆</a>使用前</h3>\n<pre><code>- pip install requests\n</code></pre>\n<h3 id=\"发送get-post请求-获取响应\"><a class=\"header-anchor\" href=\"#发送get-post请求-获取响应\">☆</a>发送get，post请求，获取响应</h3>\n<ul>\n<li>response = request.get(url)       #发送get请求，请求url地址对应的响应</li>\n<li>response = request.post(url,data={请求体的字典})    #发送post请求</li>\n</ul>\n<h3 id=\"response的方法\"><a class=\"header-anchor\" href=\"#response的方法\">☆</a>response的方法</h3>\n<ul>\n<li>response.text\n<ul>\n<li>该方式往往会出现乱码，出现乱码使用response.encoding=“utf-8”</li>\n</ul>\n</li>\n<li>response.content.decode()\n<ul>\n<li>把响应的二进制字节类型转化为str型</li>\n</ul>\n</li>\n<li>response.request.url #发送请求的url地址</li>\n<li>response.rul  #response响应的url地址</li>\n<li>response.erquest.headers  #请求头</li>\n<li>response.headers  #响应请求</li>\n</ul>\n<h3 id=\"获取网页源码的正确打开方式\"><a class=\"header-anchor\" href=\"#获取网页源码的正确打开方式\">☆</a>获取网页源码的正确打开方式</h3>\n<ul>\n<li>1.response.content.decode()</li>\n<li>2.response.content.decode(“gbk”)</li>\n<li>3.response.text</li>\n</ul>\n<h3 id=\"发送带harder的请求\"><a class=\"header-anchor\" href=\"#发送带harder的请求\">☆</a>发送带harder的请求</h3>\n<ul>\n<li>为了模拟浏览器，获取和浏览器一样的内容</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">headers = &#123;</span><br><span class=\"line\"><span class=\"string\">\"User-Agent\"</span>:<span class=\"string\">\"Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Mobile Safari/537.36\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"Referer\"</span>:<span class=\"string\">\"https://fanyi.baidu.com/?aldtype=16047\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.get(url,headers=hesders)</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用超时参数\"><a class=\"header-anchor\" href=\"#使用超时参数\">☆</a>使用超时参数</h3>\n<ul>\n<li>requests.get(url,headers=headers,timeout=3) #3秒内必须返回响应，否则报错</li>\n</ul>\n<h3 id=\"retrying模块\"><a class=\"header-anchor\" href=\"#retrying模块\">☆</a>retrying模块</h3>\n<ul>\n<li>pip install retrying</li>\n</ul>\n <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> retrying <span class=\"keyword\">import</span> retry</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@retry(stop_max_attempt_number=3)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fun1</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">\tprint(<span class=\"string\">\"this is fun1\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">raise</span> ValueError(<span class=\"string\">\"this is error\"</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"处理cookie相关请求\"><a class=\"header-anchor\" href=\"#处理cookie相关请求\">☆</a>处理cookie相关请求</h3>\n<ul>\n<li>直接携带cookie请求url地址\n<ul>\n<li>\n<p>1.cookie放在headers中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">headers = &#123;<span class=\"string\">\"User-Agent\"</span>:<span class=\"string\">\".......\"</span>,<span class=\"string\">\"Cookie\"</span>:<span class=\"string\">\"cookie 字符串\"</span>&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>2.cookie字典传给cookies参数</p>\n<ul>\n<li>requests.get(url,cookies=cookie_dict)</li>\n</ul>\n</li>\n<li>\n<p>先发送post请求，获取cookie，带上cookie请求登陆后的页面</p>\n<ul>\n<li>\n<ol>\n<li>session = requests.session()  #session具有的方法和requests一样</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>session.post(url,data,headers) #服务器设置在本地的cookie会保存在session</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>session.get(url) #会带上之前保存在session中的cookie，能够请求成功</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":1383,"excerpt":"","more":"<h2 id=\"request模块的学习\"><a class=\"header-anchor\" href=\"#request模块的学习\">☆</a>request模块的学习</h2>\n<h3 id=\"使用前\"><a class=\"header-anchor\" href=\"#使用前\">☆</a>使用前</h3>\n<pre><code>- pip install requests\n</code></pre>\n<h3 id=\"发送get-post请求-获取响应\"><a class=\"header-anchor\" href=\"#发送get-post请求-获取响应\">☆</a>发送get，post请求，获取响应</h3>\n<ul>\n<li>response = request.get(url)       #发送get请求，请求url地址对应的响应</li>\n<li>response = request.post(url,data={请求体的字典})    #发送post请求</li>\n</ul>\n<h3 id=\"response的方法\"><a class=\"header-anchor\" href=\"#response的方法\">☆</a>response的方法</h3>\n<ul>\n<li>response.text\n<ul>\n<li>该方式往往会出现乱码，出现乱码使用response.encoding=“utf-8”</li>\n</ul>\n</li>\n<li>response.content.decode()\n<ul>\n<li>把响应的二进制字节类型转化为str型</li>\n</ul>\n</li>\n<li>response.request.url #发送请求的url地址</li>\n<li>response.rul  #response响应的url地址</li>\n<li>response.erquest.headers  #请求头</li>\n<li>response.headers  #响应请求</li>\n</ul>\n<h3 id=\"获取网页源码的正确打开方式\"><a class=\"header-anchor\" href=\"#获取网页源码的正确打开方式\">☆</a>获取网页源码的正确打开方式</h3>\n<ul>\n<li>1.response.content.decode()</li>\n<li>2.response.content.decode(“gbk”)</li>\n<li>3.response.text</li>\n</ul>\n<h3 id=\"发送带harder的请求\"><a class=\"header-anchor\" href=\"#发送带harder的请求\">☆</a>发送带harder的请求</h3>\n<ul>\n<li>为了模拟浏览器，获取和浏览器一样的内容</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">headers = &#123;</span><br><span class=\"line\"><span class=\"string\">\"User-Agent\"</span>:<span class=\"string\">\"Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.181 Mobile Safari/537.36\"</span>,</span><br><span class=\"line\"><span class=\"string\">\"Referer\"</span>:<span class=\"string\">\"https://fanyi.baidu.com/?aldtype=16047\"</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.get(url,headers=hesders)</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用超时参数\"><a class=\"header-anchor\" href=\"#使用超时参数\">☆</a>使用超时参数</h3>\n<ul>\n<li>requests.get(url,headers=headers,timeout=3) #3秒内必须返回响应，否则报错</li>\n</ul>\n<h3 id=\"retrying模块\"><a class=\"header-anchor\" href=\"#retrying模块\">☆</a>retrying模块</h3>\n<ul>\n<li>pip install retrying</li>\n</ul>\n <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> retrying <span class=\"keyword\">import</span> retry</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@retry(stop_max_attempt_number=3)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">fun1</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">\tprint(<span class=\"string\">\"this is fun1\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">raise</span> ValueError(<span class=\"string\">\"this is error\"</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"处理cookie相关请求\"><a class=\"header-anchor\" href=\"#处理cookie相关请求\">☆</a>处理cookie相关请求</h3>\n<ul>\n<li>直接携带cookie请求url地址\n<ul>\n<li>\n<p>1.cookie放在headers中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">headers = &#123;<span class=\"string\">\"User-Agent\"</span>:<span class=\"string\">\".......\"</span>,<span class=\"string\">\"Cookie\"</span>:<span class=\"string\">\"cookie 字符串\"</span>&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>2.cookie字典传给cookies参数</p>\n<ul>\n<li>requests.get(url,cookies=cookie_dict)</li>\n</ul>\n</li>\n<li>\n<p>先发送post请求，获取cookie，带上cookie请求登陆后的页面</p>\n<ul>\n<li>\n<ol>\n<li>session = requests.session()  #session具有的方法和requests一样</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>session.post(url,data,headers) #服务器设置在本地的cookie会保存在session</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>session.get(url) #会带上之前保存在session中的cookie，能够请求成功</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"VS code 显示中文异常解决办法","copyright":true,"abbrlink":"fdf0e152","date":"2018-06-28T15:28:36.000Z","password":null,"_content":"\n{% meting \"1803360770\" \"xiami\" \"song\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n从https://www.zhihu.com/question/34415763得到问题解决办法，现做如下总结。\n\n异常原因：VSCODE默认是UTF-8编码打开文件的。如果遇到了像GB18030 GBK等等的编码，就显示乱码了。\n\n解决办法如下：\n\n1，一劳永逸法：\n\n 在设置文件中加入： <font color=#1a237e>\"files.autoGuessEncoding\":true</font>\n，自动识别字符编码。\n\n ps：a:此设置可能需要最新版本的VScode，因为我当前用的就是最新版，所以修改后显示马上正常了。\n &emsp; &emsp;b:设置文件打开位置：文件--.>首选项-->设置-->用户设置。\n\n2，单个文件解决办法：\n\n vs code界面右下角位置有显示解析当前文件所用的字符源码（默认是UTF-8），单击该处,手动更改编码\n \n 3，vscode默认文件字符编码为utf-8，可以在用户设置修改该属性，如：files.encoding\"：\"gbk\"","source":"_posts/vsCode中午乱码解决方法.md","raw":"---\ntitle: VS code 显示中文异常解决办法\ncopyright: true\nabbrlink: fdf0e152\ndate: 2018-06-28 23:28:36\ntags:\ncategories:\npassword:\n---\n\n{% meting \"1803360770\" \"xiami\" \"song\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n从https://www.zhihu.com/question/34415763得到问题解决办法，现做如下总结。\n\n异常原因：VSCODE默认是UTF-8编码打开文件的。如果遇到了像GB18030 GBK等等的编码，就显示乱码了。\n\n解决办法如下：\n\n1，一劳永逸法：\n\n 在设置文件中加入： <font color=#1a237e>\"files.autoGuessEncoding\":true</font>\n，自动识别字符编码。\n\n ps：a:此设置可能需要最新版本的VScode，因为我当前用的就是最新版，所以修改后显示马上正常了。\n &emsp; &emsp;b:设置文件打开位置：文件--.>首选项-->设置-->用户设置。\n\n2，单个文件解决办法：\n\n vs code界面右下角位置有显示解析当前文件所用的字符源码（默认是UTF-8），单击该处,手动更改编码\n \n 3，vscode默认文件字符编码为utf-8，可以在用户设置修改该属性，如：files.encoding\"：\"gbk\"","slug":"vsCode中午乱码解决方法","published":1,"updated":"2020-02-20T06:06:59.412Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3h0015fkupxhev50u2","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-ilQzKDkw\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1803360770\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<p>从https://www.zhihu.com/question/34415763得到问题解决办法，现做如下总结。</p>\n<p>异常原因：VSCODE默认是UTF-8编码打开文件的。如果遇到了像GB18030 GBK等等的编码，就显示乱码了。</p>\n<p>解决办法如下：</p>\n<p>1，一劳永逸法：</p>\n<p>在设置文件中加入： <font color=\"#1a237e\">“files.autoGuessEncoding”:true</font><br>\n，自动识别字符编码。</p>\n<p>ps：a:此设置可能需要最新版本的VScode，因为我当前用的就是最新版，所以修改后显示马上正常了。<br>\n   b:设置文件打开位置：文件–.&gt;首选项–&gt;设置–&gt;用户设置。</p>\n<p>2，单个文件解决办法：</p>\n<p>vs code界面右下角位置有显示解析当前文件所用的字符源码（默认是UTF-8），单击该处,手动更改编码</p>\n<p>3，vscode默认文件字符编码为utf-8，可以在用户设置修改该属性，如：files.encoding&quot;：“gbk”</p>\n","site":{"data":{}},"length":401,"excerpt":"","more":"\n    <div id=\"aplayer-ilQzKDkw\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1803360770\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<p>从https://www.zhihu.com/question/34415763得到问题解决办法，现做如下总结。</p>\n<p>异常原因：VSCODE默认是UTF-8编码打开文件的。如果遇到了像GB18030 GBK等等的编码，就显示乱码了。</p>\n<p>解决办法如下：</p>\n<p>1，一劳永逸法：</p>\n<p>在设置文件中加入： <font color=\"#1a237e\">“files.autoGuessEncoding”:true</font><br>\n，自动识别字符编码。</p>\n<p>ps：a:此设置可能需要最新版本的VScode，因为我当前用的就是最新版，所以修改后显示马上正常了。<br>\n   b:设置文件打开位置：文件–.&gt;首选项–&gt;设置–&gt;用户设置。</p>\n<p>2，单个文件解决办法：</p>\n<p>vs code界面右下角位置有显示解析当前文件所用的字符源码（默认是UTF-8），单击该处,手动更改编码</p>\n<p>3，vscode默认文件字符编码为utf-8，可以在用户设置修改该属性，如：files.encoding&quot;：“gbk”</p>\n"},{"title":"test","copyright":true,"abbrlink":"d87f7e0c","date":"2018-01-26T03:19:04.000Z","_content":"\n域名防盗链测试：\n![11][1]         ![22][2]\n  \n\n\n\n  图片处理：\n  ![enter description here][3]\n  \n\n  \nhttp://m10.music.126.net/20180403235510/7a0336debd973c86b5c21e8b21c753ae/ymusic/d6d3/7aac/9aed/802e6b3a1bd34a18927f4adab563690a.mp3\n\n  \n\n\n----------\n\n\n 2018年03月22日 17时50分35秒\n 因更新版本再次测试图床功能\n ![enter description here][4]\n\n\n  [1]: https://data.singlelovely.cn/11.jpeg\n  [2]: https://data.singlelovely.cn/12.jpeg?imageView2/2/w/250/h/300/q/75%7Cimageslim\n  [3]: https://data.singlelovely.cn/13.jpeg?imageView2/2/w/250/h/200/q/75%7Cimageslim\n  [4]: https://data.singlelovely.cn/xsj/2018/3/22/1478145958717.jpg \"1478145958717\"\n  \n外链测试：\n  <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=400581235&auto=0&height=66\"></iframe>\n  \n  <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=543987400&auto=1&height=66\"></iframe>\n\n/outchain/2/298317/\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/2/298317&auto=1&height=66\"></iframe>\n\n\n米兰的小铁匠\n\n<embed src=\"http://www.xiami.com/widget/0_1775256378/singlePlayer.swf\" type=\"application/x-shockwave-flash\" width=\"257\" height=\"33\" wmode=\"transparent\"></embed>\n\n<script type=\"text/javascript\" src=\"http://www.xiami.com/widget/player-single?uid=0&sid=1775256378&mode=js\"></script>\n\n<audio src=\"http://www.xiami.com/widget/0_1775256378/singlePlayer.swf\" type=\"application/x-shockwave-flash\" width=\"257\" height=\"33\" wmode=\"transparent\"></audio>\n\n\n{% meting \"21637275\" \"xiami\" \"playlist\"  \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n\n\n![001](https://images.unsplash.com/photo-1461529959205-ba7d61debd0b?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&w=400&fit=max&s=0653332e9c1498112a303c583c102f6a)\n![002](https://data.singlelovely.cn/CoverPicture/1a300c2b.png!CoverPicture)","source":"_posts/test.md","raw":"---\ntitle: test\ncopyright: true\nabbrlink: d87f7e0c\ndate: 2018-01-26 11:19:04\ntags:\ncategories:\n---\n\n域名防盗链测试：\n![11][1]         ![22][2]\n  \n\n\n\n  图片处理：\n  ![enter description here][3]\n  \n\n  \nhttp://m10.music.126.net/20180403235510/7a0336debd973c86b5c21e8b21c753ae/ymusic/d6d3/7aac/9aed/802e6b3a1bd34a18927f4adab563690a.mp3\n\n  \n\n\n----------\n\n\n 2018年03月22日 17时50分35秒\n 因更新版本再次测试图床功能\n ![enter description here][4]\n\n\n  [1]: https://data.singlelovely.cn/11.jpeg\n  [2]: https://data.singlelovely.cn/12.jpeg?imageView2/2/w/250/h/300/q/75%7Cimageslim\n  [3]: https://data.singlelovely.cn/13.jpeg?imageView2/2/w/250/h/200/q/75%7Cimageslim\n  [4]: https://data.singlelovely.cn/xsj/2018/3/22/1478145958717.jpg \"1478145958717\"\n  \n外链测试：\n  <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=400581235&auto=0&height=66\"></iframe>\n  \n  <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=543987400&auto=1&height=66\"></iframe>\n\n/outchain/2/298317/\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/2/298317&auto=1&height=66\"></iframe>\n\n\n米兰的小铁匠\n\n<embed src=\"http://www.xiami.com/widget/0_1775256378/singlePlayer.swf\" type=\"application/x-shockwave-flash\" width=\"257\" height=\"33\" wmode=\"transparent\"></embed>\n\n<script type=\"text/javascript\" src=\"http://www.xiami.com/widget/player-single?uid=0&sid=1775256378&mode=js\"></script>\n\n<audio src=\"http://www.xiami.com/widget/0_1775256378/singlePlayer.swf\" type=\"application/x-shockwave-flash\" width=\"257\" height=\"33\" wmode=\"transparent\"></audio>\n\n\n{% meting \"21637275\" \"xiami\" \"playlist\"  \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n\n\n![001](https://images.unsplash.com/photo-1461529959205-ba7d61debd0b?ixlib=rb-0.3.5&q=80&fm=jpg&crop=entropy&w=400&fit=max&s=0653332e9c1498112a303c583c102f6a)\n![002](https://data.singlelovely.cn/CoverPicture/1a300c2b.png!CoverPicture)","slug":"test","published":1,"updated":"2020-02-20T06:06:59.410Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3i0016fkup9q4uk4vy","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>域名防盗链测试：<br>\n<img src=\"https://data.singlelovely.cn/11.jpeg\" alt=\"11\">         <img src=\"https://data.singlelovely.cn/12.jpeg?imageView2/2/w/250/h/300/q/75%7Cimageslim\" alt=\"22\"></p>\n<p>图片处理：<br>\n<img src=\"https://data.singlelovely.cn/13.jpeg?imageView2/2/w/250/h/200/q/75%7Cimageslim\" alt=\"enter description here\"></p>\n<p><a href=\"http://m10.music.126.net/20180403235510/7a0336debd973c86b5c21e8b21c753ae/ymusic/d6d3/7aac/9aed/802e6b3a1bd34a18927f4adab563690a.mp3\" target=\"_blank\" rel=\"noopener\">http://m10.music.126.net/20180403235510/7a0336debd973c86b5c21e8b21c753ae/ymusic/d6d3/7aac/9aed/802e6b3a1bd34a18927f4adab563690a.mp3</a></p>\n<hr>\n<p>2018年03月22日 17时50分35秒<br>\n因更新版本再次测试图床功能<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/22/1478145958717.jpg\" alt=\"enter description here\" title=\"1478145958717\"></p>\n<p>外链测试：</p>\n  <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=400581235&auto=0&height=66\"></iframe>\n  <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=543987400&auto=1&height=66\"></iframe>\n<p>/outchain/2/298317/</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/2/298317&auto=1&height=66\"></iframe>\n<p>米兰的小铁匠</p>\n<p><embed src=\"http://www.xiami.com/widget/0_1775256378/singlePlayer.swf\" type=\"application/x-shockwave-flash\" width=\"257\" height=\"33\" wmode=\"transparent\"></p>\n<script type=\"text/javascript\" src=\"http://www.xiami.com/widget/player-single?uid=0&sid=1775256378&mode=js\"></script>\n<p><audio src=\"http://www.xiami.com/widget/0_1775256378/singlePlayer.swf\" type=\"application/x-shockwave-flash\" width=\"257\" height=\"33\" wmode=\"transparent\"></audio></p>\n\n    <div id=\"aplayer-eyveNCXt\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"21637275\" data-server=\"xiami\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<p><img src=\"https://images.unsplash.com/photo-1461529959205-ba7d61debd0b?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;w=400&amp;fit=max&amp;s=0653332e9c1498112a303c583c102f6a\" alt=\"001\"><br>\n<img src=\"https://data.singlelovely.cn/CoverPicture/1a300c2b.png!CoverPicture\" alt=\"002\"></p>\n","site":{"data":{}},"length":225,"excerpt":"","more":"<p>域名防盗链测试：<br>\n<img src=\"https://data.singlelovely.cn/11.jpeg\" alt=\"11\">         <img src=\"https://data.singlelovely.cn/12.jpeg?imageView2/2/w/250/h/300/q/75%7Cimageslim\" alt=\"22\"></p>\n<p>图片处理：<br>\n<img src=\"https://data.singlelovely.cn/13.jpeg?imageView2/2/w/250/h/200/q/75%7Cimageslim\" alt=\"enter description here\"></p>\n<p><a href=\"http://m10.music.126.net/20180403235510/7a0336debd973c86b5c21e8b21c753ae/ymusic/d6d3/7aac/9aed/802e6b3a1bd34a18927f4adab563690a.mp3\" target=\"_blank\" rel=\"noopener\">http://m10.music.126.net/20180403235510/7a0336debd973c86b5c21e8b21c753ae/ymusic/d6d3/7aac/9aed/802e6b3a1bd34a18927f4adab563690a.mp3</a></p>\n<hr>\n<p>2018年03月22日 17时50分35秒<br>\n因更新版本再次测试图床功能<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/22/1478145958717.jpg\" alt=\"enter description here\" title=\"1478145958717\"></p>\n<p>外链测试：</p>\n  <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=400581235&auto=0&height=66\"></iframe>\n  <iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=543987400&auto=1&height=66\"></iframe>\n<p>/outchain/2/298317/</p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/2/298317&auto=1&height=66\"></iframe>\n<p>米兰的小铁匠</p>\n<p><embed src=\"http://www.xiami.com/widget/0_1775256378/singlePlayer.swf\" type=\"application/x-shockwave-flash\" width=\"257\" height=\"33\" wmode=\"transparent\"></p>\n<script type=\"text/javascript\" src=\"http://www.xiami.com/widget/player-single?uid=0&sid=1775256378&mode=js\"></script>\n<p><audio src=\"http://www.xiami.com/widget/0_1775256378/singlePlayer.swf\" type=\"application/x-shockwave-flash\" width=\"257\" height=\"33\" wmode=\"transparent\"></audio></p>\n\n    <div id=\"aplayer-eyveNCXt\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"21637275\" data-server=\"xiami\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<p><img src=\"https://images.unsplash.com/photo-1461529959205-ba7d61debd0b?ixlib=rb-0.3.5&amp;q=80&amp;fm=jpg&amp;crop=entropy&amp;w=400&amp;fit=max&amp;s=0653332e9c1498112a303c583c102f6a\" alt=\"001\"><br>\n<img src=\"https://data.singlelovely.cn/CoverPicture/1a300c2b.png!CoverPicture\" alt=\"002\"></p>\n"},{"title":"Ubuntu系统折腾记","copyright":true,"abbrlink":"1a300c2b","notshow":false,"description":"美化和必备软件安装","date":"2019-02-17T11:54:00.000Z","password":null,"image":["https://data.singlelovely.cn/CoverPicture/1a300c2b.png!CoverPicture"],"photos":[],"sticky":null,"_content":"\n## 换源\n\nUbuntu18.04国内版默认的源地址为 cn.archive.ubuntu.com ， ping结果显示归属地为英国，速度较慢，需要更换为国内的镜像地址。\n使用如下命令：\n\n```shell\n//得到系统版本代号，防止更换错误\nlsb_release -c  \n\n//备份原有源\ncp /etc/apt/sources.list /etc/apt/sources.list.backup\n```\n\n清华大学镜像站： https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\n\n阿里源\n\n```js\ndeb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\n```\n\n更换完成后执行\n\n```shell\nsudo apt-get update\nsudo apt-get upgrade\n```\n\n## 安装<span id=\"font-red\">ssr</span>\n\n桌面客户端下载：[地址](https://github.com/erguotou520/electron-ssr)\n\n参考：[教程](https://alanlee.fun/2018/05/18/ubuntu-ssr/)\n\n安装libsodium，用来支持chacha20系列加密方式\n\n```bash\nwget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/libsodium.sh && chmod +x libsodium.sh && bash libsodium.sh\n```\n\n~~脚本来源：[逗比根据地](https://doubibackup.com/)~~\n![](https://data.singlelovely.cn/images/20190313215256.png)\n注意：装完libsodium后需要重启系统\n\n## 安装必备软件\n\n国外公司对Linux系统的支持还是比较好的，vscode、chrome等去官网下载deb包安装就行了\n\n## 安装国内软件\n\n国内的一些常用软件，微信，QQ等对Ubuntu的支持并不友好，Ubuntu版维护停止在多年以前，大多数已经不能使用，网上多数解决办法是通过网页版，网页版界面不友好操作麻烦，在此使用deepin深度定制的wine安装包。\n\ngithub地址： https://github.com/wszqkzqk/deepin-wine-ubuntu\n\n教程及演示： https://www.lulinux.com/archives/1319\n\n![](https://data.singlelovely.cn/images/20190329233059.png!CoverPicture)\n\n![](https://data.singlelovely.cn/images/20190329233016.png!CoverPicture)\n\n\n## 美化\n\n![](https://data.singlelovely.cn/images/20190329232929.png!CoverPicture)\n\n### 终端及管理器安装\n\n打开终端，查看shell版本\n\n```shell\ngnome-shell --version\n```\n\n如无gnome shell 使用下面命令安装\n\n```shell\nsudo apt install gnome-shell\n```\n\n然后安装 gnome-tweak 中文名为 优化\n\n使用下面命令安装，或者在Ubuntu软件搜索<span id=\"inline-green\">gnome-tweak</span>安装\n\n```shell\nsudo apt install gnome-tweak-tool\n```\n### gnome-tweak 插件安装\n\n- 通过Ubuntu软件商店搜索安装\n    - 速度较慢，不推荐此方法\n- 通过[官网](extensions.gnome.org)下载\n    - chrome浏览器需到应用商店安装 <span id=\"inline-green\">GNOME Shell integration</span> 扩展程序\n    - 火狐浏览器根据页面提示执行\n\n### 推荐的插件\n\n- User Themes: 作用是从用户目录加载主题\n- Dash to Dock : 作用是制定Dock和Dash\n    - 主题图标[下载](https://www.gnome-look.org/)\n    - 主题目录：/usr/share/themes\n    - sell主题目录：/usr/share/gnome-shell\n    - 图标包目录：/usr/share/icons\n- TopIcons Plus : 起到了任务栏的作用,用来解决上面wine程序任务栏图标问题\n- Gnome-shell Extensions ：通过Ubuntu软件商店安装 插件集合，一次性安装多个常用插件\n\n![](https://data.singlelovely.cn/images/20190313215118.png)\n![](https://data.singlelovely.cn/images/20190313215028.png)\n\n### 参考教程\n\n[Ubuntu18.04美化及常用软件安装](https://blog.csdn.net/weixin_38233274/article/details/80782483)\n\n[如何让Ubuntu美如画](https://www.youtube.com/watch?v=B6oCQit90M8)\n\n[GNOME Shell 详细指南](https://linux.cn/article-9447-1.html?pr)\n\n## 网易云的安装及踩坑\n\n之所以要单独写一个网易云，实在是因为坑太多了，记录一下，以防万一\n\n### 安装\n\n去官网下载安装包，通过<span id=\"inline-blue\">sudo dpkg -i</span>安装\n\n```bash\nsudo dpkg -i netease-cloud-music_1.1.0_amd64_ubuntu.deb\n```\n\n上面的操作可能会出错，一般来说就是依赖的软件环境不完整，执行以下命令\n\n```bash\nsudo apt-get -f install\n```\n\n### 启动\n\n在软件中能看到网易云音乐的图标，可是点击运行之后却没有任何窗口出现。\n\n通过终端进行启动\n\n```bash\nnetease-cloud-music\n```\n\n发现报错并卡住\n\n```bash\nGtk-Message: 12:02:46.607: Failed to load module \"canberra-gtk-module\"\n```\n\n安装相应依赖，不安装依赖通过 <span id=\"inline-blue\">sudo netease-cloud-music</span> 也能启动，但是控制台会有报错信息\n\n```bash\nsudo apt-get install libcanberra-gtk*\n```\n\n结果安装依赖后还是得通过 <span id=\"inline-blue\">sudo netease-cloud-music</span> 启动，并且不能关闭终端窗口\n\n### 问题解决\n\n以上方法虽然能够使网易云音乐运行，但每次都需要打开一个终端不能关闭，让有轻微强迫症的我看了觉得很不舒服。\n\n<div class=\"note success\">\n<span id=\"font-blue\">启动密籍：</span>双击网易云音乐图标后，点击关机，十秒内就出现界面（此方法实测可用）\n</div>\n\n方法2(请自行测试)：\n在~目录下新建一个脚本<span id=\"inline-blue\">.netease.sh</span>,该脚本的内容如下(注意更换password)：\n\n```bash\n#!/bin/bash\necho \"password\" | sudo -S netease-cloud-music &\nsleep 0.1\nexit\n```\n\n编辑~/.bashrc，在末尾增加了一行：\n\n>alisa netease=\". .netease.sh\"\n\n## deb包安装方式\n\n- 双击打开安装\n    - 通过Ubuntu自带的软件管理器安装\n    - 容易出现依赖错误\n    - 安装速度慢\n    - 出错后报错信息不明确\n\n- 通过命令 <span id=\"inline-blue\">sudo dpkg -i</span> 安装\n\n## 双系统下无法访问win磁盘问题\n\n### 方法一\n\n通过win系统重启进入ubuntu系统\n\n### 方法二\n\n执行以下命令,记得加磁盘分区号(如果执行前已挂载磁盘需要先卸载，执行完毕重新挂载即可)\n\n```bash\nsudo ntfsfix /dev/sda  or   sudo ntfsfix /dev/nvmeOn\n```\n\n## PPPoE 拨号上网\n\n```bash\n# 安装 pppoeconf\nsudo apt install pppoeconf\n# 配置\nsudo pppoeconf\n# 手动连接\nsudo pon dsl-provider\n# 手动断开\nsudo poff dsl-provider\n# 查看状态\nsudo plog\n# 查看接口信息\nsudo ip addr show ppp0\n```\n\n注意：不适用于需要客户端的登陆方式，因为客户端一般都有二次验证\n","source":"_posts/ubuntu系统折腾记.md","raw":"---\ntitle: Ubuntu系统折腾记\ncopyright: true\nabbrlink: 1a300c2b\nnotshow: false\ntags:\n  - Ubuntu\n  - Linux\ncategories: 系统\ndescription: 美化和必备软件安装\ndate: 2019-02-17 19:54:00\npassword:\nimage:\n- \"https://data.singlelovely.cn/CoverPicture/1a300c2b.png!CoverPicture\"\nphotos:\nsticky:\n---\n\n## 换源\n\nUbuntu18.04国内版默认的源地址为 cn.archive.ubuntu.com ， ping结果显示归属地为英国，速度较慢，需要更换为国内的镜像地址。\n使用如下命令：\n\n```shell\n//得到系统版本代号，防止更换错误\nlsb_release -c  \n\n//备份原有源\ncp /etc/apt/sources.list /etc/apt/sources.list.backup\n```\n\n清华大学镜像站： https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\n\n阿里源\n\n```js\ndeb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse\ndeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse\n```\n\n更换完成后执行\n\n```shell\nsudo apt-get update\nsudo apt-get upgrade\n```\n\n## 安装<span id=\"font-red\">ssr</span>\n\n桌面客户端下载：[地址](https://github.com/erguotou520/electron-ssr)\n\n参考：[教程](https://alanlee.fun/2018/05/18/ubuntu-ssr/)\n\n安装libsodium，用来支持chacha20系列加密方式\n\n```bash\nwget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/libsodium.sh && chmod +x libsodium.sh && bash libsodium.sh\n```\n\n~~脚本来源：[逗比根据地](https://doubibackup.com/)~~\n![](https://data.singlelovely.cn/images/20190313215256.png)\n注意：装完libsodium后需要重启系统\n\n## 安装必备软件\n\n国外公司对Linux系统的支持还是比较好的，vscode、chrome等去官网下载deb包安装就行了\n\n## 安装国内软件\n\n国内的一些常用软件，微信，QQ等对Ubuntu的支持并不友好，Ubuntu版维护停止在多年以前，大多数已经不能使用，网上多数解决办法是通过网页版，网页版界面不友好操作麻烦，在此使用deepin深度定制的wine安装包。\n\ngithub地址： https://github.com/wszqkzqk/deepin-wine-ubuntu\n\n教程及演示： https://www.lulinux.com/archives/1319\n\n![](https://data.singlelovely.cn/images/20190329233059.png!CoverPicture)\n\n![](https://data.singlelovely.cn/images/20190329233016.png!CoverPicture)\n\n\n## 美化\n\n![](https://data.singlelovely.cn/images/20190329232929.png!CoverPicture)\n\n### 终端及管理器安装\n\n打开终端，查看shell版本\n\n```shell\ngnome-shell --version\n```\n\n如无gnome shell 使用下面命令安装\n\n```shell\nsudo apt install gnome-shell\n```\n\n然后安装 gnome-tweak 中文名为 优化\n\n使用下面命令安装，或者在Ubuntu软件搜索<span id=\"inline-green\">gnome-tweak</span>安装\n\n```shell\nsudo apt install gnome-tweak-tool\n```\n### gnome-tweak 插件安装\n\n- 通过Ubuntu软件商店搜索安装\n    - 速度较慢，不推荐此方法\n- 通过[官网](extensions.gnome.org)下载\n    - chrome浏览器需到应用商店安装 <span id=\"inline-green\">GNOME Shell integration</span> 扩展程序\n    - 火狐浏览器根据页面提示执行\n\n### 推荐的插件\n\n- User Themes: 作用是从用户目录加载主题\n- Dash to Dock : 作用是制定Dock和Dash\n    - 主题图标[下载](https://www.gnome-look.org/)\n    - 主题目录：/usr/share/themes\n    - sell主题目录：/usr/share/gnome-shell\n    - 图标包目录：/usr/share/icons\n- TopIcons Plus : 起到了任务栏的作用,用来解决上面wine程序任务栏图标问题\n- Gnome-shell Extensions ：通过Ubuntu软件商店安装 插件集合，一次性安装多个常用插件\n\n![](https://data.singlelovely.cn/images/20190313215118.png)\n![](https://data.singlelovely.cn/images/20190313215028.png)\n\n### 参考教程\n\n[Ubuntu18.04美化及常用软件安装](https://blog.csdn.net/weixin_38233274/article/details/80782483)\n\n[如何让Ubuntu美如画](https://www.youtube.com/watch?v=B6oCQit90M8)\n\n[GNOME Shell 详细指南](https://linux.cn/article-9447-1.html?pr)\n\n## 网易云的安装及踩坑\n\n之所以要单独写一个网易云，实在是因为坑太多了，记录一下，以防万一\n\n### 安装\n\n去官网下载安装包，通过<span id=\"inline-blue\">sudo dpkg -i</span>安装\n\n```bash\nsudo dpkg -i netease-cloud-music_1.1.0_amd64_ubuntu.deb\n```\n\n上面的操作可能会出错，一般来说就是依赖的软件环境不完整，执行以下命令\n\n```bash\nsudo apt-get -f install\n```\n\n### 启动\n\n在软件中能看到网易云音乐的图标，可是点击运行之后却没有任何窗口出现。\n\n通过终端进行启动\n\n```bash\nnetease-cloud-music\n```\n\n发现报错并卡住\n\n```bash\nGtk-Message: 12:02:46.607: Failed to load module \"canberra-gtk-module\"\n```\n\n安装相应依赖，不安装依赖通过 <span id=\"inline-blue\">sudo netease-cloud-music</span> 也能启动，但是控制台会有报错信息\n\n```bash\nsudo apt-get install libcanberra-gtk*\n```\n\n结果安装依赖后还是得通过 <span id=\"inline-blue\">sudo netease-cloud-music</span> 启动，并且不能关闭终端窗口\n\n### 问题解决\n\n以上方法虽然能够使网易云音乐运行，但每次都需要打开一个终端不能关闭，让有轻微强迫症的我看了觉得很不舒服。\n\n<div class=\"note success\">\n<span id=\"font-blue\">启动密籍：</span>双击网易云音乐图标后，点击关机，十秒内就出现界面（此方法实测可用）\n</div>\n\n方法2(请自行测试)：\n在~目录下新建一个脚本<span id=\"inline-blue\">.netease.sh</span>,该脚本的内容如下(注意更换password)：\n\n```bash\n#!/bin/bash\necho \"password\" | sudo -S netease-cloud-music &\nsleep 0.1\nexit\n```\n\n编辑~/.bashrc，在末尾增加了一行：\n\n>alisa netease=\". .netease.sh\"\n\n## deb包安装方式\n\n- 双击打开安装\n    - 通过Ubuntu自带的软件管理器安装\n    - 容易出现依赖错误\n    - 安装速度慢\n    - 出错后报错信息不明确\n\n- 通过命令 <span id=\"inline-blue\">sudo dpkg -i</span> 安装\n\n## 双系统下无法访问win磁盘问题\n\n### 方法一\n\n通过win系统重启进入ubuntu系统\n\n### 方法二\n\n执行以下命令,记得加磁盘分区号(如果执行前已挂载磁盘需要先卸载，执行完毕重新挂载即可)\n\n```bash\nsudo ntfsfix /dev/sda  or   sudo ntfsfix /dev/nvmeOn\n```\n\n## PPPoE 拨号上网\n\n```bash\n# 安装 pppoeconf\nsudo apt install pppoeconf\n# 配置\nsudo pppoeconf\n# 手动连接\nsudo pon dsl-provider\n# 手动断开\nsudo poff dsl-provider\n# 查看状态\nsudo plog\n# 查看接口信息\nsudo ip addr show ppp0\n```\n\n注意：不适用于需要客户端的登陆方式，因为客户端一般都有二次验证\n","slug":"ubuntu系统折腾记","published":1,"updated":"2020-02-20T06:06:59.412Z","comments":1,"layout":"post","link":"","_id":"ckec2td3j0017fkupyde1fd26","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"换源\"><a class=\"header-anchor\" href=\"#换源\">☆</a>换源</h2>\n<p>Ubuntu18.04国内版默认的源地址为 <a href=\"http://cn.archive.ubuntu.com\" target=\"_blank\" rel=\"noopener\">cn.archive.ubuntu.com</a> ， ping结果显示归属地为英国，速度较慢，需要更换为国内的镜像地址。<br>\n使用如下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//得到系统版本代号，防止更换错误</span><br><span class=\"line\">lsb_release -c  </span><br><span class=\"line\"></span><br><span class=\"line\">//备份原有源</span><br><span class=\"line\">cp /etc/apt/sources.list /etc/apt/sources.list.backup</span><br></pre></td></tr></table></figure>\n<p>清华大学镜像站： <a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/</a></p>\n<p>阿里源</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class=\"line\">deb http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class=\"line\">deb http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class=\"line\">deb http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class=\"line\">deb http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class=\"line\">deb-src http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class=\"line\">deb-src http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class=\"line\">deb-src http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class=\"line\">deb-src http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class=\"line\">deb-src http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br></pre></td></tr></table></figure>\n<p>更换完成后执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装-span-id-font-red-ssr-span\"><a class=\"header-anchor\" href=\"#安装-span-id-font-red-ssr-span\">☆</a>安装<span id=\"font-red\">ssr</span></h2>\n<p>桌面客户端下载：<a href=\"https://github.com/erguotou520/electron-ssr\" target=\"_blank\" rel=\"noopener\">地址</a></p>\n<p>参考：<a href=\"https://alanlee.fun/2018/05/18/ubuntu-ssr/\" target=\"_blank\" rel=\"noopener\">教程</a></p>\n<p>安装libsodium，用来支持chacha20系列加密方式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/libsodium.sh &amp;&amp; chmod +x libsodium.sh &amp;&amp; bash libsodium.sh</span><br></pre></td></tr></table></figure>\n<p><s>脚本来源：<a href=\"https://doubibackup.com/\" target=\"_blank\" rel=\"noopener\">逗比根据地</a></s><br>\n<img src=\"https://data.singlelovely.cn/images/20190313215256.png\" alt><br>\n注意：装完libsodium后需要重启系统</p>\n<h2 id=\"安装必备软件\"><a class=\"header-anchor\" href=\"#安装必备软件\">☆</a>安装必备软件</h2>\n<p>国外公司对Linux系统的支持还是比较好的，vscode、chrome等去官网下载deb包安装就行了</p>\n<h2 id=\"安装国内软件\"><a class=\"header-anchor\" href=\"#安装国内软件\">☆</a>安装国内软件</h2>\n<p>国内的一些常用软件，微信，QQ等对Ubuntu的支持并不友好，Ubuntu版维护停止在多年以前，大多数已经不能使用，网上多数解决办法是通过网页版，网页版界面不友好操作麻烦，在此使用deepin深度定制的wine安装包。</p>\n<p>github地址： <a href=\"https://github.com/wszqkzqk/deepin-wine-ubuntu\" target=\"_blank\" rel=\"noopener\">https://github.com/wszqkzqk/deepin-wine-ubuntu</a></p>\n<p>教程及演示： <a href=\"https://www.lulinux.com/archives/1319\" target=\"_blank\" rel=\"noopener\">https://www.lulinux.com/archives/1319</a></p>\n<p><img src=\"https://data.singlelovely.cn/images/20190329233059.png!CoverPicture\" alt></p>\n<p><img src=\"https://data.singlelovely.cn/images/20190329233016.png!CoverPicture\" alt></p>\n<h2 id=\"美化\"><a class=\"header-anchor\" href=\"#美化\">☆</a>美化</h2>\n<p><img src=\"https://data.singlelovely.cn/images/20190329232929.png!CoverPicture\" alt></p>\n<h3 id=\"终端及管理器安装\"><a class=\"header-anchor\" href=\"#终端及管理器安装\">☆</a>终端及管理器安装</h3>\n<p>打开终端，查看shell版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gnome-shell --version</span><br></pre></td></tr></table></figure>\n<p>如无gnome shell 使用下面命令安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install gnome-shell</span><br></pre></td></tr></table></figure>\n<p>然后安装 gnome-tweak 中文名为 优化</p>\n<p>使用下面命令安装，或者在Ubuntu软件搜索<span id=\"inline-green\">gnome-tweak</span>安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install gnome-tweak-tool</span><br></pre></td></tr></table></figure>\n<h3 id=\"gnome-tweak-插件安装\"><a class=\"header-anchor\" href=\"#gnome-tweak-插件安装\">☆</a>gnome-tweak 插件安装</h3>\n<ul>\n<li>通过Ubuntu软件商店搜索安装\n<ul>\n<li>速度较慢，不推荐此方法</li>\n</ul>\n</li>\n<li>通过<a href=\"extensions.gnome.org\">官网</a>下载\n<ul>\n<li>chrome浏览器需到应用商店安装 <span id=\"inline-green\">GNOME Shell integration</span> 扩展程序</li>\n<li>火狐浏览器根据页面提示执行</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"推荐的插件\"><a class=\"header-anchor\" href=\"#推荐的插件\">☆</a>推荐的插件</h3>\n<ul>\n<li>User Themes: 作用是从用户目录加载主题</li>\n<li>Dash to Dock : 作用是制定Dock和Dash\n<ul>\n<li>主题图标<a href=\"https://www.gnome-look.org/\" target=\"_blank\" rel=\"noopener\">下载</a></li>\n<li>主题目录：/usr/share/themes</li>\n<li>sell主题目录：/usr/share/gnome-shell</li>\n<li>图标包目录：/usr/share/icons</li>\n</ul>\n</li>\n<li>TopIcons Plus : 起到了任务栏的作用,用来解决上面wine程序任务栏图标问题</li>\n<li>Gnome-shell Extensions ：通过Ubuntu软件商店安装 插件集合，一次性安装多个常用插件</li>\n</ul>\n<p><img src=\"https://data.singlelovely.cn/images/20190313215118.png\" alt><br>\n<img src=\"https://data.singlelovely.cn/images/20190313215028.png\" alt></p>\n<h3 id=\"参考教程\"><a class=\"header-anchor\" href=\"#参考教程\">☆</a>参考教程</h3>\n<p><a href=\"https://blog.csdn.net/weixin_38233274/article/details/80782483\" target=\"_blank\" rel=\"noopener\">Ubuntu18.04美化及常用软件安装</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=B6oCQit90M8\" target=\"_blank\" rel=\"noopener\">如何让Ubuntu美如画</a></p>\n<p><a href=\"https://linux.cn/article-9447-1.html?pr\" target=\"_blank\" rel=\"noopener\">GNOME Shell 详细指南</a></p>\n<h2 id=\"网易云的安装及踩坑\"><a class=\"header-anchor\" href=\"#网易云的安装及踩坑\">☆</a>网易云的安装及踩坑</h2>\n<p>之所以要单独写一个网易云，实在是因为坑太多了，记录一下，以防万一</p>\n<h3 id=\"安装\"><a class=\"header-anchor\" href=\"#安装\">☆</a>安装</h3>\n<p>去官网下载安装包，通过<span id=\"inline-blue\">sudo dpkg -i</span>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i netease-cloud-music_1.1.0_amd64_ubuntu.deb</span><br></pre></td></tr></table></figure>\n<p>上面的操作可能会出错，一般来说就是依赖的软件环境不完整，执行以下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get -f install</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动\"><a class=\"header-anchor\" href=\"#启动\">☆</a>启动</h3>\n<p>在软件中能看到网易云音乐的图标，可是点击运行之后却没有任何窗口出现。</p>\n<p>通过终端进行启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netease-cloud-music</span><br></pre></td></tr></table></figure>\n<p>发现报错并卡住</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Gtk-Message: 12:02:46.607: Failed to load module <span class=\"string\">\"canberra-gtk-module\"</span></span><br></pre></td></tr></table></figure>\n<p>安装相应依赖，不安装依赖通过 <span id=\"inline-blue\">sudo netease-cloud-music</span> 也能启动，但是控制台会有报错信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libcanberra-gtk*</span><br></pre></td></tr></table></figure>\n<p>结果安装依赖后还是得通过 <span id=\"inline-blue\">sudo netease-cloud-music</span> 启动，并且不能关闭终端窗口</p>\n<h3 id=\"问题解决\"><a class=\"header-anchor\" href=\"#问题解决\">☆</a>问题解决</h3>\n<p>以上方法虽然能够使网易云音乐运行，但每次都需要打开一个终端不能关闭，让有轻微强迫症的我看了觉得很不舒服。</p>\n<div class=\"note success\">\n<span id=\"font-blue\">启动密籍：</span>双击网易云音乐图标后，点击关机，十秒内就出现界面（此方法实测可用）\n</div>\n<p>方法2(请自行测试)：<br>\n在~目录下新建一个脚本<span id=\"inline-blue\">.netease.sh</span>,该脚本的内容如下(注意更换password)：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"password\"</span> | sudo -S netease-cloud-music &amp;</span><br><span class=\"line\">sleep 0.1</span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br></pre></td></tr></table></figure>\n<p>编辑~/.bashrc，在末尾增加了一行：</p>\n<blockquote>\n<p>alisa netease=&quot;. .netease.sh&quot;</p>\n</blockquote>\n<h2 id=\"deb包安装方式\"><a class=\"header-anchor\" href=\"#deb包安装方式\">☆</a>deb包安装方式</h2>\n<ul>\n<li>\n<p>双击打开安装</p>\n<ul>\n<li>通过Ubuntu自带的软件管理器安装</li>\n<li>容易出现依赖错误</li>\n<li>安装速度慢</li>\n<li>出错后报错信息不明确</li>\n</ul>\n</li>\n<li>\n<p>通过命令 <span id=\"inline-blue\">sudo dpkg -i</span> 安装</p>\n</li>\n</ul>\n<h2 id=\"双系统下无法访问win磁盘问题\"><a class=\"header-anchor\" href=\"#双系统下无法访问win磁盘问题\">☆</a>双系统下无法访问win磁盘问题</h2>\n<h3 id=\"方法一\"><a class=\"header-anchor\" href=\"#方法一\">☆</a>方法一</h3>\n<p>通过win系统重启进入ubuntu系统</p>\n<h3 id=\"方法二\"><a class=\"header-anchor\" href=\"#方法二\">☆</a>方法二</h3>\n<p>执行以下命令,记得加磁盘分区号(如果执行前已挂载磁盘需要先卸载，执行完毕重新挂载即可)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ntfsfix /dev/sda  or   sudo ntfsfix /dev/nvmeOn</span><br></pre></td></tr></table></figure>\n<h2 id=\"pppoe-拨号上网\"><a class=\"header-anchor\" href=\"#pppoe-拨号上网\">☆</a>PPPoE 拨号上网</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 pppoeconf</span></span><br><span class=\"line\">sudo apt install pppoeconf</span><br><span class=\"line\"><span class=\"comment\"># 配置</span></span><br><span class=\"line\">sudo pppoeconf</span><br><span class=\"line\"><span class=\"comment\"># 手动连接</span></span><br><span class=\"line\">sudo pon dsl-provider</span><br><span class=\"line\"><span class=\"comment\"># 手动断开</span></span><br><span class=\"line\">sudo poff dsl-provider</span><br><span class=\"line\"><span class=\"comment\"># 查看状态</span></span><br><span class=\"line\">sudo plog</span><br><span class=\"line\"><span class=\"comment\"># 查看接口信息</span></span><br><span class=\"line\">sudo ip addr show ppp0</span><br></pre></td></tr></table></figure>\n<p>注意：不适用于需要客户端的登陆方式，因为客户端一般都有二次验证</p>\n","site":{"data":{}},"length":3507,"excerpt":"","more":"<h2 id=\"换源\"><a class=\"header-anchor\" href=\"#换源\">☆</a>换源</h2>\n<p>Ubuntu18.04国内版默认的源地址为 <a href=\"http://cn.archive.ubuntu.com\" target=\"_blank\" rel=\"noopener\">cn.archive.ubuntu.com</a> ， ping结果显示归属地为英国，速度较慢，需要更换为国内的镜像地址。<br>\n使用如下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//得到系统版本代号，防止更换错误</span><br><span class=\"line\">lsb_release -c  </span><br><span class=\"line\"></span><br><span class=\"line\">//备份原有源</span><br><span class=\"line\">cp /etc/apt/sources.list /etc/apt/sources.list.backup</span><br></pre></td></tr></table></figure>\n<p>清华大学镜像站： <a href=\"https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/\" target=\"_blank\" rel=\"noopener\">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/</a></p>\n<p>阿里源</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class=\"line\">deb http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class=\"line\">deb http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class=\"line\">deb http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class=\"line\">deb http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class=\"line\">deb-src http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class=\"line\">deb-src http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class=\"line\">deb-src http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class=\"line\">deb-src http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class=\"line\">deb-src http:<span class=\"comment\">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br></pre></td></tr></table></figure>\n<p>更换完成后执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装-span-id-font-red-ssr-span\"><a class=\"header-anchor\" href=\"#安装-span-id-font-red-ssr-span\">☆</a>安装<span id=\"font-red\">ssr</span></h2>\n<p>桌面客户端下载：<a href=\"https://github.com/erguotou520/electron-ssr\" target=\"_blank\" rel=\"noopener\">地址</a></p>\n<p>参考：<a href=\"https://alanlee.fun/2018/05/18/ubuntu-ssr/\" target=\"_blank\" rel=\"noopener\">教程</a></p>\n<p>安装libsodium，用来支持chacha20系列加密方式</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/libsodium.sh &amp;&amp; chmod +x libsodium.sh &amp;&amp; bash libsodium.sh</span><br></pre></td></tr></table></figure>\n<p><s>脚本来源：<a href=\"https://doubibackup.com/\" target=\"_blank\" rel=\"noopener\">逗比根据地</a></s><br>\n<img src=\"https://data.singlelovely.cn/images/20190313215256.png\" alt><br>\n注意：装完libsodium后需要重启系统</p>\n<h2 id=\"安装必备软件\"><a class=\"header-anchor\" href=\"#安装必备软件\">☆</a>安装必备软件</h2>\n<p>国外公司对Linux系统的支持还是比较好的，vscode、chrome等去官网下载deb包安装就行了</p>\n<h2 id=\"安装国内软件\"><a class=\"header-anchor\" href=\"#安装国内软件\">☆</a>安装国内软件</h2>\n<p>国内的一些常用软件，微信，QQ等对Ubuntu的支持并不友好，Ubuntu版维护停止在多年以前，大多数已经不能使用，网上多数解决办法是通过网页版，网页版界面不友好操作麻烦，在此使用deepin深度定制的wine安装包。</p>\n<p>github地址： <a href=\"https://github.com/wszqkzqk/deepin-wine-ubuntu\" target=\"_blank\" rel=\"noopener\">https://github.com/wszqkzqk/deepin-wine-ubuntu</a></p>\n<p>教程及演示： <a href=\"https://www.lulinux.com/archives/1319\" target=\"_blank\" rel=\"noopener\">https://www.lulinux.com/archives/1319</a></p>\n<p><img src=\"https://data.singlelovely.cn/images/20190329233059.png!CoverPicture\" alt></p>\n<p><img src=\"https://data.singlelovely.cn/images/20190329233016.png!CoverPicture\" alt></p>\n<h2 id=\"美化\"><a class=\"header-anchor\" href=\"#美化\">☆</a>美化</h2>\n<p><img src=\"https://data.singlelovely.cn/images/20190329232929.png!CoverPicture\" alt></p>\n<h3 id=\"终端及管理器安装\"><a class=\"header-anchor\" href=\"#终端及管理器安装\">☆</a>终端及管理器安装</h3>\n<p>打开终端，查看shell版本</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gnome-shell --version</span><br></pre></td></tr></table></figure>\n<p>如无gnome shell 使用下面命令安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install gnome-shell</span><br></pre></td></tr></table></figure>\n<p>然后安装 gnome-tweak 中文名为 优化</p>\n<p>使用下面命令安装，或者在Ubuntu软件搜索<span id=\"inline-green\">gnome-tweak</span>安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install gnome-tweak-tool</span><br></pre></td></tr></table></figure>\n<h3 id=\"gnome-tweak-插件安装\"><a class=\"header-anchor\" href=\"#gnome-tweak-插件安装\">☆</a>gnome-tweak 插件安装</h3>\n<ul>\n<li>通过Ubuntu软件商店搜索安装\n<ul>\n<li>速度较慢，不推荐此方法</li>\n</ul>\n</li>\n<li>通过<a href=\"extensions.gnome.org\">官网</a>下载\n<ul>\n<li>chrome浏览器需到应用商店安装 <span id=\"inline-green\">GNOME Shell integration</span> 扩展程序</li>\n<li>火狐浏览器根据页面提示执行</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"推荐的插件\"><a class=\"header-anchor\" href=\"#推荐的插件\">☆</a>推荐的插件</h3>\n<ul>\n<li>User Themes: 作用是从用户目录加载主题</li>\n<li>Dash to Dock : 作用是制定Dock和Dash\n<ul>\n<li>主题图标<a href=\"https://www.gnome-look.org/\" target=\"_blank\" rel=\"noopener\">下载</a></li>\n<li>主题目录：/usr/share/themes</li>\n<li>sell主题目录：/usr/share/gnome-shell</li>\n<li>图标包目录：/usr/share/icons</li>\n</ul>\n</li>\n<li>TopIcons Plus : 起到了任务栏的作用,用来解决上面wine程序任务栏图标问题</li>\n<li>Gnome-shell Extensions ：通过Ubuntu软件商店安装 插件集合，一次性安装多个常用插件</li>\n</ul>\n<p><img src=\"https://data.singlelovely.cn/images/20190313215118.png\" alt><br>\n<img src=\"https://data.singlelovely.cn/images/20190313215028.png\" alt></p>\n<h3 id=\"参考教程\"><a class=\"header-anchor\" href=\"#参考教程\">☆</a>参考教程</h3>\n<p><a href=\"https://blog.csdn.net/weixin_38233274/article/details/80782483\" target=\"_blank\" rel=\"noopener\">Ubuntu18.04美化及常用软件安装</a></p>\n<p><a href=\"https://www.youtube.com/watch?v=B6oCQit90M8\" target=\"_blank\" rel=\"noopener\">如何让Ubuntu美如画</a></p>\n<p><a href=\"https://linux.cn/article-9447-1.html?pr\" target=\"_blank\" rel=\"noopener\">GNOME Shell 详细指南</a></p>\n<h2 id=\"网易云的安装及踩坑\"><a class=\"header-anchor\" href=\"#网易云的安装及踩坑\">☆</a>网易云的安装及踩坑</h2>\n<p>之所以要单独写一个网易云，实在是因为坑太多了，记录一下，以防万一</p>\n<h3 id=\"安装\"><a class=\"header-anchor\" href=\"#安装\">☆</a>安装</h3>\n<p>去官网下载安装包，通过<span id=\"inline-blue\">sudo dpkg -i</span>安装</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo dpkg -i netease-cloud-music_1.1.0_amd64_ubuntu.deb</span><br></pre></td></tr></table></figure>\n<p>上面的操作可能会出错，一般来说就是依赖的软件环境不完整，执行以下命令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get -f install</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动\"><a class=\"header-anchor\" href=\"#启动\">☆</a>启动</h3>\n<p>在软件中能看到网易云音乐的图标，可是点击运行之后却没有任何窗口出现。</p>\n<p>通过终端进行启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netease-cloud-music</span><br></pre></td></tr></table></figure>\n<p>发现报错并卡住</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Gtk-Message: 12:02:46.607: Failed to load module <span class=\"string\">\"canberra-gtk-module\"</span></span><br></pre></td></tr></table></figure>\n<p>安装相应依赖，不安装依赖通过 <span id=\"inline-blue\">sudo netease-cloud-music</span> 也能启动，但是控制台会有报错信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libcanberra-gtk*</span><br></pre></td></tr></table></figure>\n<p>结果安装依赖后还是得通过 <span id=\"inline-blue\">sudo netease-cloud-music</span> 启动，并且不能关闭终端窗口</p>\n<h3 id=\"问题解决\"><a class=\"header-anchor\" href=\"#问题解决\">☆</a>问题解决</h3>\n<p>以上方法虽然能够使网易云音乐运行，但每次都需要打开一个终端不能关闭，让有轻微强迫症的我看了觉得很不舒服。</p>\n<div class=\"note success\">\n<span id=\"font-blue\">启动密籍：</span>双击网易云音乐图标后，点击关机，十秒内就出现界面（此方法实测可用）\n</div>\n<p>方法2(请自行测试)：<br>\n在~目录下新建一个脚本<span id=\"inline-blue\">.netease.sh</span>,该脚本的内容如下(注意更换password)：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"password\"</span> | sudo -S netease-cloud-music &amp;</span><br><span class=\"line\">sleep 0.1</span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br></pre></td></tr></table></figure>\n<p>编辑~/.bashrc，在末尾增加了一行：</p>\n<blockquote>\n<p>alisa netease=&quot;. .netease.sh&quot;</p>\n</blockquote>\n<h2 id=\"deb包安装方式\"><a class=\"header-anchor\" href=\"#deb包安装方式\">☆</a>deb包安装方式</h2>\n<ul>\n<li>\n<p>双击打开安装</p>\n<ul>\n<li>通过Ubuntu自带的软件管理器安装</li>\n<li>容易出现依赖错误</li>\n<li>安装速度慢</li>\n<li>出错后报错信息不明确</li>\n</ul>\n</li>\n<li>\n<p>通过命令 <span id=\"inline-blue\">sudo dpkg -i</span> 安装</p>\n</li>\n</ul>\n<h2 id=\"双系统下无法访问win磁盘问题\"><a class=\"header-anchor\" href=\"#双系统下无法访问win磁盘问题\">☆</a>双系统下无法访问win磁盘问题</h2>\n<h3 id=\"方法一\"><a class=\"header-anchor\" href=\"#方法一\">☆</a>方法一</h3>\n<p>通过win系统重启进入ubuntu系统</p>\n<h3 id=\"方法二\"><a class=\"header-anchor\" href=\"#方法二\">☆</a>方法二</h3>\n<p>执行以下命令,记得加磁盘分区号(如果执行前已挂载磁盘需要先卸载，执行完毕重新挂载即可)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ntfsfix /dev/sda  or   sudo ntfsfix /dev/nvmeOn</span><br></pre></td></tr></table></figure>\n<h2 id=\"pppoe-拨号上网\"><a class=\"header-anchor\" href=\"#pppoe-拨号上网\">☆</a>PPPoE 拨号上网</h2>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 pppoeconf</span></span><br><span class=\"line\">sudo apt install pppoeconf</span><br><span class=\"line\"><span class=\"comment\"># 配置</span></span><br><span class=\"line\">sudo pppoeconf</span><br><span class=\"line\"><span class=\"comment\"># 手动连接</span></span><br><span class=\"line\">sudo pon dsl-provider</span><br><span class=\"line\"><span class=\"comment\"># 手动断开</span></span><br><span class=\"line\">sudo poff dsl-provider</span><br><span class=\"line\"><span class=\"comment\"># 查看状态</span></span><br><span class=\"line\">sudo plog</span><br><span class=\"line\"><span class=\"comment\"># 查看接口信息</span></span><br><span class=\"line\">sudo ip addr show ppp0</span><br></pre></td></tr></table></figure>\n<p>注意：不适用于需要客户端的登陆方式，因为客户端一般都有二次验证</p>\n"},{"title":"中国穷人，越来越配不上梦想了？","copyright":false,"abbrlink":"a033ab3f","date":"2018-03-27T13:58:45.000Z","_content":"\n\n{% meting \"1769121887\" \"xiami\" \"song\" \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#1E90FF\"%}\n\n![][1]\n有段时间我看到一个选题，问：身为 90 后的你，是如何赚到人生第一个一百万的？\n \n我想：这选题真励志。\n \n我开始去采访我认识的每个赚过一百万的 90 后朋友，有个哥们给我留下极为深刻的印象。\n \n他刚毕业时就出来创业，做了个没人知道的摄影类 app，烧钱烧得很厉害，所有人都以为他肯定失败了。\n \n在绝境时，他的app连同公司被收购了，赚了 200 万。\n \n虽然创业没有成功，但对于不少创业者来说，被大公司收购也是一种成功。\n \n<font color=#FF8247> 我问他：你是说服他们买你的公司的？</font>\n \n<font color=#FF8247>他说：我爸买的，把我狠狠骂了一顿。</font>\n \n这选题，真不励志！\n \n我愤然终止了这个选题的操作，生怕心脏再度遭到暴击。\n \n他并不是我们想象中的那种草包富二代，后来他像爸爸又借了笔钱，做了摄影工作室，不靠融资，仅靠做 app 时积累下的摄影师人脉和摄影技术，东山再起，月利润近十万元。\n \n虽然这些钱在他爸爸看来根本就是浪费时间，但他还是靠自己喜欢的事情活了下去。\n \n我有时候会很羡慕他，能有足够的资本为自己的理想试错。相比下来，我的创业是条不能回头的路，一旦失败，就几乎没了重头再来的可能性。\n \n<font color=#FF8247>更糟心的是，那些富二代真给你比起专业能力，还真有可能比你强出一大截。</font>\n![ ][2]\n<center>01</center >\n大学时，我想要组乐队，认识了很多玩音乐的朋友。\n \n有个哥们吉他非常厉害，每逢他 solo 时，我们其他玩吉他的人都聚精会神听每个音，目不转睛看他的指法。\n \n他特别穷，中学时他就想考音乐学院，可是乐器课、声乐课都太贵了，他家掏不起一节 300 元的声乐课，更买不起钢琴。\n \n他不死心，夜里去捡破烂，捡了不知多久，凑够了 350 块，买了把入门吉他，琴弦、音质都特别差。\n \n买回吉他的他，欣喜若狂，在电脑课时偷偷拿出纸笔，誊写吉他的六线谱，私下自学，想尽办法去练习音乐学院需要考的科目和技能。\n \n考试时，他败在了视唱练耳上，自学成才的人，很难过这一关。\n \n他读了大学后，把勤工俭学赚的钱都投入到学音乐上，大二时就能在酒吧卖唱赚钱，一晚上八首歌，一首歌才十五块，他依然唱得很开心。\n \n后来他商演赚的钱多了起来，他也开始写歌，我们都觉得：他一定能在音乐这条路上走很远。\n \n凭借天赋和努力，他申请成功了国外音乐学院的研究生，他存够了钱，打算在音乐这条路上走更远。\n然后……他爸爸得了癌。\n \n他把钱全用去救爸爸了。\n \n包括卖掉了他攒了很久钱才买的吉他和钢琴。\n \n<font color=#FF8247>他是个遇见所有绝望事情都不会哭的纯爷们，卖吉他前一晚，他抱着吉他号啕大哭，哭了一整晚。</font>\n \n他知道他可能再也不能出国了，如果更惨一些，他可能这辈子都当不了音乐人了。\n \n<font color=#FF8247>仅仅因为穷，因为穷。</font>\n \n<font color=#FF8247>梦想就这样被轻易掠夺。</font>\n![](https://data.singlelovely.cn/xsj/2018/4/4/穷人梦想3.jpg)\n<center>02</center>\n依然是在大学时，我在网上写连载小说，进了个写作群，认识一个写东西很好的姑娘。\n \n姑娘学历虽然只有专科，但是在写作上特别有天赋，大一时就跟某女频网站签了约，开了 v 文，月入四五千。\n \n她爸妈知道时可开心了，觉得培养出一个作家女儿来。她爸妈做梦都在想：女儿成为中国著名作家，这样就在村里人面前长脸了。\n \n可惜，女儿写的是耽美文，在净网行动时，她的小说被封了。\n \n女儿安慰爸妈说：没关系，我写言情小说也能红的。\n \n鲜有网络小说作者能转型成功，更何况，她也不是网文大神。\n \n连写了两本，都人气低迷，只能拿几百块的全勤奖。\n \n后来，她看到我做公众号好像收益还不错，于是放弃了网文，也开始做自媒体。\n \n虽然同样是写字，但隔行如隔山，自媒体除了靠强悍的持续性创作能力外，还需要对互联网、运营、营销有足够多的了解。\n \n她做了一年，阅读量仍然只有一两千，接不到什么好广告，能接的都是什么黑五类、性保健品这样很 low 的。\n \n那时她已经毕业很久，坚持着日更网文和日更自媒体，钱虽不多，但养活自己没问题，她父母也很支持她的写作梦。\n \n虽然，她如今的写作，是无意义的消耗才能。\n \n她妈妈常常跟她念叨：以后红了，采访时带妈妈一起上电视台。\n \n她经常跟我提起这个事，每每听到，我都觉得世界可真残忍。\n \n<font color=#FF8247>我们不就是为这些明知实现不了的美好梦想活着吗？</font>\n \n后来，有个自称是北京影视公司的找到她，让她写剧本，说是电视剧能在湖南卫视上。\n \n她那个高兴啊，连合同都没看仔细，一开心就跑去北京了。\n \n她妈妈也在村里开心得逢人就说：我女儿写的剧以后是要在湖南台播的！\n \n再后来的事，我想你们都能猜到，她被骗了，公司只是个做低俗广告的，还是为了洗钱的皮包公司，她被骗去写视频文案，拖了半年工资。\n \n她想打官司，才发现没钱，也不知道告谁。\n \n她妈妈再也不敢在村里提湖南台这几个字，看电视时调到湖南台立刻调开，但村民总爱拿这件事调侃她父母，她妈妈每次被人嘲笑后，就在家里抹眼泪。\n \n抹完眼泪，打电话给女儿：\n \n钱不够妈妈还有些存款，你要争口气，接着写下去，妈妈支持你的梦想。\n \n她跟我说：我恨死自己了，不仅没出息，还害得我妈在村里抬不起头来。\n \n说完，哭得上气不接下气。\n \n<font color=#FF8247>梦想这个词，怎么就那么贵啊。</font>\n\n![ ](https://data.singlelovely.cn/xsj/2018/4/4/穷人梦想4.jpg)\n<center>03</center >\n寒门难出贵子，在这个时代慢慢成为不争的事实了，仅有少数穷人的后代，可以凭借自己的努力跨越阶级。\n \n扎克伯格也在演讲中承认，他感谢自己生活在一个不愁吃穿能让他学习编程的家庭，如果他从小就要每天为明天有没有吃的而烦恼，为明天有口吃的去做很多无用的事，他也不敢确定自己未来会有如此的成就。\n \n<font color=#FF8247>不知你感觉到没，在阶级越来越固化的时代，有钱人越来越容易实现自己的梦想，穷人却越来越追求不上自己的梦想。</font>\n \n<font color=#FF8247>在追求梦想的路上，穷人一旦失败，会跌入比以往更惨烈的绝望局面。</font>\n \n我们便是活在如此残忍的时代里。\n \n可我仍觉得，穷人不是配不上梦想，只是梦想对他人而言太艰难，<font color=#FF8247>在中国，没有人比穷人更配得上梦想，谁也不能剥夺做梦的权利，谁都有梦想成真的可能性。</font>\n \n<font color=#FF8247>为黑暗中隐约出现的一道光奋力往前奔跑，看见光明那瞬间又会坠入深渊。</font>\n \n<font color=#FF8247>即便如此，也要为那束光，往前跑。</font>\n\n\n----------\n本文转载自：简族\n\n----------\n\n\n[1]:https://data.singlelovely.cn/xsj/2018/4/4/穷人梦想1.gif\n[2]:https://data.singlelovely.cn/xsj/2018/4/4/穷人梦想2.jpg","source":"_posts/中国穷人，越来越配不上梦想了？.md","raw":"---\ntitle: 中国穷人，越来越配不上梦想了？\ntags:\n  - 梦想\n  - 生活\ncategories: 闲读\ncopyright: false\nabbrlink: a033ab3f\ndate: 2018-03-27 21:58:45\n---\n\n\n{% meting \"1769121887\" \"xiami\" \"song\" \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#1E90FF\"%}\n\n![][1]\n有段时间我看到一个选题，问：身为 90 后的你，是如何赚到人生第一个一百万的？\n \n我想：这选题真励志。\n \n我开始去采访我认识的每个赚过一百万的 90 后朋友，有个哥们给我留下极为深刻的印象。\n \n他刚毕业时就出来创业，做了个没人知道的摄影类 app，烧钱烧得很厉害，所有人都以为他肯定失败了。\n \n在绝境时，他的app连同公司被收购了，赚了 200 万。\n \n虽然创业没有成功，但对于不少创业者来说，被大公司收购也是一种成功。\n \n<font color=#FF8247> 我问他：你是说服他们买你的公司的？</font>\n \n<font color=#FF8247>他说：我爸买的，把我狠狠骂了一顿。</font>\n \n这选题，真不励志！\n \n我愤然终止了这个选题的操作，生怕心脏再度遭到暴击。\n \n他并不是我们想象中的那种草包富二代，后来他像爸爸又借了笔钱，做了摄影工作室，不靠融资，仅靠做 app 时积累下的摄影师人脉和摄影技术，东山再起，月利润近十万元。\n \n虽然这些钱在他爸爸看来根本就是浪费时间，但他还是靠自己喜欢的事情活了下去。\n \n我有时候会很羡慕他，能有足够的资本为自己的理想试错。相比下来，我的创业是条不能回头的路，一旦失败，就几乎没了重头再来的可能性。\n \n<font color=#FF8247>更糟心的是，那些富二代真给你比起专业能力，还真有可能比你强出一大截。</font>\n![ ][2]\n<center>01</center >\n大学时，我想要组乐队，认识了很多玩音乐的朋友。\n \n有个哥们吉他非常厉害，每逢他 solo 时，我们其他玩吉他的人都聚精会神听每个音，目不转睛看他的指法。\n \n他特别穷，中学时他就想考音乐学院，可是乐器课、声乐课都太贵了，他家掏不起一节 300 元的声乐课，更买不起钢琴。\n \n他不死心，夜里去捡破烂，捡了不知多久，凑够了 350 块，买了把入门吉他，琴弦、音质都特别差。\n \n买回吉他的他，欣喜若狂，在电脑课时偷偷拿出纸笔，誊写吉他的六线谱，私下自学，想尽办法去练习音乐学院需要考的科目和技能。\n \n考试时，他败在了视唱练耳上，自学成才的人，很难过这一关。\n \n他读了大学后，把勤工俭学赚的钱都投入到学音乐上，大二时就能在酒吧卖唱赚钱，一晚上八首歌，一首歌才十五块，他依然唱得很开心。\n \n后来他商演赚的钱多了起来，他也开始写歌，我们都觉得：他一定能在音乐这条路上走很远。\n \n凭借天赋和努力，他申请成功了国外音乐学院的研究生，他存够了钱，打算在音乐这条路上走更远。\n然后……他爸爸得了癌。\n \n他把钱全用去救爸爸了。\n \n包括卖掉了他攒了很久钱才买的吉他和钢琴。\n \n<font color=#FF8247>他是个遇见所有绝望事情都不会哭的纯爷们，卖吉他前一晚，他抱着吉他号啕大哭，哭了一整晚。</font>\n \n他知道他可能再也不能出国了，如果更惨一些，他可能这辈子都当不了音乐人了。\n \n<font color=#FF8247>仅仅因为穷，因为穷。</font>\n \n<font color=#FF8247>梦想就这样被轻易掠夺。</font>\n![](https://data.singlelovely.cn/xsj/2018/4/4/穷人梦想3.jpg)\n<center>02</center>\n依然是在大学时，我在网上写连载小说，进了个写作群，认识一个写东西很好的姑娘。\n \n姑娘学历虽然只有专科，但是在写作上特别有天赋，大一时就跟某女频网站签了约，开了 v 文，月入四五千。\n \n她爸妈知道时可开心了，觉得培养出一个作家女儿来。她爸妈做梦都在想：女儿成为中国著名作家，这样就在村里人面前长脸了。\n \n可惜，女儿写的是耽美文，在净网行动时，她的小说被封了。\n \n女儿安慰爸妈说：没关系，我写言情小说也能红的。\n \n鲜有网络小说作者能转型成功，更何况，她也不是网文大神。\n \n连写了两本，都人气低迷，只能拿几百块的全勤奖。\n \n后来，她看到我做公众号好像收益还不错，于是放弃了网文，也开始做自媒体。\n \n虽然同样是写字，但隔行如隔山，自媒体除了靠强悍的持续性创作能力外，还需要对互联网、运营、营销有足够多的了解。\n \n她做了一年，阅读量仍然只有一两千，接不到什么好广告，能接的都是什么黑五类、性保健品这样很 low 的。\n \n那时她已经毕业很久，坚持着日更网文和日更自媒体，钱虽不多，但养活自己没问题，她父母也很支持她的写作梦。\n \n虽然，她如今的写作，是无意义的消耗才能。\n \n她妈妈常常跟她念叨：以后红了，采访时带妈妈一起上电视台。\n \n她经常跟我提起这个事，每每听到，我都觉得世界可真残忍。\n \n<font color=#FF8247>我们不就是为这些明知实现不了的美好梦想活着吗？</font>\n \n后来，有个自称是北京影视公司的找到她，让她写剧本，说是电视剧能在湖南卫视上。\n \n她那个高兴啊，连合同都没看仔细，一开心就跑去北京了。\n \n她妈妈也在村里开心得逢人就说：我女儿写的剧以后是要在湖南台播的！\n \n再后来的事，我想你们都能猜到，她被骗了，公司只是个做低俗广告的，还是为了洗钱的皮包公司，她被骗去写视频文案，拖了半年工资。\n \n她想打官司，才发现没钱，也不知道告谁。\n \n她妈妈再也不敢在村里提湖南台这几个字，看电视时调到湖南台立刻调开，但村民总爱拿这件事调侃她父母，她妈妈每次被人嘲笑后，就在家里抹眼泪。\n \n抹完眼泪，打电话给女儿：\n \n钱不够妈妈还有些存款，你要争口气，接着写下去，妈妈支持你的梦想。\n \n她跟我说：我恨死自己了，不仅没出息，还害得我妈在村里抬不起头来。\n \n说完，哭得上气不接下气。\n \n<font color=#FF8247>梦想这个词，怎么就那么贵啊。</font>\n\n![ ](https://data.singlelovely.cn/xsj/2018/4/4/穷人梦想4.jpg)\n<center>03</center >\n寒门难出贵子，在这个时代慢慢成为不争的事实了，仅有少数穷人的后代，可以凭借自己的努力跨越阶级。\n \n扎克伯格也在演讲中承认，他感谢自己生活在一个不愁吃穿能让他学习编程的家庭，如果他从小就要每天为明天有没有吃的而烦恼，为明天有口吃的去做很多无用的事，他也不敢确定自己未来会有如此的成就。\n \n<font color=#FF8247>不知你感觉到没，在阶级越来越固化的时代，有钱人越来越容易实现自己的梦想，穷人却越来越追求不上自己的梦想。</font>\n \n<font color=#FF8247>在追求梦想的路上，穷人一旦失败，会跌入比以往更惨烈的绝望局面。</font>\n \n我们便是活在如此残忍的时代里。\n \n可我仍觉得，穷人不是配不上梦想，只是梦想对他人而言太艰难，<font color=#FF8247>在中国，没有人比穷人更配得上梦想，谁也不能剥夺做梦的权利，谁都有梦想成真的可能性。</font>\n \n<font color=#FF8247>为黑暗中隐约出现的一道光奋力往前奔跑，看见光明那瞬间又会坠入深渊。</font>\n \n<font color=#FF8247>即便如此，也要为那束光，往前跑。</font>\n\n\n----------\n本文转载自：简族\n\n----------\n\n\n[1]:https://data.singlelovely.cn/xsj/2018/4/4/穷人梦想1.gif\n[2]:https://data.singlelovely.cn/xsj/2018/4/4/穷人梦想2.jpg","slug":"中国穷人，越来越配不上梦想了？","published":1,"updated":"2020-02-20T06:06:59.414Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3k0018fkupxt3fx5rz","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-bEfpnAsR\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1769121887\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#1E90FF\"></div>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/4/%E7%A9%B7%E4%BA%BA%E6%A2%A6%E6%83%B31.gif\" alt><br>\n有段时间我看到一个选题，问：身为 90 后的你，是如何赚到人生第一个一百万的？</p>\n<p>我想：这选题真励志。</p>\n<p>我开始去采访我认识的每个赚过一百万的 90 后朋友，有个哥们给我留下极为深刻的印象。</p>\n<p>他刚毕业时就出来创业，做了个没人知道的摄影类 app，烧钱烧得很厉害，所有人都以为他肯定失败了。</p>\n<p>在绝境时，他的app连同公司被收购了，赚了 200 万。</p>\n<p>虽然创业没有成功，但对于不少创业者来说，被大公司收购也是一种成功。</p>\n<p><font color=\"#FF8247\"> 我问他：你是说服他们买你的公司的？</font></p>\n<p><font color=\"#FF8247\">他说：我爸买的，把我狠狠骂了一顿。</font></p>\n<p>这选题，真不励志！</p>\n<p>我愤然终止了这个选题的操作，生怕心脏再度遭到暴击。</p>\n<p>他并不是我们想象中的那种草包富二代，后来他像爸爸又借了笔钱，做了摄影工作室，不靠融资，仅靠做 app 时积累下的摄影师人脉和摄影技术，东山再起，月利润近十万元。</p>\n<p>虽然这些钱在他爸爸看来根本就是浪费时间，但他还是靠自己喜欢的事情活了下去。</p>\n<p>我有时候会很羡慕他，能有足够的资本为自己的理想试错。相比下来，我的创业是条不能回头的路，一旦失败，就几乎没了重头再来的可能性。</p>\n<p><font color=\"#FF8247\">更糟心的是，那些富二代真给你比起专业能力，还真有可能比你强出一大截。</font><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/4/%E7%A9%B7%E4%BA%BA%E6%A2%A6%E6%83%B32.jpg\" alt=\" \"></p>\n<center>01</center>\n大学时，我想要组乐队，认识了很多玩音乐的朋友。\n<p>有个哥们吉他非常厉害，每逢他 solo 时，我们其他玩吉他的人都聚精会神听每个音，目不转睛看他的指法。</p>\n<p>他特别穷，中学时他就想考音乐学院，可是乐器课、声乐课都太贵了，他家掏不起一节 300 元的声乐课，更买不起钢琴。</p>\n<p>他不死心，夜里去捡破烂，捡了不知多久，凑够了 350 块，买了把入门吉他，琴弦、音质都特别差。</p>\n<p>买回吉他的他，欣喜若狂，在电脑课时偷偷拿出纸笔，誊写吉他的六线谱，私下自学，想尽办法去练习音乐学院需要考的科目和技能。</p>\n<p>考试时，他败在了视唱练耳上，自学成才的人，很难过这一关。</p>\n<p>他读了大学后，把勤工俭学赚的钱都投入到学音乐上，大二时就能在酒吧卖唱赚钱，一晚上八首歌，一首歌才十五块，他依然唱得很开心。</p>\n<p>后来他商演赚的钱多了起来，他也开始写歌，我们都觉得：他一定能在音乐这条路上走很远。</p>\n<p>凭借天赋和努力，他申请成功了国外音乐学院的研究生，他存够了钱，打算在音乐这条路上走更远。<br>\n然后……他爸爸得了癌。</p>\n<p>他把钱全用去救爸爸了。</p>\n<p>包括卖掉了他攒了很久钱才买的吉他和钢琴。</p>\n<p><font color=\"#FF8247\">他是个遇见所有绝望事情都不会哭的纯爷们，卖吉他前一晚，他抱着吉他号啕大哭，哭了一整晚。</font></p>\n<p>他知道他可能再也不能出国了，如果更惨一些，他可能这辈子都当不了音乐人了。</p>\n<p><font color=\"#FF8247\">仅仅因为穷，因为穷。</font></p>\n<p><font color=\"#FF8247\">梦想就这样被轻易掠夺。</font><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/4/%E7%A9%B7%E4%BA%BA%E6%A2%A6%E6%83%B33.jpg\" alt></p>\n<center>02</center>\n依然是在大学时，我在网上写连载小说，进了个写作群，认识一个写东西很好的姑娘。\n<p>姑娘学历虽然只有专科，但是在写作上特别有天赋，大一时就跟某女频网站签了约，开了 v 文，月入四五千。</p>\n<p>她爸妈知道时可开心了，觉得培养出一个作家女儿来。她爸妈做梦都在想：女儿成为中国著名作家，这样就在村里人面前长脸了。</p>\n<p>可惜，女儿写的是耽美文，在净网行动时，她的小说被封了。</p>\n<p>女儿安慰爸妈说：没关系，我写言情小说也能红的。</p>\n<p>鲜有网络小说作者能转型成功，更何况，她也不是网文大神。</p>\n<p>连写了两本，都人气低迷，只能拿几百块的全勤奖。</p>\n<p>后来，她看到我做公众号好像收益还不错，于是放弃了网文，也开始做自媒体。</p>\n<p>虽然同样是写字，但隔行如隔山，自媒体除了靠强悍的持续性创作能力外，还需要对互联网、运营、营销有足够多的了解。</p>\n<p>她做了一年，阅读量仍然只有一两千，接不到什么好广告，能接的都是什么黑五类、性保健品这样很 low 的。</p>\n<p>那时她已经毕业很久，坚持着日更网文和日更自媒体，钱虽不多，但养活自己没问题，她父母也很支持她的写作梦。</p>\n<p>虽然，她如今的写作，是无意义的消耗才能。</p>\n<p>她妈妈常常跟她念叨：以后红了，采访时带妈妈一起上电视台。</p>\n<p>她经常跟我提起这个事，每每听到，我都觉得世界可真残忍。</p>\n<p><font color=\"#FF8247\">我们不就是为这些明知实现不了的美好梦想活着吗？</font></p>\n<p>后来，有个自称是北京影视公司的找到她，让她写剧本，说是电视剧能在湖南卫视上。</p>\n<p>她那个高兴啊，连合同都没看仔细，一开心就跑去北京了。</p>\n<p>她妈妈也在村里开心得逢人就说：我女儿写的剧以后是要在湖南台播的！</p>\n<p>再后来的事，我想你们都能猜到，她被骗了，公司只是个做低俗广告的，还是为了洗钱的皮包公司，她被骗去写视频文案，拖了半年工资。</p>\n<p>她想打官司，才发现没钱，也不知道告谁。</p>\n<p>她妈妈再也不敢在村里提湖南台这几个字，看电视时调到湖南台立刻调开，但村民总爱拿这件事调侃她父母，她妈妈每次被人嘲笑后，就在家里抹眼泪。</p>\n<p>抹完眼泪，打电话给女儿：</p>\n<p>钱不够妈妈还有些存款，你要争口气，接着写下去，妈妈支持你的梦想。</p>\n<p>她跟我说：我恨死自己了，不仅没出息，还害得我妈在村里抬不起头来。</p>\n<p>说完，哭得上气不接下气。</p>\n<p><font color=\"#FF8247\">梦想这个词，怎么就那么贵啊。</font></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/4/%E7%A9%B7%E4%BA%BA%E6%A2%A6%E6%83%B34.jpg\" alt=\" \"></p>\n<center>03</center>\n寒门难出贵子，在这个时代慢慢成为不争的事实了，仅有少数穷人的后代，可以凭借自己的努力跨越阶级。\n<p>扎克伯格也在演讲中承认，他感谢自己生活在一个不愁吃穿能让他学习编程的家庭，如果他从小就要每天为明天有没有吃的而烦恼，为明天有口吃的去做很多无用的事，他也不敢确定自己未来会有如此的成就。</p>\n<p><font color=\"#FF8247\">不知你感觉到没，在阶级越来越固化的时代，有钱人越来越容易实现自己的梦想，穷人却越来越追求不上自己的梦想。</font></p>\n<p><font color=\"#FF8247\">在追求梦想的路上，穷人一旦失败，会跌入比以往更惨烈的绝望局面。</font></p>\n<p>我们便是活在如此残忍的时代里。</p>\n<p>可我仍觉得，穷人不是配不上梦想，只是梦想对他人而言太艰难，<font color=\"#FF8247\">在中国，没有人比穷人更配得上梦想，谁也不能剥夺做梦的权利，谁都有梦想成真的可能性。</font></p>\n<p><font color=\"#FF8247\">为黑暗中隐约出现的一道光奋力往前奔跑，看见光明那瞬间又会坠入深渊。</font></p>\n<p><font color=\"#FF8247\">即便如此，也要为那束光，往前跑。</font></p>\n<hr>\n<p>本文转载自：简族</p>\n<hr>\n","site":{"data":{}},"length":2288,"excerpt":"","more":"\n    <div id=\"aplayer-bEfpnAsR\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1769121887\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#1E90FF\"></div>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/4/%E7%A9%B7%E4%BA%BA%E6%A2%A6%E6%83%B31.gif\" alt><br>\n有段时间我看到一个选题，问：身为 90 后的你，是如何赚到人生第一个一百万的？</p>\n<p>我想：这选题真励志。</p>\n<p>我开始去采访我认识的每个赚过一百万的 90 后朋友，有个哥们给我留下极为深刻的印象。</p>\n<p>他刚毕业时就出来创业，做了个没人知道的摄影类 app，烧钱烧得很厉害，所有人都以为他肯定失败了。</p>\n<p>在绝境时，他的app连同公司被收购了，赚了 200 万。</p>\n<p>虽然创业没有成功，但对于不少创业者来说，被大公司收购也是一种成功。</p>\n<p><font color=\"#FF8247\"> 我问他：你是说服他们买你的公司的？</font></p>\n<p><font color=\"#FF8247\">他说：我爸买的，把我狠狠骂了一顿。</font></p>\n<p>这选题，真不励志！</p>\n<p>我愤然终止了这个选题的操作，生怕心脏再度遭到暴击。</p>\n<p>他并不是我们想象中的那种草包富二代，后来他像爸爸又借了笔钱，做了摄影工作室，不靠融资，仅靠做 app 时积累下的摄影师人脉和摄影技术，东山再起，月利润近十万元。</p>\n<p>虽然这些钱在他爸爸看来根本就是浪费时间，但他还是靠自己喜欢的事情活了下去。</p>\n<p>我有时候会很羡慕他，能有足够的资本为自己的理想试错。相比下来，我的创业是条不能回头的路，一旦失败，就几乎没了重头再来的可能性。</p>\n<p><font color=\"#FF8247\">更糟心的是，那些富二代真给你比起专业能力，还真有可能比你强出一大截。</font><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/4/%E7%A9%B7%E4%BA%BA%E6%A2%A6%E6%83%B32.jpg\" alt=\" \"></p>\n<center>01</center>\n大学时，我想要组乐队，认识了很多玩音乐的朋友。\n<p>有个哥们吉他非常厉害，每逢他 solo 时，我们其他玩吉他的人都聚精会神听每个音，目不转睛看他的指法。</p>\n<p>他特别穷，中学时他就想考音乐学院，可是乐器课、声乐课都太贵了，他家掏不起一节 300 元的声乐课，更买不起钢琴。</p>\n<p>他不死心，夜里去捡破烂，捡了不知多久，凑够了 350 块，买了把入门吉他，琴弦、音质都特别差。</p>\n<p>买回吉他的他，欣喜若狂，在电脑课时偷偷拿出纸笔，誊写吉他的六线谱，私下自学，想尽办法去练习音乐学院需要考的科目和技能。</p>\n<p>考试时，他败在了视唱练耳上，自学成才的人，很难过这一关。</p>\n<p>他读了大学后，把勤工俭学赚的钱都投入到学音乐上，大二时就能在酒吧卖唱赚钱，一晚上八首歌，一首歌才十五块，他依然唱得很开心。</p>\n<p>后来他商演赚的钱多了起来，他也开始写歌，我们都觉得：他一定能在音乐这条路上走很远。</p>\n<p>凭借天赋和努力，他申请成功了国外音乐学院的研究生，他存够了钱，打算在音乐这条路上走更远。<br>\n然后……他爸爸得了癌。</p>\n<p>他把钱全用去救爸爸了。</p>\n<p>包括卖掉了他攒了很久钱才买的吉他和钢琴。</p>\n<p><font color=\"#FF8247\">他是个遇见所有绝望事情都不会哭的纯爷们，卖吉他前一晚，他抱着吉他号啕大哭，哭了一整晚。</font></p>\n<p>他知道他可能再也不能出国了，如果更惨一些，他可能这辈子都当不了音乐人了。</p>\n<p><font color=\"#FF8247\">仅仅因为穷，因为穷。</font></p>\n<p><font color=\"#FF8247\">梦想就这样被轻易掠夺。</font><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/4/%E7%A9%B7%E4%BA%BA%E6%A2%A6%E6%83%B33.jpg\" alt></p>\n<center>02</center>\n依然是在大学时，我在网上写连载小说，进了个写作群，认识一个写东西很好的姑娘。\n<p>姑娘学历虽然只有专科，但是在写作上特别有天赋，大一时就跟某女频网站签了约，开了 v 文，月入四五千。</p>\n<p>她爸妈知道时可开心了，觉得培养出一个作家女儿来。她爸妈做梦都在想：女儿成为中国著名作家，这样就在村里人面前长脸了。</p>\n<p>可惜，女儿写的是耽美文，在净网行动时，她的小说被封了。</p>\n<p>女儿安慰爸妈说：没关系，我写言情小说也能红的。</p>\n<p>鲜有网络小说作者能转型成功，更何况，她也不是网文大神。</p>\n<p>连写了两本，都人气低迷，只能拿几百块的全勤奖。</p>\n<p>后来，她看到我做公众号好像收益还不错，于是放弃了网文，也开始做自媒体。</p>\n<p>虽然同样是写字，但隔行如隔山，自媒体除了靠强悍的持续性创作能力外，还需要对互联网、运营、营销有足够多的了解。</p>\n<p>她做了一年，阅读量仍然只有一两千，接不到什么好广告，能接的都是什么黑五类、性保健品这样很 low 的。</p>\n<p>那时她已经毕业很久，坚持着日更网文和日更自媒体，钱虽不多，但养活自己没问题，她父母也很支持她的写作梦。</p>\n<p>虽然，她如今的写作，是无意义的消耗才能。</p>\n<p>她妈妈常常跟她念叨：以后红了，采访时带妈妈一起上电视台。</p>\n<p>她经常跟我提起这个事，每每听到，我都觉得世界可真残忍。</p>\n<p><font color=\"#FF8247\">我们不就是为这些明知实现不了的美好梦想活着吗？</font></p>\n<p>后来，有个自称是北京影视公司的找到她，让她写剧本，说是电视剧能在湖南卫视上。</p>\n<p>她那个高兴啊，连合同都没看仔细，一开心就跑去北京了。</p>\n<p>她妈妈也在村里开心得逢人就说：我女儿写的剧以后是要在湖南台播的！</p>\n<p>再后来的事，我想你们都能猜到，她被骗了，公司只是个做低俗广告的，还是为了洗钱的皮包公司，她被骗去写视频文案，拖了半年工资。</p>\n<p>她想打官司，才发现没钱，也不知道告谁。</p>\n<p>她妈妈再也不敢在村里提湖南台这几个字，看电视时调到湖南台立刻调开，但村民总爱拿这件事调侃她父母，她妈妈每次被人嘲笑后，就在家里抹眼泪。</p>\n<p>抹完眼泪，打电话给女儿：</p>\n<p>钱不够妈妈还有些存款，你要争口气，接着写下去，妈妈支持你的梦想。</p>\n<p>她跟我说：我恨死自己了，不仅没出息，还害得我妈在村里抬不起头来。</p>\n<p>说完，哭得上气不接下气。</p>\n<p><font color=\"#FF8247\">梦想这个词，怎么就那么贵啊。</font></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/4/%E7%A9%B7%E4%BA%BA%E6%A2%A6%E6%83%B34.jpg\" alt=\" \"></p>\n<center>03</center>\n寒门难出贵子，在这个时代慢慢成为不争的事实了，仅有少数穷人的后代，可以凭借自己的努力跨越阶级。\n<p>扎克伯格也在演讲中承认，他感谢自己生活在一个不愁吃穿能让他学习编程的家庭，如果他从小就要每天为明天有没有吃的而烦恼，为明天有口吃的去做很多无用的事，他也不敢确定自己未来会有如此的成就。</p>\n<p><font color=\"#FF8247\">不知你感觉到没，在阶级越来越固化的时代，有钱人越来越容易实现自己的梦想，穷人却越来越追求不上自己的梦想。</font></p>\n<p><font color=\"#FF8247\">在追求梦想的路上，穷人一旦失败，会跌入比以往更惨烈的绝望局面。</font></p>\n<p>我们便是活在如此残忍的时代里。</p>\n<p>可我仍觉得，穷人不是配不上梦想，只是梦想对他人而言太艰难，<font color=\"#FF8247\">在中国，没有人比穷人更配得上梦想，谁也不能剥夺做梦的权利，谁都有梦想成真的可能性。</font></p>\n<p><font color=\"#FF8247\">为黑暗中隐约出现的一道光奋力往前奔跑，看见光明那瞬间又会坠入深渊。</font></p>\n<p><font color=\"#FF8247\">即便如此，也要为那束光，往前跑。</font></p>\n<hr>\n<p>本文转载自：简族</p>\n<hr>\n"},{"title":"中国大学mooc视频下载","copyright":true,"abbrlink":"63840324","date":"2018-05-31T09:08:52.000Z","password":null,"_content":"\n{% meting \"1803053391\" \"xiami\" \"song\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n   考试前准备突击一下，就看上了mooc的视频，视频是不错，但是官网并没有提供下载，学校也不是啥时候都有网，就想着把他下载下来，首先在电脑的浏览器里面抓了一下包，发现可以抓到视频，也可以下载，但一个一个手动下载太慢了，折腾了半天发现我水平有限，没法能批量获取到下载地址。\n   ![ ](https://data.singlelovely.cn/xsj/2018/5/31/mooc1.png)\n   然后就考虑到了手机端app，也试着抓了一下包，很容易的就发现了一个post请求了一个很长的json字符串，粗略的看一下，视频下载地址来了，还有不同的清晰度。\n   ![ ](https://data.singlelovely.cn/xsj/2018/5/31/mooc2.png)\n   \n   接下来的事情就简单了，用python写一个脚本，把所有的视频下载就好了\n   ```python\n   \n  # coding: utf-8\nimport json\nimport os\nimport urllib.request\njsonFile=open('json.txt' ,encoding='UTF-8').read()#事先将抓包所得的json保存为同目录下的文本文件\njsonObj=json.loads(jsonFile)\ndef Schedule(a,b,c):#下载进度指示\n\n    \"\"\"\n    a:已经下载的数据块\n    b:数据块的大小\n    c:远程文件的大小\n    \"\"\"\n\n    \n    per = 100.0 * a * b / c  \n    if per > 100 :  \n        per = 100  \n    print('%.2f%%' % per)  \ndef getMOOCLessons(jsonObj):  \n    courseName=jsonObj['results']['courseDto']['name']+\" \"+jsonObj['results']['courseDto']['schoolName']  \n    os.mkdir(courseName)#创建名称为“课程名+校名”的根目录  \n    chapters=jsonObj['results']['termDto']['chapters']#读取所有章节的信息为一个列表  \n    for i in range(len(chapters)):#遍历所有章节  \n        os.mkdir(courseName + '\\\\' + chapters[i]['name'])#每一个章节建立一个文件夹  \n        print(chapters[i]['name'])  \n        lessons=chapters[i]['lessons']#读取当前章节下所有课时的信息为一个列表  \n        for j in range(len(lessons)):#遍历所有课时  \n            units=lessons[j]['units']#读取当前课时下所有小节的信息为一个列表  \n            for k in range(len(units)):#遍历所有小节  \n                aunit=units[k]  \n                if (aunit[\"contentType\"]==1):#判断该小节是否为视频内容  \n                    print(\"Downloading \"+aunit['name'])  \n                    urllib.request.urlretrieve(aunit[\"resourceInfo\"][\"videoSHDUrl\"], courseName + '\\\\' + chapters[i]['name']+'\\\\'+aunit['name']+\".mp4\", Schedule)#下载文件，这里下载的是高清资源\ngetMOOCLessons(jsonObj)  \n   ```\n   \n需要的支持库：request模块\n\n来看看下载好的结果\n![ ](https://data.singlelovely.cn/xsj/2018/5/31/mooc3.png)\n\n","source":"_posts/中国大学mooc视频下载.md","raw":"---\ntitle: 中国大学mooc视频下载\ncopyright: true\nabbrlink: '63840324'\ntags:\ncategories:\ndate: 2018-05-31 17:08:52\npassword:\n---\n\n{% meting \"1803053391\" \"xiami\" \"song\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n   考试前准备突击一下，就看上了mooc的视频，视频是不错，但是官网并没有提供下载，学校也不是啥时候都有网，就想着把他下载下来，首先在电脑的浏览器里面抓了一下包，发现可以抓到视频，也可以下载，但一个一个手动下载太慢了，折腾了半天发现我水平有限，没法能批量获取到下载地址。\n   ![ ](https://data.singlelovely.cn/xsj/2018/5/31/mooc1.png)\n   然后就考虑到了手机端app，也试着抓了一下包，很容易的就发现了一个post请求了一个很长的json字符串，粗略的看一下，视频下载地址来了，还有不同的清晰度。\n   ![ ](https://data.singlelovely.cn/xsj/2018/5/31/mooc2.png)\n   \n   接下来的事情就简单了，用python写一个脚本，把所有的视频下载就好了\n   ```python\n   \n  # coding: utf-8\nimport json\nimport os\nimport urllib.request\njsonFile=open('json.txt' ,encoding='UTF-8').read()#事先将抓包所得的json保存为同目录下的文本文件\njsonObj=json.loads(jsonFile)\ndef Schedule(a,b,c):#下载进度指示\n\n    \"\"\"\n    a:已经下载的数据块\n    b:数据块的大小\n    c:远程文件的大小\n    \"\"\"\n\n    \n    per = 100.0 * a * b / c  \n    if per > 100 :  \n        per = 100  \n    print('%.2f%%' % per)  \ndef getMOOCLessons(jsonObj):  \n    courseName=jsonObj['results']['courseDto']['name']+\" \"+jsonObj['results']['courseDto']['schoolName']  \n    os.mkdir(courseName)#创建名称为“课程名+校名”的根目录  \n    chapters=jsonObj['results']['termDto']['chapters']#读取所有章节的信息为一个列表  \n    for i in range(len(chapters)):#遍历所有章节  \n        os.mkdir(courseName + '\\\\' + chapters[i]['name'])#每一个章节建立一个文件夹  \n        print(chapters[i]['name'])  \n        lessons=chapters[i]['lessons']#读取当前章节下所有课时的信息为一个列表  \n        for j in range(len(lessons)):#遍历所有课时  \n            units=lessons[j]['units']#读取当前课时下所有小节的信息为一个列表  \n            for k in range(len(units)):#遍历所有小节  \n                aunit=units[k]  \n                if (aunit[\"contentType\"]==1):#判断该小节是否为视频内容  \n                    print(\"Downloading \"+aunit['name'])  \n                    urllib.request.urlretrieve(aunit[\"resourceInfo\"][\"videoSHDUrl\"], courseName + '\\\\' + chapters[i]['name']+'\\\\'+aunit['name']+\".mp4\", Schedule)#下载文件，这里下载的是高清资源\ngetMOOCLessons(jsonObj)  \n   ```\n   \n需要的支持库：request模块\n\n来看看下载好的结果\n![ ](https://data.singlelovely.cn/xsj/2018/5/31/mooc3.png)\n\n","slug":"中国大学mooc视频下载","published":1,"updated":"2020-02-20T06:06:59.413Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3l0019fkupmrhtwtxe","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-iZBYrvZE\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1803053391\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<p>考试前准备突击一下，就看上了mooc的视频，视频是不错，但是官网并没有提供下载，学校也不是啥时候都有网，就想着把他下载下来，首先在电脑的浏览器里面抓了一下包，发现可以抓到视频，也可以下载，但一个一个手动下载太慢了，折腾了半天发现我水平有限，没法能批量获取到下载地址。<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/5/31/mooc1.png\" alt=\" \"><br>\n然后就考虑到了手机端app，也试着抓了一下包，很容易的就发现了一个post请求了一个很长的json字符串，粗略的看一下，视频下载地址来了，还有不同的清晰度。<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/5/31/mooc2.png\" alt=\" \"></p>\n<p>接下来的事情就简单了，用python写一个脚本，把所有的视频下载就好了</p>\n   <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   </span><br><span class=\"line\">  <span class=\"comment\"># coding: utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\">jsonFile=open(<span class=\"string\">'json.txt'</span> ,encoding=<span class=\"string\">'UTF-8'</span>).read()<span class=\"comment\">#事先将抓包所得的json保存为同目录下的文本文件</span></span><br><span class=\"line\">jsonObj=json.loads(jsonFile)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Schedule</span><span class=\"params\">(a,b,c)</span>:</span><span class=\"comment\">#下载进度指示</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    a:已经下载的数据块</span></span><br><span class=\"line\"><span class=\"string\">    b:数据块的大小</span></span><br><span class=\"line\"><span class=\"string\">    c:远程文件的大小</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    per = <span class=\"number\">100.0</span> * a * b / c  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> per &gt; <span class=\"number\">100</span> :  </span><br><span class=\"line\">        per = <span class=\"number\">100</span>  </span><br><span class=\"line\">    print(<span class=\"string\">'%.2f%%'</span> % per)  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getMOOCLessons</span><span class=\"params\">(jsonObj)</span>:</span>  </span><br><span class=\"line\">    courseName=jsonObj[<span class=\"string\">'results'</span>][<span class=\"string\">'courseDto'</span>][<span class=\"string\">'name'</span>]+<span class=\"string\">\" \"</span>+jsonObj[<span class=\"string\">'results'</span>][<span class=\"string\">'courseDto'</span>][<span class=\"string\">'schoolName'</span>]  </span><br><span class=\"line\">    os.mkdir(courseName)<span class=\"comment\">#创建名称为“课程名+校名”的根目录  </span></span><br><span class=\"line\">    chapters=jsonObj[<span class=\"string\">'results'</span>][<span class=\"string\">'termDto'</span>][<span class=\"string\">'chapters'</span>]<span class=\"comment\">#读取所有章节的信息为一个列表  </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(chapters)):<span class=\"comment\">#遍历所有章节  </span></span><br><span class=\"line\">        os.mkdir(courseName + <span class=\"string\">'\\\\'</span> + chapters[i][<span class=\"string\">'name'</span>])<span class=\"comment\">#每一个章节建立一个文件夹  </span></span><br><span class=\"line\">        print(chapters[i][<span class=\"string\">'name'</span>])  </span><br><span class=\"line\">        lessons=chapters[i][<span class=\"string\">'lessons'</span>]<span class=\"comment\">#读取当前章节下所有课时的信息为一个列表  </span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(len(lessons)):<span class=\"comment\">#遍历所有课时  </span></span><br><span class=\"line\">            units=lessons[j][<span class=\"string\">'units'</span>]<span class=\"comment\">#读取当前课时下所有小节的信息为一个列表  </span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> range(len(units)):<span class=\"comment\">#遍历所有小节  </span></span><br><span class=\"line\">                aunit=units[k]  </span><br><span class=\"line\">                <span class=\"keyword\">if</span> (aunit[<span class=\"string\">\"contentType\"</span>]==<span class=\"number\">1</span>):<span class=\"comment\">#判断该小节是否为视频内容  </span></span><br><span class=\"line\">                    print(<span class=\"string\">\"Downloading \"</span>+aunit[<span class=\"string\">'name'</span>])  </span><br><span class=\"line\">                    urllib.request.urlretrieve(aunit[<span class=\"string\">\"resourceInfo\"</span>][<span class=\"string\">\"videoSHDUrl\"</span>], courseName + <span class=\"string\">'\\\\'</span> + chapters[i][<span class=\"string\">'name'</span>]+<span class=\"string\">'\\\\'</span>+aunit[<span class=\"string\">'name'</span>]+<span class=\"string\">\".mp4\"</span>, Schedule)<span class=\"comment\">#下载文件，这里下载的是高清资源</span></span><br><span class=\"line\">getMOOCLessons(jsonObj)</span><br></pre></td></tr></table></figure>\n<p>需要的支持库：request模块</p>\n<p>来看看下载好的结果<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/5/31/mooc3.png\" alt=\" \"></p>\n","site":{"data":{}},"length":1651,"excerpt":"","more":"\n    <div id=\"aplayer-iZBYrvZE\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1803053391\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<p>考试前准备突击一下，就看上了mooc的视频，视频是不错，但是官网并没有提供下载，学校也不是啥时候都有网，就想着把他下载下来，首先在电脑的浏览器里面抓了一下包，发现可以抓到视频，也可以下载，但一个一个手动下载太慢了，折腾了半天发现我水平有限，没法能批量获取到下载地址。<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/5/31/mooc1.png\" alt=\" \"><br>\n然后就考虑到了手机端app，也试着抓了一下包，很容易的就发现了一个post请求了一个很长的json字符串，粗略的看一下，视频下载地址来了，还有不同的清晰度。<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/5/31/mooc2.png\" alt=\" \"></p>\n<p>接下来的事情就简单了，用python写一个脚本，把所有的视频下载就好了</p>\n   <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   </span><br><span class=\"line\">  <span class=\"comment\"># coding: utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib.request</span><br><span class=\"line\">jsonFile=open(<span class=\"string\">'json.txt'</span> ,encoding=<span class=\"string\">'UTF-8'</span>).read()<span class=\"comment\">#事先将抓包所得的json保存为同目录下的文本文件</span></span><br><span class=\"line\">jsonObj=json.loads(jsonFile)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Schedule</span><span class=\"params\">(a,b,c)</span>:</span><span class=\"comment\">#下载进度指示</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">    a:已经下载的数据块</span></span><br><span class=\"line\"><span class=\"string\">    b:数据块的大小</span></span><br><span class=\"line\"><span class=\"string\">    c:远程文件的大小</span></span><br><span class=\"line\"><span class=\"string\">    \"\"\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    per = <span class=\"number\">100.0</span> * a * b / c  </span><br><span class=\"line\">    <span class=\"keyword\">if</span> per &gt; <span class=\"number\">100</span> :  </span><br><span class=\"line\">        per = <span class=\"number\">100</span>  </span><br><span class=\"line\">    print(<span class=\"string\">'%.2f%%'</span> % per)  </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getMOOCLessons</span><span class=\"params\">(jsonObj)</span>:</span>  </span><br><span class=\"line\">    courseName=jsonObj[<span class=\"string\">'results'</span>][<span class=\"string\">'courseDto'</span>][<span class=\"string\">'name'</span>]+<span class=\"string\">\" \"</span>+jsonObj[<span class=\"string\">'results'</span>][<span class=\"string\">'courseDto'</span>][<span class=\"string\">'schoolName'</span>]  </span><br><span class=\"line\">    os.mkdir(courseName)<span class=\"comment\">#创建名称为“课程名+校名”的根目录  </span></span><br><span class=\"line\">    chapters=jsonObj[<span class=\"string\">'results'</span>][<span class=\"string\">'termDto'</span>][<span class=\"string\">'chapters'</span>]<span class=\"comment\">#读取所有章节的信息为一个列表  </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(len(chapters)):<span class=\"comment\">#遍历所有章节  </span></span><br><span class=\"line\">        os.mkdir(courseName + <span class=\"string\">'\\\\'</span> + chapters[i][<span class=\"string\">'name'</span>])<span class=\"comment\">#每一个章节建立一个文件夹  </span></span><br><span class=\"line\">        print(chapters[i][<span class=\"string\">'name'</span>])  </span><br><span class=\"line\">        lessons=chapters[i][<span class=\"string\">'lessons'</span>]<span class=\"comment\">#读取当前章节下所有课时的信息为一个列表  </span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> range(len(lessons)):<span class=\"comment\">#遍历所有课时  </span></span><br><span class=\"line\">            units=lessons[j][<span class=\"string\">'units'</span>]<span class=\"comment\">#读取当前课时下所有小节的信息为一个列表  </span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> range(len(units)):<span class=\"comment\">#遍历所有小节  </span></span><br><span class=\"line\">                aunit=units[k]  </span><br><span class=\"line\">                <span class=\"keyword\">if</span> (aunit[<span class=\"string\">\"contentType\"</span>]==<span class=\"number\">1</span>):<span class=\"comment\">#判断该小节是否为视频内容  </span></span><br><span class=\"line\">                    print(<span class=\"string\">\"Downloading \"</span>+aunit[<span class=\"string\">'name'</span>])  </span><br><span class=\"line\">                    urllib.request.urlretrieve(aunit[<span class=\"string\">\"resourceInfo\"</span>][<span class=\"string\">\"videoSHDUrl\"</span>], courseName + <span class=\"string\">'\\\\'</span> + chapters[i][<span class=\"string\">'name'</span>]+<span class=\"string\">'\\\\'</span>+aunit[<span class=\"string\">'name'</span>]+<span class=\"string\">\".mp4\"</span>, Schedule)<span class=\"comment\">#下载文件，这里下载的是高清资源</span></span><br><span class=\"line\">getMOOCLessons(jsonObj)</span><br></pre></td></tr></table></figure>\n<p>需要的支持库：request模块</p>\n<p>来看看下载好的结果<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/5/31/mooc3.png\" alt=\" \"></p>\n"},{"title":"win10文件因继承权限等问题导致无法操作解决方案","copyright":false,"abbrlink":"c6360c4","notshow":false,"description":"自己电脑上的东西怎能没有权限呢！！！","date":"2019-08-15T20:00:00.000Z","password":null,"image":["https://data.singlelovely.cn/CoverPicture/c6360c4.png!CoverPicture"],"photos":[],"sticky":null,"_content":"\n首先吐槽一下win10的权限管理，个人感觉及其混乱，尤其是在重装系统以后，有些文件的权限就会莫名其妙的没有了，还有一些从网上下载的文件也会出现没有权限的情况，造成不能删除等问题。\n\n以前出现这样的问题，去文件属性里面的安全选项卡，然后高级，启用一下继承，权限就来了，没有深究原因（又不是不能用）  实在不行还能进PE强行删文件嘛\n\n这次是因为搞了个无损的原声带，想拷贝一下，结果有权限保护，一个一个的点属性太麻烦了，就上网找了一下，各种折腾半天没成功，最后花了点时间研究了下win10的权限管理，特此记录。\n\n## 方式一\n\n想获取整个文件夹内及其子文件的权限时，右键文件夹属性、安全选项卡，这个页面看一下那个组或用户名对文件具有完全控制的权限，然后高级、更改所有者，将所有者改为具有完全控制权限的用户（勾选替换子容器和对象的所有者），更改完成后登录具有权限的用户进行操作。\n\n![01](https://data.singlelovely.cn/images/20190816034535.png)\n\n![02](https://data.singlelovely.cn/images/20190816034710.png)\n\n![03](https://data.singlelovely.cn/images/20190816034818.png)\n\n## 方式二\n\n粗暴简单，推荐使用此方法\n\ncmd命令行（管理员模式），执行类似如下命令：\n\n```shell\nicacls \"H:\\音乐\\五月天\\步步自選作品輯 The Best of 1999-2013 [一路有你版] Disc 2\\*.*\" /grant Users:(F)\n```\n\n`\"目录名\"`\n\n`*.*`  正则表达式\n\n`Users`  用户组或者用户名\n\n`(F)` 完全控制\n\n![04](https://data.singlelovely.cn/images/20190816035552.png)\n\n这样修改完权限以后就可以随便怎么用了\n","source":"_posts/win10权限继承问题.md","raw":"---\ntitle: win10文件因继承权限等问题导致无法操作解决方案\ncopyright: false\nabbrlink: c6360c4\nnotshow: false\ntags:\n  - 教程\n  - windows\ncategories: 系统\ndescription: 自己电脑上的东西怎能没有权限呢！！！\ndate: 2019-08-16 04:00:00\npassword:\nimage:\n- \"https://data.singlelovely.cn/CoverPicture/c6360c4.png!CoverPicture\"\nphotos:\nsticky:\n---\n\n首先吐槽一下win10的权限管理，个人感觉及其混乱，尤其是在重装系统以后，有些文件的权限就会莫名其妙的没有了，还有一些从网上下载的文件也会出现没有权限的情况，造成不能删除等问题。\n\n以前出现这样的问题，去文件属性里面的安全选项卡，然后高级，启用一下继承，权限就来了，没有深究原因（又不是不能用）  实在不行还能进PE强行删文件嘛\n\n这次是因为搞了个无损的原声带，想拷贝一下，结果有权限保护，一个一个的点属性太麻烦了，就上网找了一下，各种折腾半天没成功，最后花了点时间研究了下win10的权限管理，特此记录。\n\n## 方式一\n\n想获取整个文件夹内及其子文件的权限时，右键文件夹属性、安全选项卡，这个页面看一下那个组或用户名对文件具有完全控制的权限，然后高级、更改所有者，将所有者改为具有完全控制权限的用户（勾选替换子容器和对象的所有者），更改完成后登录具有权限的用户进行操作。\n\n![01](https://data.singlelovely.cn/images/20190816034535.png)\n\n![02](https://data.singlelovely.cn/images/20190816034710.png)\n\n![03](https://data.singlelovely.cn/images/20190816034818.png)\n\n## 方式二\n\n粗暴简单，推荐使用此方法\n\ncmd命令行（管理员模式），执行类似如下命令：\n\n```shell\nicacls \"H:\\音乐\\五月天\\步步自選作品輯 The Best of 1999-2013 [一路有你版] Disc 2\\*.*\" /grant Users:(F)\n```\n\n`\"目录名\"`\n\n`*.*`  正则表达式\n\n`Users`  用户组或者用户名\n\n`(F)` 完全控制\n\n![04](https://data.singlelovely.cn/images/20190816035552.png)\n\n这样修改完权限以后就可以随便怎么用了\n","slug":"win10权限继承问题","published":1,"updated":"2020-02-20T06:06:59.413Z","comments":1,"layout":"post","link":"","_id":"ckec2td3m001afkupadwucidu","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>首先吐槽一下win10的权限管理，个人感觉及其混乱，尤其是在重装系统以后，有些文件的权限就会莫名其妙的没有了，还有一些从网上下载的文件也会出现没有权限的情况，造成不能删除等问题。</p>\n<p>以前出现这样的问题，去文件属性里面的安全选项卡，然后高级，启用一下继承，权限就来了，没有深究原因（又不是不能用）  实在不行还能进PE强行删文件嘛</p>\n<p>这次是因为搞了个无损的原声带，想拷贝一下，结果有权限保护，一个一个的点属性太麻烦了，就上网找了一下，各种折腾半天没成功，最后花了点时间研究了下win10的权限管理，特此记录。</p>\n<h2 id=\"方式一\"><a class=\"header-anchor\" href=\"#方式一\">☆</a>方式一</h2>\n<p>想获取整个文件夹内及其子文件的权限时，右键文件夹属性、安全选项卡，这个页面看一下那个组或用户名对文件具有完全控制的权限，然后高级、更改所有者，将所有者改为具有完全控制权限的用户（勾选替换子容器和对象的所有者），更改完成后登录具有权限的用户进行操作。</p>\n<p><img src=\"https://data.singlelovely.cn/images/20190816034535.png\" alt=\"01\"></p>\n<p><img src=\"https://data.singlelovely.cn/images/20190816034710.png\" alt=\"02\"></p>\n<p><img src=\"https://data.singlelovely.cn/images/20190816034818.png\" alt=\"03\"></p>\n<h2 id=\"方式二\"><a class=\"header-anchor\" href=\"#方式二\">☆</a>方式二</h2>\n<p>粗暴简单，推荐使用此方法</p>\n<p>cmd命令行（管理员模式），执行类似如下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">icacls \"H:\\音乐\\五月天\\步步自選作品輯 The Best of 1999-2013 [一路有你版] Disc 2\\*.*\" /grant Users:(F)</span><br></pre></td></tr></table></figure>\n<p><code>&quot;目录名&quot;</code></p>\n<p><code>*.*</code>  正则表达式</p>\n<p><code>Users</code>  用户组或者用户名</p>\n<p><code>(F)</code> 完全控制</p>\n<p><img src=\"https://data.singlelovely.cn/images/20190816035552.png\" alt=\"04\"></p>\n<p>这样修改完权限以后就可以随便怎么用了</p>\n","site":{"data":{}},"length":567,"excerpt":"","more":"<p>首先吐槽一下win10的权限管理，个人感觉及其混乱，尤其是在重装系统以后，有些文件的权限就会莫名其妙的没有了，还有一些从网上下载的文件也会出现没有权限的情况，造成不能删除等问题。</p>\n<p>以前出现这样的问题，去文件属性里面的安全选项卡，然后高级，启用一下继承，权限就来了，没有深究原因（又不是不能用）  实在不行还能进PE强行删文件嘛</p>\n<p>这次是因为搞了个无损的原声带，想拷贝一下，结果有权限保护，一个一个的点属性太麻烦了，就上网找了一下，各种折腾半天没成功，最后花了点时间研究了下win10的权限管理，特此记录。</p>\n<h2 id=\"方式一\"><a class=\"header-anchor\" href=\"#方式一\">☆</a>方式一</h2>\n<p>想获取整个文件夹内及其子文件的权限时，右键文件夹属性、安全选项卡，这个页面看一下那个组或用户名对文件具有完全控制的权限，然后高级、更改所有者，将所有者改为具有完全控制权限的用户（勾选替换子容器和对象的所有者），更改完成后登录具有权限的用户进行操作。</p>\n<p><img src=\"https://data.singlelovely.cn/images/20190816034535.png\" alt=\"01\"></p>\n<p><img src=\"https://data.singlelovely.cn/images/20190816034710.png\" alt=\"02\"></p>\n<p><img src=\"https://data.singlelovely.cn/images/20190816034818.png\" alt=\"03\"></p>\n<h2 id=\"方式二\"><a class=\"header-anchor\" href=\"#方式二\">☆</a>方式二</h2>\n<p>粗暴简单，推荐使用此方法</p>\n<p>cmd命令行（管理员模式），执行类似如下命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">icacls \"H:\\音乐\\五月天\\步步自選作品輯 The Best of 1999-2013 [一路有你版] Disc 2\\*.*\" /grant Users:(F)</span><br></pre></td></tr></table></figure>\n<p><code>&quot;目录名&quot;</code></p>\n<p><code>*.*</code>  正则表达式</p>\n<p><code>Users</code>  用户组或者用户名</p>\n<p><code>(F)</code> 完全控制</p>\n<p><img src=\"https://data.singlelovely.cn/images/20190816035552.png\" alt=\"04\"></p>\n<p>这样修改完权限以后就可以随便怎么用了</p>\n"},{"title":"免流的原理","copyright":true,"abbrlink":"60cd4fc4","date":"2018-03-23T02:46:44.000Z","password":null,"_content":"\n### 可以作用的服务端\n\n   + ssr （shadowsocoks-R）\n   \n   + openvpn\n\n### 混淆插件的工作原理\n![ ][1]\n\n### http_simple混淆参数\n   + 根据ssr（shadowsocoks-R）作者提供的参数设置说<br>明参数应设置为如下格式：\n   + xxx.com#User-Agent: abc\\nAccept: text/html\\nConnection: keep-alive\n   + 解读： xxx.com为你要运营商收到的host地址\n   + User-Agent: abc\\nAccept: text/html\\nConnection: keep-alive <br> 为你要让运营商收到的其他配置内容\n\n### 总结\n    \\ 为换行符\n\t参数获取可以通过抓包\n\t\n\n\n----------\n\n\n  [1]: https://data.singlelovely.cn/xsj/2018/3/23/ssr%E5%85%8D%E6%B5%81%E5%8E%9F%E7%90%861.png","source":"_posts/免流的原理.md","raw":"---\ntitle: 免流的原理\ntags:\n  - 免流\n  - 网络\ncategories: 网络\ncopyright: true\nabbrlink: 60cd4fc4\ndate: 2018-03-23 10:46:44\npassword:\n---\n\n### 可以作用的服务端\n\n   + ssr （shadowsocoks-R）\n   \n   + openvpn\n\n### 混淆插件的工作原理\n![ ][1]\n\n### http_simple混淆参数\n   + 根据ssr（shadowsocoks-R）作者提供的参数设置说<br>明参数应设置为如下格式：\n   + xxx.com#User-Agent: abc\\nAccept: text/html\\nConnection: keep-alive\n   + 解读： xxx.com为你要运营商收到的host地址\n   + User-Agent: abc\\nAccept: text/html\\nConnection: keep-alive <br> 为你要让运营商收到的其他配置内容\n\n### 总结\n    \\ 为换行符\n\t参数获取可以通过抓包\n\t\n\n\n----------\n\n\n  [1]: https://data.singlelovely.cn/xsj/2018/3/23/ssr%E5%85%8D%E6%B5%81%E5%8E%9F%E7%90%861.png","slug":"免流的原理","published":1,"updated":"2020-02-20T06:06:59.415Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3n001bfkuphmswtf02","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h3 id=\"可以作用的服务端\"><a class=\"header-anchor\" href=\"#可以作用的服务端\">☆</a>可以作用的服务端</h3>\n<ul>\n<li>\n<p>ssr （shadowsocoks-R）</p>\n</li>\n<li>\n<p>openvpn</p>\n</li>\n</ul>\n<h3 id=\"混淆插件的工作原理\"><a class=\"header-anchor\" href=\"#混淆插件的工作原理\">☆</a>混淆插件的工作原理</h3>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/23/ssr%E5%85%8D%E6%B5%81%E5%8E%9F%E7%90%861.png\" alt=\" \"></p>\n<h3 id=\"http-simple混淆参数\"><a class=\"header-anchor\" href=\"#http-simple混淆参数\">☆</a>http_simple混淆参数</h3>\n<ul>\n<li>根据ssr（shadowsocoks-R）作者提供的参数设置说<br>明参数应设置为如下格式：</li>\n<li><a href=\"http://xxx.com#User-Agent:\" target=\"_blank\" rel=\"noopener\">xxx.com#User-Agent:</a> abc\\nAccept: text/html\\nConnection: keep-alive</li>\n<li>解读： xxx.com为你要运营商收到的host地址</li>\n<li>User-Agent: abc\\nAccept: text/html\\nConnection: keep-alive <br> 为你要让运营商收到的其他配置内容</li>\n</ul>\n<h3 id=\"总结\"><a class=\"header-anchor\" href=\"#总结\">☆</a>总结</h3>\n<pre><code>\\ 为换行符\n参数获取可以通过抓包\n</code></pre>\n<hr>\n","site":{"data":{}},"length":292,"excerpt":"","more":"<h3 id=\"可以作用的服务端\"><a class=\"header-anchor\" href=\"#可以作用的服务端\">☆</a>可以作用的服务端</h3>\n<ul>\n<li>\n<p>ssr （shadowsocoks-R）</p>\n</li>\n<li>\n<p>openvpn</p>\n</li>\n</ul>\n<h3 id=\"混淆插件的工作原理\"><a class=\"header-anchor\" href=\"#混淆插件的工作原理\">☆</a>混淆插件的工作原理</h3>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/23/ssr%E5%85%8D%E6%B5%81%E5%8E%9F%E7%90%861.png\" alt=\" \"></p>\n<h3 id=\"http-simple混淆参数\"><a class=\"header-anchor\" href=\"#http-simple混淆参数\">☆</a>http_simple混淆参数</h3>\n<ul>\n<li>根据ssr（shadowsocoks-R）作者提供的参数设置说<br>明参数应设置为如下格式：</li>\n<li><a href=\"http://xxx.com#User-Agent:\" target=\"_blank\" rel=\"noopener\">xxx.com#User-Agent:</a> abc\\nAccept: text/html\\nConnection: keep-alive</li>\n<li>解读： xxx.com为你要运营商收到的host地址</li>\n<li>User-Agent: abc\\nAccept: text/html\\nConnection: keep-alive <br> 为你要让运营商收到的其他配置内容</li>\n</ul>\n<h3 id=\"总结\"><a class=\"header-anchor\" href=\"#总结\">☆</a>总结</h3>\n<pre><code>\\ 为换行符\n参数获取可以通过抓包\n</code></pre>\n<hr>\n"},{"title":"使用RIP协议实现不同网段之间的通信（模拟实验）","copyright":true,"abbrlink":"6d7b9178","date":"2018-03-24T15:38:14.000Z","password":null,"_content":"\n### 实验目标\n+  使用RIP协议实现不同网段之间的通信\n+  熟练RIP协议的路由配置过程\n+  加深对vlan技术的理解\n\n### 实验工具\n\n eNSP模拟器（510版）\n \n ### 网络拓扑图\n \n ![RIP网络拓扑图][1]\n \n ### 主要设备配置\n\n<font color=#00FFFF >注：以下为设备的配置状态，并非配置命令</font>\n\n#### LSW1\n```\n#\nsysname ZYDSW1\n#\nvlan batch 10 12 20 30\n#\ncluster enable\nntdp enable\nndp enable\n#\ndrop illegal-mac alarm\n#\ndiffserv domain default\n#\ndrop-profile default\n#\naaa \n authentication-scheme default\n authorization-scheme default\n accounting-scheme default\n domain default \n domain default_admin \n local-user admin password simple admin\n local-user admin service-type http\n#\ninterface Vlanif1\n#\ninterface Vlanif10\n ip address 192.168.1.1 255.255.255.0 \n#\ninterface Vlanif12\n ip address 192.168.12.2 255.255.255.0 \n#\ninterface Vlanif20\n ip address 192.168.2.1 255.255.255.0 \n#\ninterface Vlanif30\n ip address 192.168.3.1 255.255.255.0 \n#\ninterface MEth0/0/1\n#\ninterface GigabitEthernet0/0/1\n port link-type access\n port default vlan 12\n#\ninterface GigabitEthernet0/0/2\n port link-type access\n port default vlan 10\n#\ninterface GigabitEthernet0/0/3\n port link-type access\n port default vlan 20\n#\ninterface GigabitEthernet0/0/4\n port link-type access\n port default vlan 30\n#\ninterface NULL0\n#\nrip 1\n undo summary\n version 2\n network 192.168.1.0\n network 192.168.2.0\n network 192.168.3.0\n network 192.168.12.0\n#\nuser-interface con 0\nuser-interface vty 0 4\n#\nport-group default\n#\nreturn \n\n```\n#### R2\n```\n#\nsysname ZYDR2\n#\naaa \n authentication-scheme default\n authorization-scheme default\n accounting-scheme default\n domain default \n domain default_admin \n local-user admin password cipher OOCM4m($F4ajUn1vMEIBNUw#\n local-user admin service-type http\n#\nfirewall zone Local\n priority 16\n#\ninterface Ethernet0/0/0\n ip address 192.168.13.2 255.255.255.0 \n#\ninterface Ethernet0/0/1\n ip address 192.168.12.1 255.255.255.0 \n#\ninterface Serial0/0/0\n link-protocol ppp\n#\ninterface Serial0/0/1\n link-protocol ppp\n#\ninterface Serial0/0/2\n link-protocol ppp\n#\ninterface Serial0/0/3\n link-protocol ppp\n#\ninterface GigabitEthernet0/0/0\n#\ninterface GigabitEthernet0/0/1\n#\ninterface GigabitEthernet0/0/2\n#\ninterface GigabitEthernet0/0/3\n#\nwlan\n#\ninterface NULL0\n#\nrip 1\n undo summary\n version 2\n network 192.168.13.0\n network 192.168.12.0\n#\nuser-interface con 0\nuser-interface vty 0 4\nuser-interface vty 16 20\n#\nreturn \n```\n#### R1\n```\n\n#\nsysname ZYDR1\n#\naaa \n authentication-scheme default\n authorization-scheme default\n accounting-scheme default\n domain default \n domain default_admin \n local-user admin password cipher OOCM4m($F4ajUn1vMEIBNUw#\n local-user admin service-type http\n#\nfirewall zone Local\n priority 16\n#\ninterface Ethernet0/0/0\n ip address 192.168.13.1 255.255.255.0 \n#\ninterface Ethernet0/0/1\n ip address 192.168.24.1 255.255.255.0 \n#\ninterface Serial0/0/0\n link-protocol ppp\n#\ninterface Serial0/0/1\n link-protocol ppp\n#\ninterface Serial0/0/2\n link-protocol ppp\n#\ninterface Serial0/0/3\n link-protocol ppp\n#\ninterface GigabitEthernet0/0/0\n#\ninterface GigabitEthernet0/0/1\n#\ninterface GigabitEthernet0/0/2\n#\ninterface GigabitEthernet0/0/3\n#\nwlan\n#\ninterface NULL0\n#\nrip 1\n undo summary\n version 2\n network 192.168.13.0\n network 192.168.24.0\n#\nuser-interface con 0\nuser-interface vty 0 4\nuser-interface vty 16 20\n#\nreturn \n```\nR3与R2配置类似，LSW2与LSW1类似\n\n#### 主机配置示例\n![主机配置示例][2]\n\n### 结果测试\n\n![ ][3]\n![ ][4]\n\n\n  [1]: https://data.singlelovely.cn/xsj/2018/3/24/RIP%E7%BD%91%E7%BB%9C%E6%8B%93%E6%89%91%E5%9B%BE.png\n  [2]: https://data.singlelovely.cn/xsj/2018/3/25/%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B.png\n  [3]: https://data.singlelovely.cn/xsj/2018/3/25/%E7%BB%93%E6%9E%9C%E6%B5%8B%E8%AF%95.png\n  [4]: https://data.singlelovely.cn/xsj/2018/3/25/%E7%BB%93%E6%9E%9C%E6%B5%8B%E8%AF%952.png","source":"_posts/使用RIP协议实现不同网段之间的通信（模拟实验）.md","raw":"---\ntitle: 使用RIP协议实现不同网段之间的通信（模拟实验）\ntags:\n  - eNSP\n  - ICT\n  - 数据通信\ncategories: 网络\ncopyright: true\nabbrlink: 6d7b9178\ndate: 2018-03-24 23:38:14\npassword:\n---\n\n### 实验目标\n+  使用RIP协议实现不同网段之间的通信\n+  熟练RIP协议的路由配置过程\n+  加深对vlan技术的理解\n\n### 实验工具\n\n eNSP模拟器（510版）\n \n ### 网络拓扑图\n \n ![RIP网络拓扑图][1]\n \n ### 主要设备配置\n\n<font color=#00FFFF >注：以下为设备的配置状态，并非配置命令</font>\n\n#### LSW1\n```\n#\nsysname ZYDSW1\n#\nvlan batch 10 12 20 30\n#\ncluster enable\nntdp enable\nndp enable\n#\ndrop illegal-mac alarm\n#\ndiffserv domain default\n#\ndrop-profile default\n#\naaa \n authentication-scheme default\n authorization-scheme default\n accounting-scheme default\n domain default \n domain default_admin \n local-user admin password simple admin\n local-user admin service-type http\n#\ninterface Vlanif1\n#\ninterface Vlanif10\n ip address 192.168.1.1 255.255.255.0 \n#\ninterface Vlanif12\n ip address 192.168.12.2 255.255.255.0 \n#\ninterface Vlanif20\n ip address 192.168.2.1 255.255.255.0 \n#\ninterface Vlanif30\n ip address 192.168.3.1 255.255.255.0 \n#\ninterface MEth0/0/1\n#\ninterface GigabitEthernet0/0/1\n port link-type access\n port default vlan 12\n#\ninterface GigabitEthernet0/0/2\n port link-type access\n port default vlan 10\n#\ninterface GigabitEthernet0/0/3\n port link-type access\n port default vlan 20\n#\ninterface GigabitEthernet0/0/4\n port link-type access\n port default vlan 30\n#\ninterface NULL0\n#\nrip 1\n undo summary\n version 2\n network 192.168.1.0\n network 192.168.2.0\n network 192.168.3.0\n network 192.168.12.0\n#\nuser-interface con 0\nuser-interface vty 0 4\n#\nport-group default\n#\nreturn \n\n```\n#### R2\n```\n#\nsysname ZYDR2\n#\naaa \n authentication-scheme default\n authorization-scheme default\n accounting-scheme default\n domain default \n domain default_admin \n local-user admin password cipher OOCM4m($F4ajUn1vMEIBNUw#\n local-user admin service-type http\n#\nfirewall zone Local\n priority 16\n#\ninterface Ethernet0/0/0\n ip address 192.168.13.2 255.255.255.0 \n#\ninterface Ethernet0/0/1\n ip address 192.168.12.1 255.255.255.0 \n#\ninterface Serial0/0/0\n link-protocol ppp\n#\ninterface Serial0/0/1\n link-protocol ppp\n#\ninterface Serial0/0/2\n link-protocol ppp\n#\ninterface Serial0/0/3\n link-protocol ppp\n#\ninterface GigabitEthernet0/0/0\n#\ninterface GigabitEthernet0/0/1\n#\ninterface GigabitEthernet0/0/2\n#\ninterface GigabitEthernet0/0/3\n#\nwlan\n#\ninterface NULL0\n#\nrip 1\n undo summary\n version 2\n network 192.168.13.0\n network 192.168.12.0\n#\nuser-interface con 0\nuser-interface vty 0 4\nuser-interface vty 16 20\n#\nreturn \n```\n#### R1\n```\n\n#\nsysname ZYDR1\n#\naaa \n authentication-scheme default\n authorization-scheme default\n accounting-scheme default\n domain default \n domain default_admin \n local-user admin password cipher OOCM4m($F4ajUn1vMEIBNUw#\n local-user admin service-type http\n#\nfirewall zone Local\n priority 16\n#\ninterface Ethernet0/0/0\n ip address 192.168.13.1 255.255.255.0 \n#\ninterface Ethernet0/0/1\n ip address 192.168.24.1 255.255.255.0 \n#\ninterface Serial0/0/0\n link-protocol ppp\n#\ninterface Serial0/0/1\n link-protocol ppp\n#\ninterface Serial0/0/2\n link-protocol ppp\n#\ninterface Serial0/0/3\n link-protocol ppp\n#\ninterface GigabitEthernet0/0/0\n#\ninterface GigabitEthernet0/0/1\n#\ninterface GigabitEthernet0/0/2\n#\ninterface GigabitEthernet0/0/3\n#\nwlan\n#\ninterface NULL0\n#\nrip 1\n undo summary\n version 2\n network 192.168.13.0\n network 192.168.24.0\n#\nuser-interface con 0\nuser-interface vty 0 4\nuser-interface vty 16 20\n#\nreturn \n```\nR3与R2配置类似，LSW2与LSW1类似\n\n#### 主机配置示例\n![主机配置示例][2]\n\n### 结果测试\n\n![ ][3]\n![ ][4]\n\n\n  [1]: https://data.singlelovely.cn/xsj/2018/3/24/RIP%E7%BD%91%E7%BB%9C%E6%8B%93%E6%89%91%E5%9B%BE.png\n  [2]: https://data.singlelovely.cn/xsj/2018/3/25/%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B.png\n  [3]: https://data.singlelovely.cn/xsj/2018/3/25/%E7%BB%93%E6%9E%9C%E6%B5%8B%E8%AF%95.png\n  [4]: https://data.singlelovely.cn/xsj/2018/3/25/%E7%BB%93%E6%9E%9C%E6%B5%8B%E8%AF%952.png","slug":"使用RIP协议实现不同网段之间的通信（模拟实验）","published":1,"updated":"2020-02-20T06:06:59.415Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3p001cfkupvdcttcmi","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h3 id=\"实验目标\"><a class=\"header-anchor\" href=\"#实验目标\">☆</a>实验目标</h3>\n<ul>\n<li>使用RIP协议实现不同网段之间的通信</li>\n<li>熟练RIP协议的路由配置过程</li>\n<li>加深对vlan技术的理解</li>\n</ul>\n<h3 id=\"实验工具\"><a class=\"header-anchor\" href=\"#实验工具\">☆</a>实验工具</h3>\n<p>eNSP模拟器（510版）</p>\n<h3 id=\"网络拓扑图\"><a class=\"header-anchor\" href=\"#网络拓扑图\">☆</a>网络拓扑图</h3>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/24/RIP%E7%BD%91%E7%BB%9C%E6%8B%93%E6%89%91%E5%9B%BE.png\" alt=\"RIP网络拓扑图\"></p>\n<h3 id=\"主要设备配置\"><a class=\"header-anchor\" href=\"#主要设备配置\">☆</a>主要设备配置</h3>\n<p><font color=\"#00FFFF\">注：以下为设备的配置状态，并非配置命令</font></p>\n<h4 id=\"lsw1\"><a class=\"header-anchor\" href=\"#lsw1\">☆</a>LSW1</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#</span><br><span class=\"line\">sysname ZYDSW1</span><br><span class=\"line\">#</span><br><span class=\"line\">vlan batch 10 12 20 30</span><br><span class=\"line\">#</span><br><span class=\"line\">cluster enable</span><br><span class=\"line\">ntdp enable</span><br><span class=\"line\">ndp enable</span><br><span class=\"line\">#</span><br><span class=\"line\">drop illegal-mac alarm</span><br><span class=\"line\">#</span><br><span class=\"line\">diffserv domain default</span><br><span class=\"line\">#</span><br><span class=\"line\">drop-profile default</span><br><span class=\"line\">#</span><br><span class=\"line\">aaa </span><br><span class=\"line\"> authentication-scheme default</span><br><span class=\"line\"> authorization-scheme default</span><br><span class=\"line\"> accounting-scheme default</span><br><span class=\"line\"> domain default </span><br><span class=\"line\"> domain default_admin </span><br><span class=\"line\"> local-user admin password simple admin</span><br><span class=\"line\"> local-user admin service-type http</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Vlanif1</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Vlanif10</span><br><span class=\"line\"> ip address 192.168.1.1 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface Vlanif12</span><br><span class=\"line\"> ip address 192.168.12.2 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface Vlanif20</span><br><span class=\"line\"> ip address 192.168.2.1 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface Vlanif30</span><br><span class=\"line\"> ip address 192.168.3.1 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface MEth0/0/1</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/1</span><br><span class=\"line\"> port link-type access</span><br><span class=\"line\"> port default vlan 12</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/2</span><br><span class=\"line\"> port link-type access</span><br><span class=\"line\"> port default vlan 10</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/3</span><br><span class=\"line\"> port link-type access</span><br><span class=\"line\"> port default vlan 20</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/4</span><br><span class=\"line\"> port link-type access</span><br><span class=\"line\"> port default vlan 30</span><br><span class=\"line\">#</span><br><span class=\"line\">interface NULL0</span><br><span class=\"line\">#</span><br><span class=\"line\">rip 1</span><br><span class=\"line\"> undo summary</span><br><span class=\"line\"> version 2</span><br><span class=\"line\"> network 192.168.1.0</span><br><span class=\"line\"> network 192.168.2.0</span><br><span class=\"line\"> network 192.168.3.0</span><br><span class=\"line\"> network 192.168.12.0</span><br><span class=\"line\">#</span><br><span class=\"line\">user-interface con 0</span><br><span class=\"line\">user-interface vty 0 4</span><br><span class=\"line\">#</span><br><span class=\"line\">port-group default</span><br><span class=\"line\">#</span><br><span class=\"line\">return</span><br></pre></td></tr></table></figure>\n<h4 id=\"r2\"><a class=\"header-anchor\" href=\"#r2\">☆</a>R2</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#</span><br><span class=\"line\">sysname ZYDR2</span><br><span class=\"line\">#</span><br><span class=\"line\">aaa </span><br><span class=\"line\"> authentication-scheme default</span><br><span class=\"line\"> authorization-scheme default</span><br><span class=\"line\"> accounting-scheme default</span><br><span class=\"line\"> domain default </span><br><span class=\"line\"> domain default_admin </span><br><span class=\"line\"> local-user admin password cipher OOCM4m($F4ajUn1vMEIBNUw#</span><br><span class=\"line\"> local-user admin service-type http</span><br><span class=\"line\">#</span><br><span class=\"line\">firewall zone Local</span><br><span class=\"line\"> priority 16</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Ethernet0/0/0</span><br><span class=\"line\"> ip address 192.168.13.2 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface Ethernet0/0/1</span><br><span class=\"line\"> ip address 192.168.12.1 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/0</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/1</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/2</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/3</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/0</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/1</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/2</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/3</span><br><span class=\"line\">#</span><br><span class=\"line\">wlan</span><br><span class=\"line\">#</span><br><span class=\"line\">interface NULL0</span><br><span class=\"line\">#</span><br><span class=\"line\">rip 1</span><br><span class=\"line\"> undo summary</span><br><span class=\"line\"> version 2</span><br><span class=\"line\"> network 192.168.13.0</span><br><span class=\"line\"> network 192.168.12.0</span><br><span class=\"line\">#</span><br><span class=\"line\">user-interface con 0</span><br><span class=\"line\">user-interface vty 0 4</span><br><span class=\"line\">user-interface vty 16 20</span><br><span class=\"line\">#</span><br><span class=\"line\">return</span><br></pre></td></tr></table></figure>\n<h4 id=\"r1\"><a class=\"header-anchor\" href=\"#r1\">☆</a>R1</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\">sysname ZYDR1</span><br><span class=\"line\">#</span><br><span class=\"line\">aaa </span><br><span class=\"line\"> authentication-scheme default</span><br><span class=\"line\"> authorization-scheme default</span><br><span class=\"line\"> accounting-scheme default</span><br><span class=\"line\"> domain default </span><br><span class=\"line\"> domain default_admin </span><br><span class=\"line\"> local-user admin password cipher OOCM4m($F4ajUn1vMEIBNUw#</span><br><span class=\"line\"> local-user admin service-type http</span><br><span class=\"line\">#</span><br><span class=\"line\">firewall zone Local</span><br><span class=\"line\"> priority 16</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Ethernet0/0/0</span><br><span class=\"line\"> ip address 192.168.13.1 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface Ethernet0/0/1</span><br><span class=\"line\"> ip address 192.168.24.1 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/0</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/1</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/2</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/3</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/0</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/1</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/2</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/3</span><br><span class=\"line\">#</span><br><span class=\"line\">wlan</span><br><span class=\"line\">#</span><br><span class=\"line\">interface NULL0</span><br><span class=\"line\">#</span><br><span class=\"line\">rip 1</span><br><span class=\"line\"> undo summary</span><br><span class=\"line\"> version 2</span><br><span class=\"line\"> network 192.168.13.0</span><br><span class=\"line\"> network 192.168.24.0</span><br><span class=\"line\">#</span><br><span class=\"line\">user-interface con 0</span><br><span class=\"line\">user-interface vty 0 4</span><br><span class=\"line\">user-interface vty 16 20</span><br><span class=\"line\">#</span><br><span class=\"line\">return</span><br></pre></td></tr></table></figure>\n<p>R3与R2配置类似，LSW2与LSW1类似</p>\n<h4 id=\"主机配置示例\"><a class=\"header-anchor\" href=\"#主机配置示例\">☆</a>主机配置示例</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B.png\" alt=\"主机配置示例\"></p>\n<h3 id=\"结果测试\"><a class=\"header-anchor\" href=\"#结果测试\">☆</a>结果测试</h3>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E7%BB%93%E6%9E%9C%E6%B5%8B%E8%AF%95.png\" alt=\" \"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E7%BB%93%E6%9E%9C%E6%B5%8B%E8%AF%952.png\" alt=\" \"></p>\n","site":{"data":{}},"length":3274,"excerpt":"","more":"<h3 id=\"实验目标\"><a class=\"header-anchor\" href=\"#实验目标\">☆</a>实验目标</h3>\n<ul>\n<li>使用RIP协议实现不同网段之间的通信</li>\n<li>熟练RIP协议的路由配置过程</li>\n<li>加深对vlan技术的理解</li>\n</ul>\n<h3 id=\"实验工具\"><a class=\"header-anchor\" href=\"#实验工具\">☆</a>实验工具</h3>\n<p>eNSP模拟器（510版）</p>\n<h3 id=\"网络拓扑图\"><a class=\"header-anchor\" href=\"#网络拓扑图\">☆</a>网络拓扑图</h3>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/24/RIP%E7%BD%91%E7%BB%9C%E6%8B%93%E6%89%91%E5%9B%BE.png\" alt=\"RIP网络拓扑图\"></p>\n<h3 id=\"主要设备配置\"><a class=\"header-anchor\" href=\"#主要设备配置\">☆</a>主要设备配置</h3>\n<p><font color=\"#00FFFF\">注：以下为设备的配置状态，并非配置命令</font></p>\n<h4 id=\"lsw1\"><a class=\"header-anchor\" href=\"#lsw1\">☆</a>LSW1</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#</span><br><span class=\"line\">sysname ZYDSW1</span><br><span class=\"line\">#</span><br><span class=\"line\">vlan batch 10 12 20 30</span><br><span class=\"line\">#</span><br><span class=\"line\">cluster enable</span><br><span class=\"line\">ntdp enable</span><br><span class=\"line\">ndp enable</span><br><span class=\"line\">#</span><br><span class=\"line\">drop illegal-mac alarm</span><br><span class=\"line\">#</span><br><span class=\"line\">diffserv domain default</span><br><span class=\"line\">#</span><br><span class=\"line\">drop-profile default</span><br><span class=\"line\">#</span><br><span class=\"line\">aaa </span><br><span class=\"line\"> authentication-scheme default</span><br><span class=\"line\"> authorization-scheme default</span><br><span class=\"line\"> accounting-scheme default</span><br><span class=\"line\"> domain default </span><br><span class=\"line\"> domain default_admin </span><br><span class=\"line\"> local-user admin password simple admin</span><br><span class=\"line\"> local-user admin service-type http</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Vlanif1</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Vlanif10</span><br><span class=\"line\"> ip address 192.168.1.1 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface Vlanif12</span><br><span class=\"line\"> ip address 192.168.12.2 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface Vlanif20</span><br><span class=\"line\"> ip address 192.168.2.1 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface Vlanif30</span><br><span class=\"line\"> ip address 192.168.3.1 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface MEth0/0/1</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/1</span><br><span class=\"line\"> port link-type access</span><br><span class=\"line\"> port default vlan 12</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/2</span><br><span class=\"line\"> port link-type access</span><br><span class=\"line\"> port default vlan 10</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/3</span><br><span class=\"line\"> port link-type access</span><br><span class=\"line\"> port default vlan 20</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/4</span><br><span class=\"line\"> port link-type access</span><br><span class=\"line\"> port default vlan 30</span><br><span class=\"line\">#</span><br><span class=\"line\">interface NULL0</span><br><span class=\"line\">#</span><br><span class=\"line\">rip 1</span><br><span class=\"line\"> undo summary</span><br><span class=\"line\"> version 2</span><br><span class=\"line\"> network 192.168.1.0</span><br><span class=\"line\"> network 192.168.2.0</span><br><span class=\"line\"> network 192.168.3.0</span><br><span class=\"line\"> network 192.168.12.0</span><br><span class=\"line\">#</span><br><span class=\"line\">user-interface con 0</span><br><span class=\"line\">user-interface vty 0 4</span><br><span class=\"line\">#</span><br><span class=\"line\">port-group default</span><br><span class=\"line\">#</span><br><span class=\"line\">return</span><br></pre></td></tr></table></figure>\n<h4 id=\"r2\"><a class=\"header-anchor\" href=\"#r2\">☆</a>R2</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#</span><br><span class=\"line\">sysname ZYDR2</span><br><span class=\"line\">#</span><br><span class=\"line\">aaa </span><br><span class=\"line\"> authentication-scheme default</span><br><span class=\"line\"> authorization-scheme default</span><br><span class=\"line\"> accounting-scheme default</span><br><span class=\"line\"> domain default </span><br><span class=\"line\"> domain default_admin </span><br><span class=\"line\"> local-user admin password cipher OOCM4m($F4ajUn1vMEIBNUw#</span><br><span class=\"line\"> local-user admin service-type http</span><br><span class=\"line\">#</span><br><span class=\"line\">firewall zone Local</span><br><span class=\"line\"> priority 16</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Ethernet0/0/0</span><br><span class=\"line\"> ip address 192.168.13.2 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface Ethernet0/0/1</span><br><span class=\"line\"> ip address 192.168.12.1 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/0</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/1</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/2</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/3</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/0</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/1</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/2</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/3</span><br><span class=\"line\">#</span><br><span class=\"line\">wlan</span><br><span class=\"line\">#</span><br><span class=\"line\">interface NULL0</span><br><span class=\"line\">#</span><br><span class=\"line\">rip 1</span><br><span class=\"line\"> undo summary</span><br><span class=\"line\"> version 2</span><br><span class=\"line\"> network 192.168.13.0</span><br><span class=\"line\"> network 192.168.12.0</span><br><span class=\"line\">#</span><br><span class=\"line\">user-interface con 0</span><br><span class=\"line\">user-interface vty 0 4</span><br><span class=\"line\">user-interface vty 16 20</span><br><span class=\"line\">#</span><br><span class=\"line\">return</span><br></pre></td></tr></table></figure>\n<h4 id=\"r1\"><a class=\"header-anchor\" href=\"#r1\">☆</a>R1</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">#</span><br><span class=\"line\">sysname ZYDR1</span><br><span class=\"line\">#</span><br><span class=\"line\">aaa </span><br><span class=\"line\"> authentication-scheme default</span><br><span class=\"line\"> authorization-scheme default</span><br><span class=\"line\"> accounting-scheme default</span><br><span class=\"line\"> domain default </span><br><span class=\"line\"> domain default_admin </span><br><span class=\"line\"> local-user admin password cipher OOCM4m($F4ajUn1vMEIBNUw#</span><br><span class=\"line\"> local-user admin service-type http</span><br><span class=\"line\">#</span><br><span class=\"line\">firewall zone Local</span><br><span class=\"line\"> priority 16</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Ethernet0/0/0</span><br><span class=\"line\"> ip address 192.168.13.1 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface Ethernet0/0/1</span><br><span class=\"line\"> ip address 192.168.24.1 255.255.255.0 </span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/0</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/1</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/2</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface Serial0/0/3</span><br><span class=\"line\"> link-protocol ppp</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/0</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/1</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/2</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/3</span><br><span class=\"line\">#</span><br><span class=\"line\">wlan</span><br><span class=\"line\">#</span><br><span class=\"line\">interface NULL0</span><br><span class=\"line\">#</span><br><span class=\"line\">rip 1</span><br><span class=\"line\"> undo summary</span><br><span class=\"line\"> version 2</span><br><span class=\"line\"> network 192.168.13.0</span><br><span class=\"line\"> network 192.168.24.0</span><br><span class=\"line\">#</span><br><span class=\"line\">user-interface con 0</span><br><span class=\"line\">user-interface vty 0 4</span><br><span class=\"line\">user-interface vty 16 20</span><br><span class=\"line\">#</span><br><span class=\"line\">return</span><br></pre></td></tr></table></figure>\n<p>R3与R2配置类似，LSW2与LSW1类似</p>\n<h4 id=\"主机配置示例\"><a class=\"header-anchor\" href=\"#主机配置示例\">☆</a>主机配置示例</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE%E7%A4%BA%E4%BE%8B.png\" alt=\"主机配置示例\"></p>\n<h3 id=\"结果测试\"><a class=\"header-anchor\" href=\"#结果测试\">☆</a>结果测试</h3>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E7%BB%93%E6%9E%9C%E6%B5%8B%E8%AF%95.png\" alt=\" \"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E7%BB%93%E6%9E%9C%E6%B5%8B%E8%AF%952.png\" alt=\" \"></p>\n"},{"title":"将Java编译成.exe可执行程序","copyright":true,"abbrlink":"5f85a932","notshow":false,"description":"使用idea与exe4j（多图）","date":"2019-05-22T01:42:00.000Z","password":null,"image":["https://data.singlelovely.cn/CoverPicture/5f85a932.jpg!CoverPicture"],"photos":[],"sticky":null,"_content":"\n## 将Java源代码打包成jar包\n\n以`idea`为例，打开`项目结构`(Ctrl+Alt+Shift+S)，选择`Artifacts`，点击加号，选择jar from modules with dependencis...\n\n![图一](https://data.singlelovely.cn/images/20190522091006.png)\n![图二](https://data.singlelovely.cn/images/20190522091120.png)\n\n然后选择`构建`->`构建项目`，便会在out文件夹下生成编译后的jar包\n\n![图三](https://data.singlelovely.cn/images/20190522091415.png)\n\n## 将jar包打包生成.exe文件\n\n首先安装`exe4j`软件，然后按以下步骤执行\n\n![1](https://data.singlelovely.cn/images/20190522091750.png)\n![2](https://data.singlelovely.cn/images/20190522091931.png)\n![3](https://data.singlelovely.cn/images/20190522092120.png)\n![4](https://data.singlelovely.cn/images/20190522092607.png)\n![5](https://data.singlelovely.cn/images/20190522092317.png)\n![6](https://data.singlelovely.cn/images/20190522093002.png)\n![7](https://data.singlelovely.cn/images/20190522093359.png)\n\n接下来，一直点下一步，直到打包完成。\n\n然后测试是否能够正常运行。\n\n## 报错常见问题\n\n- jre目录路径设置不正确（注意相对路径）\n- 32与64位和当前系统不对应\n- 打包程序输出类型选择不正确\n\n## 附\n\nexe4j ：[下载地址](https://exe4j.apponic.com/) (官方)\n\nexe4j,未注册版本会在程序开始提示程序由exe4j打包生成。\n\nexe4j注册码\n```\n用户名和公司名可随便填\nA-XVK258563F-1p4lv7mg7sav\n\nA-XVK209982F-1y0i3h4ywx2h1\n\nA-XVK267351F-dpurrhnyarva\n\nA-XVK204432F-1kkoilo1jy2h3r\n\nA-XVK246130F-1l7msieqiwqnq\n\nA-XVK249554F-pllh351kcke50\n```","source":"_posts/将Java编译成可执行程序.md","raw":"---\ntitle: 将Java编译成.exe可执行程序\ncopyright: true\nabbrlink: 5f85a932\nnotshow: false\ntags:\n  - Java\n  - 学习\n  - 教程\ncategories: Java\ndescription: 使用idea与exe4j（多图）\ndate: 2019-05-22 09:42:00\npassword:\nimage:\n- \"https://data.singlelovely.cn/CoverPicture/5f85a932.jpg!CoverPicture\"\nphotos:\nsticky:\n---\n\n## 将Java源代码打包成jar包\n\n以`idea`为例，打开`项目结构`(Ctrl+Alt+Shift+S)，选择`Artifacts`，点击加号，选择jar from modules with dependencis...\n\n![图一](https://data.singlelovely.cn/images/20190522091006.png)\n![图二](https://data.singlelovely.cn/images/20190522091120.png)\n\n然后选择`构建`->`构建项目`，便会在out文件夹下生成编译后的jar包\n\n![图三](https://data.singlelovely.cn/images/20190522091415.png)\n\n## 将jar包打包生成.exe文件\n\n首先安装`exe4j`软件，然后按以下步骤执行\n\n![1](https://data.singlelovely.cn/images/20190522091750.png)\n![2](https://data.singlelovely.cn/images/20190522091931.png)\n![3](https://data.singlelovely.cn/images/20190522092120.png)\n![4](https://data.singlelovely.cn/images/20190522092607.png)\n![5](https://data.singlelovely.cn/images/20190522092317.png)\n![6](https://data.singlelovely.cn/images/20190522093002.png)\n![7](https://data.singlelovely.cn/images/20190522093359.png)\n\n接下来，一直点下一步，直到打包完成。\n\n然后测试是否能够正常运行。\n\n## 报错常见问题\n\n- jre目录路径设置不正确（注意相对路径）\n- 32与64位和当前系统不对应\n- 打包程序输出类型选择不正确\n\n## 附\n\nexe4j ：[下载地址](https://exe4j.apponic.com/) (官方)\n\nexe4j,未注册版本会在程序开始提示程序由exe4j打包生成。\n\nexe4j注册码\n```\n用户名和公司名可随便填\nA-XVK258563F-1p4lv7mg7sav\n\nA-XVK209982F-1y0i3h4ywx2h1\n\nA-XVK267351F-dpurrhnyarva\n\nA-XVK204432F-1kkoilo1jy2h3r\n\nA-XVK246130F-1l7msieqiwqnq\n\nA-XVK249554F-pllh351kcke50\n```","slug":"将Java编译成可执行程序","published":1,"updated":"2020-02-20T06:06:59.416Z","comments":1,"layout":"post","link":"","_id":"ckec2td3q001dfkupp5nl7yka","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"将java源代码打包成jar包\"><a class=\"header-anchor\" href=\"#将java源代码打包成jar包\">☆</a>将Java源代码打包成jar包</h2>\n<p>以<code>idea</code>为例，打开<code>项目结构</code>(Ctrl+Alt+Shift+S)，选择<code>Artifacts</code>，点击加号，选择jar from modules with dependencis…</p>\n<p><img src=\"https://data.singlelovely.cn/images/20190522091006.png\" alt=\"图一\"><br>\n<img src=\"https://data.singlelovely.cn/images/20190522091120.png\" alt=\"图二\"></p>\n<p>然后选择<code>构建</code>-&gt;<code>构建项目</code>，便会在out文件夹下生成编译后的jar包</p>\n<p><img src=\"https://data.singlelovely.cn/images/20190522091415.png\" alt=\"图三\"></p>\n<h2 id=\"将jar包打包生成-exe文件\"><a class=\"header-anchor\" href=\"#将jar包打包生成-exe文件\">☆</a>将jar包打包生成.exe文件</h2>\n<p>首先安装<code>exe4j</code>软件，然后按以下步骤执行</p>\n<p><img src=\"https://data.singlelovely.cn/images/20190522091750.png\" alt=\"1\"><br>\n<img src=\"https://data.singlelovely.cn/images/20190522091931.png\" alt=\"2\"><br>\n<img src=\"https://data.singlelovely.cn/images/20190522092120.png\" alt=\"3\"><br>\n<img src=\"https://data.singlelovely.cn/images/20190522092607.png\" alt=\"4\"><br>\n<img src=\"https://data.singlelovely.cn/images/20190522092317.png\" alt=\"5\"><br>\n<img src=\"https://data.singlelovely.cn/images/20190522093002.png\" alt=\"6\"><br>\n<img src=\"https://data.singlelovely.cn/images/20190522093359.png\" alt=\"7\"></p>\n<p>接下来，一直点下一步，直到打包完成。</p>\n<p>然后测试是否能够正常运行。</p>\n<h2 id=\"报错常见问题\"><a class=\"header-anchor\" href=\"#报错常见问题\">☆</a>报错常见问题</h2>\n<ul>\n<li>jre目录路径设置不正确（注意相对路径）</li>\n<li>32与64位和当前系统不对应</li>\n<li>打包程序输出类型选择不正确</li>\n</ul>\n<h2 id=\"附\"><a class=\"header-anchor\" href=\"#附\">☆</a>附</h2>\n<p>exe4j ：<a href=\"https://exe4j.apponic.com/\" target=\"_blank\" rel=\"noopener\">下载地址</a> (官方)</p>\n<p>exe4j,未注册版本会在程序开始提示程序由exe4j打包生成。</p>\n<p>exe4j注册码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用户名和公司名可随便填</span><br><span class=\"line\">A-XVK258563F-1p4lv7mg7sav</span><br><span class=\"line\"></span><br><span class=\"line\">A-XVK209982F-1y0i3h4ywx2h1</span><br><span class=\"line\"></span><br><span class=\"line\">A-XVK267351F-dpurrhnyarva</span><br><span class=\"line\"></span><br><span class=\"line\">A-XVK204432F-1kkoilo1jy2h3r</span><br><span class=\"line\"></span><br><span class=\"line\">A-XVK246130F-1l7msieqiwqnq</span><br><span class=\"line\"></span><br><span class=\"line\">A-XVK249554F-pllh351kcke50</span><br></pre></td></tr></table></figure>","site":{"data":{}},"length":499,"excerpt":"","more":"<h2 id=\"将java源代码打包成jar包\"><a class=\"header-anchor\" href=\"#将java源代码打包成jar包\">☆</a>将Java源代码打包成jar包</h2>\n<p>以<code>idea</code>为例，打开<code>项目结构</code>(Ctrl+Alt+Shift+S)，选择<code>Artifacts</code>，点击加号，选择jar from modules with dependencis…</p>\n<p><img src=\"https://data.singlelovely.cn/images/20190522091006.png\" alt=\"图一\"><br>\n<img src=\"https://data.singlelovely.cn/images/20190522091120.png\" alt=\"图二\"></p>\n<p>然后选择<code>构建</code>-&gt;<code>构建项目</code>，便会在out文件夹下生成编译后的jar包</p>\n<p><img src=\"https://data.singlelovely.cn/images/20190522091415.png\" alt=\"图三\"></p>\n<h2 id=\"将jar包打包生成-exe文件\"><a class=\"header-anchor\" href=\"#将jar包打包生成-exe文件\">☆</a>将jar包打包生成.exe文件</h2>\n<p>首先安装<code>exe4j</code>软件，然后按以下步骤执行</p>\n<p><img src=\"https://data.singlelovely.cn/images/20190522091750.png\" alt=\"1\"><br>\n<img src=\"https://data.singlelovely.cn/images/20190522091931.png\" alt=\"2\"><br>\n<img src=\"https://data.singlelovely.cn/images/20190522092120.png\" alt=\"3\"><br>\n<img src=\"https://data.singlelovely.cn/images/20190522092607.png\" alt=\"4\"><br>\n<img src=\"https://data.singlelovely.cn/images/20190522092317.png\" alt=\"5\"><br>\n<img src=\"https://data.singlelovely.cn/images/20190522093002.png\" alt=\"6\"><br>\n<img src=\"https://data.singlelovely.cn/images/20190522093359.png\" alt=\"7\"></p>\n<p>接下来，一直点下一步，直到打包完成。</p>\n<p>然后测试是否能够正常运行。</p>\n<h2 id=\"报错常见问题\"><a class=\"header-anchor\" href=\"#报错常见问题\">☆</a>报错常见问题</h2>\n<ul>\n<li>jre目录路径设置不正确（注意相对路径）</li>\n<li>32与64位和当前系统不对应</li>\n<li>打包程序输出类型选择不正确</li>\n</ul>\n<h2 id=\"附\"><a class=\"header-anchor\" href=\"#附\">☆</a>附</h2>\n<p>exe4j ：<a href=\"https://exe4j.apponic.com/\" target=\"_blank\" rel=\"noopener\">下载地址</a> (官方)</p>\n<p>exe4j,未注册版本会在程序开始提示程序由exe4j打包生成。</p>\n<p>exe4j注册码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用户名和公司名可随便填</span><br><span class=\"line\">A-XVK258563F-1p4lv7mg7sav</span><br><span class=\"line\"></span><br><span class=\"line\">A-XVK209982F-1y0i3h4ywx2h1</span><br><span class=\"line\"></span><br><span class=\"line\">A-XVK267351F-dpurrhnyarva</span><br><span class=\"line\"></span><br><span class=\"line\">A-XVK204432F-1kkoilo1jy2h3r</span><br><span class=\"line\"></span><br><span class=\"line\">A-XVK246130F-1l7msieqiwqnq</span><br><span class=\"line\"></span><br><span class=\"line\">A-XVK249554F-pllh351kcke50</span><br></pre></td></tr></table></figure>"},{"title":"搭建ftp服务器并映射到外网（实验）","copyright":true,"abbrlink":"74b1112a","date":"2018-03-25T08:41:56.000Z","password":null,"_content":"\n### 实验目标\n+  使用RIP协议实现不同网段之间的通信\n+  FTP服务器的搭建\n+  学习NAT协议的的使用\n+  内网IP映射到公网\n\n### 实验工具\n\n eNSP模拟器（510版）\n \n ### 网络拓扑图\n![网络拓扑图][1]\n\n### 主要命令\n **AR**\n```AR\ninterface GigabitEthernet0/0/0\nip address 192.168.21.1 255.255.255.0 \ninterface GigabitEthernet0/0/1\nip address 192.168.13.1 255.255.255.0\ninterface GigabitEthernet0/0/2\nip address 61.67.1.1 255.255.255.0 \nnat server protocol tcp global 61.67.1.5 ftp inside 192.168.4.2 ftp\nnat outbound 2000\nrip 1\n undo summary\n default-route originate\n version 2\n network 192.168.21.0\n network 192.168.13.0\n```\n **R3**\n```R3\ninterface Ethernet0/0/0\n ip address 192.168.12.1 255.255.255.0\ninterface Ethernet0/0/1\n ip address 192.168.21.2 255.255.255.0\nrip 1\n undo summary\n version 2\n network 192.168.12.0\n network 192.168.21.0\n```\n **LSW1**\n```LSW1\nvlan batch 10 12 20\n#\ncluster enable\nntdp enable\nndp enable\n#\ndrop illegal-mac alarm\n#\ndhcp enable\n#\nrip 1\n undo summary\n version 2\n network 192.168.1.0\n network 192.168.2.0\n network 192.168.12.0\n#\ninterface GigabitEthernet0/0/1\n port link-type access\n port default vlan 10\n#\ninterface GigabitEthernet0/0/3\n port link-type access\n port default vlan 12\n#\ninterface GigabitEthernet0/0/2\n port link-type access\n port default vlan 20\n```\n\n### 主要配置\n#### AR1\n![1][2]\n![2][3]\n![3][4]\n#### LSW1\n![LSW1][5]\n#### R1\n![R1][6]\n#### R2\n![R2][7]\n#### R3\n![R3][8]\n\n### 测试效果\n\n![ ][9]\n![ ][10]\n\n\n  [1]: https://data.singlelovely.cn/xsj/2018/3/25/%E6%8B%93%E6%89%91%E5%9B%BE.png\n  [2]: https://data.singlelovely.cn/xsj/2018/3/25/AR1.png\n  [3]: https://data.singlelovely.cn/xsj/2018/3/25/AR2.png\n  [4]: https://data.singlelovely.cn/xsj/2018/3/25/AR3.png\n  [5]: https://data.singlelovely.cn/xsj/2018/3/25/LSW1.png\n  [6]: https://data.singlelovely.cn/xsj/2018/3/25/R1.png\n  [7]: https://data.singlelovely.cn/xsj/2018/3/25/R2.png\n  [8]: https://data.singlelovely.cn/xsj/2018/3/25/R3.png\n  [9]: https://data.singlelovely.cn/xsj/2018/3/25/%E5%AE%A2%E6%88%B7%E7%AB%AF.png\n  [10]: https://data.singlelovely.cn/xsj/2018/3/25/%E7%BB%93%E6%9E%9C%E6%B5%8B%E8%AF%95.png","source":"_posts/搭建ftp服务器并t映射到外网（实验）.md","raw":"---\ntitle: 搭建ftp服务器并映射到外网（实验）\ntags:\n  - eNSP\n  - ICT\n  - 数据通信\ncategories: 网络\ncopyright: true\nabbrlink: 74b1112a\ndate: 2018-03-25 16:41:56\npassword:\n---\n\n### 实验目标\n+  使用RIP协议实现不同网段之间的通信\n+  FTP服务器的搭建\n+  学习NAT协议的的使用\n+  内网IP映射到公网\n\n### 实验工具\n\n eNSP模拟器（510版）\n \n ### 网络拓扑图\n![网络拓扑图][1]\n\n### 主要命令\n **AR**\n```AR\ninterface GigabitEthernet0/0/0\nip address 192.168.21.1 255.255.255.0 \ninterface GigabitEthernet0/0/1\nip address 192.168.13.1 255.255.255.0\ninterface GigabitEthernet0/0/2\nip address 61.67.1.1 255.255.255.0 \nnat server protocol tcp global 61.67.1.5 ftp inside 192.168.4.2 ftp\nnat outbound 2000\nrip 1\n undo summary\n default-route originate\n version 2\n network 192.168.21.0\n network 192.168.13.0\n```\n **R3**\n```R3\ninterface Ethernet0/0/0\n ip address 192.168.12.1 255.255.255.0\ninterface Ethernet0/0/1\n ip address 192.168.21.2 255.255.255.0\nrip 1\n undo summary\n version 2\n network 192.168.12.0\n network 192.168.21.0\n```\n **LSW1**\n```LSW1\nvlan batch 10 12 20\n#\ncluster enable\nntdp enable\nndp enable\n#\ndrop illegal-mac alarm\n#\ndhcp enable\n#\nrip 1\n undo summary\n version 2\n network 192.168.1.0\n network 192.168.2.0\n network 192.168.12.0\n#\ninterface GigabitEthernet0/0/1\n port link-type access\n port default vlan 10\n#\ninterface GigabitEthernet0/0/3\n port link-type access\n port default vlan 12\n#\ninterface GigabitEthernet0/0/2\n port link-type access\n port default vlan 20\n```\n\n### 主要配置\n#### AR1\n![1][2]\n![2][3]\n![3][4]\n#### LSW1\n![LSW1][5]\n#### R1\n![R1][6]\n#### R2\n![R2][7]\n#### R3\n![R3][8]\n\n### 测试效果\n\n![ ][9]\n![ ][10]\n\n\n  [1]: https://data.singlelovely.cn/xsj/2018/3/25/%E6%8B%93%E6%89%91%E5%9B%BE.png\n  [2]: https://data.singlelovely.cn/xsj/2018/3/25/AR1.png\n  [3]: https://data.singlelovely.cn/xsj/2018/3/25/AR2.png\n  [4]: https://data.singlelovely.cn/xsj/2018/3/25/AR3.png\n  [5]: https://data.singlelovely.cn/xsj/2018/3/25/LSW1.png\n  [6]: https://data.singlelovely.cn/xsj/2018/3/25/R1.png\n  [7]: https://data.singlelovely.cn/xsj/2018/3/25/R2.png\n  [8]: https://data.singlelovely.cn/xsj/2018/3/25/R3.png\n  [9]: https://data.singlelovely.cn/xsj/2018/3/25/%E5%AE%A2%E6%88%B7%E7%AB%AF.png\n  [10]: https://data.singlelovely.cn/xsj/2018/3/25/%E7%BB%93%E6%9E%9C%E6%B5%8B%E8%AF%95.png","slug":"搭建ftp服务器并t映射到外网（实验）","published":1,"updated":"2020-02-20T06:06:59.417Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3r001efkuph6kf4mii","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h3 id=\"实验目标\"><a class=\"header-anchor\" href=\"#实验目标\">☆</a>实验目标</h3>\n<ul>\n<li>使用RIP协议实现不同网段之间的通信</li>\n<li>FTP服务器的搭建</li>\n<li>学习NAT协议的的使用</li>\n<li>内网IP映射到公网</li>\n</ul>\n<h3 id=\"实验工具\"><a class=\"header-anchor\" href=\"#实验工具\">☆</a>实验工具</h3>\n<p>eNSP模拟器（510版）</p>\n<h3 id=\"网络拓扑图\"><a class=\"header-anchor\" href=\"#网络拓扑图\">☆</a>网络拓扑图</h3>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E6%8B%93%E6%89%91%E5%9B%BE.png\" alt=\"网络拓扑图\"></p>\n<h3 id=\"主要命令\"><a class=\"header-anchor\" href=\"#主要命令\">☆</a>主要命令</h3>\n<p><strong>AR</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface GigabitEthernet0/0/0</span><br><span class=\"line\">ip address 192.168.21.1 255.255.255.0 </span><br><span class=\"line\">interface GigabitEthernet0/0/1</span><br><span class=\"line\">ip address 192.168.13.1 255.255.255.0</span><br><span class=\"line\">interface GigabitEthernet0/0/2</span><br><span class=\"line\">ip address 61.67.1.1 255.255.255.0 </span><br><span class=\"line\">nat server protocol tcp global 61.67.1.5 ftp inside 192.168.4.2 ftp</span><br><span class=\"line\">nat outbound 2000</span><br><span class=\"line\">rip 1</span><br><span class=\"line\"> undo summary</span><br><span class=\"line\"> default-route originate</span><br><span class=\"line\"> version 2</span><br><span class=\"line\"> network 192.168.21.0</span><br><span class=\"line\"> network 192.168.13.0</span><br></pre></td></tr></table></figure>\n<p><strong>R3</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface Ethernet0/0/0</span><br><span class=\"line\"> ip address 192.168.12.1 255.255.255.0</span><br><span class=\"line\">interface Ethernet0/0/1</span><br><span class=\"line\"> ip address 192.168.21.2 255.255.255.0</span><br><span class=\"line\">rip 1</span><br><span class=\"line\"> undo summary</span><br><span class=\"line\"> version 2</span><br><span class=\"line\"> network 192.168.12.0</span><br><span class=\"line\"> network 192.168.21.0</span><br></pre></td></tr></table></figure>\n<p><strong>LSW1</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vlan batch 10 12 20</span><br><span class=\"line\">#</span><br><span class=\"line\">cluster enable</span><br><span class=\"line\">ntdp enable</span><br><span class=\"line\">ndp enable</span><br><span class=\"line\">#</span><br><span class=\"line\">drop illegal-mac alarm</span><br><span class=\"line\">#</span><br><span class=\"line\">dhcp enable</span><br><span class=\"line\">#</span><br><span class=\"line\">rip 1</span><br><span class=\"line\"> undo summary</span><br><span class=\"line\"> version 2</span><br><span class=\"line\"> network 192.168.1.0</span><br><span class=\"line\"> network 192.168.2.0</span><br><span class=\"line\"> network 192.168.12.0</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/1</span><br><span class=\"line\"> port link-type access</span><br><span class=\"line\"> port default vlan 10</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/3</span><br><span class=\"line\"> port link-type access</span><br><span class=\"line\"> port default vlan 12</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/2</span><br><span class=\"line\"> port link-type access</span><br><span class=\"line\"> port default vlan 20</span><br></pre></td></tr></table></figure>\n<h3 id=\"主要配置\"><a class=\"header-anchor\" href=\"#主要配置\">☆</a>主要配置</h3>\n<h4 id=\"ar1\"><a class=\"header-anchor\" href=\"#ar1\">☆</a>AR1</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/AR1.png\" alt=\"1\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/AR2.png\" alt=\"2\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/AR3.png\" alt=\"3\"></p>\n<h4 id=\"lsw1\"><a class=\"header-anchor\" href=\"#lsw1\">☆</a>LSW1</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/LSW1.png\" alt=\"LSW1\"></p>\n<h4 id=\"r1\"><a class=\"header-anchor\" href=\"#r1\">☆</a>R1</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/R1.png\" alt=\"R1\"></p>\n<h4 id=\"r2\"><a class=\"header-anchor\" href=\"#r2\">☆</a>R2</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/R2.png\" alt=\"R2\"></p>\n<h4 id=\"r3\"><a class=\"header-anchor\" href=\"#r3\">☆</a>R3</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/R3.png\" alt=\"R3\"></p>\n<h3 id=\"测试效果\"><a class=\"header-anchor\" href=\"#测试效果\">☆</a>测试效果</h3>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E5%AE%A2%E6%88%B7%E7%AB%AF.png\" alt=\" \"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E7%BB%93%E6%9E%9C%E6%B5%8B%E8%AF%95.png\" alt=\" \"></p>\n","site":{"data":{}},"length":1164,"excerpt":"","more":"<h3 id=\"实验目标\"><a class=\"header-anchor\" href=\"#实验目标\">☆</a>实验目标</h3>\n<ul>\n<li>使用RIP协议实现不同网段之间的通信</li>\n<li>FTP服务器的搭建</li>\n<li>学习NAT协议的的使用</li>\n<li>内网IP映射到公网</li>\n</ul>\n<h3 id=\"实验工具\"><a class=\"header-anchor\" href=\"#实验工具\">☆</a>实验工具</h3>\n<p>eNSP模拟器（510版）</p>\n<h3 id=\"网络拓扑图\"><a class=\"header-anchor\" href=\"#网络拓扑图\">☆</a>网络拓扑图</h3>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E6%8B%93%E6%89%91%E5%9B%BE.png\" alt=\"网络拓扑图\"></p>\n<h3 id=\"主要命令\"><a class=\"header-anchor\" href=\"#主要命令\">☆</a>主要命令</h3>\n<p><strong>AR</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface GigabitEthernet0/0/0</span><br><span class=\"line\">ip address 192.168.21.1 255.255.255.0 </span><br><span class=\"line\">interface GigabitEthernet0/0/1</span><br><span class=\"line\">ip address 192.168.13.1 255.255.255.0</span><br><span class=\"line\">interface GigabitEthernet0/0/2</span><br><span class=\"line\">ip address 61.67.1.1 255.255.255.0 </span><br><span class=\"line\">nat server protocol tcp global 61.67.1.5 ftp inside 192.168.4.2 ftp</span><br><span class=\"line\">nat outbound 2000</span><br><span class=\"line\">rip 1</span><br><span class=\"line\"> undo summary</span><br><span class=\"line\"> default-route originate</span><br><span class=\"line\"> version 2</span><br><span class=\"line\"> network 192.168.21.0</span><br><span class=\"line\"> network 192.168.13.0</span><br></pre></td></tr></table></figure>\n<p><strong>R3</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface Ethernet0/0/0</span><br><span class=\"line\"> ip address 192.168.12.1 255.255.255.0</span><br><span class=\"line\">interface Ethernet0/0/1</span><br><span class=\"line\"> ip address 192.168.21.2 255.255.255.0</span><br><span class=\"line\">rip 1</span><br><span class=\"line\"> undo summary</span><br><span class=\"line\"> version 2</span><br><span class=\"line\"> network 192.168.12.0</span><br><span class=\"line\"> network 192.168.21.0</span><br></pre></td></tr></table></figure>\n<p><strong>LSW1</strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vlan batch 10 12 20</span><br><span class=\"line\">#</span><br><span class=\"line\">cluster enable</span><br><span class=\"line\">ntdp enable</span><br><span class=\"line\">ndp enable</span><br><span class=\"line\">#</span><br><span class=\"line\">drop illegal-mac alarm</span><br><span class=\"line\">#</span><br><span class=\"line\">dhcp enable</span><br><span class=\"line\">#</span><br><span class=\"line\">rip 1</span><br><span class=\"line\"> undo summary</span><br><span class=\"line\"> version 2</span><br><span class=\"line\"> network 192.168.1.0</span><br><span class=\"line\"> network 192.168.2.0</span><br><span class=\"line\"> network 192.168.12.0</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/1</span><br><span class=\"line\"> port link-type access</span><br><span class=\"line\"> port default vlan 10</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/3</span><br><span class=\"line\"> port link-type access</span><br><span class=\"line\"> port default vlan 12</span><br><span class=\"line\">#</span><br><span class=\"line\">interface GigabitEthernet0/0/2</span><br><span class=\"line\"> port link-type access</span><br><span class=\"line\"> port default vlan 20</span><br></pre></td></tr></table></figure>\n<h3 id=\"主要配置\"><a class=\"header-anchor\" href=\"#主要配置\">☆</a>主要配置</h3>\n<h4 id=\"ar1\"><a class=\"header-anchor\" href=\"#ar1\">☆</a>AR1</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/AR1.png\" alt=\"1\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/AR2.png\" alt=\"2\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/AR3.png\" alt=\"3\"></p>\n<h4 id=\"lsw1\"><a class=\"header-anchor\" href=\"#lsw1\">☆</a>LSW1</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/LSW1.png\" alt=\"LSW1\"></p>\n<h4 id=\"r1\"><a class=\"header-anchor\" href=\"#r1\">☆</a>R1</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/R1.png\" alt=\"R1\"></p>\n<h4 id=\"r2\"><a class=\"header-anchor\" href=\"#r2\">☆</a>R2</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/R2.png\" alt=\"R2\"></p>\n<h4 id=\"r3\"><a class=\"header-anchor\" href=\"#r3\">☆</a>R3</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/R3.png\" alt=\"R3\"></p>\n<h3 id=\"测试效果\"><a class=\"header-anchor\" href=\"#测试效果\">☆</a>测试效果</h3>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E5%AE%A2%E6%88%B7%E7%AB%AF.png\" alt=\" \"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E7%BB%93%E6%9E%9C%E6%B5%8B%E8%AF%95.png\" alt=\" \"></p>\n"},{"title":"安装Genymotion模拟器并集成在AS中","copyright":true,"abbrlink":"fec62b1b","date":"2018-03-08T12:47:08.000Z","password":null,"_content":"\n\n&emsp;&emsp; Genymotion模拟器是面向开发者的一款安卓模拟器，运行速度快，功能强大，体积小，占用系统资源少，安装完成后可以集成在Android Studio 或者 Eclipse 中，一键调用进行项目调试。\n\n### 安装Genymotion\n\n#### 注册  下载\n\n&emsp;&emsp; 去genymotion的[官网][1]注册下载，下载之前必须要注册，登录选项在注册按钮里面\n\n![][2]\n\n然后去下载页面下载，genymotion需要依赖VirtualBox，如果没有装过VirtualBox，请下载带VirtualBox版本的（注意\nVirtualBox一般不需要升级，以免出现不必要的问题）\n\n![][3]\n\n#### 安装\n\n附：VirtualBox的界面，一般不需要打开，其他软件会自己调用\n\n![][4]\n\n下载后安装，安装路径自己指定一个，然后一路点下一步就行了\n\n#### 创建模拟器\n\n![][5]\n\n首次打开genymotion会提示许可协议，同意就好\n\n![][6]\n\n然后会提示输入授权码，可以去官网买一个，或者点Personal Use（个人用户免费）\n\n![][7]\n\n然后会扫描你电脑上的模拟器，没有的话就会提示添加\n\n![][8]\n\n点击确认后，会有一个登陆账号的步骤\n然后就会看到可以创建模拟器的系统选项，选一个想要的系统版本，点击next开始下载\n\n![][9]\n\n![][10]\n\n注： 同一api的模拟器在下载了一次以后就不需要下载了，下次创建会瞬间创建成功。\n完成以后点击start就可以启动模拟器了\n\n![][11]\n\n![][12]\n\n\n### 将genymotion集成在AS中\n\n进入AS中，安装genymotion插件\n安装步骤见官网说明：https://www.genymotion.com/plugins/\n\n#### AS中安装genymotion插件\n\n打开File——Settings——Plugins——Browse Repositories界面\n\n![][13]\n\n![][14]\n\n搜索找到genymotion，点击install安装\n安装完会在主界面上多一个图标\n\n![][15]\n\n#### 将AS与genymotion关联\n\n点击打开，然后设置genymotion的安装目录，如果没有报错就正常\n进入genymotion的设置中，选择ABD，然后选择使用SDK，输入电脑上的SDK存放目录\n\n![][16]\n\n重启AS和genymotion\n\n在AS中打开genymotion插件就能看到已经安装的模拟器了\n\n然后就可以用了···········\n\n\n\nps：使用genymotion后可以将Android SDK中的system imagine文件删掉。\n\nsystem imagine相当于谷歌系统镜像，genymotion也会下载系统镜像，但system imagine一个api版本5G左右，genymotion一个版本400M左右，可以节省大量空间，且genymotion模拟器的功能更加全面。\n\n\n\n\n\n\n  [1]: http://www.genymotion.net\n  [2]: https://data.singlelovely.cn/xsj/20182/genymotion1.png\n  [3]: https://data.singlelovely.cn/xsj/20182/genymotion%20%282%29.png\n  [4]: https://data.singlelovely.cn/xsj/20182/genymotion%20%283%29.png\n  [5]: https://data.singlelovely.cn/xsj/20182/genymotion%203.png\n  [6]: https://data.singlelovely.cn/xsj/20182/genymotion%206.png\n  [7]: https://data.singlelovely.cn/xsj/20182/genymotion%20%2810%29.png\n  [8]: https://data.singlelovely.cn/xsj/20182/genymotion%20%287%29.png\n  [9]: https://data.singlelovely.cn/xsj/20182/genymotion%20%284%29.png\n  [10]: https://data.singlelovely.cn/xsj/20182/genymotion%20%285%29.png\n  [11]: https://data.singlelovely.cn/xsj/20182/1519211198852.jpg\n  [12]: https://data.singlelovely.cn/xsj/20182/1519211344303.jpg\n  [13]: https://data.singlelovely.cn/xsj/20182/1519211955563.jpg\n  [14]: https://data.singlelovely.cn/xsj/20182/1519211990273.jpg\n  [15]: https://data.singlelovely.cn/xsj/20182/1519212111510.jpg\n  [16]: https://data.singlelovely.cn/xsj/20182/1519212300865.jpg","source":"_posts/安装Genymotion并关联到Android Studio.md","raw":"---\ntitle: 安装Genymotion模拟器并集成在AS中\ntags:\n  - Android\ncategories: Android\ncopyright: true\nabbrlink: fec62b1b\ndate: 2018-03-08 20:47:08\npassword:\n---\n\n\n&emsp;&emsp; Genymotion模拟器是面向开发者的一款安卓模拟器，运行速度快，功能强大，体积小，占用系统资源少，安装完成后可以集成在Android Studio 或者 Eclipse 中，一键调用进行项目调试。\n\n### 安装Genymotion\n\n#### 注册  下载\n\n&emsp;&emsp; 去genymotion的[官网][1]注册下载，下载之前必须要注册，登录选项在注册按钮里面\n\n![][2]\n\n然后去下载页面下载，genymotion需要依赖VirtualBox，如果没有装过VirtualBox，请下载带VirtualBox版本的（注意\nVirtualBox一般不需要升级，以免出现不必要的问题）\n\n![][3]\n\n#### 安装\n\n附：VirtualBox的界面，一般不需要打开，其他软件会自己调用\n\n![][4]\n\n下载后安装，安装路径自己指定一个，然后一路点下一步就行了\n\n#### 创建模拟器\n\n![][5]\n\n首次打开genymotion会提示许可协议，同意就好\n\n![][6]\n\n然后会提示输入授权码，可以去官网买一个，或者点Personal Use（个人用户免费）\n\n![][7]\n\n然后会扫描你电脑上的模拟器，没有的话就会提示添加\n\n![][8]\n\n点击确认后，会有一个登陆账号的步骤\n然后就会看到可以创建模拟器的系统选项，选一个想要的系统版本，点击next开始下载\n\n![][9]\n\n![][10]\n\n注： 同一api的模拟器在下载了一次以后就不需要下载了，下次创建会瞬间创建成功。\n完成以后点击start就可以启动模拟器了\n\n![][11]\n\n![][12]\n\n\n### 将genymotion集成在AS中\n\n进入AS中，安装genymotion插件\n安装步骤见官网说明：https://www.genymotion.com/plugins/\n\n#### AS中安装genymotion插件\n\n打开File——Settings——Plugins——Browse Repositories界面\n\n![][13]\n\n![][14]\n\n搜索找到genymotion，点击install安装\n安装完会在主界面上多一个图标\n\n![][15]\n\n#### 将AS与genymotion关联\n\n点击打开，然后设置genymotion的安装目录，如果没有报错就正常\n进入genymotion的设置中，选择ABD，然后选择使用SDK，输入电脑上的SDK存放目录\n\n![][16]\n\n重启AS和genymotion\n\n在AS中打开genymotion插件就能看到已经安装的模拟器了\n\n然后就可以用了···········\n\n\n\nps：使用genymotion后可以将Android SDK中的system imagine文件删掉。\n\nsystem imagine相当于谷歌系统镜像，genymotion也会下载系统镜像，但system imagine一个api版本5G左右，genymotion一个版本400M左右，可以节省大量空间，且genymotion模拟器的功能更加全面。\n\n\n\n\n\n\n  [1]: http://www.genymotion.net\n  [2]: https://data.singlelovely.cn/xsj/20182/genymotion1.png\n  [3]: https://data.singlelovely.cn/xsj/20182/genymotion%20%282%29.png\n  [4]: https://data.singlelovely.cn/xsj/20182/genymotion%20%283%29.png\n  [5]: https://data.singlelovely.cn/xsj/20182/genymotion%203.png\n  [6]: https://data.singlelovely.cn/xsj/20182/genymotion%206.png\n  [7]: https://data.singlelovely.cn/xsj/20182/genymotion%20%2810%29.png\n  [8]: https://data.singlelovely.cn/xsj/20182/genymotion%20%287%29.png\n  [9]: https://data.singlelovely.cn/xsj/20182/genymotion%20%284%29.png\n  [10]: https://data.singlelovely.cn/xsj/20182/genymotion%20%285%29.png\n  [11]: https://data.singlelovely.cn/xsj/20182/1519211198852.jpg\n  [12]: https://data.singlelovely.cn/xsj/20182/1519211344303.jpg\n  [13]: https://data.singlelovely.cn/xsj/20182/1519211955563.jpg\n  [14]: https://data.singlelovely.cn/xsj/20182/1519211990273.jpg\n  [15]: https://data.singlelovely.cn/xsj/20182/1519212111510.jpg\n  [16]: https://data.singlelovely.cn/xsj/20182/1519212300865.jpg","slug":"安装Genymotion并关联到Android Studio","published":1,"updated":"2020-04-04T15:10:44.705Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3s001ffkupx73e919x","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>   Genymotion模拟器是面向开发者的一款安卓模拟器，运行速度快，功能强大，体积小，占用系统资源少，安装完成后可以集成在Android Studio 或者 Eclipse 中，一键调用进行项目调试。</p>\n<h3 id=\"安装genymotion\"><a class=\"header-anchor\" href=\"#安装genymotion\">☆</a>安装Genymotion</h3>\n<h4 id=\"注册-下载\"><a class=\"header-anchor\" href=\"#注册-下载\">☆</a>注册  下载</h4>\n<p>   去genymotion的<a href=\"http://www.genymotion.net\" target=\"_blank\" rel=\"noopener\">官网</a>注册下载，下载之前必须要注册，登录选项在注册按钮里面</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion1.png\" alt></p>\n<p>然后去下载页面下载，genymotion需要依赖VirtualBox，如果没有装过VirtualBox，请下载带VirtualBox版本的（注意<br>\nVirtualBox一般不需要升级，以免出现不必要的问题）</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%20%282%29.png\" alt></p>\n<h4 id=\"安装\"><a class=\"header-anchor\" href=\"#安装\">☆</a>安装</h4>\n<p>附：VirtualBox的界面，一般不需要打开，其他软件会自己调用</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%20%283%29.png\" alt></p>\n<p>下载后安装，安装路径自己指定一个，然后一路点下一步就行了</p>\n<h4 id=\"创建模拟器\"><a class=\"header-anchor\" href=\"#创建模拟器\">☆</a>创建模拟器</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%203.png\" alt></p>\n<p>首次打开genymotion会提示许可协议，同意就好</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%206.png\" alt></p>\n<p>然后会提示输入授权码，可以去官网买一个，或者点Personal Use（个人用户免费）</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%20%2810%29.png\" alt></p>\n<p>然后会扫描你电脑上的模拟器，没有的话就会提示添加</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%20%287%29.png\" alt></p>\n<p>点击确认后，会有一个登陆账号的步骤<br>\n然后就会看到可以创建模拟器的系统选项，选一个想要的系统版本，点击next开始下载</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%20%284%29.png\" alt></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%20%285%29.png\" alt></p>\n<p>注： 同一api的模拟器在下载了一次以后就不需要下载了，下次创建会瞬间创建成功。<br>\n完成以后点击start就可以启动模拟器了</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/1519211198852.jpg\" alt></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/1519211344303.jpg\" alt></p>\n<h3 id=\"将genymotion集成在as中\"><a class=\"header-anchor\" href=\"#将genymotion集成在as中\">☆</a>将genymotion集成在AS中</h3>\n<p>进入AS中，安装genymotion插件<br>\n安装步骤见官网说明：<a href=\"https://www.genymotion.com/plugins/\" target=\"_blank\" rel=\"noopener\">https://www.genymotion.com/plugins/</a></p>\n<h4 id=\"as中安装genymotion插件\"><a class=\"header-anchor\" href=\"#as中安装genymotion插件\">☆</a>AS中安装genymotion插件</h4>\n<p>打开File——Settings——Plugins——Browse Repositories界面</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/1519211955563.jpg\" alt></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/1519211990273.jpg\" alt></p>\n<p>搜索找到genymotion，点击install安装<br>\n安装完会在主界面上多一个图标</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/1519212111510.jpg\" alt></p>\n<h4 id=\"将as与genymotion关联\"><a class=\"header-anchor\" href=\"#将as与genymotion关联\">☆</a>将AS与genymotion关联</h4>\n<p>点击打开，然后设置genymotion的安装目录，如果没有报错就正常<br>\n进入genymotion的设置中，选择ABD，然后选择使用SDK，输入电脑上的SDK存放目录</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/1519212300865.jpg\" alt></p>\n<p>重启AS和genymotion</p>\n<p>在AS中打开genymotion插件就能看到已经安装的模拟器了</p>\n<p>然后就可以用了···········</p>\n<p>ps：使用genymotion后可以将Android SDK中的system imagine文件删掉。</p>\n<p>system imagine相当于谷歌系统镜像，genymotion也会下载系统镜像，但system imagine一个api版本5G左右，genymotion一个版本400M左右，可以节省大量空间，且genymotion模拟器的功能更加全面。</p>\n","site":{"data":{}},"length":1070,"excerpt":"","more":"<p>   Genymotion模拟器是面向开发者的一款安卓模拟器，运行速度快，功能强大，体积小，占用系统资源少，安装完成后可以集成在Android Studio 或者 Eclipse 中，一键调用进行项目调试。</p>\n<h3 id=\"安装genymotion\"><a class=\"header-anchor\" href=\"#安装genymotion\">☆</a>安装Genymotion</h3>\n<h4 id=\"注册-下载\"><a class=\"header-anchor\" href=\"#注册-下载\">☆</a>注册  下载</h4>\n<p>   去genymotion的<a href=\"http://www.genymotion.net\" target=\"_blank\" rel=\"noopener\">官网</a>注册下载，下载之前必须要注册，登录选项在注册按钮里面</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion1.png\" alt></p>\n<p>然后去下载页面下载，genymotion需要依赖VirtualBox，如果没有装过VirtualBox，请下载带VirtualBox版本的（注意<br>\nVirtualBox一般不需要升级，以免出现不必要的问题）</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%20%282%29.png\" alt></p>\n<h4 id=\"安装\"><a class=\"header-anchor\" href=\"#安装\">☆</a>安装</h4>\n<p>附：VirtualBox的界面，一般不需要打开，其他软件会自己调用</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%20%283%29.png\" alt></p>\n<p>下载后安装，安装路径自己指定一个，然后一路点下一步就行了</p>\n<h4 id=\"创建模拟器\"><a class=\"header-anchor\" href=\"#创建模拟器\">☆</a>创建模拟器</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%203.png\" alt></p>\n<p>首次打开genymotion会提示许可协议，同意就好</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%206.png\" alt></p>\n<p>然后会提示输入授权码，可以去官网买一个，或者点Personal Use（个人用户免费）</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%20%2810%29.png\" alt></p>\n<p>然后会扫描你电脑上的模拟器，没有的话就会提示添加</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%20%287%29.png\" alt></p>\n<p>点击确认后，会有一个登陆账号的步骤<br>\n然后就会看到可以创建模拟器的系统选项，选一个想要的系统版本，点击next开始下载</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%20%284%29.png\" alt></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/genymotion%20%285%29.png\" alt></p>\n<p>注： 同一api的模拟器在下载了一次以后就不需要下载了，下次创建会瞬间创建成功。<br>\n完成以后点击start就可以启动模拟器了</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/1519211198852.jpg\" alt></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/1519211344303.jpg\" alt></p>\n<h3 id=\"将genymotion集成在as中\"><a class=\"header-anchor\" href=\"#将genymotion集成在as中\">☆</a>将genymotion集成在AS中</h3>\n<p>进入AS中，安装genymotion插件<br>\n安装步骤见官网说明：<a href=\"https://www.genymotion.com/plugins/\" target=\"_blank\" rel=\"noopener\">https://www.genymotion.com/plugins/</a></p>\n<h4 id=\"as中安装genymotion插件\"><a class=\"header-anchor\" href=\"#as中安装genymotion插件\">☆</a>AS中安装genymotion插件</h4>\n<p>打开File——Settings——Plugins——Browse Repositories界面</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/1519211955563.jpg\" alt></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/1519211990273.jpg\" alt></p>\n<p>搜索找到genymotion，点击install安装<br>\n安装完会在主界面上多一个图标</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/1519212111510.jpg\" alt></p>\n<h4 id=\"将as与genymotion关联\"><a class=\"header-anchor\" href=\"#将as与genymotion关联\">☆</a>将AS与genymotion关联</h4>\n<p>点击打开，然后设置genymotion的安装目录，如果没有报错就正常<br>\n进入genymotion的设置中，选择ABD，然后选择使用SDK，输入电脑上的SDK存放目录</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/1519212300865.jpg\" alt></p>\n<p>重启AS和genymotion</p>\n<p>在AS中打开genymotion插件就能看到已经安装的模拟器了</p>\n<p>然后就可以用了···········</p>\n<p>ps：使用genymotion后可以将Android SDK中的system imagine文件删掉。</p>\n<p>system imagine相当于谷歌系统镜像，genymotion也会下载系统镜像，但system imagine一个api版本5G左右，genymotion一个版本400M左右，可以节省大量空间，且genymotion模拟器的功能更加全面。</p>\n"},{"title":"Windows上的效率启动器Wox，教你如何优雅地使用电脑","copyright":true,"abbrlink":"98bc273a","date":"2018-04-19T15:23:32.000Z","password":null,"_content":"&emsp;&emsp;在日常的电脑使用操作中，我们常常需要花很多的时间去做同一件事情，比如启动软件的操作：点击开始菜单->寻找软件图标->点击启动。为了方便我们快速的启动软件，我们通常还会把最常用的软件图标放到任务栏当中，你或许以为这就是启动软件的极限操作了。但是，我今天要告诉你的是一款效率神器Wox，教你如何优雅地使用windows电脑，而它的作用不仅仅在于快速启动软件。\n{% meting \"921690953\" \"netease\" \"playlist\" \"autoplay\" \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n&emsp;&emsp;Wox是一款windows下的免费开源软件，学习门槛低，能够通过快捷键快速地调用并完成自己想要的操作，整个过程表现的十分流畅，是一款大家普遍用完之后爱不释手的效率软件。它主要具有以下几个方面的功能：\n\n+ **快速启动** 支持中文模糊搜索，甚至支持绿色软件快速启动。\n+ **网页搜索** 支持在Wox搜索框中直接输入网址或者需要搜索的关键词，然后自动跳入到浏览器中进行搜索。\n+ **文件夹/文件搜索** 利用everything插件，支持进行本地所有硬盘文件夹以及文件搜索。\n+ **插件管理** Wox得益于强大的插件管理，通过Wox搜索框可以完成有道翻译、快速计算器、搜索浏览器书签并打开、移除USB、命令行操作、关机等等。\n\n\n\n<font color=#0099ff> Wox - 被誉为 Alfred 的 Windows 版最佳替代品</font>\n&emsp;&emsp;你可以将 Wox 看作一个高效的本地快速搜索框，通过快捷键呼出，然后输入关键字来搜索程序进行快速启动，或者搜索本地硬盘的文件，打开百度、Google 进行搜索，甚至是通过一些插件的功能实现单词翻译、关闭屏幕、查询剪贴板历史、查询编程文档、查询天气等更多功能。\n![ ](https://data.singlelovely.cn/xsj/2018/4/20/wox1.png)\n\n&emsp;&emsp;Wox 最大的特点是可以支持中文拼音的模糊匹配。譬如说你想搜索“设备管理器”，那么只需输入\"sheb\"就能匹配得到。\n\n<font color=#0099ff>增加程序的搜索目录：</font>\n\n&emsp;&emsp;一开始使用 Wox 时，你会发现，除了开始菜单里面有的程序能搜索到之外，自己的一些绿色软件或者安装到非默认目录的软件都找不到。这时你可以在 Wox 里输入 settings 回车或托盘图标右键选择 Settings 进入设置界面，然后在 程序 中按 增加 按钮添加你的软件所在的文件夹。\n![ ](https://data.singlelovely.cn/xsj/2018/4/20/wox2.png)\n\n<font color=#0099ff>网页搜索功能：</font>\n&emsp;&emsp;Wox 的网页搜索功能是可以让用户自己为某个搜索引擎设置一个关键字。举个简单例子，如果用户经常使用百度搜索。那么用户就可以在 Wox 的设置里的 Web Search 选项中，点击 Add 增加这么一个选项（URL为 http://www.baidu.com/s?wd={q}）：\n\n<font color=#0099ff>搭配Everything</font>\nwox已经有everything的SDK，但如果你想更强大的搜索，可以在wox的release页面下载everything进行默认的安装。\n\n如果在wox搜索时，下方显示everthing not runing，可以打开everything的窗口。\n\n或者在安装时选择：为everything安装服务而不是以管理员身份运行。\n\n<font color=#0099ff>其他插件：</font>\n\n**witcheroo(多个任务之间切换)**\n\n    wpm install Switcheroo for Wox\n使用方法：win 窗口标题\n\n**ProcessKiller（结束进程）**\n\n    wpm install Wox.Plugin.ProcessKiller\n使用方法：kill 进程名\n\n**Clipboard History（剪粘板历史记录）**\n     \n\twpm install Clipboard History\n使用方法：wox中输入：cb 就会列出历史记录\neg: cb\n\n**有道翻译**\n\n    wpm install 有道翻译\n使用方法：yd 要翻译的英文\n(eg:yd test )\n\n**OpenCMD（当前文件夹打开CMD）**\n  \n    wpm install Wox.Plugin.OpenCMD\n使用方法：在当前文件夹，运行wox，输入op\n\n**IP Address**\n\n    wpm install IP Address\n使用方法：运行wox，输入ipadr\n\n\n注意：wox默认替换Win+R，如下图，不需要可以在设置中关闭\n![ ](https://data.singlelovely.cn/xsj/2018/4/20/wox3.png)","source":"_posts/效率启动器Wox优雅地使用电脑.md","raw":"---\ntitle: Windows上的效率启动器Wox，教你如何优雅地使用电脑\ntags:\n  - windows\ncategories: 系统\ncopyright: true\nabbrlink: 98bc273a\ndate: 2018-04-19 23:23:32\npassword:\n---\n&emsp;&emsp;在日常的电脑使用操作中，我们常常需要花很多的时间去做同一件事情，比如启动软件的操作：点击开始菜单->寻找软件图标->点击启动。为了方便我们快速的启动软件，我们通常还会把最常用的软件图标放到任务栏当中，你或许以为这就是启动软件的极限操作了。但是，我今天要告诉你的是一款效率神器Wox，教你如何优雅地使用windows电脑，而它的作用不仅仅在于快速启动软件。\n{% meting \"921690953\" \"netease\" \"playlist\" \"autoplay\" \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n&emsp;&emsp;Wox是一款windows下的免费开源软件，学习门槛低，能够通过快捷键快速地调用并完成自己想要的操作，整个过程表现的十分流畅，是一款大家普遍用完之后爱不释手的效率软件。它主要具有以下几个方面的功能：\n\n+ **快速启动** 支持中文模糊搜索，甚至支持绿色软件快速启动。\n+ **网页搜索** 支持在Wox搜索框中直接输入网址或者需要搜索的关键词，然后自动跳入到浏览器中进行搜索。\n+ **文件夹/文件搜索** 利用everything插件，支持进行本地所有硬盘文件夹以及文件搜索。\n+ **插件管理** Wox得益于强大的插件管理，通过Wox搜索框可以完成有道翻译、快速计算器、搜索浏览器书签并打开、移除USB、命令行操作、关机等等。\n\n\n\n<font color=#0099ff> Wox - 被誉为 Alfred 的 Windows 版最佳替代品</font>\n&emsp;&emsp;你可以将 Wox 看作一个高效的本地快速搜索框，通过快捷键呼出，然后输入关键字来搜索程序进行快速启动，或者搜索本地硬盘的文件，打开百度、Google 进行搜索，甚至是通过一些插件的功能实现单词翻译、关闭屏幕、查询剪贴板历史、查询编程文档、查询天气等更多功能。\n![ ](https://data.singlelovely.cn/xsj/2018/4/20/wox1.png)\n\n&emsp;&emsp;Wox 最大的特点是可以支持中文拼音的模糊匹配。譬如说你想搜索“设备管理器”，那么只需输入\"sheb\"就能匹配得到。\n\n<font color=#0099ff>增加程序的搜索目录：</font>\n\n&emsp;&emsp;一开始使用 Wox 时，你会发现，除了开始菜单里面有的程序能搜索到之外，自己的一些绿色软件或者安装到非默认目录的软件都找不到。这时你可以在 Wox 里输入 settings 回车或托盘图标右键选择 Settings 进入设置界面，然后在 程序 中按 增加 按钮添加你的软件所在的文件夹。\n![ ](https://data.singlelovely.cn/xsj/2018/4/20/wox2.png)\n\n<font color=#0099ff>网页搜索功能：</font>\n&emsp;&emsp;Wox 的网页搜索功能是可以让用户自己为某个搜索引擎设置一个关键字。举个简单例子，如果用户经常使用百度搜索。那么用户就可以在 Wox 的设置里的 Web Search 选项中，点击 Add 增加这么一个选项（URL为 http://www.baidu.com/s?wd={q}）：\n\n<font color=#0099ff>搭配Everything</font>\nwox已经有everything的SDK，但如果你想更强大的搜索，可以在wox的release页面下载everything进行默认的安装。\n\n如果在wox搜索时，下方显示everthing not runing，可以打开everything的窗口。\n\n或者在安装时选择：为everything安装服务而不是以管理员身份运行。\n\n<font color=#0099ff>其他插件：</font>\n\n**witcheroo(多个任务之间切换)**\n\n    wpm install Switcheroo for Wox\n使用方法：win 窗口标题\n\n**ProcessKiller（结束进程）**\n\n    wpm install Wox.Plugin.ProcessKiller\n使用方法：kill 进程名\n\n**Clipboard History（剪粘板历史记录）**\n     \n\twpm install Clipboard History\n使用方法：wox中输入：cb 就会列出历史记录\neg: cb\n\n**有道翻译**\n\n    wpm install 有道翻译\n使用方法：yd 要翻译的英文\n(eg:yd test )\n\n**OpenCMD（当前文件夹打开CMD）**\n  \n    wpm install Wox.Plugin.OpenCMD\n使用方法：在当前文件夹，运行wox，输入op\n\n**IP Address**\n\n    wpm install IP Address\n使用方法：运行wox，输入ipadr\n\n\n注意：wox默认替换Win+R，如下图，不需要可以在设置中关闭\n![ ](https://data.singlelovely.cn/xsj/2018/4/20/wox3.png)","slug":"效率启动器Wox优雅地使用电脑","published":1,"updated":"2020-02-20T06:06:59.418Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3t001gfkupg9monokd","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>  在日常的电脑使用操作中，我们常常需要花很多的时间去做同一件事情，比如启动软件的操作：点击开始菜单-&gt;寻找软件图标-&gt;点击启动。为了方便我们快速的启动软件，我们通常还会把最常用的软件图标放到任务栏当中，你或许以为这就是启动软件的极限操作了。但是，我今天要告诉你的是一款效率神器Wox，教你如何优雅地使用windows电脑，而它的作用不仅仅在于快速启动软件。</p>\n\n    <div id=\"aplayer-odDAdfmM\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"921690953\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"true\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<p>  Wox是一款windows下的免费开源软件，学习门槛低，能够通过快捷键快速地调用并完成自己想要的操作，整个过程表现的十分流畅，是一款大家普遍用完之后爱不释手的效率软件。它主要具有以下几个方面的功能：</p>\n<ul>\n<li><strong>快速启动</strong> 支持中文模糊搜索，甚至支持绿色软件快速启动。</li>\n<li><strong>网页搜索</strong> 支持在Wox搜索框中直接输入网址或者需要搜索的关键词，然后自动跳入到浏览器中进行搜索。</li>\n<li><strong>文件夹/文件搜索</strong> 利用everything插件，支持进行本地所有硬盘文件夹以及文件搜索。</li>\n<li><strong>插件管理</strong> Wox得益于强大的插件管理，通过Wox搜索框可以完成有道翻译、快速计算器、搜索浏览器书签并打开、移除USB、命令行操作、关机等等。</li>\n</ul>\n<p><font color=\"#0099ff\"> Wox - 被誉为 Alfred 的 Windows 版最佳替代品</font><br>\n  你可以将 Wox 看作一个高效的本地快速搜索框，通过快捷键呼出，然后输入关键字来搜索程序进行快速启动，或者搜索本地硬盘的文件，打开百度、Google 进行搜索，甚至是通过一些插件的功能实现单词翻译、关闭屏幕、查询剪贴板历史、查询编程文档、查询天气等更多功能。<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/20/wox1.png\" alt=\" \"></p>\n<p>  Wox 最大的特点是可以支持中文拼音的模糊匹配。譬如说你想搜索“设备管理器”，那么只需输入&quot;sheb&quot;就能匹配得到。</p>\n<p><font color=\"#0099ff\">增加程序的搜索目录：</font></p>\n<p>  一开始使用 Wox 时，你会发现，除了开始菜单里面有的程序能搜索到之外，自己的一些绿色软件或者安装到非默认目录的软件都找不到。这时你可以在 Wox 里输入 settings 回车或托盘图标右键选择 Settings 进入设置界面，然后在 程序 中按 增加 按钮添加你的软件所在的文件夹。<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/20/wox2.png\" alt=\" \"></p>\n<p><font color=\"#0099ff\">网页搜索功能：</font><br>\n  Wox 的网页搜索功能是可以让用户自己为某个搜索引擎设置一个关键字。举个简单例子，如果用户经常使用百度搜索。那么用户就可以在 Wox 的设置里的 Web Search 选项中，点击 Add 增加这么一个选项（URL为 <a href=\"http://www.baidu.com/s?wd=%7Bq%7D%EF%BC%89%EF%BC%9A\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com/s?wd={q}）：</a></p>\n<p><font color=\"#0099ff\">搭配Everything</font><br>\nwox已经有everything的SDK，但如果你想更强大的搜索，可以在wox的release页面下载everything进行默认的安装。</p>\n<p>如果在wox搜索时，下方显示everthing not runing，可以打开everything的窗口。</p>\n<p>或者在安装时选择：为everything安装服务而不是以管理员身份运行。</p>\n<p><font color=\"#0099ff\">其他插件：</font></p>\n<p><strong>witcheroo(多个任务之间切换)</strong></p>\n<pre><code>wpm install Switcheroo for Wox\n</code></pre>\n<p>使用方法：win 窗口标题</p>\n<p><strong>ProcessKiller（结束进程）</strong></p>\n<pre><code>wpm install Wox.Plugin.ProcessKiller\n</code></pre>\n<p>使用方法：kill 进程名</p>\n<p><strong>Clipboard History（剪粘板历史记录）</strong></p>\n<pre><code>wpm install Clipboard History\n</code></pre>\n<p>使用方法：wox中输入：cb 就会列出历史记录<br>\neg: cb</p>\n<p><strong>有道翻译</strong></p>\n<pre><code>wpm install 有道翻译\n</code></pre>\n<p>使用方法：yd 要翻译的英文<br>\n(eg:yd test )</p>\n<p><strong>OpenCMD（当前文件夹打开CMD）</strong></p>\n<pre><code>wpm install Wox.Plugin.OpenCMD\n</code></pre>\n<p>使用方法：在当前文件夹，运行wox，输入op</p>\n<p><strong>IP Address</strong></p>\n<pre><code>wpm install IP Address\n</code></pre>\n<p>使用方法：运行wox，输入ipadr</p>\n<p>注意：wox默认替换Win+R，如下图，不需要可以在设置中关闭<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/20/wox3.png\" alt=\" \"></p>\n","site":{"data":{}},"length":1606,"excerpt":"","more":"<p>  在日常的电脑使用操作中，我们常常需要花很多的时间去做同一件事情，比如启动软件的操作：点击开始菜单-&gt;寻找软件图标-&gt;点击启动。为了方便我们快速的启动软件，我们通常还会把最常用的软件图标放到任务栏当中，你或许以为这就是启动软件的极限操作了。但是，我今天要告诉你的是一款效率神器Wox，教你如何优雅地使用windows电脑，而它的作用不仅仅在于快速启动软件。</p>\n\n    <div id=\"aplayer-odDAdfmM\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"921690953\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"true\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<p>  Wox是一款windows下的免费开源软件，学习门槛低，能够通过快捷键快速地调用并完成自己想要的操作，整个过程表现的十分流畅，是一款大家普遍用完之后爱不释手的效率软件。它主要具有以下几个方面的功能：</p>\n<ul>\n<li><strong>快速启动</strong> 支持中文模糊搜索，甚至支持绿色软件快速启动。</li>\n<li><strong>网页搜索</strong> 支持在Wox搜索框中直接输入网址或者需要搜索的关键词，然后自动跳入到浏览器中进行搜索。</li>\n<li><strong>文件夹/文件搜索</strong> 利用everything插件，支持进行本地所有硬盘文件夹以及文件搜索。</li>\n<li><strong>插件管理</strong> Wox得益于强大的插件管理，通过Wox搜索框可以完成有道翻译、快速计算器、搜索浏览器书签并打开、移除USB、命令行操作、关机等等。</li>\n</ul>\n<p><font color=\"#0099ff\"> Wox - 被誉为 Alfred 的 Windows 版最佳替代品</font><br>\n  你可以将 Wox 看作一个高效的本地快速搜索框，通过快捷键呼出，然后输入关键字来搜索程序进行快速启动，或者搜索本地硬盘的文件，打开百度、Google 进行搜索，甚至是通过一些插件的功能实现单词翻译、关闭屏幕、查询剪贴板历史、查询编程文档、查询天气等更多功能。<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/20/wox1.png\" alt=\" \"></p>\n<p>  Wox 最大的特点是可以支持中文拼音的模糊匹配。譬如说你想搜索“设备管理器”，那么只需输入&quot;sheb&quot;就能匹配得到。</p>\n<p><font color=\"#0099ff\">增加程序的搜索目录：</font></p>\n<p>  一开始使用 Wox 时，你会发现，除了开始菜单里面有的程序能搜索到之外，自己的一些绿色软件或者安装到非默认目录的软件都找不到。这时你可以在 Wox 里输入 settings 回车或托盘图标右键选择 Settings 进入设置界面，然后在 程序 中按 增加 按钮添加你的软件所在的文件夹。<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/20/wox2.png\" alt=\" \"></p>\n<p><font color=\"#0099ff\">网页搜索功能：</font><br>\n  Wox 的网页搜索功能是可以让用户自己为某个搜索引擎设置一个关键字。举个简单例子，如果用户经常使用百度搜索。那么用户就可以在 Wox 的设置里的 Web Search 选项中，点击 Add 增加这么一个选项（URL为 <a href=\"http://www.baidu.com/s?wd=%7Bq%7D%EF%BC%89%EF%BC%9A\" target=\"_blank\" rel=\"noopener\">http://www.baidu.com/s?wd={q}）：</a></p>\n<p><font color=\"#0099ff\">搭配Everything</font><br>\nwox已经有everything的SDK，但如果你想更强大的搜索，可以在wox的release页面下载everything进行默认的安装。</p>\n<p>如果在wox搜索时，下方显示everthing not runing，可以打开everything的窗口。</p>\n<p>或者在安装时选择：为everything安装服务而不是以管理员身份运行。</p>\n<p><font color=\"#0099ff\">其他插件：</font></p>\n<p><strong>witcheroo(多个任务之间切换)</strong></p>\n<pre><code>wpm install Switcheroo for Wox\n</code></pre>\n<p>使用方法：win 窗口标题</p>\n<p><strong>ProcessKiller（结束进程）</strong></p>\n<pre><code>wpm install Wox.Plugin.ProcessKiller\n</code></pre>\n<p>使用方法：kill 进程名</p>\n<p><strong>Clipboard History（剪粘板历史记录）</strong></p>\n<pre><code>wpm install Clipboard History\n</code></pre>\n<p>使用方法：wox中输入：cb 就会列出历史记录<br>\neg: cb</p>\n<p><strong>有道翻译</strong></p>\n<pre><code>wpm install 有道翻译\n</code></pre>\n<p>使用方法：yd 要翻译的英文<br>\n(eg:yd test )</p>\n<p><strong>OpenCMD（当前文件夹打开CMD）</strong></p>\n<pre><code>wpm install Wox.Plugin.OpenCMD\n</code></pre>\n<p>使用方法：在当前文件夹，运行wox，输入op</p>\n<p><strong>IP Address</strong></p>\n<pre><code>wpm install IP Address\n</code></pre>\n<p>使用方法：运行wox，输入ipadr</p>\n<p>注意：wox默认替换Win+R，如下图，不需要可以在设置中关闭<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/20/wox3.png\" alt=\" \"></p>\n"},{"title":"是谁杀死了中国的20岁男生？","copyright":false,"password":475182659,"abbrlink":"e07f2122","date":"2018-02-01T12:47:08.000Z","_content":"![][1]\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=486999077&auto=1&height=66\"></iframe>\n\n**若年轻是种错，那 20 岁的中国男生，是大错特错。**\n \n我看过一则新闻，有个男生在一家酒吧打工，给日本客人倒酒时，不小心泼到客人衣服上了。\n \n客人生气了，喊来了老板，男生吓坏了，拼命赔礼道歉。\n\n客人不依不饶，说要 po 到网络上，让网友看看中国人多没素质。\n \n为了让客人消气，老板拿起一杯啤酒，从男生头上倒了下去。\n \n黄色液体从头发流到衬衫，男生低着头，眼睛红红，一声不吭。\n \n我常跟朋友说，**在中国，生活在北上广深的人其实才是「非主流」。**\n\n**中国真正的主流，是三四五六线城市的人，只是他们发出的声音小，难以被所谓社会主流注意到。**\n \n换句话说，中国年轻人，大多数都还是没钱的，那些挥霍无度的中国年轻男生，毕竟是少数。\n \n**20岁左右的中国男生，活在一个最尴尬的年纪，他们的尊严和梦想，可能正在一点点被杀死。**\n![][2]\n\n<font color=orange >关于爱情 </font> \n<font color=orange >8 块钱午餐比不上 8000 块的包</font>\n  \n  我读大学时，男生们的生活费普遍在 1000 到 1500 元之间，听说再往前几年，生活费 500 到 800 元的都很多。\n \n这是什么概念呢？\n \n这意味着，基本上吃吃食堂就没什么存款了。\n \n想买件新衣服要省吃俭用，并且是淘宝货或者是地摊货，跟朋友们出去聚个餐或者带女孩在市区吃顿饭，就需要吃好几天泡面。\n \n我认识一个男生，叫阿文，阿文在读书时，每天最享受的时刻便是午餐那顿 8 元钱的牛肉炒饭，他雷打不动吃了小半年。\n \n后来，阿文喜欢上一个女孩，女孩呢，属于很会玩的类型。\n \n女孩每周都会去市区聚会，吃好吃的、唱唱歌、泡泡吧，虽然算不上什么多高的消费，但对于月生活费 1000 元的阿文来说，压力不小了。\n \n阿文每周末都跟女孩一起出去玩，然后周一到周五在宿舍一天吃一顿泡面。\n \n女孩渐渐注意到阿文，两人慢慢在一起了，女孩开始陪阿文吃 8 块钱的午餐，每天吃。\n \n有次，女孩过生日，阿文花 100 元买了条围巾，为此他还吃了几天泡面，阿文带去 KTV 时，才发现，他送的礼物是最廉价的。\n \n女孩开心戴上围巾，笑的灿烂模样却刺痛了阿文的心。\n \n关于爱的礼物当然不能用廉价或昂贵来形容，但礼物终归有标价，我不愿你无价的笑容为这廉价的感动如此璀璨，我会心痛。\n \n有次，女孩跟闺蜜聊天，说她想要一个包，8000 元，闺蜜不知怎么想的，告诉了阿文。\n\n阿文算了一晚上帐，怎么也算不出如何在一年内存下这 8000 元。\n \n更难过的是，阿文那几天钱包丢了，里面有他刚取的三百块钱。\n \n这下子连 8 块钱的牛肉炒饭都吃不起了，他不好意思跟女孩说，尽量躲开见面。\n\n他不想跟女孩一起吃饭的时候，让她发现他连自己的那 8 块钱都出不起。\n \n阿文问女孩的闺蜜：她每个月生活费多少？\n \n闺蜜说：不多啊，也就两千八。\n \n两千八的生活费在如今属于常见的数字了，但对阿文来说，是个天文数字。\n \n每天 8 块钱午餐带来的快乐，当然比不上一个 8000 块的包。\n \n阿文也知道，即便女孩说不在意这些，阿文也会觉得难过。\n \n后来他们还是分手了，分手那天，阿文的记事本上终于停留在这页：\n \n离 8000 元还差 7102.6 元。\n![][3]\n\n<font color=orange >关于品味 </font>\n<font color=orange >社会压力逼迫中国男生变得没品位</font>\n\n很多人在网上冷嘲热讽，说：中国男人配不上中国女孩。\n \n大概意思是说，中国男生普遍品味很差，不注重身材管理，不懂穿衣搭配，关于文艺的品味近乎为零，而女孩的审美是大大高于中国男性的。\n \n我认识一个典型「凤凰男直男癌」，「凤凰男」和「直男癌」都不是什么好词，他倒是全占了。\n \n其实，平心而论，他是个很优秀的男生。\n\n在校时就成绩优异，毕业后工作起初算不上太好，但是也在他的努力下，慢慢超出同龄男性一大截，无论是收入还是发展前景。\n \n他跟一个普通女孩相恋了，女孩家境算不上好，是正常二线城市出身。\n \n女孩常跟闺蜜抱怨，说男生一点也不懂浪漫，过于经济实用了，聊起男生的品味，更是皱起眉头。\n\n她在说这些话的同时，似乎已经忘了，她的化妆品是男孩给她买的。\n \n终于到了要谈婚论嫁的时候，女孩说：我爸说，要我嫁你也可以，你要在今年在市中心买套房，写我的名字。\n \n男生说：能在郊区买房吗，也是地铁房呢，去市区很方便。\n \n答案当然是不能，最后演变成了争吵。\n \n在彻底分手后，男生跟我喝酒，喝到大醉，他最后嚎啕大哭。\n \n他哭着说：「**我真的在尽力。我也想每天吃餐厅，我也想穿的帅气，我明明消费得起，可我只是想让她过得更好点，这些钱省下来买房，为了未来。我想把房子写我妈的名字，她骂我妈宝男，我真的有那么不好吗？**」\n \n社会、家庭所带来的压力，最终逼跨了这个男生。\n \n他品味好吗？是很差。\n \n**谁不期待更精致的生活方式呢？**\n \n**谁愿意吃着盒饭加班到十二点？谁不知道每天健身会利于形象？**\n \n**谁愿意整天邋遢得像一个要饭的？谁不知道人靠衣装这个道理？**\n \n**社会压力，让中国大多数普通男生没资格去谈这份品味。**\n  \n  ![][4]\n  \n<font color=orange >关于未来</font>\n<font color=orange >房和车子，杀死了中国年轻男生</font>\n  \n  我问过身边一些女孩对伴侣的要求。\n \n不少人会说：如果自己创业，得要他事业稳定了，如果他是工作，得级别和收入至少是我好几倍。\n \n我问：同龄人当中，能达到这个标准，多么？\n \n答案自然是寥寥无几。\n \n**女孩二十岁是最璀璨夺目的年纪，她的年轻和美貌就足以让她接触本不属于她阶层的光环。**\n\n**男孩二十岁最无奈痛苦的年纪，他的年轻和无知让他心比天高命比纸薄，没有资本没有经验更没有权利。**\n \n**最糟糕的年纪如何匹敌最美好的年纪？**\n \n所以，很多人说，女孩在那么好的年纪，当然要匹配更好的物质，二十岁的男生给不了，是要有自知之明。\n \n如此结论，我真的找不到理由去反驳，我只是会觉得：**时代魔幻得让我越来越看不懂了。**\n \n房子和车子，杀死了一个个年轻的中国男生。\n \n不是富二代，没有拆迁房，如何能在 20 岁上下拥有这些财富？\n \n从此陷入死循环。\n \n随着年龄增长，我也终于有了一点点资本，比起 20 岁的男生来，自然多了不少谈资，也慢慢获得一些十八九岁女孩的青睐。\n \n我拒绝后，我会问：你为什么不找同龄人谈恋爱？\n \n她会说：他们多无聊啊，不能带我去那玩去这吃的。\n \n有人问我，希望女孩喜欢我什么？\n \n我会答：**别爱我做的一切会带来什么，只爱我所做的一切。**\n \n这太奢侈了，对还在读大学的男生更奢侈。\n \n在魔幻的时代里，年轻男生的梦想，一个个破碎。\n \n他们都说，要为爱的女孩创造一个更好的环境。于是，**他们放下了画笔收起了吉他，去赚更多钞票，去实现美好的未来。**\n \n**真是破碎了曾经的美好去换未来的幸福。**\n \n**我不知道这到底能不能算作等式，到底值不值得，我只是觉得心酸。**\n \n很心酸。\n \n为少女心酸。\n \n为少年心酸。\n \n**为终于成长为社会人和职场人的少女和少年心酸。**\n \n**房子和车子，杀死的不只是 20 岁的中国男生，还有 20 岁的中国女生。**\n  \n\n<center>- END -</center>\n\n\n----------\n本文转载自微信公众号：简族\n\n  [1]: https://data.singlelovely.cn/xsj/20182/20180201.gif\n  [2]: https://data.singlelovely.cn/xsj/20182/2018020102.jpg\n  [3]: https://data.singlelovely.cn/xsj/20182/20180201205722.jpg \n  [4]: https://data.singlelovely.cn/xsj/20182/20180201210019.jpg","source":"_posts/是谁杀死了20岁的中国男生.md","raw":"---\ntitle: 是谁杀死了中国的20岁男生？\ncopyright: false\ntags:\n  - 励志\n  - 情感\npassword: 475182659\nabbrlink: e07f2122\ndate: 2018-02-01 20:47:08\ncategories:\n---\n![][1]\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=486999077&auto=1&height=66\"></iframe>\n\n**若年轻是种错，那 20 岁的中国男生，是大错特错。**\n \n我看过一则新闻，有个男生在一家酒吧打工，给日本客人倒酒时，不小心泼到客人衣服上了。\n \n客人生气了，喊来了老板，男生吓坏了，拼命赔礼道歉。\n\n客人不依不饶，说要 po 到网络上，让网友看看中国人多没素质。\n \n为了让客人消气，老板拿起一杯啤酒，从男生头上倒了下去。\n \n黄色液体从头发流到衬衫，男生低着头，眼睛红红，一声不吭。\n \n我常跟朋友说，**在中国，生活在北上广深的人其实才是「非主流」。**\n\n**中国真正的主流，是三四五六线城市的人，只是他们发出的声音小，难以被所谓社会主流注意到。**\n \n换句话说，中国年轻人，大多数都还是没钱的，那些挥霍无度的中国年轻男生，毕竟是少数。\n \n**20岁左右的中国男生，活在一个最尴尬的年纪，他们的尊严和梦想，可能正在一点点被杀死。**\n![][2]\n\n<font color=orange >关于爱情 </font> \n<font color=orange >8 块钱午餐比不上 8000 块的包</font>\n  \n  我读大学时，男生们的生活费普遍在 1000 到 1500 元之间，听说再往前几年，生活费 500 到 800 元的都很多。\n \n这是什么概念呢？\n \n这意味着，基本上吃吃食堂就没什么存款了。\n \n想买件新衣服要省吃俭用，并且是淘宝货或者是地摊货，跟朋友们出去聚个餐或者带女孩在市区吃顿饭，就需要吃好几天泡面。\n \n我认识一个男生，叫阿文，阿文在读书时，每天最享受的时刻便是午餐那顿 8 元钱的牛肉炒饭，他雷打不动吃了小半年。\n \n后来，阿文喜欢上一个女孩，女孩呢，属于很会玩的类型。\n \n女孩每周都会去市区聚会，吃好吃的、唱唱歌、泡泡吧，虽然算不上什么多高的消费，但对于月生活费 1000 元的阿文来说，压力不小了。\n \n阿文每周末都跟女孩一起出去玩，然后周一到周五在宿舍一天吃一顿泡面。\n \n女孩渐渐注意到阿文，两人慢慢在一起了，女孩开始陪阿文吃 8 块钱的午餐，每天吃。\n \n有次，女孩过生日，阿文花 100 元买了条围巾，为此他还吃了几天泡面，阿文带去 KTV 时，才发现，他送的礼物是最廉价的。\n \n女孩开心戴上围巾，笑的灿烂模样却刺痛了阿文的心。\n \n关于爱的礼物当然不能用廉价或昂贵来形容，但礼物终归有标价，我不愿你无价的笑容为这廉价的感动如此璀璨，我会心痛。\n \n有次，女孩跟闺蜜聊天，说她想要一个包，8000 元，闺蜜不知怎么想的，告诉了阿文。\n\n阿文算了一晚上帐，怎么也算不出如何在一年内存下这 8000 元。\n \n更难过的是，阿文那几天钱包丢了，里面有他刚取的三百块钱。\n \n这下子连 8 块钱的牛肉炒饭都吃不起了，他不好意思跟女孩说，尽量躲开见面。\n\n他不想跟女孩一起吃饭的时候，让她发现他连自己的那 8 块钱都出不起。\n \n阿文问女孩的闺蜜：她每个月生活费多少？\n \n闺蜜说：不多啊，也就两千八。\n \n两千八的生活费在如今属于常见的数字了，但对阿文来说，是个天文数字。\n \n每天 8 块钱午餐带来的快乐，当然比不上一个 8000 块的包。\n \n阿文也知道，即便女孩说不在意这些，阿文也会觉得难过。\n \n后来他们还是分手了，分手那天，阿文的记事本上终于停留在这页：\n \n离 8000 元还差 7102.6 元。\n![][3]\n\n<font color=orange >关于品味 </font>\n<font color=orange >社会压力逼迫中国男生变得没品位</font>\n\n很多人在网上冷嘲热讽，说：中国男人配不上中国女孩。\n \n大概意思是说，中国男生普遍品味很差，不注重身材管理，不懂穿衣搭配，关于文艺的品味近乎为零，而女孩的审美是大大高于中国男性的。\n \n我认识一个典型「凤凰男直男癌」，「凤凰男」和「直男癌」都不是什么好词，他倒是全占了。\n \n其实，平心而论，他是个很优秀的男生。\n\n在校时就成绩优异，毕业后工作起初算不上太好，但是也在他的努力下，慢慢超出同龄男性一大截，无论是收入还是发展前景。\n \n他跟一个普通女孩相恋了，女孩家境算不上好，是正常二线城市出身。\n \n女孩常跟闺蜜抱怨，说男生一点也不懂浪漫，过于经济实用了，聊起男生的品味，更是皱起眉头。\n\n她在说这些话的同时，似乎已经忘了，她的化妆品是男孩给她买的。\n \n终于到了要谈婚论嫁的时候，女孩说：我爸说，要我嫁你也可以，你要在今年在市中心买套房，写我的名字。\n \n男生说：能在郊区买房吗，也是地铁房呢，去市区很方便。\n \n答案当然是不能，最后演变成了争吵。\n \n在彻底分手后，男生跟我喝酒，喝到大醉，他最后嚎啕大哭。\n \n他哭着说：「**我真的在尽力。我也想每天吃餐厅，我也想穿的帅气，我明明消费得起，可我只是想让她过得更好点，这些钱省下来买房，为了未来。我想把房子写我妈的名字，她骂我妈宝男，我真的有那么不好吗？**」\n \n社会、家庭所带来的压力，最终逼跨了这个男生。\n \n他品味好吗？是很差。\n \n**谁不期待更精致的生活方式呢？**\n \n**谁愿意吃着盒饭加班到十二点？谁不知道每天健身会利于形象？**\n \n**谁愿意整天邋遢得像一个要饭的？谁不知道人靠衣装这个道理？**\n \n**社会压力，让中国大多数普通男生没资格去谈这份品味。**\n  \n  ![][4]\n  \n<font color=orange >关于未来</font>\n<font color=orange >房和车子，杀死了中国年轻男生</font>\n  \n  我问过身边一些女孩对伴侣的要求。\n \n不少人会说：如果自己创业，得要他事业稳定了，如果他是工作，得级别和收入至少是我好几倍。\n \n我问：同龄人当中，能达到这个标准，多么？\n \n答案自然是寥寥无几。\n \n**女孩二十岁是最璀璨夺目的年纪，她的年轻和美貌就足以让她接触本不属于她阶层的光环。**\n\n**男孩二十岁最无奈痛苦的年纪，他的年轻和无知让他心比天高命比纸薄，没有资本没有经验更没有权利。**\n \n**最糟糕的年纪如何匹敌最美好的年纪？**\n \n所以，很多人说，女孩在那么好的年纪，当然要匹配更好的物质，二十岁的男生给不了，是要有自知之明。\n \n如此结论，我真的找不到理由去反驳，我只是会觉得：**时代魔幻得让我越来越看不懂了。**\n \n房子和车子，杀死了一个个年轻的中国男生。\n \n不是富二代，没有拆迁房，如何能在 20 岁上下拥有这些财富？\n \n从此陷入死循环。\n \n随着年龄增长，我也终于有了一点点资本，比起 20 岁的男生来，自然多了不少谈资，也慢慢获得一些十八九岁女孩的青睐。\n \n我拒绝后，我会问：你为什么不找同龄人谈恋爱？\n \n她会说：他们多无聊啊，不能带我去那玩去这吃的。\n \n有人问我，希望女孩喜欢我什么？\n \n我会答：**别爱我做的一切会带来什么，只爱我所做的一切。**\n \n这太奢侈了，对还在读大学的男生更奢侈。\n \n在魔幻的时代里，年轻男生的梦想，一个个破碎。\n \n他们都说，要为爱的女孩创造一个更好的环境。于是，**他们放下了画笔收起了吉他，去赚更多钞票，去实现美好的未来。**\n \n**真是破碎了曾经的美好去换未来的幸福。**\n \n**我不知道这到底能不能算作等式，到底值不值得，我只是觉得心酸。**\n \n很心酸。\n \n为少女心酸。\n \n为少年心酸。\n \n**为终于成长为社会人和职场人的少女和少年心酸。**\n \n**房子和车子，杀死的不只是 20 岁的中国男生，还有 20 岁的中国女生。**\n  \n\n<center>- END -</center>\n\n\n----------\n本文转载自微信公众号：简族\n\n  [1]: https://data.singlelovely.cn/xsj/20182/20180201.gif\n  [2]: https://data.singlelovely.cn/xsj/20182/2018020102.jpg\n  [3]: https://data.singlelovely.cn/xsj/20182/20180201205722.jpg \n  [4]: https://data.singlelovely.cn/xsj/20182/20180201210019.jpg","slug":"是谁杀死了20岁的中国男生","published":1,"updated":"2020-02-20T06:06:59.420Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3t001hfkuptf09vhcf","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><script src=\"https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js\"></script>\n<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"Please enter the password to read the blog.\" />\n    <label for=\"pass\">Please enter the password to read the blog.</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\\n</div>\n<script src=\"/lib/crypto-js.js\"></script><script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"length":2605,"excerpt":"The article has been encrypted, please enter your password to view.<br>","more":"The article has been encrypted, please enter your password to view.<br>","origin":"<p><img src=\"https://data.singlelovely.cn/xsj/20182/20180201.gif\" alt></p>\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=\"330\" height=\"86\" src=\"//music.163.com/outchain/player?type=2&id=486999077&auto=1&height=66\"></iframe>\n<p><strong>若年轻是种错，那 20 岁的中国男生，是大错特错。</strong></p>\n<p>我看过一则新闻，有个男生在一家酒吧打工，给日本客人倒酒时，不小心泼到客人衣服上了。</p>\n<p>客人生气了，喊来了老板，男生吓坏了，拼命赔礼道歉。</p>\n<p>客人不依不饶，说要 po 到网络上，让网友看看中国人多没素质。</p>\n<p>为了让客人消气，老板拿起一杯啤酒，从男生头上倒了下去。</p>\n<p>黄色液体从头发流到衬衫，男生低着头，眼睛红红，一声不吭。</p>\n<p>我常跟朋友说，<strong>在中国，生活在北上广深的人其实才是「非主流」。</strong></p>\n<p><strong>中国真正的主流，是三四五六线城市的人，只是他们发出的声音小，难以被所谓社会主流注意到。</strong></p>\n<p>换句话说，中国年轻人，大多数都还是没钱的，那些挥霍无度的中国年轻男生，毕竟是少数。</p>\n<p><strong>20岁左右的中国男生，活在一个最尴尬的年纪，他们的尊严和梦想，可能正在一点点被杀死。</strong><br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/2018020102.jpg\" alt></p>\n<p><font color=\"orange\">关于爱情 </font><br>\n<font color=\"orange\">8 块钱午餐比不上 8000 块的包</font></p>\n<p>我读大学时，男生们的生活费普遍在 1000 到 1500 元之间，听说再往前几年，生活费 500 到 800 元的都很多。</p>\n<p>这是什么概念呢？</p>\n<p>这意味着，基本上吃吃食堂就没什么存款了。</p>\n<p>想买件新衣服要省吃俭用，并且是淘宝货或者是地摊货，跟朋友们出去聚个餐或者带女孩在市区吃顿饭，就需要吃好几天泡面。</p>\n<p>我认识一个男生，叫阿文，阿文在读书时，每天最享受的时刻便是午餐那顿 8 元钱的牛肉炒饭，他雷打不动吃了小半年。</p>\n<p>后来，阿文喜欢上一个女孩，女孩呢，属于很会玩的类型。</p>\n<p>女孩每周都会去市区聚会，吃好吃的、唱唱歌、泡泡吧，虽然算不上什么多高的消费，但对于月生活费 1000 元的阿文来说，压力不小了。</p>\n<p>阿文每周末都跟女孩一起出去玩，然后周一到周五在宿舍一天吃一顿泡面。</p>\n<p>女孩渐渐注意到阿文，两人慢慢在一起了，女孩开始陪阿文吃 8 块钱的午餐，每天吃。</p>\n<p>有次，女孩过生日，阿文花 100 元买了条围巾，为此他还吃了几天泡面，阿文带去 KTV 时，才发现，他送的礼物是最廉价的。</p>\n<p>女孩开心戴上围巾，笑的灿烂模样却刺痛了阿文的心。</p>\n<p>关于爱的礼物当然不能用廉价或昂贵来形容，但礼物终归有标价，我不愿你无价的笑容为这廉价的感动如此璀璨，我会心痛。</p>\n<p>有次，女孩跟闺蜜聊天，说她想要一个包，8000 元，闺蜜不知怎么想的，告诉了阿文。</p>\n<p>阿文算了一晚上帐，怎么也算不出如何在一年内存下这 8000 元。</p>\n<p>更难过的是，阿文那几天钱包丢了，里面有他刚取的三百块钱。</p>\n<p>这下子连 8 块钱的牛肉炒饭都吃不起了，他不好意思跟女孩说，尽量躲开见面。</p>\n<p>他不想跟女孩一起吃饭的时候，让她发现他连自己的那 8 块钱都出不起。</p>\n<p>阿文问女孩的闺蜜：她每个月生活费多少？</p>\n<p>闺蜜说：不多啊，也就两千八。</p>\n<p>两千八的生活费在如今属于常见的数字了，但对阿文来说，是个天文数字。</p>\n<p>每天 8 块钱午餐带来的快乐，当然比不上一个 8000 块的包。</p>\n<p>阿文也知道，即便女孩说不在意这些，阿文也会觉得难过。</p>\n<p>后来他们还是分手了，分手那天，阿文的记事本上终于停留在这页：</p>\n<p>离 8000 元还差 7102.6 元。<br>\n<img src=\"https://data.singlelovely.cn/xsj/20182/20180201205722.jpg\" alt></p>\n<p><font color=\"orange\">关于品味 </font><br>\n<font color=\"orange\">社会压力逼迫中国男生变得没品位</font></p>\n<p>很多人在网上冷嘲热讽，说：中国男人配不上中国女孩。</p>\n<p>大概意思是说，中国男生普遍品味很差，不注重身材管理，不懂穿衣搭配，关于文艺的品味近乎为零，而女孩的审美是大大高于中国男性的。</p>\n<p>我认识一个典型「凤凰男直男癌」，「凤凰男」和「直男癌」都不是什么好词，他倒是全占了。</p>\n<p>其实，平心而论，他是个很优秀的男生。</p>\n<p>在校时就成绩优异，毕业后工作起初算不上太好，但是也在他的努力下，慢慢超出同龄男性一大截，无论是收入还是发展前景。</p>\n<p>他跟一个普通女孩相恋了，女孩家境算不上好，是正常二线城市出身。</p>\n<p>女孩常跟闺蜜抱怨，说男生一点也不懂浪漫，过于经济实用了，聊起男生的品味，更是皱起眉头。</p>\n<p>她在说这些话的同时，似乎已经忘了，她的化妆品是男孩给她买的。</p>\n<p>终于到了要谈婚论嫁的时候，女孩说：我爸说，要我嫁你也可以，你要在今年在市中心买套房，写我的名字。</p>\n<p>男生说：能在郊区买房吗，也是地铁房呢，去市区很方便。</p>\n<p>答案当然是不能，最后演变成了争吵。</p>\n<p>在彻底分手后，男生跟我喝酒，喝到大醉，他最后嚎啕大哭。</p>\n<p>他哭着说：「<strong>我真的在尽力。我也想每天吃餐厅，我也想穿的帅气，我明明消费得起，可我只是想让她过得更好点，这些钱省下来买房，为了未来。我想把房子写我妈的名字，她骂我妈宝男，我真的有那么不好吗？</strong>」</p>\n<p>社会、家庭所带来的压力，最终逼跨了这个男生。</p>\n<p>他品味好吗？是很差。</p>\n<p><strong>谁不期待更精致的生活方式呢？</strong></p>\n<p><strong>谁愿意吃着盒饭加班到十二点？谁不知道每天健身会利于形象？</strong></p>\n<p><strong>谁愿意整天邋遢得像一个要饭的？谁不知道人靠衣装这个道理？</strong></p>\n<p><strong>社会压力，让中国大多数普通男生没资格去谈这份品味。</strong></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/20180201210019.jpg\" alt></p>\n<p><font color=\"orange\">关于未来</font><br>\n<font color=\"orange\">房和车子，杀死了中国年轻男生</font></p>\n<p>我问过身边一些女孩对伴侣的要求。</p>\n<p>不少人会说：如果自己创业，得要他事业稳定了，如果他是工作，得级别和收入至少是我好几倍。</p>\n<p>我问：同龄人当中，能达到这个标准，多么？</p>\n<p>答案自然是寥寥无几。</p>\n<p><strong>女孩二十岁是最璀璨夺目的年纪，她的年轻和美貌就足以让她接触本不属于她阶层的光环。</strong></p>\n<p><strong>男孩二十岁最无奈痛苦的年纪，他的年轻和无知让他心比天高命比纸薄，没有资本没有经验更没有权利。</strong></p>\n<p><strong>最糟糕的年纪如何匹敌最美好的年纪？</strong></p>\n<p>所以，很多人说，女孩在那么好的年纪，当然要匹配更好的物质，二十岁的男生给不了，是要有自知之明。</p>\n<p>如此结论，我真的找不到理由去反驳，我只是会觉得：<strong>时代魔幻得让我越来越看不懂了。</strong></p>\n<p>房子和车子，杀死了一个个年轻的中国男生。</p>\n<p>不是富二代，没有拆迁房，如何能在 20 岁上下拥有这些财富？</p>\n<p>从此陷入死循环。</p>\n<p>随着年龄增长，我也终于有了一点点资本，比起 20 岁的男生来，自然多了不少谈资，也慢慢获得一些十八九岁女孩的青睐。</p>\n<p>我拒绝后，我会问：你为什么不找同龄人谈恋爱？</p>\n<p>她会说：他们多无聊啊，不能带我去那玩去这吃的。</p>\n<p>有人问我，希望女孩喜欢我什么？</p>\n<p>我会答：<strong>别爱我做的一切会带来什么，只爱我所做的一切。</strong></p>\n<p>这太奢侈了，对还在读大学的男生更奢侈。</p>\n<p>在魔幻的时代里，年轻男生的梦想，一个个破碎。</p>\n<p>他们都说，要为爱的女孩创造一个更好的环境。于是，<strong>他们放下了画笔收起了吉他，去赚更多钞票，去实现美好的未来。</strong></p>\n<p><strong>真是破碎了曾经的美好去换未来的幸福。</strong></p>\n<p><strong>我不知道这到底能不能算作等式，到底值不值得，我只是觉得心酸。</strong></p>\n<p>很心酸。</p>\n<p>为少女心酸。</p>\n<p>为少年心酸。</p>\n<p><strong>为终于成长为社会人和职场人的少女和少年心酸。</strong></p>\n<p><strong>房子和车子，杀死的不只是 20 岁的中国男生，还有 20 岁的中国女生。</strong></p>\n<center>- END -</center>\n<hr>\n<p>本文转载自微信公众号：简族</p>\n","encrypt":true,"abstract":"The article has been encrypted, please enter your password to view.<br>","template":"<script src=\"https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js\"></script>\n<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"Please enter the password to read the blog.\" />\n    <label for=\"pass\">Please enter the password to read the blog.</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\\n</div>\n","message":"Please enter the password to read the blog.","decryptionError":"Incorrect Password!","noContentError":"No content to display!"},{"title":"数据提取方法","abbrlink":"cf1235a7","date":"2018-05-26T12:48:02.000Z","copyright":true,"password":null,"_content":"## 数据提取方法\n\n### json \n- 数据交换格式，看起来像python类型（列表，字典）的字符串\n- 使用json之前需要导入\n\n- 哪里会返回json数据\n\t- 浏览器切换到手机版\n\n- json.loads\n\t- 把json字符串转换为python类型\n\t- 'json.loads(json字符串)'\n- json.dumps\n\t- 把python类型转化为json字符串\n\t- json.dumps({\"a\":\"a123\",\"b\":\"023\"})\n\t- json.dumps(ret1, ensure_ascii=False,indent=2)\n\t\t- ensure_ascii=False #让中文显示正常\n\t\t- indent = 2 下一行在上一行的基础上空格\n\n\n### xpath 和 lxml\n- xpath \n\t- 一门从html中提取数据的语言\n- xpath语法\n\t- xpath helper插件：帮助我们从'elements'中定位数据\n\t- 1.选择节点（标签）\n\t\t- `/html/head/meta`:能够选中html下的head下的meta标签\n\t- 2.`//`:能够从任意节点开始选择\n\t\t- `//li` 表示当前页面上所有的li标签\n\t\t- `/html/head//link`:head下的所有的link标签\n\t- 3.'@符号的用途'\n\t\t- 选择具体元素：`//div[@class='JK-main']/ul/li`\n\t\t\t- 选择class=\"JK-main\"的div下的ul下的li\n\t\t- `a/@href`：选择a的href的值\n\t- 4.获取文本：\n\t\t- `/a/text()`\n\t\t- `/a//text()`：a标签下的所有文本\n\n\t- 5.当前\n\t\t- `./a`当前节点下的a标签\n\n- lxml\n\t- 安装：pip install lxml\n\t- 使用\n\t```python\n\tfrom lxml import etree\n\telement = etree.HTML(\"html字符串\")\n\telement.xpath(\"\")\n\t\n\t```","source":"_posts/数据提取方法.md","raw":"---\ntitle: 数据提取方法\ntags:\n  - python\n  - 爬虫\nabbrlink: cf1235a7\ndate: 2018-05-26 20:48:02\ncategories: \ncopyright: true\npassword:\n---\n## 数据提取方法\n\n### json \n- 数据交换格式，看起来像python类型（列表，字典）的字符串\n- 使用json之前需要导入\n\n- 哪里会返回json数据\n\t- 浏览器切换到手机版\n\n- json.loads\n\t- 把json字符串转换为python类型\n\t- 'json.loads(json字符串)'\n- json.dumps\n\t- 把python类型转化为json字符串\n\t- json.dumps({\"a\":\"a123\",\"b\":\"023\"})\n\t- json.dumps(ret1, ensure_ascii=False,indent=2)\n\t\t- ensure_ascii=False #让中文显示正常\n\t\t- indent = 2 下一行在上一行的基础上空格\n\n\n### xpath 和 lxml\n- xpath \n\t- 一门从html中提取数据的语言\n- xpath语法\n\t- xpath helper插件：帮助我们从'elements'中定位数据\n\t- 1.选择节点（标签）\n\t\t- `/html/head/meta`:能够选中html下的head下的meta标签\n\t- 2.`//`:能够从任意节点开始选择\n\t\t- `//li` 表示当前页面上所有的li标签\n\t\t- `/html/head//link`:head下的所有的link标签\n\t- 3.'@符号的用途'\n\t\t- 选择具体元素：`//div[@class='JK-main']/ul/li`\n\t\t\t- 选择class=\"JK-main\"的div下的ul下的li\n\t\t- `a/@href`：选择a的href的值\n\t- 4.获取文本：\n\t\t- `/a/text()`\n\t\t- `/a//text()`：a标签下的所有文本\n\n\t- 5.当前\n\t\t- `./a`当前节点下的a标签\n\n- lxml\n\t- 安装：pip install lxml\n\t- 使用\n\t```python\n\tfrom lxml import etree\n\telement = etree.HTML(\"html字符串\")\n\telement.xpath(\"\")\n\t\n\t```","slug":"数据提取方法","published":1,"updated":"2020-02-20T06:06:59.419Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3u001ifkup7rej5pmp","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"数据提取方法\"><a class=\"header-anchor\" href=\"#数据提取方法\">☆</a>数据提取方法</h2>\n<h3 id=\"json\"><a class=\"header-anchor\" href=\"#json\">☆</a>json</h3>\n<ul>\n<li>\n<p>数据交换格式，看起来像python类型（列表，字典）的字符串</p>\n</li>\n<li>\n<p>使用json之前需要导入</p>\n</li>\n<li>\n<p>哪里会返回json数据</p>\n<ul>\n<li>浏览器切换到手机版</li>\n</ul>\n</li>\n<li>\n<p>json.loads</p>\n<ul>\n<li>把json字符串转换为python类型</li>\n<li>‘json.loads(json字符串)’</li>\n</ul>\n</li>\n<li>\n<p>json.dumps</p>\n<ul>\n<li>把python类型转化为json字符串</li>\n<li>json.dumps({“a”:“a123”,“b”:“023”})</li>\n<li>json.dumps(ret1, ensure_ascii=False,indent=2)\n<ul>\n<li>ensure_ascii=False #让中文显示正常</li>\n<li>indent = 2 下一行在上一行的基础上空格</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"xpath-和-lxml\"><a class=\"header-anchor\" href=\"#xpath-和-lxml\">☆</a>xpath 和 lxml</h3>\n<ul>\n<li>\n<p>xpath</p>\n<ul>\n<li>一门从html中提取数据的语言</li>\n</ul>\n</li>\n<li>\n<p>xpath语法</p>\n<ul>\n<li>\n<p>xpath helper插件：帮助我们从’elements’中定位数据</p>\n</li>\n<li>\n<p>1.选择节点（标签）</p>\n<ul>\n<li><code>/html/head/meta</code>:能够选中html下的head下的meta标签</li>\n</ul>\n</li>\n<li>\n<p>2.<code>//</code>:能够从任意节点开始选择</p>\n<ul>\n<li><code>//li</code> 表示当前页面上所有的li标签</li>\n<li><code>/html/head//link</code>:head下的所有的link标签</li>\n</ul>\n</li>\n<li>\n<p>3.’@符号的用途’</p>\n<ul>\n<li>选择具体元素：<code>//div[@class='JK-main']/ul/li</code>\n<ul>\n<li>选择class=&quot;JK-main&quot;的div下的ul下的li</li>\n</ul>\n</li>\n<li><code>a/@href</code>：选择a的href的值</li>\n</ul>\n</li>\n<li>\n<p>4.获取文本：</p>\n<ul>\n<li><code>/a/text()</code></li>\n<li><code>/a//text()</code>：a标签下的所有文本</li>\n</ul>\n</li>\n<li>\n<p>5.当前</p>\n<ul>\n<li><code>./a</code>当前节点下的a标签</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>lxml</p>\n<ul>\n<li>安装：pip install lxml</li>\n<li>使用</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> lxml <span class=\"keyword\">import</span> etree</span><br><span class=\"line\">element = etree.HTML(<span class=\"string\">\"html字符串\"</span>)</span><br><span class=\"line\">element.xpath(<span class=\"string\">\"\"</span>)</span><br></pre></td></tr></table></figure></li>\n</ul>\n","site":{"data":{}},"length":726,"excerpt":"","more":"<h2 id=\"数据提取方法\"><a class=\"header-anchor\" href=\"#数据提取方法\">☆</a>数据提取方法</h2>\n<h3 id=\"json\"><a class=\"header-anchor\" href=\"#json\">☆</a>json</h3>\n<ul>\n<li>\n<p>数据交换格式，看起来像python类型（列表，字典）的字符串</p>\n</li>\n<li>\n<p>使用json之前需要导入</p>\n</li>\n<li>\n<p>哪里会返回json数据</p>\n<ul>\n<li>浏览器切换到手机版</li>\n</ul>\n</li>\n<li>\n<p>json.loads</p>\n<ul>\n<li>把json字符串转换为python类型</li>\n<li>‘json.loads(json字符串)’</li>\n</ul>\n</li>\n<li>\n<p>json.dumps</p>\n<ul>\n<li>把python类型转化为json字符串</li>\n<li>json.dumps({“a”:“a123”,“b”:“023”})</li>\n<li>json.dumps(ret1, ensure_ascii=False,indent=2)\n<ul>\n<li>ensure_ascii=False #让中文显示正常</li>\n<li>indent = 2 下一行在上一行的基础上空格</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"xpath-和-lxml\"><a class=\"header-anchor\" href=\"#xpath-和-lxml\">☆</a>xpath 和 lxml</h3>\n<ul>\n<li>\n<p>xpath</p>\n<ul>\n<li>一门从html中提取数据的语言</li>\n</ul>\n</li>\n<li>\n<p>xpath语法</p>\n<ul>\n<li>\n<p>xpath helper插件：帮助我们从’elements’中定位数据</p>\n</li>\n<li>\n<p>1.选择节点（标签）</p>\n<ul>\n<li><code>/html/head/meta</code>:能够选中html下的head下的meta标签</li>\n</ul>\n</li>\n<li>\n<p>2.<code>//</code>:能够从任意节点开始选择</p>\n<ul>\n<li><code>//li</code> 表示当前页面上所有的li标签</li>\n<li><code>/html/head//link</code>:head下的所有的link标签</li>\n</ul>\n</li>\n<li>\n<p>3.’@符号的用途’</p>\n<ul>\n<li>选择具体元素：<code>//div[@class='JK-main']/ul/li</code>\n<ul>\n<li>选择class=&quot;JK-main&quot;的div下的ul下的li</li>\n</ul>\n</li>\n<li><code>a/@href</code>：选择a的href的值</li>\n</ul>\n</li>\n<li>\n<p>4.获取文本：</p>\n<ul>\n<li><code>/a/text()</code></li>\n<li><code>/a//text()</code>：a标签下的所有文本</li>\n</ul>\n</li>\n<li>\n<p>5.当前</p>\n<ul>\n<li><code>./a</code>当前节点下的a标签</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>lxml</p>\n<ul>\n<li>安装：pip install lxml</li>\n<li>使用</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> lxml <span class=\"keyword\">import</span> etree</span><br><span class=\"line\">element = etree.HTML(<span class=\"string\">\"html字符串\"</span>)</span><br><span class=\"line\">element.xpath(<span class=\"string\">\"\"</span>)</span><br></pre></td></tr></table></figure></li>\n</ul>\n"},{"title":"将python编译成.exe可执行程序","copyright":true,"abbrlink":"a044f431","notshow":false,"description":"使用pyinstaller","date":"2019-05-22T09:01:00.000Z","password":null,"image":["https://data.singlelovely.cn/CoverPicture/a044f431.jpg!CoverPicture"],"photos":[],"sticky":null,"_content":"\n在将java程序打包成可执行程序后，因为运行时需要jvm虚拟机，还是没有办法直接给别人用，网上查了半天没有找到解决方法。最后决定用python将整个程序重写一遍，然后打包。\n\n在此记录一下python打包的流程。\n\n## 安装pyinstaller\n\n```python\npip install pyinstaller\n```\n\n如果有 ~\\Scripts 文件夹的环境变量的，应该可以直接使用，没有的配置一下环境变量可以了\n\n## 使用方法\n\n```python\npyinstaller -F xxxx.py\n```\n\n-F 的作用是打包为单文件\n\n更多命令参数请参阅：[官方文档](https://pyinstaller.readthedocs.io/en/stable/usage.html)","source":"_posts/将python编译成可执行程序.md","raw":"---\ntitle: 将python编译成.exe可执行程序\ncopyright: true\nabbrlink: a044f431\nnotshow: false\ntags:\n  - python\ncategories: python\ndescription: 使用pyinstaller\ndate: 2019-05-22 17:01:00\npassword:\nimage:\n- \"https://data.singlelovely.cn/CoverPicture/a044f431.jpg!CoverPicture\"\nphotos:\nsticky:\n---\n\n在将java程序打包成可执行程序后，因为运行时需要jvm虚拟机，还是没有办法直接给别人用，网上查了半天没有找到解决方法。最后决定用python将整个程序重写一遍，然后打包。\n\n在此记录一下python打包的流程。\n\n## 安装pyinstaller\n\n```python\npip install pyinstaller\n```\n\n如果有 ~\\Scripts 文件夹的环境变量的，应该可以直接使用，没有的配置一下环境变量可以了\n\n## 使用方法\n\n```python\npyinstaller -F xxxx.py\n```\n\n-F 的作用是打包为单文件\n\n更多命令参数请参阅：[官方文档](https://pyinstaller.readthedocs.io/en/stable/usage.html)","slug":"将python编译成可执行程序","published":1,"updated":"2020-02-20T06:06:59.417Z","comments":1,"layout":"post","link":"","_id":"ckec2td3v001jfkupi11td5pr","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>在将java程序打包成可执行程序后，因为运行时需要jvm虚拟机，还是没有办法直接给别人用，网上查了半天没有找到解决方法。最后决定用python将整个程序重写一遍，然后打包。</p>\n<p>在此记录一下python打包的流程。</p>\n<h2 id=\"安装pyinstaller\"><a class=\"header-anchor\" href=\"#安装pyinstaller\">☆</a>安装pyinstaller</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pyinstaller</span><br></pre></td></tr></table></figure>\n<p>如果有 ~\\Scripts 文件夹的环境变量的，应该可以直接使用，没有的配置一下环境变量可以了</p>\n<h2 id=\"使用方法\"><a class=\"header-anchor\" href=\"#使用方法\">☆</a>使用方法</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyinstaller -F xxxx.py</span><br></pre></td></tr></table></figure>\n<p>-F 的作用是打包为单文件</p>\n<p>更多命令参数请参阅：<a href=\"https://pyinstaller.readthedocs.io/en/stable/usage.html\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n","site":{"data":{}},"length":244,"excerpt":"","more":"<p>在将java程序打包成可执行程序后，因为运行时需要jvm虚拟机，还是没有办法直接给别人用，网上查了半天没有找到解决方法。最后决定用python将整个程序重写一遍，然后打包。</p>\n<p>在此记录一下python打包的流程。</p>\n<h2 id=\"安装pyinstaller\"><a class=\"header-anchor\" href=\"#安装pyinstaller\">☆</a>安装pyinstaller</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install pyinstaller</span><br></pre></td></tr></table></figure>\n<p>如果有 ~\\Scripts 文件夹的环境变量的，应该可以直接使用，没有的配置一下环境变量可以了</p>\n<h2 id=\"使用方法\"><a class=\"header-anchor\" href=\"#使用方法\">☆</a>使用方法</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyinstaller -F xxxx.py</span><br></pre></td></tr></table></figure>\n<p>-F 的作用是打包为单文件</p>\n<p>更多命令参数请参阅：<a href=\"https://pyinstaller.readthedocs.io/en/stable/usage.html\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n"},{"title":"汇编基础知识","copyright":true,"abbrlink":"bfc7c122","notshow":false,"date":"2018-10-05T13:40:00.000Z","password":null,"description":"进制转换 补码 逻辑运算","image":["https://data.singlelovely.cn/CoverPicture/bfc7c122.png!CoverPicture"],"photos":[],"sticky":null,"_content":"\n## 汇编语言的一般概念\n\n计算机程序设计语言可分为<span id=\"inline-blue\">机器语言</span>、<span id=\"inline-blue\">高级语言</span>和<span id=\"inline-blue\">汇编语言</span>三类。 \n\n### 机器语言\n\n机器语言就是把控制计算机的命令和各种数 据直接用二进制数码表示的一种程序设计语言。\n\n<span id=\"inline-yellow\">优点</span>：机器语言最直接地表示了计算机内部的基 本操作，用它编制的程序在计算机中运行的效率 最高。即运行速度最快，程序长度最短。\n<span id=\"inline-yellow\">缺点</span>：用二进制数表示的内容既不便于记忆又难 于阅读。\n\n### 高级语言\n\n高级语言将计算机内部的操作细节屏蔽起 来，用户不需要知道计算机内部数据的传送和 处理的细节，使用类似于自然语言的一些语句 来编制程序，完成指定的任务。\n\n<span id=\"inline-yellow\">特点</span>：程序设计简单，但程序效率较机器语言低。\n\n### 汇编语言\n\n#### 定义\n\n为了便于记忆和阅读，使用字母和符号来 表示机器语言的命令，用十进制数或十六进制 数来表示数据，这样的计算机程序设计语言就 称为汇编语言。\n\n#### 汇编语言程序与机器语言程序的关系\n\n一条汇编语言的语句与一条机器语言指令对应, 汇编语言程序与机器语言程序效率相同。\n\n\n#### 不同类型计算机有不同的机器指令系统和汇编语言描述\n\n对一台计算机来说，机器语言的执行主要取 决于该计算机的中央处理器CPU。因此熟悉计算 机内部结构主要是指CPU的功能结构。它包括：\n\nCPU中有多少个寄存器及其作用？ CPU是如何访问存储器？ 输入输出操作的方式有哪些？\n\n## 学习和使用汇编语言的目的\n\n<span id=\"inline-toc\">1.</span> 学习和使用汇编语言可以从根本上认识、理解 计算机的工作过程。\n通过用汇编语言编制程序可以更清楚地了解计 算机是如何完成各种复杂的工作。在此基础上， 程序设计人员能更充分地利用机器硬件的全部功 能，发挥机器的长处。\n<span id=\"inline-toc\">2.</span> 在计算机系统中，某些功能必须用汇编语言程序 来实现。\n如：机器自检、系统初始化、实际的输入输出设备的 操作等。\n<span id=\"inline-toc\">3.</span> 汇编语言程序的效率高于高级语言程序\n“效率”有两个方面的含义：程序的目标代码长 度和运行的速度。\n在某些要求节省内存空间和提高程序运行速度的 应用场合，如实时过程控制、智能仪器仪表等， 常常用汇编语言来编制程序。\n\n## 进位计数制及其相互转换\n\n### 进位计数制\n\n使用一定个数的数码的组合来表示数字，这种 表示方法称为进位计数制。根据所使用的数码的 个数，就产生了不同的进位计数制。\n\n将各个位置上所表示的基本数值称为位权, 简称权。\n\n每个数位上能使用不同数码的个数称为基数。\n\n<span id=\"font-green\">例：</span>十进制有十个数码0～9，基数为10，二进制基 数为2。\n\nB（Binary）－－二进制数\nO (Octal)或Q－－八进制数\nD (Decimal)－－十进制数\nH (Hexadecimal)－－十六进制数\n如未使用任何字母，则默认表示是十进制数\n\n### 各种数制间的相互转换\n\n#### 十进制整数转换为二进制数\n\n<span id=\"inline-toc\">1.</span> 减权定位法\n\n+ 从二进制数高位起，依次用待转换的十进制数与各位权值进行比较；\n+ 如够减，则该数位系数Ki=1，同时减去该位权值， 余数作为下一次比较的值；\n+ 如不够减，则Ki=0。\n\n<span id=\"inline-toc\">2.</span> 除基取余法\n\n将十进制数除以基数2，其余数为二进制数的最低位，再用其商除2，其余数为次低位，反复做下去，直到商0。\n\n这种转换方法同样适合于其它进制数之间的转换。（红）\n\n#### 十进制小数转换为二进制数\n\n<span id=\"inline-toc\">1.</span> 减权定位法\n\n<span id=\"font-green\">例：</span>将十进制数0.645转换为二进制数\n\n|减权比较 | Ki | 对应二进制数 |\n| ------ | ------ | ------ |\n|0.645-0.5 =0.145          |  k-1  | 1 |\n|0.145<0.25                |  k-2  | 0 |\n|0.145-0.125=0.02          |  k-3  | 1 |\n|0.02<0.0625               |  k-4  | 0 |\n|0.02<0.03125              |  k-5  | 0 |\n|0.02-0.015625             |  k-6  | 1 |\n\n所以 0.645D=0.101001B\n\n转换时应根据程序要求的精度或计算机的字长来确 定二进制的位数.（黄框）\n\n<span id=\"inline-toc\">2.</span> 乘基取整法\n\n<span id=\"font-green\">例：</span>将0.8125D转换为二进制数\n| 乘以基数 | Ki | 整数部分 |\n| ------ | ------ | ------ |\n| 0.8125×2＝1.625  |    K-1      |   1 |\n| 0.625×2＝1.25    |    K-2      |   1 |\n| 0.25×2＝0.5      |    K-3      |   0 |\n| 0.5×2＝1.        |    K-4      |   1 |\n\n所以 0.8125D＝0.1101B\n\n#### 二进制整数转换为十进制数\n\n<span id=\"inline-toc\">1.</span> 按权相加法\n\n101000101B\n＝1×2^8^＋1×2^6^＋1×2^2^＋1×2^0^\n＝256＋64＋4＋1\n＝325\n\n<span id=\"inline-toc\">2.</span> 逐次乘基相加法\n\n![ ](https://data.singlelovely.cn/xsj/2018/10/8/01.png)\n\n#### 二进制小数转换为十进制数\n\n<span id=\"inline-toc\">1.</span> 按权相加法\n\n0.101001B\n= 1×2-1＋1×2-3＋1×2-6\n= 0.5+0.125+0.0156\n= 0.640625D\n\n<span id=\"inline-toc\">2.</span> 逐次除基相加法\n\n![ ](https://data.singlelovely.cn/xsj/2018/10/8/02.png)\n\n#### 二进制与八进制和十六进制间的转换\n\n二进制与八进制和十六进制之间的对应关系：\n三位二进制数对应一位八进制数，四位二进制数对应一位十六进制数。\n\n## 带符号数的表示3\n\n用“＋”或“－”表示正负的数叫真值（黄色块）\n用“0”或“1”表示正负的数叫机器数\n\n### 原码表示\n\n二进制数的最高位表示符号，0表示正，1表示负。数值 部分用二进制数绝对值表示\n\n8位二进制数原码的最大数为01111111（+127） 最小数为11111111 （-127） \n8位二进制数表示范围：－127≤X≤+127\n\n0的原码有两种表示形式：00000000和10000000（+0和-0）\n\n### 补码的表示\n\n<span id=\"inline-toc\">1.</span> 补码的定义\n\n带符号数X的补码表示[X]<sub>补</sub>定义为：\n<p id=\"div-border-left-purple\">[X]<sub>补</sub>＝M+X       (Mod  M)</p>\n\n 其中模数M根据机器数的位数而定，如位数为8则M=2^8^ 用补码表示的机器数，符号位仍然表示数的符号：0为正,1为负。对于正数，补码与原码相同，对于负数需要进行变换。\n\n<span id=\"inline-toc\">2.</span> 由真值、原码变换为补码\n\n由于正数的原码与补码相同，下面讨论负数的变换方法。\n\n负数的真值变换为补码的方法：将各位变反（0变1，1变0） 然后在最低位加1.\n负数的原码变换为补码：保持符号位不变,其余各位变反， 最低位加1。\n\n<span id=\"font-green\">例：</span>将－59变换为补码\n<span id=\"inline-green\">真值</span> －00111011 <span id=\"inline-blue\">变反</span> 11000100 <span id=\"inline-yellow\">加1</span>         11000101\n<span id=\"inline-green\">原码</span> 10111011 <span id=\"inline-blue\">变反</span> 11000100 <span id=\"inline-yellow\">加1</span>     11000101\n\n所以 [-59]<sub>补</sub>＝11000101\n\n<span id=\"inline-toc\">3.</span> 补码数的表示范围\n\n当位数为8时，最大补码为01111111=[+127]<sub>补</sub> 最小补码为10000000=[-128]<sub>补</sub>\n\n0的补码只有一个，[0]<sub>补</sub>=00000000，而10000000是[-128]<sub>补</sub>11111111=[-1]<sub>补</sub>\n\n对于16位数，则补码表示范围为-32768~+32767\n\n<span id=\"inline-toc\">4.</span> 补码的加减运算\n\n规则：\n<p id=\"div-border-left-yellow\">\n[X+Y]<sub>补</sub>=[X]<sub>补</sub>+[Y]<sub>补</sub></br>\n[X-Y]<sub>补</sub>=[X]<sub>补</sub>－[Y]<sub>补</sub>=[X]<sub>补</sub>+[-Y]<sub>补</sub>\n</p>\n\n<span id = \"inline-yellow\">进位超出</span>：舍去\n\n## 字符的表示\n\n标准ASCII码为一字节，其中用低七位表示字符编码(见附录 A),用最高位表示奇偶数验位。\n\n标准ASCII码共有128个，可分为两类：\n非打印ASCII码,共33个,用于控制操作, 如BEL(响铃07H), DEL(删除7FH),CR(回车,0DH), LF(换行,0AH)。\n可打印ASCII码共有95个，如数字符0~9，大小写字母等。\n\n## 基本逻辑运算\n\n<span id=\"inline-toc\">1.</span> “与”运算（AND）\n\n“与”运算也叫逻辑乘，常用 ∧ 或 · 表示。\n\nF=A ∧ B  或 F=A · B\n\n“与”运算是指：仅当逻辑变量A与B都是1时， 运算结果F才为1。其它情况F为0，\n\n即有： 0 ∧ 0 ＝0 , 0 ∧ 1 ＝ 0 , 1 ∧ 0 ＝ 0 , 1 ∧ 1 ＝1\n\n<span id=\"inline-toc\">2.</span> “或”运算（OR）\n\n“或”运算也叫逻辑加，用∨或＋表示。\n\n即有：F=A ∨B     F=A +B\n\n“或”运算是指当逻辑变量A与B中，至少有一 个为1时，结果F为1，其他情况F为0。\n\n即有： 0 ∨ 0 ＝ 0 , 0 ∨ 1 ＝ 1 , 1 ∨ 0 ＝ 1 , 1 ∨ 1 ＝ 1\n\n<span id=\"inline-toc\">3.</span> “非”运算\n\n如A为1，则A＝0，若A为0，则A=1\n\n1 =  0 , 0  =  1\n\n<span id=\"inline-toc\">4.</span> “异或”运算（XOR）\n\n通常用 ⊕表示，即 F = A ⊕ B\n\n“异或”运算是指：当A和B相同时（同时为1或同时为 0），运算结果F为0，而不同时，F为1。\n\n运算规则为：1 ⊕ 1 = 0 , 1 ⊕ 0 = 1 , 0 ⊕ 1 = 1 , 0 ⊕ 0 = 0\n","source":"_posts/汇编基础知识.md","raw":"---\ntitle: 汇编基础知识\ncopyright: true\nabbrlink: bfc7c122\nnotshow: false\ntags:\n  - 汇编\ncategories: 汇编\ndate: 2018-10-05 21:40:00\npassword:\ndescription: 进制转换 补码 逻辑运算\nimage:\n- \"https://data.singlelovely.cn/CoverPicture/bfc7c122.png!CoverPicture\"\nphotos:\nsticky:\n---\n\n## 汇编语言的一般概念\n\n计算机程序设计语言可分为<span id=\"inline-blue\">机器语言</span>、<span id=\"inline-blue\">高级语言</span>和<span id=\"inline-blue\">汇编语言</span>三类。 \n\n### 机器语言\n\n机器语言就是把控制计算机的命令和各种数 据直接用二进制数码表示的一种程序设计语言。\n\n<span id=\"inline-yellow\">优点</span>：机器语言最直接地表示了计算机内部的基 本操作，用它编制的程序在计算机中运行的效率 最高。即运行速度最快，程序长度最短。\n<span id=\"inline-yellow\">缺点</span>：用二进制数表示的内容既不便于记忆又难 于阅读。\n\n### 高级语言\n\n高级语言将计算机内部的操作细节屏蔽起 来，用户不需要知道计算机内部数据的传送和 处理的细节，使用类似于自然语言的一些语句 来编制程序，完成指定的任务。\n\n<span id=\"inline-yellow\">特点</span>：程序设计简单，但程序效率较机器语言低。\n\n### 汇编语言\n\n#### 定义\n\n为了便于记忆和阅读，使用字母和符号来 表示机器语言的命令，用十进制数或十六进制 数来表示数据，这样的计算机程序设计语言就 称为汇编语言。\n\n#### 汇编语言程序与机器语言程序的关系\n\n一条汇编语言的语句与一条机器语言指令对应, 汇编语言程序与机器语言程序效率相同。\n\n\n#### 不同类型计算机有不同的机器指令系统和汇编语言描述\n\n对一台计算机来说，机器语言的执行主要取 决于该计算机的中央处理器CPU。因此熟悉计算 机内部结构主要是指CPU的功能结构。它包括：\n\nCPU中有多少个寄存器及其作用？ CPU是如何访问存储器？ 输入输出操作的方式有哪些？\n\n## 学习和使用汇编语言的目的\n\n<span id=\"inline-toc\">1.</span> 学习和使用汇编语言可以从根本上认识、理解 计算机的工作过程。\n通过用汇编语言编制程序可以更清楚地了解计 算机是如何完成各种复杂的工作。在此基础上， 程序设计人员能更充分地利用机器硬件的全部功 能，发挥机器的长处。\n<span id=\"inline-toc\">2.</span> 在计算机系统中，某些功能必须用汇编语言程序 来实现。\n如：机器自检、系统初始化、实际的输入输出设备的 操作等。\n<span id=\"inline-toc\">3.</span> 汇编语言程序的效率高于高级语言程序\n“效率”有两个方面的含义：程序的目标代码长 度和运行的速度。\n在某些要求节省内存空间和提高程序运行速度的 应用场合，如实时过程控制、智能仪器仪表等， 常常用汇编语言来编制程序。\n\n## 进位计数制及其相互转换\n\n### 进位计数制\n\n使用一定个数的数码的组合来表示数字，这种 表示方法称为进位计数制。根据所使用的数码的 个数，就产生了不同的进位计数制。\n\n将各个位置上所表示的基本数值称为位权, 简称权。\n\n每个数位上能使用不同数码的个数称为基数。\n\n<span id=\"font-green\">例：</span>十进制有十个数码0～9，基数为10，二进制基 数为2。\n\nB（Binary）－－二进制数\nO (Octal)或Q－－八进制数\nD (Decimal)－－十进制数\nH (Hexadecimal)－－十六进制数\n如未使用任何字母，则默认表示是十进制数\n\n### 各种数制间的相互转换\n\n#### 十进制整数转换为二进制数\n\n<span id=\"inline-toc\">1.</span> 减权定位法\n\n+ 从二进制数高位起，依次用待转换的十进制数与各位权值进行比较；\n+ 如够减，则该数位系数Ki=1，同时减去该位权值， 余数作为下一次比较的值；\n+ 如不够减，则Ki=0。\n\n<span id=\"inline-toc\">2.</span> 除基取余法\n\n将十进制数除以基数2，其余数为二进制数的最低位，再用其商除2，其余数为次低位，反复做下去，直到商0。\n\n这种转换方法同样适合于其它进制数之间的转换。（红）\n\n#### 十进制小数转换为二进制数\n\n<span id=\"inline-toc\">1.</span> 减权定位法\n\n<span id=\"font-green\">例：</span>将十进制数0.645转换为二进制数\n\n|减权比较 | Ki | 对应二进制数 |\n| ------ | ------ | ------ |\n|0.645-0.5 =0.145          |  k-1  | 1 |\n|0.145<0.25                |  k-2  | 0 |\n|0.145-0.125=0.02          |  k-3  | 1 |\n|0.02<0.0625               |  k-4  | 0 |\n|0.02<0.03125              |  k-5  | 0 |\n|0.02-0.015625             |  k-6  | 1 |\n\n所以 0.645D=0.101001B\n\n转换时应根据程序要求的精度或计算机的字长来确 定二进制的位数.（黄框）\n\n<span id=\"inline-toc\">2.</span> 乘基取整法\n\n<span id=\"font-green\">例：</span>将0.8125D转换为二进制数\n| 乘以基数 | Ki | 整数部分 |\n| ------ | ------ | ------ |\n| 0.8125×2＝1.625  |    K-1      |   1 |\n| 0.625×2＝1.25    |    K-2      |   1 |\n| 0.25×2＝0.5      |    K-3      |   0 |\n| 0.5×2＝1.        |    K-4      |   1 |\n\n所以 0.8125D＝0.1101B\n\n#### 二进制整数转换为十进制数\n\n<span id=\"inline-toc\">1.</span> 按权相加法\n\n101000101B\n＝1×2^8^＋1×2^6^＋1×2^2^＋1×2^0^\n＝256＋64＋4＋1\n＝325\n\n<span id=\"inline-toc\">2.</span> 逐次乘基相加法\n\n![ ](https://data.singlelovely.cn/xsj/2018/10/8/01.png)\n\n#### 二进制小数转换为十进制数\n\n<span id=\"inline-toc\">1.</span> 按权相加法\n\n0.101001B\n= 1×2-1＋1×2-3＋1×2-6\n= 0.5+0.125+0.0156\n= 0.640625D\n\n<span id=\"inline-toc\">2.</span> 逐次除基相加法\n\n![ ](https://data.singlelovely.cn/xsj/2018/10/8/02.png)\n\n#### 二进制与八进制和十六进制间的转换\n\n二进制与八进制和十六进制之间的对应关系：\n三位二进制数对应一位八进制数，四位二进制数对应一位十六进制数。\n\n## 带符号数的表示3\n\n用“＋”或“－”表示正负的数叫真值（黄色块）\n用“0”或“1”表示正负的数叫机器数\n\n### 原码表示\n\n二进制数的最高位表示符号，0表示正，1表示负。数值 部分用二进制数绝对值表示\n\n8位二进制数原码的最大数为01111111（+127） 最小数为11111111 （-127） \n8位二进制数表示范围：－127≤X≤+127\n\n0的原码有两种表示形式：00000000和10000000（+0和-0）\n\n### 补码的表示\n\n<span id=\"inline-toc\">1.</span> 补码的定义\n\n带符号数X的补码表示[X]<sub>补</sub>定义为：\n<p id=\"div-border-left-purple\">[X]<sub>补</sub>＝M+X       (Mod  M)</p>\n\n 其中模数M根据机器数的位数而定，如位数为8则M=2^8^ 用补码表示的机器数，符号位仍然表示数的符号：0为正,1为负。对于正数，补码与原码相同，对于负数需要进行变换。\n\n<span id=\"inline-toc\">2.</span> 由真值、原码变换为补码\n\n由于正数的原码与补码相同，下面讨论负数的变换方法。\n\n负数的真值变换为补码的方法：将各位变反（0变1，1变0） 然后在最低位加1.\n负数的原码变换为补码：保持符号位不变,其余各位变反， 最低位加1。\n\n<span id=\"font-green\">例：</span>将－59变换为补码\n<span id=\"inline-green\">真值</span> －00111011 <span id=\"inline-blue\">变反</span> 11000100 <span id=\"inline-yellow\">加1</span>         11000101\n<span id=\"inline-green\">原码</span> 10111011 <span id=\"inline-blue\">变反</span> 11000100 <span id=\"inline-yellow\">加1</span>     11000101\n\n所以 [-59]<sub>补</sub>＝11000101\n\n<span id=\"inline-toc\">3.</span> 补码数的表示范围\n\n当位数为8时，最大补码为01111111=[+127]<sub>补</sub> 最小补码为10000000=[-128]<sub>补</sub>\n\n0的补码只有一个，[0]<sub>补</sub>=00000000，而10000000是[-128]<sub>补</sub>11111111=[-1]<sub>补</sub>\n\n对于16位数，则补码表示范围为-32768~+32767\n\n<span id=\"inline-toc\">4.</span> 补码的加减运算\n\n规则：\n<p id=\"div-border-left-yellow\">\n[X+Y]<sub>补</sub>=[X]<sub>补</sub>+[Y]<sub>补</sub></br>\n[X-Y]<sub>补</sub>=[X]<sub>补</sub>－[Y]<sub>补</sub>=[X]<sub>补</sub>+[-Y]<sub>补</sub>\n</p>\n\n<span id = \"inline-yellow\">进位超出</span>：舍去\n\n## 字符的表示\n\n标准ASCII码为一字节，其中用低七位表示字符编码(见附录 A),用最高位表示奇偶数验位。\n\n标准ASCII码共有128个，可分为两类：\n非打印ASCII码,共33个,用于控制操作, 如BEL(响铃07H), DEL(删除7FH),CR(回车,0DH), LF(换行,0AH)。\n可打印ASCII码共有95个，如数字符0~9，大小写字母等。\n\n## 基本逻辑运算\n\n<span id=\"inline-toc\">1.</span> “与”运算（AND）\n\n“与”运算也叫逻辑乘，常用 ∧ 或 · 表示。\n\nF=A ∧ B  或 F=A · B\n\n“与”运算是指：仅当逻辑变量A与B都是1时， 运算结果F才为1。其它情况F为0，\n\n即有： 0 ∧ 0 ＝0 , 0 ∧ 1 ＝ 0 , 1 ∧ 0 ＝ 0 , 1 ∧ 1 ＝1\n\n<span id=\"inline-toc\">2.</span> “或”运算（OR）\n\n“或”运算也叫逻辑加，用∨或＋表示。\n\n即有：F=A ∨B     F=A +B\n\n“或”运算是指当逻辑变量A与B中，至少有一 个为1时，结果F为1，其他情况F为0。\n\n即有： 0 ∨ 0 ＝ 0 , 0 ∨ 1 ＝ 1 , 1 ∨ 0 ＝ 1 , 1 ∨ 1 ＝ 1\n\n<span id=\"inline-toc\">3.</span> “非”运算\n\n如A为1，则A＝0，若A为0，则A=1\n\n1 =  0 , 0  =  1\n\n<span id=\"inline-toc\">4.</span> “异或”运算（XOR）\n\n通常用 ⊕表示，即 F = A ⊕ B\n\n“异或”运算是指：当A和B相同时（同时为1或同时为 0），运算结果F为0，而不同时，F为1。\n\n运算规则为：1 ⊕ 1 = 0 , 1 ⊕ 0 = 1 , 0 ⊕ 1 = 1 , 0 ⊕ 0 = 0\n","slug":"汇编基础知识","published":1,"updated":"2020-02-20T06:06:59.423Z","comments":1,"layout":"post","link":"","_id":"ckec2td3w001kfkupfmwo9cie","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"汇编语言的一般概念\"><a class=\"header-anchor\" href=\"#汇编语言的一般概念\">☆</a>汇编语言的一般概念</h2>\n<p>计算机程序设计语言可分为<span id=\"inline-blue\">机器语言</span>、<span id=\"inline-blue\">高级语言</span>和<span id=\"inline-blue\">汇编语言</span>三类。</p>\n<h3 id=\"机器语言\"><a class=\"header-anchor\" href=\"#机器语言\">☆</a>机器语言</h3>\n<p>机器语言就是把控制计算机的命令和各种数 据直接用二进制数码表示的一种程序设计语言。</p>\n<p><span id=\"inline-yellow\">优点</span>：机器语言最直接地表示了计算机内部的基 本操作，用它编制的程序在计算机中运行的效率 最高。即运行速度最快，程序长度最短。<br>\n<span id=\"inline-yellow\">缺点</span>：用二进制数表示的内容既不便于记忆又难 于阅读。</p>\n<h3 id=\"高级语言\"><a class=\"header-anchor\" href=\"#高级语言\">☆</a>高级语言</h3>\n<p>高级语言将计算机内部的操作细节屏蔽起 来，用户不需要知道计算机内部数据的传送和 处理的细节，使用类似于自然语言的一些语句 来编制程序，完成指定的任务。</p>\n<p><span id=\"inline-yellow\">特点</span>：程序设计简单，但程序效率较机器语言低。</p>\n<h3 id=\"汇编语言\"><a class=\"header-anchor\" href=\"#汇编语言\">☆</a>汇编语言</h3>\n<h4 id=\"定义\"><a class=\"header-anchor\" href=\"#定义\">☆</a>定义</h4>\n<p>为了便于记忆和阅读，使用字母和符号来 表示机器语言的命令，用十进制数或十六进制 数来表示数据，这样的计算机程序设计语言就 称为汇编语言。</p>\n<h4 id=\"汇编语言程序与机器语言程序的关系\"><a class=\"header-anchor\" href=\"#汇编语言程序与机器语言程序的关系\">☆</a>汇编语言程序与机器语言程序的关系</h4>\n<p>一条汇编语言的语句与一条机器语言指令对应, 汇编语言程序与机器语言程序效率相同。</p>\n<h4 id=\"不同类型计算机有不同的机器指令系统和汇编语言描述\"><a class=\"header-anchor\" href=\"#不同类型计算机有不同的机器指令系统和汇编语言描述\">☆</a>不同类型计算机有不同的机器指令系统和汇编语言描述</h4>\n<p>对一台计算机来说，机器语言的执行主要取 决于该计算机的中央处理器CPU。因此熟悉计算 机内部结构主要是指CPU的功能结构。它包括：</p>\n<p>CPU中有多少个寄存器及其作用？ CPU是如何访问存储器？ 输入输出操作的方式有哪些？</p>\n<h2 id=\"学习和使用汇编语言的目的\"><a class=\"header-anchor\" href=\"#学习和使用汇编语言的目的\">☆</a>学习和使用汇编语言的目的</h2>\n<p><span id=\"inline-toc\">1.</span> 学习和使用汇编语言可以从根本上认识、理解 计算机的工作过程。<br>\n通过用汇编语言编制程序可以更清楚地了解计 算机是如何完成各种复杂的工作。在此基础上， 程序设计人员能更充分地利用机器硬件的全部功 能，发挥机器的长处。<br>\n<span id=\"inline-toc\">2.</span> 在计算机系统中，某些功能必须用汇编语言程序 来实现。<br>\n如：机器自检、系统初始化、实际的输入输出设备的 操作等。<br>\n<span id=\"inline-toc\">3.</span> 汇编语言程序的效率高于高级语言程序<br>\n“效率”有两个方面的含义：程序的目标代码长 度和运行的速度。<br>\n在某些要求节省内存空间和提高程序运行速度的 应用场合，如实时过程控制、智能仪器仪表等， 常常用汇编语言来编制程序。</p>\n<h2 id=\"进位计数制及其相互转换\"><a class=\"header-anchor\" href=\"#进位计数制及其相互转换\">☆</a>进位计数制及其相互转换</h2>\n<h3 id=\"进位计数制\"><a class=\"header-anchor\" href=\"#进位计数制\">☆</a>进位计数制</h3>\n<p>使用一定个数的数码的组合来表示数字，这种 表示方法称为进位计数制。根据所使用的数码的 个数，就产生了不同的进位计数制。</p>\n<p>将各个位置上所表示的基本数值称为位权, 简称权。</p>\n<p>每个数位上能使用不同数码的个数称为基数。</p>\n<p><span id=\"font-green\">例：</span>十进制有十个数码0～9，基数为10，二进制基 数为2。</p>\n<p>B（Binary）－－二进制数<br>\nO (Octal)或Q－－八进制数<br>\nD (Decimal)－－十进制数<br>\nH (Hexadecimal)－－十六进制数<br>\n如未使用任何字母，则默认表示是十进制数</p>\n<h3 id=\"各种数制间的相互转换\"><a class=\"header-anchor\" href=\"#各种数制间的相互转换\">☆</a>各种数制间的相互转换</h3>\n<h4 id=\"十进制整数转换为二进制数\"><a class=\"header-anchor\" href=\"#十进制整数转换为二进制数\">☆</a>十进制整数转换为二进制数</h4>\n<p><span id=\"inline-toc\">1.</span> 减权定位法</p>\n<ul>\n<li>从二进制数高位起，依次用待转换的十进制数与各位权值进行比较；</li>\n<li>如够减，则该数位系数Ki=1，同时减去该位权值， 余数作为下一次比较的值；</li>\n<li>如不够减，则Ki=0。</li>\n</ul>\n<p><span id=\"inline-toc\">2.</span> 除基取余法</p>\n<p>将十进制数除以基数2，其余数为二进制数的最低位，再用其商除2，其余数为次低位，反复做下去，直到商0。</p>\n<p>这种转换方法同样适合于其它进制数之间的转换。（红）</p>\n<h4 id=\"十进制小数转换为二进制数\"><a class=\"header-anchor\" href=\"#十进制小数转换为二进制数\">☆</a>十进制小数转换为二进制数</h4>\n<p><span id=\"inline-toc\">1.</span> 减权定位法</p>\n<p><span id=\"font-green\">例：</span>将十进制数0.645转换为二进制数</p>\n<table>\n<thead>\n<tr>\n<th>减权比较</th>\n<th>Ki</th>\n<th>对应二进制数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0.645-0.5 =0.145</td>\n<td>k-1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>0.145&lt;0.25</td>\n<td>k-2</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0.145-0.125=0.02</td>\n<td>k-3</td>\n<td>1</td>\n</tr>\n<tr>\n<td>0.02&lt;0.0625</td>\n<td>k-4</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0.02&lt;0.03125</td>\n<td>k-5</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0.02-0.015625</td>\n<td>k-6</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>所以 0.645D=0.101001B</p>\n<p>转换时应根据程序要求的精度或计算机的字长来确 定二进制的位数.（黄框）</p>\n<p><span id=\"inline-toc\">2.</span> 乘基取整法</p>\n<p><span id=\"font-green\">例：</span>将0.8125D转换为二进制数</p>\n<table>\n<thead>\n<tr>\n<th>乘以基数</th>\n<th>Ki</th>\n<th>整数部分</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0.8125×2＝1.625</td>\n<td>K-1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>0.625×2＝1.25</td>\n<td>K-2</td>\n<td>1</td>\n</tr>\n<tr>\n<td>0.25×2＝0.5</td>\n<td>K-3</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0.5×2＝1.</td>\n<td>K-4</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>所以 0.8125D＝0.1101B</p>\n<h4 id=\"二进制整数转换为十进制数\"><a class=\"header-anchor\" href=\"#二进制整数转换为十进制数\">☆</a>二进制整数转换为十进制数</h4>\n<p><span id=\"inline-toc\">1.</span> 按权相加法</p>\n<p>101000101B<br>\n＝1×2<sup>8</sup>＋1×2<sup>6</sup>＋1×2<sup>2</sup>＋1×2<sup>0</sup><br>\n＝256＋64＋4＋1<br>\n＝325</p>\n<p><span id=\"inline-toc\">2.</span> 逐次乘基相加法</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/10/8/01.png\" alt=\" \"></p>\n<h4 id=\"二进制小数转换为十进制数\"><a class=\"header-anchor\" href=\"#二进制小数转换为十进制数\">☆</a>二进制小数转换为十进制数</h4>\n<p><span id=\"inline-toc\">1.</span> 按权相加法</p>\n<p>0.101001B<br>\n= 1×2-1＋1×2-3＋1×2-6<br>\n= 0.5+0.125+0.0156<br>\n= 0.640625D</p>\n<p><span id=\"inline-toc\">2.</span> 逐次除基相加法</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/10/8/02.png\" alt=\" \"></p>\n<h4 id=\"二进制与八进制和十六进制间的转换\"><a class=\"header-anchor\" href=\"#二进制与八进制和十六进制间的转换\">☆</a>二进制与八进制和十六进制间的转换</h4>\n<p>二进制与八进制和十六进制之间的对应关系：<br>\n三位二进制数对应一位八进制数，四位二进制数对应一位十六进制数。</p>\n<h2 id=\"带符号数的表示3\"><a class=\"header-anchor\" href=\"#带符号数的表示3\">☆</a>带符号数的表示3</h2>\n<p>用“＋”或“－”表示正负的数叫真值（黄色块）<br>\n用“0”或“1”表示正负的数叫机器数</p>\n<h3 id=\"原码表示\"><a class=\"header-anchor\" href=\"#原码表示\">☆</a>原码表示</h3>\n<p>二进制数的最高位表示符号，0表示正，1表示负。数值 部分用二进制数绝对值表示</p>\n<p>8位二进制数原码的最大数为01111111（+127） 最小数为11111111 （-127）<br>\n8位二进制数表示范围：－127≤X≤+127</p>\n<p>0的原码有两种表示形式：00000000和10000000（+0和-0）</p>\n<h3 id=\"补码的表示\"><a class=\"header-anchor\" href=\"#补码的表示\">☆</a>补码的表示</h3>\n<p><span id=\"inline-toc\">1.</span> 补码的定义</p>\n<p>带符号数X的补码表示[X]<sub>补</sub>定义为：</p>\n<p id=\"div-border-left-purple\">[X]<sub>补</sub>＝M+X       (Mod  M)</p>\n<p>其中模数M根据机器数的位数而定，如位数为8则M=2<sup>8</sup> 用补码表示的机器数，符号位仍然表示数的符号：0为正,1为负。对于正数，补码与原码相同，对于负数需要进行变换。</p>\n<p><span id=\"inline-toc\">2.</span> 由真值、原码变换为补码</p>\n<p>由于正数的原码与补码相同，下面讨论负数的变换方法。</p>\n<p>负数的真值变换为补码的方法：将各位变反（0变1，1变0） 然后在最低位加1.<br>\n负数的原码变换为补码：保持符号位不变,其余各位变反， 最低位加1。</p>\n<p><span id=\"font-green\">例：</span>将－59变换为补码<br>\n<span id=\"inline-green\">真值</span> －00111011 <span id=\"inline-blue\">变反</span> 11000100 <span id=\"inline-yellow\">加1</span>         11000101<br>\n<span id=\"inline-green\">原码</span> 10111011 <span id=\"inline-blue\">变反</span> 11000100 <span id=\"inline-yellow\">加1</span>     11000101</p>\n<p>所以 [-59]<sub>补</sub>＝11000101</p>\n<p><span id=\"inline-toc\">3.</span> 补码数的表示范围</p>\n<p>当位数为8时，最大补码为01111111=[+127]<sub>补</sub> 最小补码为10000000=[-128]<sub>补</sub></p>\n<p>0的补码只有一个，[0]<sub>补</sub>=00000000，而10000000是[-128]<sub>补</sub>11111111=[-1]<sub>补</sub></p>\n<p>对于16位数，则补码表示范围为-32768~+32767</p>\n<p><span id=\"inline-toc\">4.</span> 补码的加减运算</p>\n<p>规则：</p>\n<p id=\"div-border-left-yellow\">\n[X+Y]<sub>补</sub>=[X]<sub>补</sub>+[Y]<sub>补</sub><br>\n[X-Y]<sub>补</sub>=[X]<sub>补</sub>－[Y]<sub>补</sub>=[X]<sub>补</sub>+[-Y]<sub>补</sub>\n</p>\n<p><span id=\"inline-yellow\">进位超出</span>：舍去</p>\n<h2 id=\"字符的表示\"><a class=\"header-anchor\" href=\"#字符的表示\">☆</a>字符的表示</h2>\n<p>标准ASCII码为一字节，其中用低七位表示字符编码(见附录 A),用最高位表示奇偶数验位。</p>\n<p>标准ASCII码共有128个，可分为两类：<br>\n非打印ASCII码,共33个,用于控制操作, 如BEL(响铃07H), DEL(删除7FH),CR(回车,0DH), LF(换行,0AH)。<br>\n可打印ASCII码共有95个，如数字符0~9，大小写字母等。</p>\n<h2 id=\"基本逻辑运算\"><a class=\"header-anchor\" href=\"#基本逻辑运算\">☆</a>基本逻辑运算</h2>\n<p><span id=\"inline-toc\">1.</span> “与”运算（AND）</p>\n<p>“与”运算也叫逻辑乘，常用 ∧ 或 · 表示。</p>\n<p>F=A ∧ B  或 F=A · B</p>\n<p>“与”运算是指：仅当逻辑变量A与B都是1时， 运算结果F才为1。其它情况F为0，</p>\n<p>即有： 0 ∧ 0 ＝0 , 0 ∧ 1 ＝ 0 , 1 ∧ 0 ＝ 0 , 1 ∧ 1 ＝1</p>\n<p><span id=\"inline-toc\">2.</span> “或”运算（OR）</p>\n<p>“或”运算也叫逻辑加，用∨或＋表示。</p>\n<p>即有：F=A ∨B     F=A +B</p>\n<p>“或”运算是指当逻辑变量A与B中，至少有一 个为1时，结果F为1，其他情况F为0。</p>\n<p>即有： 0 ∨ 0 ＝ 0 , 0 ∨ 1 ＝ 1 , 1 ∨ 0 ＝ 1 , 1 ∨ 1 ＝ 1</p>\n<p><span id=\"inline-toc\">3.</span> “非”运算</p>\n<p>如A为1，则A＝0，若A为0，则A=1</p>\n<p>1 =  0 , 0  =  1</p>\n<p><span id=\"inline-toc\">4.</span> “异或”运算（XOR）</p>\n<p>通常用 ⊕表示，即 F = A ⊕ B</p>\n<p>“异或”运算是指：当A和B相同时（同时为1或同时为 0），运算结果F为0，而不同时，F为1。</p>\n<p>运算规则为：1 ⊕ 1 = 0 , 1 ⊕ 0 = 1 , 0 ⊕ 1 = 1 , 0 ⊕ 0 = 0</p>\n","site":{"data":{}},"length":3215,"excerpt":"","more":"<h2 id=\"汇编语言的一般概念\"><a class=\"header-anchor\" href=\"#汇编语言的一般概念\">☆</a>汇编语言的一般概念</h2>\n<p>计算机程序设计语言可分为<span id=\"inline-blue\">机器语言</span>、<span id=\"inline-blue\">高级语言</span>和<span id=\"inline-blue\">汇编语言</span>三类。</p>\n<h3 id=\"机器语言\"><a class=\"header-anchor\" href=\"#机器语言\">☆</a>机器语言</h3>\n<p>机器语言就是把控制计算机的命令和各种数 据直接用二进制数码表示的一种程序设计语言。</p>\n<p><span id=\"inline-yellow\">优点</span>：机器语言最直接地表示了计算机内部的基 本操作，用它编制的程序在计算机中运行的效率 最高。即运行速度最快，程序长度最短。<br>\n<span id=\"inline-yellow\">缺点</span>：用二进制数表示的内容既不便于记忆又难 于阅读。</p>\n<h3 id=\"高级语言\"><a class=\"header-anchor\" href=\"#高级语言\">☆</a>高级语言</h3>\n<p>高级语言将计算机内部的操作细节屏蔽起 来，用户不需要知道计算机内部数据的传送和 处理的细节，使用类似于自然语言的一些语句 来编制程序，完成指定的任务。</p>\n<p><span id=\"inline-yellow\">特点</span>：程序设计简单，但程序效率较机器语言低。</p>\n<h3 id=\"汇编语言\"><a class=\"header-anchor\" href=\"#汇编语言\">☆</a>汇编语言</h3>\n<h4 id=\"定义\"><a class=\"header-anchor\" href=\"#定义\">☆</a>定义</h4>\n<p>为了便于记忆和阅读，使用字母和符号来 表示机器语言的命令，用十进制数或十六进制 数来表示数据，这样的计算机程序设计语言就 称为汇编语言。</p>\n<h4 id=\"汇编语言程序与机器语言程序的关系\"><a class=\"header-anchor\" href=\"#汇编语言程序与机器语言程序的关系\">☆</a>汇编语言程序与机器语言程序的关系</h4>\n<p>一条汇编语言的语句与一条机器语言指令对应, 汇编语言程序与机器语言程序效率相同。</p>\n<h4 id=\"不同类型计算机有不同的机器指令系统和汇编语言描述\"><a class=\"header-anchor\" href=\"#不同类型计算机有不同的机器指令系统和汇编语言描述\">☆</a>不同类型计算机有不同的机器指令系统和汇编语言描述</h4>\n<p>对一台计算机来说，机器语言的执行主要取 决于该计算机的中央处理器CPU。因此熟悉计算 机内部结构主要是指CPU的功能结构。它包括：</p>\n<p>CPU中有多少个寄存器及其作用？ CPU是如何访问存储器？ 输入输出操作的方式有哪些？</p>\n<h2 id=\"学习和使用汇编语言的目的\"><a class=\"header-anchor\" href=\"#学习和使用汇编语言的目的\">☆</a>学习和使用汇编语言的目的</h2>\n<p><span id=\"inline-toc\">1.</span> 学习和使用汇编语言可以从根本上认识、理解 计算机的工作过程。<br>\n通过用汇编语言编制程序可以更清楚地了解计 算机是如何完成各种复杂的工作。在此基础上， 程序设计人员能更充分地利用机器硬件的全部功 能，发挥机器的长处。<br>\n<span id=\"inline-toc\">2.</span> 在计算机系统中，某些功能必须用汇编语言程序 来实现。<br>\n如：机器自检、系统初始化、实际的输入输出设备的 操作等。<br>\n<span id=\"inline-toc\">3.</span> 汇编语言程序的效率高于高级语言程序<br>\n“效率”有两个方面的含义：程序的目标代码长 度和运行的速度。<br>\n在某些要求节省内存空间和提高程序运行速度的 应用场合，如实时过程控制、智能仪器仪表等， 常常用汇编语言来编制程序。</p>\n<h2 id=\"进位计数制及其相互转换\"><a class=\"header-anchor\" href=\"#进位计数制及其相互转换\">☆</a>进位计数制及其相互转换</h2>\n<h3 id=\"进位计数制\"><a class=\"header-anchor\" href=\"#进位计数制\">☆</a>进位计数制</h3>\n<p>使用一定个数的数码的组合来表示数字，这种 表示方法称为进位计数制。根据所使用的数码的 个数，就产生了不同的进位计数制。</p>\n<p>将各个位置上所表示的基本数值称为位权, 简称权。</p>\n<p>每个数位上能使用不同数码的个数称为基数。</p>\n<p><span id=\"font-green\">例：</span>十进制有十个数码0～9，基数为10，二进制基 数为2。</p>\n<p>B（Binary）－－二进制数<br>\nO (Octal)或Q－－八进制数<br>\nD (Decimal)－－十进制数<br>\nH (Hexadecimal)－－十六进制数<br>\n如未使用任何字母，则默认表示是十进制数</p>\n<h3 id=\"各种数制间的相互转换\"><a class=\"header-anchor\" href=\"#各种数制间的相互转换\">☆</a>各种数制间的相互转换</h3>\n<h4 id=\"十进制整数转换为二进制数\"><a class=\"header-anchor\" href=\"#十进制整数转换为二进制数\">☆</a>十进制整数转换为二进制数</h4>\n<p><span id=\"inline-toc\">1.</span> 减权定位法</p>\n<ul>\n<li>从二进制数高位起，依次用待转换的十进制数与各位权值进行比较；</li>\n<li>如够减，则该数位系数Ki=1，同时减去该位权值， 余数作为下一次比较的值；</li>\n<li>如不够减，则Ki=0。</li>\n</ul>\n<p><span id=\"inline-toc\">2.</span> 除基取余法</p>\n<p>将十进制数除以基数2，其余数为二进制数的最低位，再用其商除2，其余数为次低位，反复做下去，直到商0。</p>\n<p>这种转换方法同样适合于其它进制数之间的转换。（红）</p>\n<h4 id=\"十进制小数转换为二进制数\"><a class=\"header-anchor\" href=\"#十进制小数转换为二进制数\">☆</a>十进制小数转换为二进制数</h4>\n<p><span id=\"inline-toc\">1.</span> 减权定位法</p>\n<p><span id=\"font-green\">例：</span>将十进制数0.645转换为二进制数</p>\n<table>\n<thead>\n<tr>\n<th>减权比较</th>\n<th>Ki</th>\n<th>对应二进制数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0.645-0.5 =0.145</td>\n<td>k-1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>0.145&lt;0.25</td>\n<td>k-2</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0.145-0.125=0.02</td>\n<td>k-3</td>\n<td>1</td>\n</tr>\n<tr>\n<td>0.02&lt;0.0625</td>\n<td>k-4</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0.02&lt;0.03125</td>\n<td>k-5</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0.02-0.015625</td>\n<td>k-6</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>所以 0.645D=0.101001B</p>\n<p>转换时应根据程序要求的精度或计算机的字长来确 定二进制的位数.（黄框）</p>\n<p><span id=\"inline-toc\">2.</span> 乘基取整法</p>\n<p><span id=\"font-green\">例：</span>将0.8125D转换为二进制数</p>\n<table>\n<thead>\n<tr>\n<th>乘以基数</th>\n<th>Ki</th>\n<th>整数部分</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0.8125×2＝1.625</td>\n<td>K-1</td>\n<td>1</td>\n</tr>\n<tr>\n<td>0.625×2＝1.25</td>\n<td>K-2</td>\n<td>1</td>\n</tr>\n<tr>\n<td>0.25×2＝0.5</td>\n<td>K-3</td>\n<td>0</td>\n</tr>\n<tr>\n<td>0.5×2＝1.</td>\n<td>K-4</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<p>所以 0.8125D＝0.1101B</p>\n<h4 id=\"二进制整数转换为十进制数\"><a class=\"header-anchor\" href=\"#二进制整数转换为十进制数\">☆</a>二进制整数转换为十进制数</h4>\n<p><span id=\"inline-toc\">1.</span> 按权相加法</p>\n<p>101000101B<br>\n＝1×2<sup>8</sup>＋1×2<sup>6</sup>＋1×2<sup>2</sup>＋1×2<sup>0</sup><br>\n＝256＋64＋4＋1<br>\n＝325</p>\n<p><span id=\"inline-toc\">2.</span> 逐次乘基相加法</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/10/8/01.png\" alt=\" \"></p>\n<h4 id=\"二进制小数转换为十进制数\"><a class=\"header-anchor\" href=\"#二进制小数转换为十进制数\">☆</a>二进制小数转换为十进制数</h4>\n<p><span id=\"inline-toc\">1.</span> 按权相加法</p>\n<p>0.101001B<br>\n= 1×2-1＋1×2-3＋1×2-6<br>\n= 0.5+0.125+0.0156<br>\n= 0.640625D</p>\n<p><span id=\"inline-toc\">2.</span> 逐次除基相加法</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/10/8/02.png\" alt=\" \"></p>\n<h4 id=\"二进制与八进制和十六进制间的转换\"><a class=\"header-anchor\" href=\"#二进制与八进制和十六进制间的转换\">☆</a>二进制与八进制和十六进制间的转换</h4>\n<p>二进制与八进制和十六进制之间的对应关系：<br>\n三位二进制数对应一位八进制数，四位二进制数对应一位十六进制数。</p>\n<h2 id=\"带符号数的表示3\"><a class=\"header-anchor\" href=\"#带符号数的表示3\">☆</a>带符号数的表示3</h2>\n<p>用“＋”或“－”表示正负的数叫真值（黄色块）<br>\n用“0”或“1”表示正负的数叫机器数</p>\n<h3 id=\"原码表示\"><a class=\"header-anchor\" href=\"#原码表示\">☆</a>原码表示</h3>\n<p>二进制数的最高位表示符号，0表示正，1表示负。数值 部分用二进制数绝对值表示</p>\n<p>8位二进制数原码的最大数为01111111（+127） 最小数为11111111 （-127）<br>\n8位二进制数表示范围：－127≤X≤+127</p>\n<p>0的原码有两种表示形式：00000000和10000000（+0和-0）</p>\n<h3 id=\"补码的表示\"><a class=\"header-anchor\" href=\"#补码的表示\">☆</a>补码的表示</h3>\n<p><span id=\"inline-toc\">1.</span> 补码的定义</p>\n<p>带符号数X的补码表示[X]<sub>补</sub>定义为：</p>\n<p id=\"div-border-left-purple\">[X]<sub>补</sub>＝M+X       (Mod  M)</p>\n<p>其中模数M根据机器数的位数而定，如位数为8则M=2<sup>8</sup> 用补码表示的机器数，符号位仍然表示数的符号：0为正,1为负。对于正数，补码与原码相同，对于负数需要进行变换。</p>\n<p><span id=\"inline-toc\">2.</span> 由真值、原码变换为补码</p>\n<p>由于正数的原码与补码相同，下面讨论负数的变换方法。</p>\n<p>负数的真值变换为补码的方法：将各位变反（0变1，1变0） 然后在最低位加1.<br>\n负数的原码变换为补码：保持符号位不变,其余各位变反， 最低位加1。</p>\n<p><span id=\"font-green\">例：</span>将－59变换为补码<br>\n<span id=\"inline-green\">真值</span> －00111011 <span id=\"inline-blue\">变反</span> 11000100 <span id=\"inline-yellow\">加1</span>         11000101<br>\n<span id=\"inline-green\">原码</span> 10111011 <span id=\"inline-blue\">变反</span> 11000100 <span id=\"inline-yellow\">加1</span>     11000101</p>\n<p>所以 [-59]<sub>补</sub>＝11000101</p>\n<p><span id=\"inline-toc\">3.</span> 补码数的表示范围</p>\n<p>当位数为8时，最大补码为01111111=[+127]<sub>补</sub> 最小补码为10000000=[-128]<sub>补</sub></p>\n<p>0的补码只有一个，[0]<sub>补</sub>=00000000，而10000000是[-128]<sub>补</sub>11111111=[-1]<sub>补</sub></p>\n<p>对于16位数，则补码表示范围为-32768~+32767</p>\n<p><span id=\"inline-toc\">4.</span> 补码的加减运算</p>\n<p>规则：</p>\n<p id=\"div-border-left-yellow\">\n[X+Y]<sub>补</sub>=[X]<sub>补</sub>+[Y]<sub>补</sub><br>\n[X-Y]<sub>补</sub>=[X]<sub>补</sub>－[Y]<sub>补</sub>=[X]<sub>补</sub>+[-Y]<sub>补</sub>\n</p>\n<p><span id=\"inline-yellow\">进位超出</span>：舍去</p>\n<h2 id=\"字符的表示\"><a class=\"header-anchor\" href=\"#字符的表示\">☆</a>字符的表示</h2>\n<p>标准ASCII码为一字节，其中用低七位表示字符编码(见附录 A),用最高位表示奇偶数验位。</p>\n<p>标准ASCII码共有128个，可分为两类：<br>\n非打印ASCII码,共33个,用于控制操作, 如BEL(响铃07H), DEL(删除7FH),CR(回车,0DH), LF(换行,0AH)。<br>\n可打印ASCII码共有95个，如数字符0~9，大小写字母等。</p>\n<h2 id=\"基本逻辑运算\"><a class=\"header-anchor\" href=\"#基本逻辑运算\">☆</a>基本逻辑运算</h2>\n<p><span id=\"inline-toc\">1.</span> “与”运算（AND）</p>\n<p>“与”运算也叫逻辑乘，常用 ∧ 或 · 表示。</p>\n<p>F=A ∧ B  或 F=A · B</p>\n<p>“与”运算是指：仅当逻辑变量A与B都是1时， 运算结果F才为1。其它情况F为0，</p>\n<p>即有： 0 ∧ 0 ＝0 , 0 ∧ 1 ＝ 0 , 1 ∧ 0 ＝ 0 , 1 ∧ 1 ＝1</p>\n<p><span id=\"inline-toc\">2.</span> “或”运算（OR）</p>\n<p>“或”运算也叫逻辑加，用∨或＋表示。</p>\n<p>即有：F=A ∨B     F=A +B</p>\n<p>“或”运算是指当逻辑变量A与B中，至少有一 个为1时，结果F为1，其他情况F为0。</p>\n<p>即有： 0 ∨ 0 ＝ 0 , 0 ∨ 1 ＝ 1 , 1 ∨ 0 ＝ 1 , 1 ∨ 1 ＝ 1</p>\n<p><span id=\"inline-toc\">3.</span> “非”运算</p>\n<p>如A为1，则A＝0，若A为0，则A=1</p>\n<p>1 =  0 , 0  =  1</p>\n<p><span id=\"inline-toc\">4.</span> “异或”运算（XOR）</p>\n<p>通常用 ⊕表示，即 F = A ⊕ B</p>\n<p>“异或”运算是指：当A和B相同时（同时为1或同时为 0），运算结果F为0，而不同时，F为1。</p>\n<p>运算规则为：1 ⊕ 1 = 0 , 1 ⊕ 0 = 1 , 0 ⊕ 1 = 1 , 0 ⊕ 0 = 0</p>\n"},{"title":"深入理解python语言（绘制蟒蛇）","copyright":true,"abbrlink":"fa0e7c88","date":"2018-06-10T03:53:22.000Z","password":null,"_content":"\n{% meting \"108428\" \"netease\" \"song\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n## turtle库的使用\n+ turtle绘图体系的python实现\n\t+ 标准库\n\t+ 入门图形绘制函数\n\n+ 绘制窗体\n\t+ 单位：像素\n\t+ 启动窗体的位置大小： turtle.setup(weight,height,startx,starty)\n\n+ 空间坐标体系\n\t+ 坐标位置：中心为（0，0）左x轴，右y轴\n\t+ 直线：turtle.goto(x,y)\n\t+ 海龟坐标：\n\t\t+ 无论朝向哪个角度都为前进方向，左侧为左侧方向，右侧为右侧方向\n\t\t+ turtle.fd(d)  #向海龟的正前方向运行\n\t\t+ turtle.bk(d) #向海龟的正后方向运行\n\t\t+ turtle.circle(r,angle) #以海龟当前位置左侧的一个点为圆心曲线运行\n\t\t\t+ turtle.circle(40,80) #以40像素为半径绘制80°的弧线\n\n+ 角度坐标体系\n\t+ x轴正方向为0°，y轴正方向为90°\n\t+ turtle.seth(angle) 改变当前海龟的行进角度，不绘制信息\n\t+ 当前海龟向左或向右变向\n\t\t+ turtle.left(angle)\n\t\t+ turtle.right(angle)\n\t\t\t+ angel 旋转角度\n\n+ RGB色彩体系\n\t+ turtle.colormode(mode)\n\t\t+ 1.0：RGB小数值模式\n\t\t+ 255：RGB整数值模式\n\t\t\n+ 方向控制函数\n\t+ turtle.seth(45)\n\t+ turtle.left(angle)\n\t+ turtle.right(angle)\n\n+ 画笔控制函数\n\t+ 画笔操作后一直有效，一般成对出现\n\t\t+ turtle.penup()  简写  turtle.pu()\n\t\t\t+ 画笔抬起，海龟飞行\n\t\t+ turtle.pendown()  简写   turtle.pd()\n\t\t\t+ 落下画笔，海龟爬行\n\t+ turtle.pencolor(color)\n\t\t+ 颜色字符串：turtle.pencolor(\"purple\")\n\t\t+ RGB小数值：turtle.pencolor(0.63,0.13,0.94)\n\t\t+ RGB元组值：turtle.pencolor((0.63,0.13,0.94))\n\t+ turtle.pensize()\n\t\t+ 画笔宽度\n\n+ 运动控制函数\n\t+ turtle.forward(0)  简写  turtle.fd(d)\n\t\t+ 向前行进，海龟走直线\n\t\t+ d 行进距离，可以为负数\n\t\t\n\t+ turtle.circle(r,extent=None) \n\t\t+ 根据半径r绘制extent角度的弧形\n\t\t+ r默认圆心在海龟左侧r距离的位置\n\t\t+ extent绘制弧度，默认为360°\n        \n+ import 用法\n\t+ import<库名>\n\t\t+ <库名>.<函数名>(<函数参数>)\n\n\t+ from<库名>import<函数名>\n\t+ from<库名>import *\n\t+ <函数名>(<函数参数>)\n\t+ import<库名>as<库别名>\t\n\t+ <库别名>.<函数名>\n\n+ 循环语句\n\t+ for <变量> in range(<函数名>) \n\t\t+ <被执行的循环语句>\n\t- <变量>表示每次循环的计数，0到<次数>-1\n\t```python\n\tfor i in range(5)\n\t\tprint(\"hello:\",i)\n\t```\n\t+ range()函数\n\t\t+ 产生循环计数序列\n\t\t- range(N)\n\t\t\t- 产生0到N-1的整数序列，共N个\n\t\t- range(M,N)\n\t\t\t- 产生 M 到 N-1 的整数序列，共 N-M个\n\n## 附\n```python\nimport turtle\nturtle.setup(650,350,200,200)\nturtle.penup()\nturtle.fd(-250)\nturtle.pendown()\nturtle.pensize(25)\nturtle.pencolor(\"green\")\nturtle.seth(-40)\nfor i in range(4):\n    turtle.circle(40,80)\n    turtle.circle(-40,80)\nturtle.circle(40,80/2)\nturtle.fd(40)\nturtle.circle(16,180)\nturtle.fd(40 * 2/3)\nturtle.done()\n\n\n```\n\t\t\t","source":"_posts/深入理解python语言（绘制蟒蛇）.md","raw":"---\ntitle: 深入理解python语言（绘制蟒蛇）\ncopyright: true\nabbrlink: fa0e7c88\ntags:\n  - python\ncategories: python\ndate: 2018-06-10 11:53:22\npassword:\n---\n\n{% meting \"108428\" \"netease\" \"song\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n## turtle库的使用\n+ turtle绘图体系的python实现\n\t+ 标准库\n\t+ 入门图形绘制函数\n\n+ 绘制窗体\n\t+ 单位：像素\n\t+ 启动窗体的位置大小： turtle.setup(weight,height,startx,starty)\n\n+ 空间坐标体系\n\t+ 坐标位置：中心为（0，0）左x轴，右y轴\n\t+ 直线：turtle.goto(x,y)\n\t+ 海龟坐标：\n\t\t+ 无论朝向哪个角度都为前进方向，左侧为左侧方向，右侧为右侧方向\n\t\t+ turtle.fd(d)  #向海龟的正前方向运行\n\t\t+ turtle.bk(d) #向海龟的正后方向运行\n\t\t+ turtle.circle(r,angle) #以海龟当前位置左侧的一个点为圆心曲线运行\n\t\t\t+ turtle.circle(40,80) #以40像素为半径绘制80°的弧线\n\n+ 角度坐标体系\n\t+ x轴正方向为0°，y轴正方向为90°\n\t+ turtle.seth(angle) 改变当前海龟的行进角度，不绘制信息\n\t+ 当前海龟向左或向右变向\n\t\t+ turtle.left(angle)\n\t\t+ turtle.right(angle)\n\t\t\t+ angel 旋转角度\n\n+ RGB色彩体系\n\t+ turtle.colormode(mode)\n\t\t+ 1.0：RGB小数值模式\n\t\t+ 255：RGB整数值模式\n\t\t\n+ 方向控制函数\n\t+ turtle.seth(45)\n\t+ turtle.left(angle)\n\t+ turtle.right(angle)\n\n+ 画笔控制函数\n\t+ 画笔操作后一直有效，一般成对出现\n\t\t+ turtle.penup()  简写  turtle.pu()\n\t\t\t+ 画笔抬起，海龟飞行\n\t\t+ turtle.pendown()  简写   turtle.pd()\n\t\t\t+ 落下画笔，海龟爬行\n\t+ turtle.pencolor(color)\n\t\t+ 颜色字符串：turtle.pencolor(\"purple\")\n\t\t+ RGB小数值：turtle.pencolor(0.63,0.13,0.94)\n\t\t+ RGB元组值：turtle.pencolor((0.63,0.13,0.94))\n\t+ turtle.pensize()\n\t\t+ 画笔宽度\n\n+ 运动控制函数\n\t+ turtle.forward(0)  简写  turtle.fd(d)\n\t\t+ 向前行进，海龟走直线\n\t\t+ d 行进距离，可以为负数\n\t\t\n\t+ turtle.circle(r,extent=None) \n\t\t+ 根据半径r绘制extent角度的弧形\n\t\t+ r默认圆心在海龟左侧r距离的位置\n\t\t+ extent绘制弧度，默认为360°\n        \n+ import 用法\n\t+ import<库名>\n\t\t+ <库名>.<函数名>(<函数参数>)\n\n\t+ from<库名>import<函数名>\n\t+ from<库名>import *\n\t+ <函数名>(<函数参数>)\n\t+ import<库名>as<库别名>\t\n\t+ <库别名>.<函数名>\n\n+ 循环语句\n\t+ for <变量> in range(<函数名>) \n\t\t+ <被执行的循环语句>\n\t- <变量>表示每次循环的计数，0到<次数>-1\n\t```python\n\tfor i in range(5)\n\t\tprint(\"hello:\",i)\n\t```\n\t+ range()函数\n\t\t+ 产生循环计数序列\n\t\t- range(N)\n\t\t\t- 产生0到N-1的整数序列，共N个\n\t\t- range(M,N)\n\t\t\t- 产生 M 到 N-1 的整数序列，共 N-M个\n\n## 附\n```python\nimport turtle\nturtle.setup(650,350,200,200)\nturtle.penup()\nturtle.fd(-250)\nturtle.pendown()\nturtle.pensize(25)\nturtle.pencolor(\"green\")\nturtle.seth(-40)\nfor i in range(4):\n    turtle.circle(40,80)\n    turtle.circle(-40,80)\nturtle.circle(40,80/2)\nturtle.fd(40)\nturtle.circle(16,180)\nturtle.fd(40 * 2/3)\nturtle.done()\n\n\n```\n\t\t\t","slug":"深入理解python语言（绘制蟒蛇）","published":1,"updated":"2020-02-20T06:06:59.425Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3w001lfkup1bx6ujg1","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-IsFNYDyk\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"108428\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h2 id=\"turtle库的使用\"><a class=\"header-anchor\" href=\"#turtle库的使用\">☆</a>turtle库的使用</h2>\n<ul>\n<li>\n<p>turtle绘图体系的python实现</p>\n<ul>\n<li>标准库</li>\n<li>入门图形绘制函数</li>\n</ul>\n</li>\n<li>\n<p>绘制窗体</p>\n<ul>\n<li>单位：像素</li>\n<li>启动窗体的位置大小： turtle.setup(weight,height,startx,starty)</li>\n</ul>\n</li>\n<li>\n<p>空间坐标体系</p>\n<ul>\n<li>坐标位置：中心为（0，0）左x轴，右y轴</li>\n<li>直线：turtle.goto(x,y)</li>\n<li>海龟坐标：\n<ul>\n<li>无论朝向哪个角度都为前进方向，左侧为左侧方向，右侧为右侧方向</li>\n<li>turtle.fd(d)  #向海龟的正前方向运行</li>\n<li>turtle.bk(d) #向海龟的正后方向运行</li>\n<li>turtle.circle(r,angle) #以海龟当前位置左侧的一个点为圆心曲线运行\n<ul>\n<li>turtle.circle(40,80) #以40像素为半径绘制80°的弧线</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>角度坐标体系</p>\n<ul>\n<li>x轴正方向为0°，y轴正方向为90°</li>\n<li>turtle.seth(angle) 改变当前海龟的行进角度，不绘制信息</li>\n<li>当前海龟向左或向右变向\n<ul>\n<li>turtle.left(angle)</li>\n<li>turtle.right(angle)\n<ul>\n<li>angel 旋转角度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>RGB色彩体系</p>\n<ul>\n<li>turtle.colormode(mode)\n<ul>\n<li>1.0：RGB小数值模式</li>\n<li>255：RGB整数值模式</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>方向控制函数</p>\n<ul>\n<li>turtle.seth(45)</li>\n<li>turtle.left(angle)</li>\n<li>turtle.right(angle)</li>\n</ul>\n</li>\n<li>\n<p>画笔控制函数</p>\n<ul>\n<li>画笔操作后一直有效，一般成对出现\n<ul>\n<li>turtle.penup()  简写  turtle.pu()\n<ul>\n<li>画笔抬起，海龟飞行</li>\n</ul>\n</li>\n<li>turtle.pendown()  简写   turtle.pd()\n<ul>\n<li>落下画笔，海龟爬行</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>turtle.pencolor(color)\n<ul>\n<li>颜色字符串：turtle.pencolor(“purple”)</li>\n<li>RGB小数值：turtle.pencolor(0.63,0.13,0.94)</li>\n<li>RGB元组值：turtle.pencolor((0.63,0.13,0.94))</li>\n</ul>\n</li>\n<li>turtle.pensize()\n<ul>\n<li>画笔宽度</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>运动控制函数</p>\n<ul>\n<li>\n<p>turtle.forward(0)  简写  turtle.fd(d)</p>\n<ul>\n<li>向前行进，海龟走直线</li>\n<li>d 行进距离，可以为负数</li>\n</ul>\n</li>\n<li>\n<p>turtle.circle(r,extent=None)</p>\n<ul>\n<li>根据半径r绘制extent角度的弧形</li>\n<li>r默认圆心在海龟左侧r距离的位置</li>\n<li>extent绘制弧度，默认为360°</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>import 用法</p>\n<ul>\n<li>\n<p>import&lt;库名&gt;</p>\n<ul>\n<li>&lt;库名&gt;.&lt;函数名&gt;(&lt;函数参数&gt;)</li>\n</ul>\n</li>\n<li>\n<p>from&lt;库名&gt;import&lt;函数名&gt;</p>\n</li>\n<li>\n<p>from&lt;库名&gt;import *</p>\n</li>\n<li>\n<p>&lt;函数名&gt;(&lt;函数参数&gt;)</p>\n</li>\n<li>\n<p>import&lt;库名&gt;as&lt;库别名&gt;</p>\n</li>\n<li>\n<p>&lt;库别名&gt;.&lt;函数名&gt;</p>\n</li>\n</ul>\n</li>\n<li>\n<p>循环语句</p>\n<ul>\n<li>for &lt;变量&gt; in range(&lt;函数名&gt;)\n<ul>\n<li>&lt;被执行的循环语句&gt;</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>&lt;变量&gt;表示每次循环的计数，0到&lt;次数&gt;-1</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">5</span>)</span><br><span class=\"line\">\tprint(<span class=\"string\">\"hello:\"</span>,i)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>range()函数\n<ul>\n<li>产生循环计数序列</li>\n</ul>\n<ul>\n<li>range(N)\n<ul>\n<li>产生0到N-1的整数序列，共N个</li>\n</ul>\n</li>\n<li>range(M,N)\n<ul>\n<li>产生 M 到 N-1 的整数序列，共 N-M个</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"附\"><a class=\"header-anchor\" href=\"#附\">☆</a>附</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> turtle</span><br><span class=\"line\">turtle.setup(<span class=\"number\">650</span>,<span class=\"number\">350</span>,<span class=\"number\">200</span>,<span class=\"number\">200</span>)</span><br><span class=\"line\">turtle.penup()</span><br><span class=\"line\">turtle.fd(<span class=\"number\">-250</span>)</span><br><span class=\"line\">turtle.pendown()</span><br><span class=\"line\">turtle.pensize(<span class=\"number\">25</span>)</span><br><span class=\"line\">turtle.pencolor(<span class=\"string\">\"green\"</span>)</span><br><span class=\"line\">turtle.seth(<span class=\"number\">-40</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">40</span>,<span class=\"number\">80</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">-40</span>,<span class=\"number\">80</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">40</span>,<span class=\"number\">80</span>/<span class=\"number\">2</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">40</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">16</span>,<span class=\"number\">180</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">40</span> * <span class=\"number\">2</span>/<span class=\"number\">3</span>)</span><br><span class=\"line\">turtle.done()</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"length":1662,"excerpt":"","more":"\n    <div id=\"aplayer-IsFNYDyk\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"108428\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h2 id=\"turtle库的使用\"><a class=\"header-anchor\" href=\"#turtle库的使用\">☆</a>turtle库的使用</h2>\n<ul>\n<li>\n<p>turtle绘图体系的python实现</p>\n<ul>\n<li>标准库</li>\n<li>入门图形绘制函数</li>\n</ul>\n</li>\n<li>\n<p>绘制窗体</p>\n<ul>\n<li>单位：像素</li>\n<li>启动窗体的位置大小： turtle.setup(weight,height,startx,starty)</li>\n</ul>\n</li>\n<li>\n<p>空间坐标体系</p>\n<ul>\n<li>坐标位置：中心为（0，0）左x轴，右y轴</li>\n<li>直线：turtle.goto(x,y)</li>\n<li>海龟坐标：\n<ul>\n<li>无论朝向哪个角度都为前进方向，左侧为左侧方向，右侧为右侧方向</li>\n<li>turtle.fd(d)  #向海龟的正前方向运行</li>\n<li>turtle.bk(d) #向海龟的正后方向运行</li>\n<li>turtle.circle(r,angle) #以海龟当前位置左侧的一个点为圆心曲线运行\n<ul>\n<li>turtle.circle(40,80) #以40像素为半径绘制80°的弧线</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>角度坐标体系</p>\n<ul>\n<li>x轴正方向为0°，y轴正方向为90°</li>\n<li>turtle.seth(angle) 改变当前海龟的行进角度，不绘制信息</li>\n<li>当前海龟向左或向右变向\n<ul>\n<li>turtle.left(angle)</li>\n<li>turtle.right(angle)\n<ul>\n<li>angel 旋转角度</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>RGB色彩体系</p>\n<ul>\n<li>turtle.colormode(mode)\n<ul>\n<li>1.0：RGB小数值模式</li>\n<li>255：RGB整数值模式</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>方向控制函数</p>\n<ul>\n<li>turtle.seth(45)</li>\n<li>turtle.left(angle)</li>\n<li>turtle.right(angle)</li>\n</ul>\n</li>\n<li>\n<p>画笔控制函数</p>\n<ul>\n<li>画笔操作后一直有效，一般成对出现\n<ul>\n<li>turtle.penup()  简写  turtle.pu()\n<ul>\n<li>画笔抬起，海龟飞行</li>\n</ul>\n</li>\n<li>turtle.pendown()  简写   turtle.pd()\n<ul>\n<li>落下画笔，海龟爬行</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>turtle.pencolor(color)\n<ul>\n<li>颜色字符串：turtle.pencolor(“purple”)</li>\n<li>RGB小数值：turtle.pencolor(0.63,0.13,0.94)</li>\n<li>RGB元组值：turtle.pencolor((0.63,0.13,0.94))</li>\n</ul>\n</li>\n<li>turtle.pensize()\n<ul>\n<li>画笔宽度</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>运动控制函数</p>\n<ul>\n<li>\n<p>turtle.forward(0)  简写  turtle.fd(d)</p>\n<ul>\n<li>向前行进，海龟走直线</li>\n<li>d 行进距离，可以为负数</li>\n</ul>\n</li>\n<li>\n<p>turtle.circle(r,extent=None)</p>\n<ul>\n<li>根据半径r绘制extent角度的弧形</li>\n<li>r默认圆心在海龟左侧r距离的位置</li>\n<li>extent绘制弧度，默认为360°</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>import 用法</p>\n<ul>\n<li>\n<p>import&lt;库名&gt;</p>\n<ul>\n<li>&lt;库名&gt;.&lt;函数名&gt;(&lt;函数参数&gt;)</li>\n</ul>\n</li>\n<li>\n<p>from&lt;库名&gt;import&lt;函数名&gt;</p>\n</li>\n<li>\n<p>from&lt;库名&gt;import *</p>\n</li>\n<li>\n<p>&lt;函数名&gt;(&lt;函数参数&gt;)</p>\n</li>\n<li>\n<p>import&lt;库名&gt;as&lt;库别名&gt;</p>\n</li>\n<li>\n<p>&lt;库别名&gt;.&lt;函数名&gt;</p>\n</li>\n</ul>\n</li>\n<li>\n<p>循环语句</p>\n<ul>\n<li>for &lt;变量&gt; in range(&lt;函数名&gt;)\n<ul>\n<li>&lt;被执行的循环语句&gt;</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>&lt;变量&gt;表示每次循环的计数，0到&lt;次数&gt;-1</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">5</span>)</span><br><span class=\"line\">\tprint(<span class=\"string\">\"hello:\"</span>,i)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>range()函数\n<ul>\n<li>产生循环计数序列</li>\n</ul>\n<ul>\n<li>range(N)\n<ul>\n<li>产生0到N-1的整数序列，共N个</li>\n</ul>\n</li>\n<li>range(M,N)\n<ul>\n<li>产生 M 到 N-1 的整数序列，共 N-M个</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"附\"><a class=\"header-anchor\" href=\"#附\">☆</a>附</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> turtle</span><br><span class=\"line\">turtle.setup(<span class=\"number\">650</span>,<span class=\"number\">350</span>,<span class=\"number\">200</span>,<span class=\"number\">200</span>)</span><br><span class=\"line\">turtle.penup()</span><br><span class=\"line\">turtle.fd(<span class=\"number\">-250</span>)</span><br><span class=\"line\">turtle.pendown()</span><br><span class=\"line\">turtle.pensize(<span class=\"number\">25</span>)</span><br><span class=\"line\">turtle.pencolor(<span class=\"string\">\"green\"</span>)</span><br><span class=\"line\">turtle.seth(<span class=\"number\">-40</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">4</span>):</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">40</span>,<span class=\"number\">80</span>)</span><br><span class=\"line\">    turtle.circle(<span class=\"number\">-40</span>,<span class=\"number\">80</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">40</span>,<span class=\"number\">80</span>/<span class=\"number\">2</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">40</span>)</span><br><span class=\"line\">turtle.circle(<span class=\"number\">16</span>,<span class=\"number\">180</span>)</span><br><span class=\"line\">turtle.fd(<span class=\"number\">40</span> * <span class=\"number\">2</span>/<span class=\"number\">3</span>)</span><br><span class=\"line\">turtle.done()</span><br></pre></td></tr></table></figure>\n"},{"title":"汇编语言课后习题-单元测试1","copyright":true,"abbrlink":"4546ca94","notshow":true,"description":"汇编语言课后习题-单元测试1","date":"2018-09-10T13:36:00.000Z","password":null,"image":null,"photos":[],"sticky":null,"_content":"\n\n{% meting \"108134\" \"netease\" \"song\" %}\n\n\n>{% cq %} 拼命着想的事 未必带来感动 {% endcq %}\n\n\n\n### 微型计算机由哪几部分组成？\n\n五部分：控制器，运算器，存储器，输入设备，输出设备\n\n\n### 系统总线根据传送的信号种类分为哪几种？\n\n地址总线、数据总线、控制总线。\n\n### 简述微型计算机系统有那些主要的性能指标？\n\n字长，存储容量，指令系统，运算速度，系统配置\n\n微型计算机的五大性能指标分别是：存储容量、字长、软件配置情况、外设扩展能力、主频。\n\n存储容量：包括内存容量和外存容量，是衡量微型计算机中存储能力的一个指标。内存容量以字节为单位，分最大容量和装机容量。\n\n字长：\n\n字长是计算机内部一次可以处理的二进制数的位数，有4位、8位、16位，高档微型计算机字长为32位或64位。\n\n软件配置情况：\n\n软件配置情况直接影响微型计算机系统的使用和性能的发挥。通常应配置的软件有：操作系统、计算机语言以及工具软件等，另外还可配置数据库管理系统和各种应用软件。\n\n外设扩展能力：\n\n一台微型计算机可配置外部设备的数量以及配置外部设备的类型，对整个系统的性能有重大影响。如显示器的分辨率、多媒体接口功能和打印机型号等，都是外部设备选择中要考虑的问题。\n\n主频：\n\n主频是指微型计算机中CPU的时钟频率，也就是CPU运算时的工作频率。主频越高，一个时钟周期里完成的指令数越多，CPU的速度越快。\n\n### 简述EU和BIU的功能及二者间的关系\n\nEU：只负责执行指令。执行的指令从BIU的指令缓冲器中取得，执行指令的结果或执行指令所需的数据，都由EU向BIU发出请求，再由BIU在存储器或外存中进行存取。\nBIU：负责完成CPU与存储器或I/O设备之间的数据传送。\n\nBIU指总线接口单元，EU指执行单元。\n\nBIU与EU合称为8086、8088两大独立工作单元。其中BIU负责从内存指定区域取出指令传送到指令队列中排队；执行指令时所需要的操作数也由BIU从相应的内存区域取出，传送给执行部件EU。指令执行的结果如果需要存入内存的话，也由BIU写入相应的内存区域。总之，BIU同外部总线连接为EU完成所有的总线操作，并形成20位的内存物理地址。\n\n### 8086/8088 CPU中有那些寄存器？功能是什么？\n\n1.寄存器按照功能的不同可分为通用寄存器（AX，BX，CX，DX，SP，BP，SI，DI。其中的前四个寄存器可分别分成AH，AL ；BH，BL；CH，CL；DH，DL的八位寄存器）、指令指针寄存器（IP）、标志寄存器（FLAGS）、段寄存器（CS，DS，ES，SS）。它们的区别和联系体现在它们的功能上，对它们的深入了解和正确运用需要通过编写程序来实现。\n2.大致功能如下：\nAX，可存放一般数据，而且可作为累加器使用；\nBX，可存放一般数据，而且可用来存放数据的指针（偏移地址），常常和DS寄存器连用；\nCX，可存放一般数据，而且可用来做计数器，常常将循环次数用它来存放；\nDX，可存放一般数据，而且可用来存放乘法运算产生的部分积，或用来存放输入输出的端口地址（指针）；\nSP，用于寻址一个称为堆栈的存储区，通过它来访问堆栈数据；\nBP，可存放一般数据，用来存放访问堆栈段的一个数据区，作为基地址；\nSI，可存放一般数据，还可用于串操作中，存放源地址，对一串数据访问；\nDI，可存放一般数据，还可用于串操作中，存放目的地址，对一串数据访问；\nIP，用于寻址当前需要取出的指令字节，程序员不能对它直接操作；\nFLAGS，用于指示微处理器的状态并控制它的操作；\nCS，代码段寄存器，代码段是一个存储区域，存放的是CPU要使用的代码，CS存放代码段的段基地址；\nDS，数据段寄存器，数据段是包含程序使用的大部分数据的存储区，DS中存放数据段的段基地址；\nES，附加段寄存器，附加段是为某些串操作指令存放目的操作数而附近的一个数据段，ES中存放该数据段的段基地址；\nSS，堆栈段寄存器，堆栈段是内存中一个特殊的存储区，用于暂时存放程序运行时所需的数据或地址信息。SS中存放该存储区的段基地址。\n基本功能就是这些，要想透彻掌握深层的寄存器功能，必须要编写汇编源程序，可用微软的masm汇编程序进行编译，用dos系统自带的debug命令调试，直到程序正确运行，才能体会其中的奥妙。\n\n### 8086/8088 CPU标志寄存器中有那些标志位？功能是什么？\n\n8086CPU的标志寄存器有16位，其中存储的信息通常被称为程序状态字PSW（标志位），简称flag。flag和其他寄存器不一样，其他寄存器是用来存放数据的，都是整个寄存器具有一个含义。\n\n#### 运算结果标志位：\n\nZF标志（ZeroFlag）：\n零位标志位，它记录相关指令执行后的结果是否为0，如果是0，那么ZF=1，如果结果不为0，那么ZF=0。\n\nPF标志（ParityFlag）：\n奇偶标志位，它记录相关指令执行后，其结果的所有二进制位中1个个数是否为偶数，如果是偶数，PF=1，反之为0。\n\nSF标志（SignFlag）：\n符号标志位，它记录相关指令执行后，其结果是否为负，如果结果为负，SF=1，如果非负，SF=0。\n\nCF标志（Carry进位，Flag标志）：\n进位标志位，一般情况，进行无符号运算时，它记录运算结果的最高位向更高位的进位值，或从更高位的借位值，如果运算结果的最高位产生了一个进位或借位，那么其值为1，否则其值为0。\n\nOF标志（Overflow溢出，Flag标志）：\n溢出标志位，在进行有符号数运算的时候，如果结果超出了机器所能表示的范围称为溢出，OF的值被置为1，否则OF的值为0。\n注意：这里所说的溢出，只是对有符号运算而言。\n\n#### 状态控制标志位：\n\nTF标志（TrapFlag）：\n追踪标志位，当追踪标志被置为1时，CPU进入单步执行方式，即每执行一条指令产生一个单步中断请求，这中方式主要用于程序的调试。\n\nIF标志（Interrupt-enable Flag）：\n中断允许标志位，用来决定CPU是否响应CPU外部的可屏蔽中断发出的中断请求，但不管该标志为何值，CPU都必须响应CPU外部的不可屏蔽中断所发出的中断请求，以及CPU内部产生的中断请求。\n\n    + 当IF=1时，CPU可以相应CPU外部的可屏蔽中断发出的中断请求。\n    + 当IF=0时，CPU不响应CPU外部的可屏蔽中断发出的中断请求。\n\n\n### 80386 CPU中有那些寄存器？功能是什么？\n\n[80386](https://blog.csdn.net/u014774781/article/details/47707385)共提供7种类型的32位寄存器，如下：\n\n    通用寄存器(EAX、EBX、ECX、EDX、ESP、EBP、ESI、EDI)\n    段寄存器(CS、SS、DS、ES、FS、GS)\n    指令指针寄存器和标志寄存器(EIP、EFLAGS)\n    系统表寄存器(GDTR、IDTR、LDTR、TR)\n    控制寄存器(CR0、CR1、CR2、CR3、CR4)\n    调试寄存器(DR0、DR1、DR2、DR3、DR4、DR5、DR6、DR7)\n    测试寄存器(TR6、TR7)\n        其中后三类寄存器是80386以后的CPU才有的，以前的CPU完全没有。\n\n### 说明计算机硬件系统和软件系统的关系\n\n一个完整的计算机系统由硬件系统和软件系统组成。没有软件的计算机称为“裸机”，什么事情也做不了。硬件是基础，是软件的载体，软件则使硬件具有了使用价值。两者相辅相成，缺一不可。\n\n","source":"_posts/汇编语言课后习题-单元测试1.md","raw":"---\ntitle: 汇编语言课后习题-单元测试1\ncopyright: true\nabbrlink: 4546ca94\nnotshow: true\ntags:\n  - 汇编\ncategories: 汇编\ndescription: 汇编语言课后习题-单元测试1\ndate: 2018-09-10 21:36:00\npassword:\nimage:\nphotos:\nsticky:\n---\n\n\n{% meting \"108134\" \"netease\" \"song\" %}\n\n\n>{% cq %} 拼命着想的事 未必带来感动 {% endcq %}\n\n\n\n### 微型计算机由哪几部分组成？\n\n五部分：控制器，运算器，存储器，输入设备，输出设备\n\n\n### 系统总线根据传送的信号种类分为哪几种？\n\n地址总线、数据总线、控制总线。\n\n### 简述微型计算机系统有那些主要的性能指标？\n\n字长，存储容量，指令系统，运算速度，系统配置\n\n微型计算机的五大性能指标分别是：存储容量、字长、软件配置情况、外设扩展能力、主频。\n\n存储容量：包括内存容量和外存容量，是衡量微型计算机中存储能力的一个指标。内存容量以字节为单位，分最大容量和装机容量。\n\n字长：\n\n字长是计算机内部一次可以处理的二进制数的位数，有4位、8位、16位，高档微型计算机字长为32位或64位。\n\n软件配置情况：\n\n软件配置情况直接影响微型计算机系统的使用和性能的发挥。通常应配置的软件有：操作系统、计算机语言以及工具软件等，另外还可配置数据库管理系统和各种应用软件。\n\n外设扩展能力：\n\n一台微型计算机可配置外部设备的数量以及配置外部设备的类型，对整个系统的性能有重大影响。如显示器的分辨率、多媒体接口功能和打印机型号等，都是外部设备选择中要考虑的问题。\n\n主频：\n\n主频是指微型计算机中CPU的时钟频率，也就是CPU运算时的工作频率。主频越高，一个时钟周期里完成的指令数越多，CPU的速度越快。\n\n### 简述EU和BIU的功能及二者间的关系\n\nEU：只负责执行指令。执行的指令从BIU的指令缓冲器中取得，执行指令的结果或执行指令所需的数据，都由EU向BIU发出请求，再由BIU在存储器或外存中进行存取。\nBIU：负责完成CPU与存储器或I/O设备之间的数据传送。\n\nBIU指总线接口单元，EU指执行单元。\n\nBIU与EU合称为8086、8088两大独立工作单元。其中BIU负责从内存指定区域取出指令传送到指令队列中排队；执行指令时所需要的操作数也由BIU从相应的内存区域取出，传送给执行部件EU。指令执行的结果如果需要存入内存的话，也由BIU写入相应的内存区域。总之，BIU同外部总线连接为EU完成所有的总线操作，并形成20位的内存物理地址。\n\n### 8086/8088 CPU中有那些寄存器？功能是什么？\n\n1.寄存器按照功能的不同可分为通用寄存器（AX，BX，CX，DX，SP，BP，SI，DI。其中的前四个寄存器可分别分成AH，AL ；BH，BL；CH，CL；DH，DL的八位寄存器）、指令指针寄存器（IP）、标志寄存器（FLAGS）、段寄存器（CS，DS，ES，SS）。它们的区别和联系体现在它们的功能上，对它们的深入了解和正确运用需要通过编写程序来实现。\n2.大致功能如下：\nAX，可存放一般数据，而且可作为累加器使用；\nBX，可存放一般数据，而且可用来存放数据的指针（偏移地址），常常和DS寄存器连用；\nCX，可存放一般数据，而且可用来做计数器，常常将循环次数用它来存放；\nDX，可存放一般数据，而且可用来存放乘法运算产生的部分积，或用来存放输入输出的端口地址（指针）；\nSP，用于寻址一个称为堆栈的存储区，通过它来访问堆栈数据；\nBP，可存放一般数据，用来存放访问堆栈段的一个数据区，作为基地址；\nSI，可存放一般数据，还可用于串操作中，存放源地址，对一串数据访问；\nDI，可存放一般数据，还可用于串操作中，存放目的地址，对一串数据访问；\nIP，用于寻址当前需要取出的指令字节，程序员不能对它直接操作；\nFLAGS，用于指示微处理器的状态并控制它的操作；\nCS，代码段寄存器，代码段是一个存储区域，存放的是CPU要使用的代码，CS存放代码段的段基地址；\nDS，数据段寄存器，数据段是包含程序使用的大部分数据的存储区，DS中存放数据段的段基地址；\nES，附加段寄存器，附加段是为某些串操作指令存放目的操作数而附近的一个数据段，ES中存放该数据段的段基地址；\nSS，堆栈段寄存器，堆栈段是内存中一个特殊的存储区，用于暂时存放程序运行时所需的数据或地址信息。SS中存放该存储区的段基地址。\n基本功能就是这些，要想透彻掌握深层的寄存器功能，必须要编写汇编源程序，可用微软的masm汇编程序进行编译，用dos系统自带的debug命令调试，直到程序正确运行，才能体会其中的奥妙。\n\n### 8086/8088 CPU标志寄存器中有那些标志位？功能是什么？\n\n8086CPU的标志寄存器有16位，其中存储的信息通常被称为程序状态字PSW（标志位），简称flag。flag和其他寄存器不一样，其他寄存器是用来存放数据的，都是整个寄存器具有一个含义。\n\n#### 运算结果标志位：\n\nZF标志（ZeroFlag）：\n零位标志位，它记录相关指令执行后的结果是否为0，如果是0，那么ZF=1，如果结果不为0，那么ZF=0。\n\nPF标志（ParityFlag）：\n奇偶标志位，它记录相关指令执行后，其结果的所有二进制位中1个个数是否为偶数，如果是偶数，PF=1，反之为0。\n\nSF标志（SignFlag）：\n符号标志位，它记录相关指令执行后，其结果是否为负，如果结果为负，SF=1，如果非负，SF=0。\n\nCF标志（Carry进位，Flag标志）：\n进位标志位，一般情况，进行无符号运算时，它记录运算结果的最高位向更高位的进位值，或从更高位的借位值，如果运算结果的最高位产生了一个进位或借位，那么其值为1，否则其值为0。\n\nOF标志（Overflow溢出，Flag标志）：\n溢出标志位，在进行有符号数运算的时候，如果结果超出了机器所能表示的范围称为溢出，OF的值被置为1，否则OF的值为0。\n注意：这里所说的溢出，只是对有符号运算而言。\n\n#### 状态控制标志位：\n\nTF标志（TrapFlag）：\n追踪标志位，当追踪标志被置为1时，CPU进入单步执行方式，即每执行一条指令产生一个单步中断请求，这中方式主要用于程序的调试。\n\nIF标志（Interrupt-enable Flag）：\n中断允许标志位，用来决定CPU是否响应CPU外部的可屏蔽中断发出的中断请求，但不管该标志为何值，CPU都必须响应CPU外部的不可屏蔽中断所发出的中断请求，以及CPU内部产生的中断请求。\n\n    + 当IF=1时，CPU可以相应CPU外部的可屏蔽中断发出的中断请求。\n    + 当IF=0时，CPU不响应CPU外部的可屏蔽中断发出的中断请求。\n\n\n### 80386 CPU中有那些寄存器？功能是什么？\n\n[80386](https://blog.csdn.net/u014774781/article/details/47707385)共提供7种类型的32位寄存器，如下：\n\n    通用寄存器(EAX、EBX、ECX、EDX、ESP、EBP、ESI、EDI)\n    段寄存器(CS、SS、DS、ES、FS、GS)\n    指令指针寄存器和标志寄存器(EIP、EFLAGS)\n    系统表寄存器(GDTR、IDTR、LDTR、TR)\n    控制寄存器(CR0、CR1、CR2、CR3、CR4)\n    调试寄存器(DR0、DR1、DR2、DR3、DR4、DR5、DR6、DR7)\n    测试寄存器(TR6、TR7)\n        其中后三类寄存器是80386以后的CPU才有的，以前的CPU完全没有。\n\n### 说明计算机硬件系统和软件系统的关系\n\n一个完整的计算机系统由硬件系统和软件系统组成。没有软件的计算机称为“裸机”，什么事情也做不了。硬件是基础，是软件的载体，软件则使硬件具有了使用价值。两者相辅相成，缺一不可。\n\n","slug":"汇编语言课后习题-单元测试1","published":1,"updated":"2020-02-20T06:06:59.424Z","comments":1,"layout":"post","link":"","_id":"ckec2td3x001mfkupjj1ziq3n","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-USPTgdhy\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"108134\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"></div>\n<blockquote>\n<blockquote class=\"blockquote-center\"><p>拼命着想的事 未必带来感动</p>\n</blockquote>\n</blockquote>\n<h3 id=\"微型计算机由哪几部分组成？\"><a class=\"header-anchor\" href=\"#微型计算机由哪几部分组成？\">☆</a>微型计算机由哪几部分组成？</h3>\n<p>五部分：控制器，运算器，存储器，输入设备，输出设备</p>\n<h3 id=\"系统总线根据传送的信号种类分为哪几种？\"><a class=\"header-anchor\" href=\"#系统总线根据传送的信号种类分为哪几种？\">☆</a>系统总线根据传送的信号种类分为哪几种？</h3>\n<p>地址总线、数据总线、控制总线。</p>\n<h3 id=\"简述微型计算机系统有那些主要的性能指标？\"><a class=\"header-anchor\" href=\"#简述微型计算机系统有那些主要的性能指标？\">☆</a>简述微型计算机系统有那些主要的性能指标？</h3>\n<p>字长，存储容量，指令系统，运算速度，系统配置</p>\n<p>微型计算机的五大性能指标分别是：存储容量、字长、软件配置情况、外设扩展能力、主频。</p>\n<p>存储容量：包括内存容量和外存容量，是衡量微型计算机中存储能力的一个指标。内存容量以字节为单位，分最大容量和装机容量。</p>\n<p>字长：</p>\n<p>字长是计算机内部一次可以处理的二进制数的位数，有4位、8位、16位，高档微型计算机字长为32位或64位。</p>\n<p>软件配置情况：</p>\n<p>软件配置情况直接影响微型计算机系统的使用和性能的发挥。通常应配置的软件有：操作系统、计算机语言以及工具软件等，另外还可配置数据库管理系统和各种应用软件。</p>\n<p>外设扩展能力：</p>\n<p>一台微型计算机可配置外部设备的数量以及配置外部设备的类型，对整个系统的性能有重大影响。如显示器的分辨率、多媒体接口功能和打印机型号等，都是外部设备选择中要考虑的问题。</p>\n<p>主频：</p>\n<p>主频是指微型计算机中CPU的时钟频率，也就是CPU运算时的工作频率。主频越高，一个时钟周期里完成的指令数越多，CPU的速度越快。</p>\n<h3 id=\"简述eu和biu的功能及二者间的关系\"><a class=\"header-anchor\" href=\"#简述eu和biu的功能及二者间的关系\">☆</a>简述EU和BIU的功能及二者间的关系</h3>\n<p>EU：只负责执行指令。执行的指令从BIU的指令缓冲器中取得，执行指令的结果或执行指令所需的数据，都由EU向BIU发出请求，再由BIU在存储器或外存中进行存取。<br>\nBIU：负责完成CPU与存储器或I/O设备之间的数据传送。</p>\n<p>BIU指总线接口单元，EU指执行单元。</p>\n<p>BIU与EU合称为8086、8088两大独立工作单元。其中BIU负责从内存指定区域取出指令传送到指令队列中排队；执行指令时所需要的操作数也由BIU从相应的内存区域取出，传送给执行部件EU。指令执行的结果如果需要存入内存的话，也由BIU写入相应的内存区域。总之，BIU同外部总线连接为EU完成所有的总线操作，并形成20位的内存物理地址。</p>\n<h3 id=\"8086-8088-cpu中有那些寄存器？功能是什么？\"><a class=\"header-anchor\" href=\"#8086-8088-cpu中有那些寄存器？功能是什么？\">☆</a>8086/8088 CPU中有那些寄存器？功能是什么？</h3>\n<p>1.寄存器按照功能的不同可分为通用寄存器（AX，BX，CX，DX，SP，BP，SI，DI。其中的前四个寄存器可分别分成AH，AL ；BH，BL；CH，CL；DH，DL的八位寄存器）、指令指针寄存器（IP）、标志寄存器（FLAGS）、段寄存器（CS，DS，ES，SS）。它们的区别和联系体现在它们的功能上，对它们的深入了解和正确运用需要通过编写程序来实现。<br>\n2.大致功能如下：<br>\nAX，可存放一般数据，而且可作为累加器使用；<br>\nBX，可存放一般数据，而且可用来存放数据的指针（偏移地址），常常和DS寄存器连用；<br>\nCX，可存放一般数据，而且可用来做计数器，常常将循环次数用它来存放；<br>\nDX，可存放一般数据，而且可用来存放乘法运算产生的部分积，或用来存放输入输出的端口地址（指针）；<br>\nSP，用于寻址一个称为堆栈的存储区，通过它来访问堆栈数据；<br>\nBP，可存放一般数据，用来存放访问堆栈段的一个数据区，作为基地址；<br>\nSI，可存放一般数据，还可用于串操作中，存放源地址，对一串数据访问；<br>\nDI，可存放一般数据，还可用于串操作中，存放目的地址，对一串数据访问；<br>\nIP，用于寻址当前需要取出的指令字节，程序员不能对它直接操作；<br>\nFLAGS，用于指示微处理器的状态并控制它的操作；<br>\nCS，代码段寄存器，代码段是一个存储区域，存放的是CPU要使用的代码，CS存放代码段的段基地址；<br>\nDS，数据段寄存器，数据段是包含程序使用的大部分数据的存储区，DS中存放数据段的段基地址；<br>\nES，附加段寄存器，附加段是为某些串操作指令存放目的操作数而附近的一个数据段，ES中存放该数据段的段基地址；<br>\nSS，堆栈段寄存器，堆栈段是内存中一个特殊的存储区，用于暂时存放程序运行时所需的数据或地址信息。SS中存放该存储区的段基地址。<br>\n基本功能就是这些，要想透彻掌握深层的寄存器功能，必须要编写汇编源程序，可用微软的masm汇编程序进行编译，用dos系统自带的debug命令调试，直到程序正确运行，才能体会其中的奥妙。</p>\n<h3 id=\"8086-8088-cpu标志寄存器中有那些标志位？功能是什么？\"><a class=\"header-anchor\" href=\"#8086-8088-cpu标志寄存器中有那些标志位？功能是什么？\">☆</a>8086/8088 CPU标志寄存器中有那些标志位？功能是什么？</h3>\n<p>8086CPU的标志寄存器有16位，其中存储的信息通常被称为程序状态字PSW（标志位），简称flag。flag和其他寄存器不一样，其他寄存器是用来存放数据的，都是整个寄存器具有一个含义。</p>\n<h4 id=\"运算结果标志位：\"><a class=\"header-anchor\" href=\"#运算结果标志位：\">☆</a>运算结果标志位：</h4>\n<p>ZF标志（ZeroFlag）：<br>\n零位标志位，它记录相关指令执行后的结果是否为0，如果是0，那么ZF=1，如果结果不为0，那么ZF=0。</p>\n<p>PF标志（ParityFlag）：<br>\n奇偶标志位，它记录相关指令执行后，其结果的所有二进制位中1个个数是否为偶数，如果是偶数，PF=1，反之为0。</p>\n<p>SF标志（SignFlag）：<br>\n符号标志位，它记录相关指令执行后，其结果是否为负，如果结果为负，SF=1，如果非负，SF=0。</p>\n<p>CF标志（Carry进位，Flag标志）：<br>\n进位标志位，一般情况，进行无符号运算时，它记录运算结果的最高位向更高位的进位值，或从更高位的借位值，如果运算结果的最高位产生了一个进位或借位，那么其值为1，否则其值为0。</p>\n<p>OF标志（Overflow溢出，Flag标志）：<br>\n溢出标志位，在进行有符号数运算的时候，如果结果超出了机器所能表示的范围称为溢出，OF的值被置为1，否则OF的值为0。<br>\n注意：这里所说的溢出，只是对有符号运算而言。</p>\n<h4 id=\"状态控制标志位：\"><a class=\"header-anchor\" href=\"#状态控制标志位：\">☆</a>状态控制标志位：</h4>\n<p>TF标志（TrapFlag）：<br>\n追踪标志位，当追踪标志被置为1时，CPU进入单步执行方式，即每执行一条指令产生一个单步中断请求，这中方式主要用于程序的调试。</p>\n<p>IF标志（Interrupt-enable Flag）：<br>\n中断允许标志位，用来决定CPU是否响应CPU外部的可屏蔽中断发出的中断请求，但不管该标志为何值，CPU都必须响应CPU外部的不可屏蔽中断所发出的中断请求，以及CPU内部产生的中断请求。</p>\n<pre><code>+ 当IF=1时，CPU可以相应CPU外部的可屏蔽中断发出的中断请求。\n+ 当IF=0时，CPU不响应CPU外部的可屏蔽中断发出的中断请求。\n</code></pre>\n<h3 id=\"80386-cpu中有那些寄存器？功能是什么？\"><a class=\"header-anchor\" href=\"#80386-cpu中有那些寄存器？功能是什么？\">☆</a>80386 CPU中有那些寄存器？功能是什么？</h3>\n<p><a href=\"https://blog.csdn.net/u014774781/article/details/47707385\" target=\"_blank\" rel=\"noopener\">80386</a>共提供7种类型的32位寄存器，如下：</p>\n<pre><code>通用寄存器(EAX、EBX、ECX、EDX、ESP、EBP、ESI、EDI)\n段寄存器(CS、SS、DS、ES、FS、GS)\n指令指针寄存器和标志寄存器(EIP、EFLAGS)\n系统表寄存器(GDTR、IDTR、LDTR、TR)\n控制寄存器(CR0、CR1、CR2、CR3、CR4)\n调试寄存器(DR0、DR1、DR2、DR3、DR4、DR5、DR6、DR7)\n测试寄存器(TR6、TR7)\n    其中后三类寄存器是80386以后的CPU才有的，以前的CPU完全没有。\n</code></pre>\n<h3 id=\"说明计算机硬件系统和软件系统的关系\"><a class=\"header-anchor\" href=\"#说明计算机硬件系统和软件系统的关系\">☆</a>说明计算机硬件系统和软件系统的关系</h3>\n<p>一个完整的计算机系统由硬件系统和软件系统组成。没有软件的计算机称为“裸机”，什么事情也做不了。硬件是基础，是软件的载体，软件则使硬件具有了使用价值。两者相辅相成，缺一不可。</p>\n","site":{"data":{}},"length":2886,"excerpt":"","more":"\n    <div id=\"aplayer-USPTgdhy\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"108134\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#ad7a86\"></div>\n<blockquote>\n<blockquote class=\"blockquote-center\"><p>拼命着想的事 未必带来感动</p>\n</blockquote>\n</blockquote>\n<h3 id=\"微型计算机由哪几部分组成？\"><a class=\"header-anchor\" href=\"#微型计算机由哪几部分组成？\">☆</a>微型计算机由哪几部分组成？</h3>\n<p>五部分：控制器，运算器，存储器，输入设备，输出设备</p>\n<h3 id=\"系统总线根据传送的信号种类分为哪几种？\"><a class=\"header-anchor\" href=\"#系统总线根据传送的信号种类分为哪几种？\">☆</a>系统总线根据传送的信号种类分为哪几种？</h3>\n<p>地址总线、数据总线、控制总线。</p>\n<h3 id=\"简述微型计算机系统有那些主要的性能指标？\"><a class=\"header-anchor\" href=\"#简述微型计算机系统有那些主要的性能指标？\">☆</a>简述微型计算机系统有那些主要的性能指标？</h3>\n<p>字长，存储容量，指令系统，运算速度，系统配置</p>\n<p>微型计算机的五大性能指标分别是：存储容量、字长、软件配置情况、外设扩展能力、主频。</p>\n<p>存储容量：包括内存容量和外存容量，是衡量微型计算机中存储能力的一个指标。内存容量以字节为单位，分最大容量和装机容量。</p>\n<p>字长：</p>\n<p>字长是计算机内部一次可以处理的二进制数的位数，有4位、8位、16位，高档微型计算机字长为32位或64位。</p>\n<p>软件配置情况：</p>\n<p>软件配置情况直接影响微型计算机系统的使用和性能的发挥。通常应配置的软件有：操作系统、计算机语言以及工具软件等，另外还可配置数据库管理系统和各种应用软件。</p>\n<p>外设扩展能力：</p>\n<p>一台微型计算机可配置外部设备的数量以及配置外部设备的类型，对整个系统的性能有重大影响。如显示器的分辨率、多媒体接口功能和打印机型号等，都是外部设备选择中要考虑的问题。</p>\n<p>主频：</p>\n<p>主频是指微型计算机中CPU的时钟频率，也就是CPU运算时的工作频率。主频越高，一个时钟周期里完成的指令数越多，CPU的速度越快。</p>\n<h3 id=\"简述eu和biu的功能及二者间的关系\"><a class=\"header-anchor\" href=\"#简述eu和biu的功能及二者间的关系\">☆</a>简述EU和BIU的功能及二者间的关系</h3>\n<p>EU：只负责执行指令。执行的指令从BIU的指令缓冲器中取得，执行指令的结果或执行指令所需的数据，都由EU向BIU发出请求，再由BIU在存储器或外存中进行存取。<br>\nBIU：负责完成CPU与存储器或I/O设备之间的数据传送。</p>\n<p>BIU指总线接口单元，EU指执行单元。</p>\n<p>BIU与EU合称为8086、8088两大独立工作单元。其中BIU负责从内存指定区域取出指令传送到指令队列中排队；执行指令时所需要的操作数也由BIU从相应的内存区域取出，传送给执行部件EU。指令执行的结果如果需要存入内存的话，也由BIU写入相应的内存区域。总之，BIU同外部总线连接为EU完成所有的总线操作，并形成20位的内存物理地址。</p>\n<h3 id=\"8086-8088-cpu中有那些寄存器？功能是什么？\"><a class=\"header-anchor\" href=\"#8086-8088-cpu中有那些寄存器？功能是什么？\">☆</a>8086/8088 CPU中有那些寄存器？功能是什么？</h3>\n<p>1.寄存器按照功能的不同可分为通用寄存器（AX，BX，CX，DX，SP，BP，SI，DI。其中的前四个寄存器可分别分成AH，AL ；BH，BL；CH，CL；DH，DL的八位寄存器）、指令指针寄存器（IP）、标志寄存器（FLAGS）、段寄存器（CS，DS，ES，SS）。它们的区别和联系体现在它们的功能上，对它们的深入了解和正确运用需要通过编写程序来实现。<br>\n2.大致功能如下：<br>\nAX，可存放一般数据，而且可作为累加器使用；<br>\nBX，可存放一般数据，而且可用来存放数据的指针（偏移地址），常常和DS寄存器连用；<br>\nCX，可存放一般数据，而且可用来做计数器，常常将循环次数用它来存放；<br>\nDX，可存放一般数据，而且可用来存放乘法运算产生的部分积，或用来存放输入输出的端口地址（指针）；<br>\nSP，用于寻址一个称为堆栈的存储区，通过它来访问堆栈数据；<br>\nBP，可存放一般数据，用来存放访问堆栈段的一个数据区，作为基地址；<br>\nSI，可存放一般数据，还可用于串操作中，存放源地址，对一串数据访问；<br>\nDI，可存放一般数据，还可用于串操作中，存放目的地址，对一串数据访问；<br>\nIP，用于寻址当前需要取出的指令字节，程序员不能对它直接操作；<br>\nFLAGS，用于指示微处理器的状态并控制它的操作；<br>\nCS，代码段寄存器，代码段是一个存储区域，存放的是CPU要使用的代码，CS存放代码段的段基地址；<br>\nDS，数据段寄存器，数据段是包含程序使用的大部分数据的存储区，DS中存放数据段的段基地址；<br>\nES，附加段寄存器，附加段是为某些串操作指令存放目的操作数而附近的一个数据段，ES中存放该数据段的段基地址；<br>\nSS，堆栈段寄存器，堆栈段是内存中一个特殊的存储区，用于暂时存放程序运行时所需的数据或地址信息。SS中存放该存储区的段基地址。<br>\n基本功能就是这些，要想透彻掌握深层的寄存器功能，必须要编写汇编源程序，可用微软的masm汇编程序进行编译，用dos系统自带的debug命令调试，直到程序正确运行，才能体会其中的奥妙。</p>\n<h3 id=\"8086-8088-cpu标志寄存器中有那些标志位？功能是什么？\"><a class=\"header-anchor\" href=\"#8086-8088-cpu标志寄存器中有那些标志位？功能是什么？\">☆</a>8086/8088 CPU标志寄存器中有那些标志位？功能是什么？</h3>\n<p>8086CPU的标志寄存器有16位，其中存储的信息通常被称为程序状态字PSW（标志位），简称flag。flag和其他寄存器不一样，其他寄存器是用来存放数据的，都是整个寄存器具有一个含义。</p>\n<h4 id=\"运算结果标志位：\"><a class=\"header-anchor\" href=\"#运算结果标志位：\">☆</a>运算结果标志位：</h4>\n<p>ZF标志（ZeroFlag）：<br>\n零位标志位，它记录相关指令执行后的结果是否为0，如果是0，那么ZF=1，如果结果不为0，那么ZF=0。</p>\n<p>PF标志（ParityFlag）：<br>\n奇偶标志位，它记录相关指令执行后，其结果的所有二进制位中1个个数是否为偶数，如果是偶数，PF=1，反之为0。</p>\n<p>SF标志（SignFlag）：<br>\n符号标志位，它记录相关指令执行后，其结果是否为负，如果结果为负，SF=1，如果非负，SF=0。</p>\n<p>CF标志（Carry进位，Flag标志）：<br>\n进位标志位，一般情况，进行无符号运算时，它记录运算结果的最高位向更高位的进位值，或从更高位的借位值，如果运算结果的最高位产生了一个进位或借位，那么其值为1，否则其值为0。</p>\n<p>OF标志（Overflow溢出，Flag标志）：<br>\n溢出标志位，在进行有符号数运算的时候，如果结果超出了机器所能表示的范围称为溢出，OF的值被置为1，否则OF的值为0。<br>\n注意：这里所说的溢出，只是对有符号运算而言。</p>\n<h4 id=\"状态控制标志位：\"><a class=\"header-anchor\" href=\"#状态控制标志位：\">☆</a>状态控制标志位：</h4>\n<p>TF标志（TrapFlag）：<br>\n追踪标志位，当追踪标志被置为1时，CPU进入单步执行方式，即每执行一条指令产生一个单步中断请求，这中方式主要用于程序的调试。</p>\n<p>IF标志（Interrupt-enable Flag）：<br>\n中断允许标志位，用来决定CPU是否响应CPU外部的可屏蔽中断发出的中断请求，但不管该标志为何值，CPU都必须响应CPU外部的不可屏蔽中断所发出的中断请求，以及CPU内部产生的中断请求。</p>\n<pre><code>+ 当IF=1时，CPU可以相应CPU外部的可屏蔽中断发出的中断请求。\n+ 当IF=0时，CPU不响应CPU外部的可屏蔽中断发出的中断请求。\n</code></pre>\n<h3 id=\"80386-cpu中有那些寄存器？功能是什么？\"><a class=\"header-anchor\" href=\"#80386-cpu中有那些寄存器？功能是什么？\">☆</a>80386 CPU中有那些寄存器？功能是什么？</h3>\n<p><a href=\"https://blog.csdn.net/u014774781/article/details/47707385\" target=\"_blank\" rel=\"noopener\">80386</a>共提供7种类型的32位寄存器，如下：</p>\n<pre><code>通用寄存器(EAX、EBX、ECX、EDX、ESP、EBP、ESI、EDI)\n段寄存器(CS、SS、DS、ES、FS、GS)\n指令指针寄存器和标志寄存器(EIP、EFLAGS)\n系统表寄存器(GDTR、IDTR、LDTR、TR)\n控制寄存器(CR0、CR1、CR2、CR3、CR4)\n调试寄存器(DR0、DR1、DR2、DR3、DR4、DR5、DR6、DR7)\n测试寄存器(TR6、TR7)\n    其中后三类寄存器是80386以后的CPU才有的，以前的CPU完全没有。\n</code></pre>\n<h3 id=\"说明计算机硬件系统和软件系统的关系\"><a class=\"header-anchor\" href=\"#说明计算机硬件系统和软件系统的关系\">☆</a>说明计算机硬件系统和软件系统的关系</h3>\n<p>一个完整的计算机系统由硬件系统和软件系统组成。没有软件的计算机称为“裸机”，什么事情也做不了。硬件是基础，是软件的载体，软件则使硬件具有了使用价值。两者相辅相成，缺一不可。</p>\n"},{"title":"毁掉一个中国年轻人有多容易","copyright":false,"abbrlink":"23e28675","date":"2018-07-06T16:10:40.000Z","password":null,"description":"这是一个最好的时代，这是一个最坏的时代","image":["https://data.singlelovely.cn/CoverPicture/23e28675.jfif"],"sticky":null,"notshow":false,"_content":"\n\n**不知道你有没有这样的感受？**\n\n走在街上，感觉自己的耳膜被短视频神曲轮番轰炸：从C哩C哩到123我爱你，从Despacito到确认过眼神；\n\n排队等餐厅叫号，公交车站等公交，90%的人都在低头刷手机，嘴角不时地浮现出蜜汁微笑；\n\n朋友圈和微博上，无数人发出这样的感慨：“抖音有毒，不知不觉我竟然刷了一整天。”\n\n有数据统计，玩短视频85%的用户在24岁以下，基本上都是95后，甚至是00后。\n\n越来越多的年轻人将时间花在刷短视频上，通过手机窥见别人的生活和人生。\n\n然后放下手机，突然觉得周边的一切都索然无味。\n\n《双城记》中，狄更斯说：“这是一个最好的时代，这是一个最坏的时代。”\n\n在这个时代里，摧毁一个中国年轻人，真的很容易。\n\n看过这样一项调查：\n95后最向往的新兴职业中，主播、网红占据了54%。\n\n然而，这些主播、网红们，向年轻人们传递的都是什么样的价值观呢？\n\n有美女网红直播撕书，高调地宣称：她们不读书照样开跑车，大学生也得给她们打工；\n\n有17岁的女生整容、泡夜店、炫富、私生活混乱，却凭借着一段摇头晃脑的短视频走红，获得千万点赞；\n\n有00后网红互相攀比早恋早孕，直播晒肚子、晒孩子，还分享一些“相关经验”，抱着孩子就能顺带把钱赚了。\n\n……\n\n\n\n\n这些人的走红让年轻人看到一种成功的捷径，只要红了，就有钱了。\n\n一些人生观、价值观还未成熟的未成年人，通过网红的世界仿佛看到了另一种活法：\n\n既然那么简单就可以赚到快钱和关注，谁还愿意头悬梁、锥刺股地寒窗苦读呢？\n\n既然拍一条短视频就可以抵上普通白领几个月的工资，谁还愿意勤勤恳恳地工作呢？\n\n读书太苦了，工作太累了，不如整成网红脸，发几条短视频赚取关注和流量。\n\n最好再傍上一位有钱的金主，从此就能享受纸醉金迷，过上最光鲜亮丽的生活\n\n……\n\n不知道有多少人被这样的价值观荼毒，荒废了学业、堕落了青春。\n\n细思极恐。\n\n这个时代，毁掉一个中国年轻人，只需要一种脱轨的价值观就够了。\n\n有人说：现代的中国年轻人，习惯于在微信运动里刷存在感，在网络小说中找爱情，在游戏里成就“王者荣耀”。\n\n微博上的娱乐圈八卦新闻，让你沉浸在明星的绯闻琐事之中无法自拔；\n\n短小的公众号、头条文章，控制在2000字左右，保证让你5分钟能读完；\n\n抖音短视频15秒就给你一个刺激，你永远也不知道下一个15秒会刷到什么。\n\n……\n\n这些利用流量、算法机制推荐的软件，都在利用大数据慢慢掏空你的时间。\n\n这些软件，为什么能如此让人上瘾？\n\n因为你的每一次点击、每一次滑动，都会有实时的反馈。\n\n这些及时的反馈刺激大脑多次产生多巴胺，并形成依赖，渴望下一个刺激到来，陷入死循环。\n\n这些能提供短期快感的软件，就像不折不扣的精神鸦片。\n\n你麻木地盯着手机屏幕，玩到忘情所以、看到眼睛发酸，却不知自己的深度思考能力正在逐渐被腐蚀。\n\n到最后，除了大量的时间白白被浪费，你一无所得，留下的只会是满满的空虚。\n\n网络段子张口就来，抖音上的梗知道得比谁都多，网红的名字如数家珍，却忘了自己有多久没有好好看过一部经典电影、一本纸质书。\n\n……\n\n![ ](https://data.singlelovely.cn/xsj/2018/7/7/01.jpg)\n\n你慢慢变成了自己曾经最鄙视的那种人，离记忆里那个朝气蓬勃的少年越来越远。\n\n你的生活变成了简单的两点一线，自己在虚假的满足感中丧失了任何向上的动力。\n\n这个时代，毁掉一个中国年轻人，只需要一个能获得短期快感的app就够了。\n\n这个快节奏的时代，那些选择慢下来的“异类”，反而让人觉得可爱。\n\n就像歌手李健，在拍《我是歌手》的时候，被曝出一直用的是老旧的诺基亚键盘手机。\n\n他说：“没有智能手机，受干扰的机会就少了许多。”\n\n他就像生活的旁观者，安静地听音乐、阅读、思考、观察这个世界。\n\n他会强迫自己读一些比较难啃的经典书籍：\n“童话读起来毫不费力，但人的一生不可能只是读童话，还是要强迫自己读一些看不懂、不好读的书。强迫自己读下来，一定会有收获。”\n\n他心目中的理想生活是让自己置身于另一个空间，去旅行，带着书和一把小琴。\n\n![ ](https://data.singlelovely.cn/xsj/2018/7/7/02.jpg)\n\n\n又像作家皮克·耶尔，逃离曼哈顿的摩天大楼，关掉电脑、抛开手机、逃离都市的喧嚣。\n\n他喜欢上了独处和思考，让精神和身体得到彻底的放松，给自己一个留白的空间。\n\n林语堂先生曾经说过：“一个人只拥有此生此世是不够的，他还应该拥有诗意的世界。”\n你的精力分配，反映了你是什么层次的人。\n\n从他们身上，我看到的不是浮躁的价值观、空虚的短期快感，而是一种安静的力量。\n\n多少人嘴里说着：“垃圾游戏，毁我青春。”“短视频有毒，浪费时间。”\n\n然而，毁掉你的，不是短视频，不是游戏，而是不够自律的你自己。\n\n当你从脱轨的价值观、虚拟的快感中抽离，重新审视自己，审视周围。\n\n你会发现：真正能让你获得充实感和满足感的，是那些需要长期投入的事物。\n\n柴静在《看见》里写道：“从不假思索的愚昧里挣脱，这才是活着。”\n\n不要让自己变成一个被浮躁的价值观、短期的快感废掉的年轻人。\n\n你现在每一天短暂的享乐，都在透支着未来。\n\n**共勉。**","source":"_posts/毁掉一个中国年轻人有多容易.md","raw":"---\ntitle: 毁掉一个中国年轻人有多容易\ncopyright: false\nabbrlink: '23e28675'\ncategories: 闲读\ndate: 2018-07-07 00:10:40\ntags:\npassword:\ndescription: 这是一个最好的时代，这是一个最坏的时代\nimage: \n- \"https://data.singlelovely.cn/CoverPicture/23e28675.jfif\"\nsticky: \nnotshow: false\n---\n\n\n**不知道你有没有这样的感受？**\n\n走在街上，感觉自己的耳膜被短视频神曲轮番轰炸：从C哩C哩到123我爱你，从Despacito到确认过眼神；\n\n排队等餐厅叫号，公交车站等公交，90%的人都在低头刷手机，嘴角不时地浮现出蜜汁微笑；\n\n朋友圈和微博上，无数人发出这样的感慨：“抖音有毒，不知不觉我竟然刷了一整天。”\n\n有数据统计，玩短视频85%的用户在24岁以下，基本上都是95后，甚至是00后。\n\n越来越多的年轻人将时间花在刷短视频上，通过手机窥见别人的生活和人生。\n\n然后放下手机，突然觉得周边的一切都索然无味。\n\n《双城记》中，狄更斯说：“这是一个最好的时代，这是一个最坏的时代。”\n\n在这个时代里，摧毁一个中国年轻人，真的很容易。\n\n看过这样一项调查：\n95后最向往的新兴职业中，主播、网红占据了54%。\n\n然而，这些主播、网红们，向年轻人们传递的都是什么样的价值观呢？\n\n有美女网红直播撕书，高调地宣称：她们不读书照样开跑车，大学生也得给她们打工；\n\n有17岁的女生整容、泡夜店、炫富、私生活混乱，却凭借着一段摇头晃脑的短视频走红，获得千万点赞；\n\n有00后网红互相攀比早恋早孕，直播晒肚子、晒孩子，还分享一些“相关经验”，抱着孩子就能顺带把钱赚了。\n\n……\n\n\n\n\n这些人的走红让年轻人看到一种成功的捷径，只要红了，就有钱了。\n\n一些人生观、价值观还未成熟的未成年人，通过网红的世界仿佛看到了另一种活法：\n\n既然那么简单就可以赚到快钱和关注，谁还愿意头悬梁、锥刺股地寒窗苦读呢？\n\n既然拍一条短视频就可以抵上普通白领几个月的工资，谁还愿意勤勤恳恳地工作呢？\n\n读书太苦了，工作太累了，不如整成网红脸，发几条短视频赚取关注和流量。\n\n最好再傍上一位有钱的金主，从此就能享受纸醉金迷，过上最光鲜亮丽的生活\n\n……\n\n不知道有多少人被这样的价值观荼毒，荒废了学业、堕落了青春。\n\n细思极恐。\n\n这个时代，毁掉一个中国年轻人，只需要一种脱轨的价值观就够了。\n\n有人说：现代的中国年轻人，习惯于在微信运动里刷存在感，在网络小说中找爱情，在游戏里成就“王者荣耀”。\n\n微博上的娱乐圈八卦新闻，让你沉浸在明星的绯闻琐事之中无法自拔；\n\n短小的公众号、头条文章，控制在2000字左右，保证让你5分钟能读完；\n\n抖音短视频15秒就给你一个刺激，你永远也不知道下一个15秒会刷到什么。\n\n……\n\n这些利用流量、算法机制推荐的软件，都在利用大数据慢慢掏空你的时间。\n\n这些软件，为什么能如此让人上瘾？\n\n因为你的每一次点击、每一次滑动，都会有实时的反馈。\n\n这些及时的反馈刺激大脑多次产生多巴胺，并形成依赖，渴望下一个刺激到来，陷入死循环。\n\n这些能提供短期快感的软件，就像不折不扣的精神鸦片。\n\n你麻木地盯着手机屏幕，玩到忘情所以、看到眼睛发酸，却不知自己的深度思考能力正在逐渐被腐蚀。\n\n到最后，除了大量的时间白白被浪费，你一无所得，留下的只会是满满的空虚。\n\n网络段子张口就来，抖音上的梗知道得比谁都多，网红的名字如数家珍，却忘了自己有多久没有好好看过一部经典电影、一本纸质书。\n\n……\n\n![ ](https://data.singlelovely.cn/xsj/2018/7/7/01.jpg)\n\n你慢慢变成了自己曾经最鄙视的那种人，离记忆里那个朝气蓬勃的少年越来越远。\n\n你的生活变成了简单的两点一线，自己在虚假的满足感中丧失了任何向上的动力。\n\n这个时代，毁掉一个中国年轻人，只需要一个能获得短期快感的app就够了。\n\n这个快节奏的时代，那些选择慢下来的“异类”，反而让人觉得可爱。\n\n就像歌手李健，在拍《我是歌手》的时候，被曝出一直用的是老旧的诺基亚键盘手机。\n\n他说：“没有智能手机，受干扰的机会就少了许多。”\n\n他就像生活的旁观者，安静地听音乐、阅读、思考、观察这个世界。\n\n他会强迫自己读一些比较难啃的经典书籍：\n“童话读起来毫不费力，但人的一生不可能只是读童话，还是要强迫自己读一些看不懂、不好读的书。强迫自己读下来，一定会有收获。”\n\n他心目中的理想生活是让自己置身于另一个空间，去旅行，带着书和一把小琴。\n\n![ ](https://data.singlelovely.cn/xsj/2018/7/7/02.jpg)\n\n\n又像作家皮克·耶尔，逃离曼哈顿的摩天大楼，关掉电脑、抛开手机、逃离都市的喧嚣。\n\n他喜欢上了独处和思考，让精神和身体得到彻底的放松，给自己一个留白的空间。\n\n林语堂先生曾经说过：“一个人只拥有此生此世是不够的，他还应该拥有诗意的世界。”\n你的精力分配，反映了你是什么层次的人。\n\n从他们身上，我看到的不是浮躁的价值观、空虚的短期快感，而是一种安静的力量。\n\n多少人嘴里说着：“垃圾游戏，毁我青春。”“短视频有毒，浪费时间。”\n\n然而，毁掉你的，不是短视频，不是游戏，而是不够自律的你自己。\n\n当你从脱轨的价值观、虚拟的快感中抽离，重新审视自己，审视周围。\n\n你会发现：真正能让你获得充实感和满足感的，是那些需要长期投入的事物。\n\n柴静在《看见》里写道：“从不假思索的愚昧里挣脱，这才是活着。”\n\n不要让自己变成一个被浮躁的价值观、短期的快感废掉的年轻人。\n\n你现在每一天短暂的享乐，都在透支着未来。\n\n**共勉。**","slug":"毁掉一个中国年轻人有多容易","published":1,"updated":"2020-02-20T06:06:59.421Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3y001nfkupr08tmi30","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p><strong>不知道你有没有这样的感受？</strong></p>\n<p>走在街上，感觉自己的耳膜被短视频神曲轮番轰炸：从C哩C哩到123我爱你，从Despacito到确认过眼神；</p>\n<p>排队等餐厅叫号，公交车站等公交，90%的人都在低头刷手机，嘴角不时地浮现出蜜汁微笑；</p>\n<p>朋友圈和微博上，无数人发出这样的感慨：“抖音有毒，不知不觉我竟然刷了一整天。”</p>\n<p>有数据统计，玩短视频85%的用户在24岁以下，基本上都是95后，甚至是00后。</p>\n<p>越来越多的年轻人将时间花在刷短视频上，通过手机窥见别人的生活和人生。</p>\n<p>然后放下手机，突然觉得周边的一切都索然无味。</p>\n<p>《双城记》中，狄更斯说：“这是一个最好的时代，这是一个最坏的时代。”</p>\n<p>在这个时代里，摧毁一个中国年轻人，真的很容易。</p>\n<p>看过这样一项调查：<br>\n95后最向往的新兴职业中，主播、网红占据了54%。</p>\n<p>然而，这些主播、网红们，向年轻人们传递的都是什么样的价值观呢？</p>\n<p>有美女网红直播撕书，高调地宣称：她们不读书照样开跑车，大学生也得给她们打工；</p>\n<p>有17岁的女生整容、泡夜店、炫富、私生活混乱，却凭借着一段摇头晃脑的短视频走红，获得千万点赞；</p>\n<p>有00后网红互相攀比早恋早孕，直播晒肚子、晒孩子，还分享一些“相关经验”，抱着孩子就能顺带把钱赚了。</p>\n<p>……</p>\n<p>这些人的走红让年轻人看到一种成功的捷径，只要红了，就有钱了。</p>\n<p>一些人生观、价值观还未成熟的未成年人，通过网红的世界仿佛看到了另一种活法：</p>\n<p>既然那么简单就可以赚到快钱和关注，谁还愿意头悬梁、锥刺股地寒窗苦读呢？</p>\n<p>既然拍一条短视频就可以抵上普通白领几个月的工资，谁还愿意勤勤恳恳地工作呢？</p>\n<p>读书太苦了，工作太累了，不如整成网红脸，发几条短视频赚取关注和流量。</p>\n<p>最好再傍上一位有钱的金主，从此就能享受纸醉金迷，过上最光鲜亮丽的生活</p>\n<p>……</p>\n<p>不知道有多少人被这样的价值观荼毒，荒废了学业、堕落了青春。</p>\n<p>细思极恐。</p>\n<p>这个时代，毁掉一个中国年轻人，只需要一种脱轨的价值观就够了。</p>\n<p>有人说：现代的中国年轻人，习惯于在微信运动里刷存在感，在网络小说中找爱情，在游戏里成就“王者荣耀”。</p>\n<p>微博上的娱乐圈八卦新闻，让你沉浸在明星的绯闻琐事之中无法自拔；</p>\n<p>短小的公众号、头条文章，控制在2000字左右，保证让你5分钟能读完；</p>\n<p>抖音短视频15秒就给你一个刺激，你永远也不知道下一个15秒会刷到什么。</p>\n<p>……</p>\n<p>这些利用流量、算法机制推荐的软件，都在利用大数据慢慢掏空你的时间。</p>\n<p>这些软件，为什么能如此让人上瘾？</p>\n<p>因为你的每一次点击、每一次滑动，都会有实时的反馈。</p>\n<p>这些及时的反馈刺激大脑多次产生多巴胺，并形成依赖，渴望下一个刺激到来，陷入死循环。</p>\n<p>这些能提供短期快感的软件，就像不折不扣的精神鸦片。</p>\n<p>你麻木地盯着手机屏幕，玩到忘情所以、看到眼睛发酸，却不知自己的深度思考能力正在逐渐被腐蚀。</p>\n<p>到最后，除了大量的时间白白被浪费，你一无所得，留下的只会是满满的空虚。</p>\n<p>网络段子张口就来，抖音上的梗知道得比谁都多，网红的名字如数家珍，却忘了自己有多久没有好好看过一部经典电影、一本纸质书。</p>\n<p>……</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/7/7/01.jpg\" alt=\" \"></p>\n<p>你慢慢变成了自己曾经最鄙视的那种人，离记忆里那个朝气蓬勃的少年越来越远。</p>\n<p>你的生活变成了简单的两点一线，自己在虚假的满足感中丧失了任何向上的动力。</p>\n<p>这个时代，毁掉一个中国年轻人，只需要一个能获得短期快感的app就够了。</p>\n<p>这个快节奏的时代，那些选择慢下来的“异类”，反而让人觉得可爱。</p>\n<p>就像歌手李健，在拍《我是歌手》的时候，被曝出一直用的是老旧的诺基亚键盘手机。</p>\n<p>他说：“没有智能手机，受干扰的机会就少了许多。”</p>\n<p>他就像生活的旁观者，安静地听音乐、阅读、思考、观察这个世界。</p>\n<p>他会强迫自己读一些比较难啃的经典书籍：<br>\n“童话读起来毫不费力，但人的一生不可能只是读童话，还是要强迫自己读一些看不懂、不好读的书。强迫自己读下来，一定会有收获。”</p>\n<p>他心目中的理想生活是让自己置身于另一个空间，去旅行，带着书和一把小琴。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/7/7/02.jpg\" alt=\" \"></p>\n<p>又像作家皮克·耶尔，逃离曼哈顿的摩天大楼，关掉电脑、抛开手机、逃离都市的喧嚣。</p>\n<p>他喜欢上了独处和思考，让精神和身体得到彻底的放松，给自己一个留白的空间。</p>\n<p>林语堂先生曾经说过：“一个人只拥有此生此世是不够的，他还应该拥有诗意的世界。”<br>\n你的精力分配，反映了你是什么层次的人。</p>\n<p>从他们身上，我看到的不是浮躁的价值观、空虚的短期快感，而是一种安静的力量。</p>\n<p>多少人嘴里说着：“垃圾游戏，毁我青春。”“短视频有毒，浪费时间。”</p>\n<p>然而，毁掉你的，不是短视频，不是游戏，而是不够自律的你自己。</p>\n<p>当你从脱轨的价值观、虚拟的快感中抽离，重新审视自己，审视周围。</p>\n<p>你会发现：真正能让你获得充实感和满足感的，是那些需要长期投入的事物。</p>\n<p>柴静在《看见》里写道：“从不假思索的愚昧里挣脱，这才是活着。”</p>\n<p>不要让自己变成一个被浮躁的价值观、短期的快感废掉的年轻人。</p>\n<p>你现在每一天短暂的享乐，都在透支着未来。</p>\n<p><strong>共勉。</strong></p>\n","site":{"data":{}},"length":1933,"excerpt":"","more":"<p><strong>不知道你有没有这样的感受？</strong></p>\n<p>走在街上，感觉自己的耳膜被短视频神曲轮番轰炸：从C哩C哩到123我爱你，从Despacito到确认过眼神；</p>\n<p>排队等餐厅叫号，公交车站等公交，90%的人都在低头刷手机，嘴角不时地浮现出蜜汁微笑；</p>\n<p>朋友圈和微博上，无数人发出这样的感慨：“抖音有毒，不知不觉我竟然刷了一整天。”</p>\n<p>有数据统计，玩短视频85%的用户在24岁以下，基本上都是95后，甚至是00后。</p>\n<p>越来越多的年轻人将时间花在刷短视频上，通过手机窥见别人的生活和人生。</p>\n<p>然后放下手机，突然觉得周边的一切都索然无味。</p>\n<p>《双城记》中，狄更斯说：“这是一个最好的时代，这是一个最坏的时代。”</p>\n<p>在这个时代里，摧毁一个中国年轻人，真的很容易。</p>\n<p>看过这样一项调查：<br>\n95后最向往的新兴职业中，主播、网红占据了54%。</p>\n<p>然而，这些主播、网红们，向年轻人们传递的都是什么样的价值观呢？</p>\n<p>有美女网红直播撕书，高调地宣称：她们不读书照样开跑车，大学生也得给她们打工；</p>\n<p>有17岁的女生整容、泡夜店、炫富、私生活混乱，却凭借着一段摇头晃脑的短视频走红，获得千万点赞；</p>\n<p>有00后网红互相攀比早恋早孕，直播晒肚子、晒孩子，还分享一些“相关经验”，抱着孩子就能顺带把钱赚了。</p>\n<p>……</p>\n<p>这些人的走红让年轻人看到一种成功的捷径，只要红了，就有钱了。</p>\n<p>一些人生观、价值观还未成熟的未成年人，通过网红的世界仿佛看到了另一种活法：</p>\n<p>既然那么简单就可以赚到快钱和关注，谁还愿意头悬梁、锥刺股地寒窗苦读呢？</p>\n<p>既然拍一条短视频就可以抵上普通白领几个月的工资，谁还愿意勤勤恳恳地工作呢？</p>\n<p>读书太苦了，工作太累了，不如整成网红脸，发几条短视频赚取关注和流量。</p>\n<p>最好再傍上一位有钱的金主，从此就能享受纸醉金迷，过上最光鲜亮丽的生活</p>\n<p>……</p>\n<p>不知道有多少人被这样的价值观荼毒，荒废了学业、堕落了青春。</p>\n<p>细思极恐。</p>\n<p>这个时代，毁掉一个中国年轻人，只需要一种脱轨的价值观就够了。</p>\n<p>有人说：现代的中国年轻人，习惯于在微信运动里刷存在感，在网络小说中找爱情，在游戏里成就“王者荣耀”。</p>\n<p>微博上的娱乐圈八卦新闻，让你沉浸在明星的绯闻琐事之中无法自拔；</p>\n<p>短小的公众号、头条文章，控制在2000字左右，保证让你5分钟能读完；</p>\n<p>抖音短视频15秒就给你一个刺激，你永远也不知道下一个15秒会刷到什么。</p>\n<p>……</p>\n<p>这些利用流量、算法机制推荐的软件，都在利用大数据慢慢掏空你的时间。</p>\n<p>这些软件，为什么能如此让人上瘾？</p>\n<p>因为你的每一次点击、每一次滑动，都会有实时的反馈。</p>\n<p>这些及时的反馈刺激大脑多次产生多巴胺，并形成依赖，渴望下一个刺激到来，陷入死循环。</p>\n<p>这些能提供短期快感的软件，就像不折不扣的精神鸦片。</p>\n<p>你麻木地盯着手机屏幕，玩到忘情所以、看到眼睛发酸，却不知自己的深度思考能力正在逐渐被腐蚀。</p>\n<p>到最后，除了大量的时间白白被浪费，你一无所得，留下的只会是满满的空虚。</p>\n<p>网络段子张口就来，抖音上的梗知道得比谁都多，网红的名字如数家珍，却忘了自己有多久没有好好看过一部经典电影、一本纸质书。</p>\n<p>……</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/7/7/01.jpg\" alt=\" \"></p>\n<p>你慢慢变成了自己曾经最鄙视的那种人，离记忆里那个朝气蓬勃的少年越来越远。</p>\n<p>你的生活变成了简单的两点一线，自己在虚假的满足感中丧失了任何向上的动力。</p>\n<p>这个时代，毁掉一个中国年轻人，只需要一个能获得短期快感的app就够了。</p>\n<p>这个快节奏的时代，那些选择慢下来的“异类”，反而让人觉得可爱。</p>\n<p>就像歌手李健，在拍《我是歌手》的时候，被曝出一直用的是老旧的诺基亚键盘手机。</p>\n<p>他说：“没有智能手机，受干扰的机会就少了许多。”</p>\n<p>他就像生活的旁观者，安静地听音乐、阅读、思考、观察这个世界。</p>\n<p>他会强迫自己读一些比较难啃的经典书籍：<br>\n“童话读起来毫不费力，但人的一生不可能只是读童话，还是要强迫自己读一些看不懂、不好读的书。强迫自己读下来，一定会有收获。”</p>\n<p>他心目中的理想生活是让自己置身于另一个空间，去旅行，带着书和一把小琴。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/7/7/02.jpg\" alt=\" \"></p>\n<p>又像作家皮克·耶尔，逃离曼哈顿的摩天大楼，关掉电脑、抛开手机、逃离都市的喧嚣。</p>\n<p>他喜欢上了独处和思考，让精神和身体得到彻底的放松，给自己一个留白的空间。</p>\n<p>林语堂先生曾经说过：“一个人只拥有此生此世是不够的，他还应该拥有诗意的世界。”<br>\n你的精力分配，反映了你是什么层次的人。</p>\n<p>从他们身上，我看到的不是浮躁的价值观、空虚的短期快感，而是一种安静的力量。</p>\n<p>多少人嘴里说着：“垃圾游戏，毁我青春。”“短视频有毒，浪费时间。”</p>\n<p>然而，毁掉你的，不是短视频，不是游戏，而是不够自律的你自己。</p>\n<p>当你从脱轨的价值观、虚拟的快感中抽离，重新审视自己，审视周围。</p>\n<p>你会发现：真正能让你获得充实感和满足感的，是那些需要长期投入的事物。</p>\n<p>柴静在《看见》里写道：“从不假思索的愚昧里挣脱，这才是活着。”</p>\n<p>不要让自己变成一个被浮躁的价值观、短期的快感废掉的年轻人。</p>\n<p>你现在每一天短暂的享乐，都在透支着未来。</p>\n<p><strong>共勉。</strong></p>\n"},{"title":"计算机网络-名词解释","copyright":true,"abbrlink":"a11ee691","date":"2018-07-04T17:01:01.000Z","password":null,"_content":"\n{% meting \"1803360770\" \"xiami\" \"song\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n\n\nADSL （Asymmetric Digital SubscriberLine) 非对称数字用户线\n\nARQ (Automatic Repeat reQU  t)自动重传请求\n\nCDMA (Code Division MultiplexAccess)码分多址\n\nDHCP (Dynamic Host Configuration Protocol) 动态主机配置协议\n\nDNS (Domain Name System) 域名系统\n\nFDM (Frequency Division Multiplexing) 频分复用\n\nFTP(FileTransferProtocol)文件传送协议\n\nHTML (HyperText Markup Language) 超文本标记语言\n\nICMP (Internet Control Message Protocol） 网际控制报文协议\n\nlP (Internet Protocol) 网际协议\n\nNAT (NetworkAddress Translation) 网络地址转换\n \n\nOSPF (Open Shortest Path First） 开放最短通路优先\n\nPOP(Post Office Protocol) 邮局协议\n\nPPP (Point-to-Point Protocol) 点对点协议\n\nRFC (Request For Comments) 请求评论\n\nSMTP (Simple MailTransferProtocol) 简单邮件传送协议\n\nSTDM (Statistic TDM) 统计时分复用\n\nSTM (Synchronous Transfer Module) 同步传递模块\n\nTCP (Transmission Control Protocol) 传输控制协议\n\nTFTP (Trivial File Transfer Protocol) 简单文件传送协议\n\nUDP (UserDatagram Protocol) 用户数据报协议\n\nURL (Uniform Resource Locator) 统一资源定位符\n\nWLAN (Wireless Local AreaNetwork) 无线局域网\n\nWPAN (Wireless Personal Area Network) 无线个人区域网\n\nWWW (World WideWeb) 万维网\n\nICMP (Internet Control Message Protocol）Internet控制报文协议\n\n+ 检测网络是否通畅、主机是否可达、路由是否可用等网络运行状态。\n+ ping、tracert命令基于ICMP\n\nMTU （Maximum Transmission Unit）最大传输单元","source":"_posts/计算机网络-名词解释.md","raw":"---\ntitle: 计算机网络-名词解释\ncopyright: true\nabbrlink: a11ee691\ndate: 2018-07-05 01:01:01\ntags:\n- 网络\n- 学习\ncategories: 网络\npassword:\n---\n\n{% meting \"1803360770\" \"xiami\" \"song\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n\n\nADSL （Asymmetric Digital SubscriberLine) 非对称数字用户线\n\nARQ (Automatic Repeat reQU  t)自动重传请求\n\nCDMA (Code Division MultiplexAccess)码分多址\n\nDHCP (Dynamic Host Configuration Protocol) 动态主机配置协议\n\nDNS (Domain Name System) 域名系统\n\nFDM (Frequency Division Multiplexing) 频分复用\n\nFTP(FileTransferProtocol)文件传送协议\n\nHTML (HyperText Markup Language) 超文本标记语言\n\nICMP (Internet Control Message Protocol） 网际控制报文协议\n\nlP (Internet Protocol) 网际协议\n\nNAT (NetworkAddress Translation) 网络地址转换\n \n\nOSPF (Open Shortest Path First） 开放最短通路优先\n\nPOP(Post Office Protocol) 邮局协议\n\nPPP (Point-to-Point Protocol) 点对点协议\n\nRFC (Request For Comments) 请求评论\n\nSMTP (Simple MailTransferProtocol) 简单邮件传送协议\n\nSTDM (Statistic TDM) 统计时分复用\n\nSTM (Synchronous Transfer Module) 同步传递模块\n\nTCP (Transmission Control Protocol) 传输控制协议\n\nTFTP (Trivial File Transfer Protocol) 简单文件传送协议\n\nUDP (UserDatagram Protocol) 用户数据报协议\n\nURL (Uniform Resource Locator) 统一资源定位符\n\nWLAN (Wireless Local AreaNetwork) 无线局域网\n\nWPAN (Wireless Personal Area Network) 无线个人区域网\n\nWWW (World WideWeb) 万维网\n\nICMP (Internet Control Message Protocol）Internet控制报文协议\n\n+ 检测网络是否通畅、主机是否可达、路由是否可用等网络运行状态。\n+ ping、tracert命令基于ICMP\n\nMTU （Maximum Transmission Unit）最大传输单元","slug":"计算机网络-名词解释","published":1,"updated":"2020-02-20T06:06:59.428Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td3z001ofkupsr9zw27b","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-nEQGlhEf\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1803360770\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<p>ADSL （Asymmetric Digital SubscriberLine) 非对称数字用户线</p>\n<p>ARQ (Automatic Repeat reQU  t)自动重传请求</p>\n<p>CDMA (Code Division MultiplexAccess)码分多址</p>\n<p>DHCP (Dynamic Host Configuration Protocol) 动态主机配置协议</p>\n<p>DNS (Domain Name System) 域名系统</p>\n<p>FDM (Frequency Division Multiplexing) 频分复用</p>\n<p>FTP(FileTransferProtocol)文件传送协议</p>\n<p>HTML (HyperText Markup Language) 超文本标记语言</p>\n<p>ICMP (Internet Control Message Protocol） 网际控制报文协议</p>\n<p>lP (Internet Protocol) 网际协议</p>\n<p>NAT (NetworkAddress Translation) 网络地址转换</p>\n<p>OSPF (Open Shortest Path First） 开放最短通路优先</p>\n<p>POP(Post Office Protocol) 邮局协议</p>\n<p>PPP (Point-to-Point Protocol) 点对点协议</p>\n<p>RFC (Request For Comments) 请求评论</p>\n<p>SMTP (Simple MailTransferProtocol) 简单邮件传送协议</p>\n<p>STDM (Statistic TDM) 统计时分复用</p>\n<p>STM (Synchronous Transfer Module) 同步传递模块</p>\n<p>TCP (Transmission Control Protocol) 传输控制协议</p>\n<p>TFTP (Trivial File Transfer Protocol) 简单文件传送协议</p>\n<p>UDP (UserDatagram Protocol) 用户数据报协议</p>\n<p>URL (Uniform Resource Locator) 统一资源定位符</p>\n<p>WLAN (Wireless Local AreaNetwork) 无线局域网</p>\n<p>WPAN (Wireless Personal Area Network) 无线个人区域网</p>\n<p>WWW (World WideWeb) 万维网</p>\n<p>ICMP (Internet Control Message Protocol）Internet控制报文协议</p>\n<ul>\n<li>检测网络是否通畅、主机是否可达、路由是否可用等网络运行状态。</li>\n<li>ping、tracert命令基于ICMP</li>\n</ul>\n<p>MTU （Maximum Transmission Unit）最大传输单元</p>\n","site":{"data":{}},"length":1092,"excerpt":"","more":"\n    <div id=\"aplayer-nEQGlhEf\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1803360770\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<p>ADSL （Asymmetric Digital SubscriberLine) 非对称数字用户线</p>\n<p>ARQ (Automatic Repeat reQU  t)自动重传请求</p>\n<p>CDMA (Code Division MultiplexAccess)码分多址</p>\n<p>DHCP (Dynamic Host Configuration Protocol) 动态主机配置协议</p>\n<p>DNS (Domain Name System) 域名系统</p>\n<p>FDM (Frequency Division Multiplexing) 频分复用</p>\n<p>FTP(FileTransferProtocol)文件传送协议</p>\n<p>HTML (HyperText Markup Language) 超文本标记语言</p>\n<p>ICMP (Internet Control Message Protocol） 网际控制报文协议</p>\n<p>lP (Internet Protocol) 网际协议</p>\n<p>NAT (NetworkAddress Translation) 网络地址转换</p>\n<p>OSPF (Open Shortest Path First） 开放最短通路优先</p>\n<p>POP(Post Office Protocol) 邮局协议</p>\n<p>PPP (Point-to-Point Protocol) 点对点协议</p>\n<p>RFC (Request For Comments) 请求评论</p>\n<p>SMTP (Simple MailTransferProtocol) 简单邮件传送协议</p>\n<p>STDM (Statistic TDM) 统计时分复用</p>\n<p>STM (Synchronous Transfer Module) 同步传递模块</p>\n<p>TCP (Transmission Control Protocol) 传输控制协议</p>\n<p>TFTP (Trivial File Transfer Protocol) 简单文件传送协议</p>\n<p>UDP (UserDatagram Protocol) 用户数据报协议</p>\n<p>URL (Uniform Resource Locator) 统一资源定位符</p>\n<p>WLAN (Wireless Local AreaNetwork) 无线局域网</p>\n<p>WPAN (Wireless Personal Area Network) 无线个人区域网</p>\n<p>WWW (World WideWeb) 万维网</p>\n<p>ICMP (Internet Control Message Protocol）Internet控制报文协议</p>\n<ul>\n<li>检测网络是否通畅、主机是否可达、路由是否可用等网络运行状态。</li>\n<li>ping、tracert命令基于ICMP</li>\n</ul>\n<p>MTU （Maximum Transmission Unit）最大传输单元</p>\n"},{"title":"爬虫基础知识和软件准备","abbrlink":"51937609","date":"2018-05-20T12:47:08.000Z","copyright":null,"password":null,"_content":"\n# 爬虫概念\n### 1.什么是爬虫\n- 爬虫就是`模拟客户端（浏览器）发送网络请求`，获取响应，按照规则提取数据的程序\n- `模拟客户端（浏览器）发送网络请求`：照着浏览器发送一摸一样的请求获取和浏览器一样的数据\n-\n### 2.爬虫爬到数据的去向\n- 呈现出来：展示在网页或者app上\n- 进行分析：从数据中寻找规律\n-\n### 3.需要的软件环境\n- python\n\t- 基础语法（字符串，列表，字典，判断和循环）\n\t- 函数（函数的创建和调用）\n\t- 面向对象（创建类，使用类）\n\n- pycharm\n\t- python编译器\n\t\n- chrome浏览器\n\n\n### 浏览器的请求\n\n- url地址\n\t- url地址 ：请求的协议+域名+资源路径+请求参数\n\n- 浏览器请求url地址\n\t- 当前url对应的响应+js+css+图片  ------>elements内容\n\n- 爬虫请求的url地址\n\t- 当前url地址对应的响应\n\n- elements的内容和爬虫获取的url地址不同，需要以当前url地址对应的响应为准提取数据\n\n\n- 当前url地址响应位置：\n\t- 从network中找到当前url地址，点击response\n\t- 在页面上右键点击显示网页源码\n\n### 认识HTTP、HTTPS\n- HTTP：超文本传输协议\n\t- 以明文形式传输\n\t- 不加密\n- HTTPS ：HTTP+SSL（安全套接字层）\n\t- 传输过程先加密后解密\n\t- 效率低，但是安全\n\n- get请求和post请求的区别\n\t- get请求没有请求体，post有，get请求把数据放到url地址中\n\t- post请求用于登陆注册\n\t- post请求携带的数据比较多，常用于传输大文本\n\n- HTTP协议的请求\n\t- 请求行\n\t- 请求头\n\t\t- user-agent: 用户代理（浏览器识别码）：对方服务器通过user-agent识别当前请求的用户种类\n\t\t\t- 如果需要模拟手机版的请求，就需要把user-agent:改成手机版\n\t\t- cookie：用来存储用户信息，每次请求会被携带发送到服务器\n\t\t\t- 需要登陆后才能获取访问页面\n\t\t\t- 对方服务器会通过cookie来判断是否是一个爬虫\n\t- 请求体\n\t\t- get请求没有请求体\n\t\t- post请求有请求体\n\n- HTTP协议的响应\n\t- 响应头\n\t\t- Set-Cookie：对方服务器通过该字段设置cookie到本地\n\t- 响应体\n\t\t- url地址对应的响应\n\t\t","source":"_posts/爬虫基础知识和软件准备.md","raw":"---\ntitle: 爬虫基础知识和软件准备\ntags:\n  - 爬虫\n  - python\nabbrlink: '51937609'\ndate: 2018-05-20 20:47:08\ncategories:\ncopyright:\npassword:\n---\n\n# 爬虫概念\n### 1.什么是爬虫\n- 爬虫就是`模拟客户端（浏览器）发送网络请求`，获取响应，按照规则提取数据的程序\n- `模拟客户端（浏览器）发送网络请求`：照着浏览器发送一摸一样的请求获取和浏览器一样的数据\n-\n### 2.爬虫爬到数据的去向\n- 呈现出来：展示在网页或者app上\n- 进行分析：从数据中寻找规律\n-\n### 3.需要的软件环境\n- python\n\t- 基础语法（字符串，列表，字典，判断和循环）\n\t- 函数（函数的创建和调用）\n\t- 面向对象（创建类，使用类）\n\n- pycharm\n\t- python编译器\n\t\n- chrome浏览器\n\n\n### 浏览器的请求\n\n- url地址\n\t- url地址 ：请求的协议+域名+资源路径+请求参数\n\n- 浏览器请求url地址\n\t- 当前url对应的响应+js+css+图片  ------>elements内容\n\n- 爬虫请求的url地址\n\t- 当前url地址对应的响应\n\n- elements的内容和爬虫获取的url地址不同，需要以当前url地址对应的响应为准提取数据\n\n\n- 当前url地址响应位置：\n\t- 从network中找到当前url地址，点击response\n\t- 在页面上右键点击显示网页源码\n\n### 认识HTTP、HTTPS\n- HTTP：超文本传输协议\n\t- 以明文形式传输\n\t- 不加密\n- HTTPS ：HTTP+SSL（安全套接字层）\n\t- 传输过程先加密后解密\n\t- 效率低，但是安全\n\n- get请求和post请求的区别\n\t- get请求没有请求体，post有，get请求把数据放到url地址中\n\t- post请求用于登陆注册\n\t- post请求携带的数据比较多，常用于传输大文本\n\n- HTTP协议的请求\n\t- 请求行\n\t- 请求头\n\t\t- user-agent: 用户代理（浏览器识别码）：对方服务器通过user-agent识别当前请求的用户种类\n\t\t\t- 如果需要模拟手机版的请求，就需要把user-agent:改成手机版\n\t\t- cookie：用来存储用户信息，每次请求会被携带发送到服务器\n\t\t\t- 需要登陆后才能获取访问页面\n\t\t\t- 对方服务器会通过cookie来判断是否是一个爬虫\n\t- 请求体\n\t\t- get请求没有请求体\n\t\t- post请求有请求体\n\n- HTTP协议的响应\n\t- 响应头\n\t\t- Set-Cookie：对方服务器通过该字段设置cookie到本地\n\t- 响应体\n\t\t- url地址对应的响应\n\t\t","slug":"爬虫基础知识和软件准备","published":1,"updated":"2020-02-20T06:06:59.426Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td40001pfkupc13t8cs7","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1>爬虫概念</h1>\n<h3 id=\"1-什么是爬虫\"><a class=\"header-anchor\" href=\"#1-什么是爬虫\">☆</a>1.什么是爬虫</h3>\n<ul>\n<li>爬虫就是<code>模拟客户端（浏览器）发送网络请求</code>，获取响应，按照规则提取数据的程序</li>\n<li><code>模拟客户端（浏览器）发送网络请求</code>：照着浏览器发送一摸一样的请求获取和浏览器一样的数据</li>\n<li></li>\n</ul>\n<h3 id=\"2-爬虫爬到数据的去向\"><a class=\"header-anchor\" href=\"#2-爬虫爬到数据的去向\">☆</a>2.爬虫爬到数据的去向</h3>\n<ul>\n<li>呈现出来：展示在网页或者app上</li>\n<li>进行分析：从数据中寻找规律</li>\n<li></li>\n</ul>\n<h3 id=\"3-需要的软件环境\"><a class=\"header-anchor\" href=\"#3-需要的软件环境\">☆</a>3.需要的软件环境</h3>\n<ul>\n<li>\n<p>python</p>\n<ul>\n<li>基础语法（字符串，列表，字典，判断和循环）</li>\n<li>函数（函数的创建和调用）</li>\n<li>面向对象（创建类，使用类）</li>\n</ul>\n</li>\n<li>\n<p>pycharm</p>\n<ul>\n<li>python编译器</li>\n</ul>\n</li>\n<li>\n<p>chrome浏览器</p>\n</li>\n</ul>\n<h3 id=\"浏览器的请求\"><a class=\"header-anchor\" href=\"#浏览器的请求\">☆</a>浏览器的请求</h3>\n<ul>\n<li>\n<p>url地址</p>\n<ul>\n<li>url地址 ：请求的协议+域名+资源路径+请求参数</li>\n</ul>\n</li>\n<li>\n<p>浏览器请求url地址</p>\n<ul>\n<li>当前url对应的响应+js+css+图片  ------&gt;elements内容</li>\n</ul>\n</li>\n<li>\n<p>爬虫请求的url地址</p>\n<ul>\n<li>当前url地址对应的响应</li>\n</ul>\n</li>\n<li>\n<p>elements的内容和爬虫获取的url地址不同，需要以当前url地址对应的响应为准提取数据</p>\n</li>\n</ul>\n<ul>\n<li>当前url地址响应位置：\n<ul>\n<li>从network中找到当前url地址，点击response</li>\n<li>在页面上右键点击显示网页源码</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"认识http-https\"><a class=\"header-anchor\" href=\"#认识http-https\">☆</a>认识HTTP、HTTPS</h3>\n<ul>\n<li>\n<p>HTTP：超文本传输协议</p>\n<ul>\n<li>以明文形式传输</li>\n<li>不加密</li>\n</ul>\n</li>\n<li>\n<p>HTTPS ：HTTP+SSL（安全套接字层）</p>\n<ul>\n<li>传输过程先加密后解密</li>\n<li>效率低，但是安全</li>\n</ul>\n</li>\n<li>\n<p>get请求和post请求的区别</p>\n<ul>\n<li>get请求没有请求体，post有，get请求把数据放到url地址中</li>\n<li>post请求用于登陆注册</li>\n<li>post请求携带的数据比较多，常用于传输大文本</li>\n</ul>\n</li>\n<li>\n<p>HTTP协议的请求</p>\n<ul>\n<li>请求行</li>\n<li>请求头\n<ul>\n<li>user-agent: 用户代理（浏览器识别码）：对方服务器通过user-agent识别当前请求的用户种类\n<ul>\n<li>如果需要模拟手机版的请求，就需要把user-agent:改成手机版</li>\n</ul>\n</li>\n<li>cookie：用来存储用户信息，每次请求会被携带发送到服务器\n<ul>\n<li>需要登陆后才能获取访问页面</li>\n<li>对方服务器会通过cookie来判断是否是一个爬虫</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>请求体\n<ul>\n<li>get请求没有请求体</li>\n<li>post请求有请求体</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>HTTP协议的响应</p>\n<ul>\n<li>响应头\n<ul>\n<li>Set-Cookie：对方服务器通过该字段设置cookie到本地</li>\n</ul>\n</li>\n<li>响应体\n<ul>\n<li>url地址对应的响应</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"length":838,"excerpt":"","more":"<h1>爬虫概念</h1>\n<h3 id=\"1-什么是爬虫\"><a class=\"header-anchor\" href=\"#1-什么是爬虫\">☆</a>1.什么是爬虫</h3>\n<ul>\n<li>爬虫就是<code>模拟客户端（浏览器）发送网络请求</code>，获取响应，按照规则提取数据的程序</li>\n<li><code>模拟客户端（浏览器）发送网络请求</code>：照着浏览器发送一摸一样的请求获取和浏览器一样的数据</li>\n<li></li>\n</ul>\n<h3 id=\"2-爬虫爬到数据的去向\"><a class=\"header-anchor\" href=\"#2-爬虫爬到数据的去向\">☆</a>2.爬虫爬到数据的去向</h3>\n<ul>\n<li>呈现出来：展示在网页或者app上</li>\n<li>进行分析：从数据中寻找规律</li>\n<li></li>\n</ul>\n<h3 id=\"3-需要的软件环境\"><a class=\"header-anchor\" href=\"#3-需要的软件环境\">☆</a>3.需要的软件环境</h3>\n<ul>\n<li>\n<p>python</p>\n<ul>\n<li>基础语法（字符串，列表，字典，判断和循环）</li>\n<li>函数（函数的创建和调用）</li>\n<li>面向对象（创建类，使用类）</li>\n</ul>\n</li>\n<li>\n<p>pycharm</p>\n<ul>\n<li>python编译器</li>\n</ul>\n</li>\n<li>\n<p>chrome浏览器</p>\n</li>\n</ul>\n<h3 id=\"浏览器的请求\"><a class=\"header-anchor\" href=\"#浏览器的请求\">☆</a>浏览器的请求</h3>\n<ul>\n<li>\n<p>url地址</p>\n<ul>\n<li>url地址 ：请求的协议+域名+资源路径+请求参数</li>\n</ul>\n</li>\n<li>\n<p>浏览器请求url地址</p>\n<ul>\n<li>当前url对应的响应+js+css+图片  ------&gt;elements内容</li>\n</ul>\n</li>\n<li>\n<p>爬虫请求的url地址</p>\n<ul>\n<li>当前url地址对应的响应</li>\n</ul>\n</li>\n<li>\n<p>elements的内容和爬虫获取的url地址不同，需要以当前url地址对应的响应为准提取数据</p>\n</li>\n</ul>\n<ul>\n<li>当前url地址响应位置：\n<ul>\n<li>从network中找到当前url地址，点击response</li>\n<li>在页面上右键点击显示网页源码</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"认识http-https\"><a class=\"header-anchor\" href=\"#认识http-https\">☆</a>认识HTTP、HTTPS</h3>\n<ul>\n<li>\n<p>HTTP：超文本传输协议</p>\n<ul>\n<li>以明文形式传输</li>\n<li>不加密</li>\n</ul>\n</li>\n<li>\n<p>HTTPS ：HTTP+SSL（安全套接字层）</p>\n<ul>\n<li>传输过程先加密后解密</li>\n<li>效率低，但是安全</li>\n</ul>\n</li>\n<li>\n<p>get请求和post请求的区别</p>\n<ul>\n<li>get请求没有请求体，post有，get请求把数据放到url地址中</li>\n<li>post请求用于登陆注册</li>\n<li>post请求携带的数据比较多，常用于传输大文本</li>\n</ul>\n</li>\n<li>\n<p>HTTP协议的请求</p>\n<ul>\n<li>请求行</li>\n<li>请求头\n<ul>\n<li>user-agent: 用户代理（浏览器识别码）：对方服务器通过user-agent识别当前请求的用户种类\n<ul>\n<li>如果需要模拟手机版的请求，就需要把user-agent:改成手机版</li>\n</ul>\n</li>\n<li>cookie：用来存储用户信息，每次请求会被携带发送到服务器\n<ul>\n<li>需要登陆后才能获取访问页面</li>\n<li>对方服务器会通过cookie来判断是否是一个爬虫</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>请求体\n<ul>\n<li>get请求没有请求体</li>\n<li>post请求有请求体</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>HTTP协议的响应</p>\n<ul>\n<li>响应头\n<ul>\n<li>Set-Cookie：对方服务器通过该字段设置cookie到本地</li>\n</ul>\n</li>\n<li>响应体\n<ul>\n<li>url地址对应的响应</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n"},{"title":"计算机操作系统笔记","copyright":true,"abbrlink":"521a3173","notshow":true,"description":null,"image":null,"photos":[],"sticky":null,"date":"2020-02-20T06:06:59.427Z","password":null,"_content":"\n# 操作系统引论\n\n## 发展过程\n\n### 分时系统\n\n引入：\n- 人机交互\n- 共享主机\n解决的问题：\n1. 及时接收： 多路卡\n2. 及时处理： 各个用户的作业必须驻留在内存中，并能频繁的获得运行\n  - 作业直接进入内存。\n  - 采用轮转运行的方式。（引入时间片概念）\n\n特征：多路性、独立性、及时性、交互性\n\n### 实时系统\n\n类型：\n- 工业控制系统\n- 信息查询系统\n- 多媒体系统\n- 嵌入式系统\n\n## 基本特性\n\n### 并发(Concurrence)\n\n1、并行与并发\n\n并行是指两个或多个时间在同一时刻发生，并发是指两个或多个事件在同一时间间隔内发生。\n\n2、进程\n\n是指在系统中能独立运行并作为资源分配的基本单位，它是由一组机器指令数据和堆栈组成的，是一个能独立运行的活动实体。\n\n### 共享(Sharing)\n\n- 互斥共享方式\n  - 绝大多数物理设备，栈、变量、表格\n- 同时访问方式\n\n### 虚拟(Virtual)\n\n- 时分复用技术\n  - 虚拟处理机\n  - 虚拟设备\n- 空分复用技术\n\n### 异步\n\n# 进程的描述与控制\n\n## 前趋图和程序执行\n\n前趋图：为了能更好的描述程序的顺序和并执行情况。\n\n顺序执行：顺序性、封闭性、可再现性\n\n并发执行：间断性、失去封闭性、不可再现性\n\n## 进程的描述\n\n定义：\n- 进程是程序的一次执行。\n- 进程是一个程序及其数据在处理机上顺序执行时所发生的活动。\n- 进程是具有独立功能的程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个独立单位。\n\n## 信号量\n\n含义：\n\n信号量是一个用来实现进程同步的整型或记录型变量，除了`定义初始化`外，对它只能执行 `wait（或P）`和`signal（或V）`这两种原子操作。\n\n### 信号量的物理意义\n\n一个信号量S通常对应于一类资源\n\n## 用信号量实现互斥\n\n  为了实现进程对临界资源的互斥访问，需为每类临界资源设置一初值为 1的互斥信号量mutex。\n\n<div id = \"div-border-right-green\">\n- wait操作----申请资源\n- signal操作----释放资源\n</div>\n\n# 管程管理\n\n对于信号量机制，每个访问临界资源的进程自备wait、signal操作，给系统管理带来了麻烦，而且容易出现死锁。\n共享变量分部到各程序中，使程序易读性差。\n正确性难以保证。\n\n## 基本思想\n\n将共享资源用共享数据结构表示，用对数据结构操作的一组过程表示资源管理程序， 将共享数据结构和对它们的操作集中在一个模块中形成管程。\n\n一个管程定义了一个数据结构和能为并发进程所执行在该数据结构上的一组操作，这组操作能同步进程和改变管程中的数据。\n\n## 进程同步问题\n\n### 生产者消费者问题\n\n>☞若干进程共享缓存去的同步问题\n\n利用记录型信号量解决：\n\n基本工作：\n- 生产者生产消息放入缓冲区\n- 消费者从缓冲区取走消息\n\n互斥：缓冲池是临界资源，设置信号量mutex=1\n\n同步: (生产者)有空缓冲区放产品，唤醒等待的消费者进程；无空缓冲区则阻塞。\n(消费者)有产品取走，唤醒等待的生产者进程；无产品则阻塞。\n\n实现同步需要设置两个信号量empty=n,full=0\n\n```java\nvoid producer(){\n  producer an item nextp;\n  ...\n  wait(empty);\n  wait(mutex);\n  buffer[in] = netxp;\n  in = (in + 1) % n;\n  signal(mutex);\n  signal(full);\n}while(true);\n\nvoid consumer(){\n  do{\n    wait(full);\n    wait(mutex);\n    nextc = buffer[out];\n    out = (out + 1) % n;\n    signal(mutex);\n    signal(empty);\n    consumer the item in nextc;\n    ...\n  }while(true);\n}\n\nvoid main(){\n  cobegin\n    producer(); consumer();\n  coend\n}\n```\n\n作业\n进程的概念（定义） 状态 特征 标志 进程与程序的关系（异同）","source":"_posts/计算机操作系统笔记.md","raw":"---\ntitle: 计算机操作系统笔记\ncopyright: true\nabbrlink: 521a3173\nnotshow: true\ndescription:\nimage:\nphotos:\nsticky:\ntags:\ncategories:\ndate:\npassword:\n---\n\n# 操作系统引论\n\n## 发展过程\n\n### 分时系统\n\n引入：\n- 人机交互\n- 共享主机\n解决的问题：\n1. 及时接收： 多路卡\n2. 及时处理： 各个用户的作业必须驻留在内存中，并能频繁的获得运行\n  - 作业直接进入内存。\n  - 采用轮转运行的方式。（引入时间片概念）\n\n特征：多路性、独立性、及时性、交互性\n\n### 实时系统\n\n类型：\n- 工业控制系统\n- 信息查询系统\n- 多媒体系统\n- 嵌入式系统\n\n## 基本特性\n\n### 并发(Concurrence)\n\n1、并行与并发\n\n并行是指两个或多个时间在同一时刻发生，并发是指两个或多个事件在同一时间间隔内发生。\n\n2、进程\n\n是指在系统中能独立运行并作为资源分配的基本单位，它是由一组机器指令数据和堆栈组成的，是一个能独立运行的活动实体。\n\n### 共享(Sharing)\n\n- 互斥共享方式\n  - 绝大多数物理设备，栈、变量、表格\n- 同时访问方式\n\n### 虚拟(Virtual)\n\n- 时分复用技术\n  - 虚拟处理机\n  - 虚拟设备\n- 空分复用技术\n\n### 异步\n\n# 进程的描述与控制\n\n## 前趋图和程序执行\n\n前趋图：为了能更好的描述程序的顺序和并执行情况。\n\n顺序执行：顺序性、封闭性、可再现性\n\n并发执行：间断性、失去封闭性、不可再现性\n\n## 进程的描述\n\n定义：\n- 进程是程序的一次执行。\n- 进程是一个程序及其数据在处理机上顺序执行时所发生的活动。\n- 进程是具有独立功能的程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个独立单位。\n\n## 信号量\n\n含义：\n\n信号量是一个用来实现进程同步的整型或记录型变量，除了`定义初始化`外，对它只能执行 `wait（或P）`和`signal（或V）`这两种原子操作。\n\n### 信号量的物理意义\n\n一个信号量S通常对应于一类资源\n\n## 用信号量实现互斥\n\n  为了实现进程对临界资源的互斥访问，需为每类临界资源设置一初值为 1的互斥信号量mutex。\n\n<div id = \"div-border-right-green\">\n- wait操作----申请资源\n- signal操作----释放资源\n</div>\n\n# 管程管理\n\n对于信号量机制，每个访问临界资源的进程自备wait、signal操作，给系统管理带来了麻烦，而且容易出现死锁。\n共享变量分部到各程序中，使程序易读性差。\n正确性难以保证。\n\n## 基本思想\n\n将共享资源用共享数据结构表示，用对数据结构操作的一组过程表示资源管理程序， 将共享数据结构和对它们的操作集中在一个模块中形成管程。\n\n一个管程定义了一个数据结构和能为并发进程所执行在该数据结构上的一组操作，这组操作能同步进程和改变管程中的数据。\n\n## 进程同步问题\n\n### 生产者消费者问题\n\n>☞若干进程共享缓存去的同步问题\n\n利用记录型信号量解决：\n\n基本工作：\n- 生产者生产消息放入缓冲区\n- 消费者从缓冲区取走消息\n\n互斥：缓冲池是临界资源，设置信号量mutex=1\n\n同步: (生产者)有空缓冲区放产品，唤醒等待的消费者进程；无空缓冲区则阻塞。\n(消费者)有产品取走，唤醒等待的生产者进程；无产品则阻塞。\n\n实现同步需要设置两个信号量empty=n,full=0\n\n```java\nvoid producer(){\n  producer an item nextp;\n  ...\n  wait(empty);\n  wait(mutex);\n  buffer[in] = netxp;\n  in = (in + 1) % n;\n  signal(mutex);\n  signal(full);\n}while(true);\n\nvoid consumer(){\n  do{\n    wait(full);\n    wait(mutex);\n    nextc = buffer[out];\n    out = (out + 1) % n;\n    signal(mutex);\n    signal(empty);\n    consumer the item in nextc;\n    ...\n  }while(true);\n}\n\nvoid main(){\n  cobegin\n    producer(); consumer();\n  coend\n}\n```\n\n作业\n进程的概念（定义） 状态 特征 标志 进程与程序的关系（异同）","slug":"计算机操作系统笔记","published":1,"updated":"2020-02-20T06:06:59.427Z","comments":1,"layout":"post","link":"","_id":"ckec2td41001qfkupsk59071f","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h1>操作系统引论</h1>\n<h2 id=\"发展过程\"><a class=\"header-anchor\" href=\"#发展过程\">☆</a>发展过程</h2>\n<h3 id=\"分时系统\"><a class=\"header-anchor\" href=\"#分时系统\">☆</a>分时系统</h3>\n<p>引入：</p>\n<ul>\n<li>人机交互</li>\n<li>共享主机<br>\n解决的问题：</li>\n</ul>\n<ol>\n<li>及时接收： 多路卡</li>\n<li>及时处理： 各个用户的作业必须驻留在内存中，并能频繁的获得运行</li>\n</ol>\n<ul>\n<li>作业直接进入内存。</li>\n<li>采用轮转运行的方式。（引入时间片概念）</li>\n</ul>\n<p>特征：多路性、独立性、及时性、交互性</p>\n<h3 id=\"实时系统\"><a class=\"header-anchor\" href=\"#实时系统\">☆</a>实时系统</h3>\n<p>类型：</p>\n<ul>\n<li>工业控制系统</li>\n<li>信息查询系统</li>\n<li>多媒体系统</li>\n<li>嵌入式系统</li>\n</ul>\n<h2 id=\"基本特性\"><a class=\"header-anchor\" href=\"#基本特性\">☆</a>基本特性</h2>\n<h3 id=\"并发-concurrence\"><a class=\"header-anchor\" href=\"#并发-concurrence\">☆</a>并发(Concurrence)</h3>\n<p>1、并行与并发</p>\n<p>并行是指两个或多个时间在同一时刻发生，并发是指两个或多个事件在同一时间间隔内发生。</p>\n<p>2、进程</p>\n<p>是指在系统中能独立运行并作为资源分配的基本单位，它是由一组机器指令数据和堆栈组成的，是一个能独立运行的活动实体。</p>\n<h3 id=\"共享-sharing\"><a class=\"header-anchor\" href=\"#共享-sharing\">☆</a>共享(Sharing)</h3>\n<ul>\n<li>互斥共享方式\n<ul>\n<li>绝大多数物理设备，栈、变量、表格</li>\n</ul>\n</li>\n<li>同时访问方式</li>\n</ul>\n<h3 id=\"虚拟-virtual\"><a class=\"header-anchor\" href=\"#虚拟-virtual\">☆</a>虚拟(Virtual)</h3>\n<ul>\n<li>时分复用技术\n<ul>\n<li>虚拟处理机</li>\n<li>虚拟设备</li>\n</ul>\n</li>\n<li>空分复用技术</li>\n</ul>\n<h3 id=\"异步\"><a class=\"header-anchor\" href=\"#异步\">☆</a>异步</h3>\n<h1>进程的描述与控制</h1>\n<h2 id=\"前趋图和程序执行\"><a class=\"header-anchor\" href=\"#前趋图和程序执行\">☆</a>前趋图和程序执行</h2>\n<p>前趋图：为了能更好的描述程序的顺序和并执行情况。</p>\n<p>顺序执行：顺序性、封闭性、可再现性</p>\n<p>并发执行：间断性、失去封闭性、不可再现性</p>\n<h2 id=\"进程的描述\"><a class=\"header-anchor\" href=\"#进程的描述\">☆</a>进程的描述</h2>\n<p>定义：</p>\n<ul>\n<li>进程是程序的一次执行。</li>\n<li>进程是一个程序及其数据在处理机上顺序执行时所发生的活动。</li>\n<li>进程是具有独立功能的程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个独立单位。</li>\n</ul>\n<h2 id=\"信号量\"><a class=\"header-anchor\" href=\"#信号量\">☆</a>信号量</h2>\n<p>含义：</p>\n<p>信号量是一个用来实现进程同步的整型或记录型变量，除了<code>定义初始化</code>外，对它只能执行 <code>wait（或P）</code>和<code>signal（或V）</code>这两种原子操作。</p>\n<h3 id=\"信号量的物理意义\"><a class=\"header-anchor\" href=\"#信号量的物理意义\">☆</a>信号量的物理意义</h3>\n<p>一个信号量S通常对应于一类资源</p>\n<h2 id=\"用信号量实现互斥\"><a class=\"header-anchor\" href=\"#用信号量实现互斥\">☆</a>用信号量实现互斥</h2>\n<p>为了实现进程对临界资源的互斥访问，需为每类临界资源设置一初值为 1的互斥信号量mutex。</p>\n<div id=\"div-border-right-green\">\n- wait操作----申请资源\n- signal操作----释放资源\n</div>\n<h1>管程管理</h1>\n<p>对于信号量机制，每个访问临界资源的进程自备wait、signal操作，给系统管理带来了麻烦，而且容易出现死锁。<br>\n共享变量分部到各程序中，使程序易读性差。<br>\n正确性难以保证。</p>\n<h2 id=\"基本思想\"><a class=\"header-anchor\" href=\"#基本思想\">☆</a>基本思想</h2>\n<p>将共享资源用共享数据结构表示，用对数据结构操作的一组过程表示资源管理程序， 将共享数据结构和对它们的操作集中在一个模块中形成管程。</p>\n<p>一个管程定义了一个数据结构和能为并发进程所执行在该数据结构上的一组操作，这组操作能同步进程和改变管程中的数据。</p>\n<h2 id=\"进程同步问题\"><a class=\"header-anchor\" href=\"#进程同步问题\">☆</a>进程同步问题</h2>\n<h3 id=\"生产者消费者问题\"><a class=\"header-anchor\" href=\"#生产者消费者问题\">☆</a>生产者消费者问题</h3>\n<blockquote>\n<p>☞若干进程共享缓存去的同步问题</p>\n</blockquote>\n<p>利用记录型信号量解决：</p>\n<p>基本工作：</p>\n<ul>\n<li>生产者生产消息放入缓冲区</li>\n<li>消费者从缓冲区取走消息</li>\n</ul>\n<p>互斥：缓冲池是临界资源，设置信号量mutex=1</p>\n<p>同步: (生产者)有空缓冲区放产品，唤醒等待的消费者进程；无空缓冲区则阻塞。<br>\n(消费者)有产品取走，唤醒等待的生产者进程；无产品则阻塞。</p>\n<p>实现同步需要设置两个信号量empty=n,full=0</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">producer</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  producer an item nextp;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  wait(empty);</span><br><span class=\"line\">  wait(mutex);</span><br><span class=\"line\">  buffer[in] = netxp;</span><br><span class=\"line\">  in = (in + <span class=\"number\">1</span>) % n;</span><br><span class=\"line\">  signal(mutex);</span><br><span class=\"line\">  signal(full);</span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">consumer</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">    wait(full);</span><br><span class=\"line\">    wait(mutex);</span><br><span class=\"line\">    nextc = buffer[out];</span><br><span class=\"line\">    out = (out + <span class=\"number\">1</span>) % n;</span><br><span class=\"line\">    signal(mutex);</span><br><span class=\"line\">    signal(empty);</span><br><span class=\"line\">    consumer the item in nextc;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  cobegin</span><br><span class=\"line\">    producer(); consumer();</span><br><span class=\"line\">  coend</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>作业<br>\n进程的概念（定义） 状态 特征 标志 进程与程序的关系（异同）</p>\n","site":{"data":{}},"length":1640,"excerpt":"","more":"<h1>操作系统引论</h1>\n<h2 id=\"发展过程\"><a class=\"header-anchor\" href=\"#发展过程\">☆</a>发展过程</h2>\n<h3 id=\"分时系统\"><a class=\"header-anchor\" href=\"#分时系统\">☆</a>分时系统</h3>\n<p>引入：</p>\n<ul>\n<li>人机交互</li>\n<li>共享主机<br>\n解决的问题：</li>\n</ul>\n<ol>\n<li>及时接收： 多路卡</li>\n<li>及时处理： 各个用户的作业必须驻留在内存中，并能频繁的获得运行</li>\n</ol>\n<ul>\n<li>作业直接进入内存。</li>\n<li>采用轮转运行的方式。（引入时间片概念）</li>\n</ul>\n<p>特征：多路性、独立性、及时性、交互性</p>\n<h3 id=\"实时系统\"><a class=\"header-anchor\" href=\"#实时系统\">☆</a>实时系统</h3>\n<p>类型：</p>\n<ul>\n<li>工业控制系统</li>\n<li>信息查询系统</li>\n<li>多媒体系统</li>\n<li>嵌入式系统</li>\n</ul>\n<h2 id=\"基本特性\"><a class=\"header-anchor\" href=\"#基本特性\">☆</a>基本特性</h2>\n<h3 id=\"并发-concurrence\"><a class=\"header-anchor\" href=\"#并发-concurrence\">☆</a>并发(Concurrence)</h3>\n<p>1、并行与并发</p>\n<p>并行是指两个或多个时间在同一时刻发生，并发是指两个或多个事件在同一时间间隔内发生。</p>\n<p>2、进程</p>\n<p>是指在系统中能独立运行并作为资源分配的基本单位，它是由一组机器指令数据和堆栈组成的，是一个能独立运行的活动实体。</p>\n<h3 id=\"共享-sharing\"><a class=\"header-anchor\" href=\"#共享-sharing\">☆</a>共享(Sharing)</h3>\n<ul>\n<li>互斥共享方式\n<ul>\n<li>绝大多数物理设备，栈、变量、表格</li>\n</ul>\n</li>\n<li>同时访问方式</li>\n</ul>\n<h3 id=\"虚拟-virtual\"><a class=\"header-anchor\" href=\"#虚拟-virtual\">☆</a>虚拟(Virtual)</h3>\n<ul>\n<li>时分复用技术\n<ul>\n<li>虚拟处理机</li>\n<li>虚拟设备</li>\n</ul>\n</li>\n<li>空分复用技术</li>\n</ul>\n<h3 id=\"异步\"><a class=\"header-anchor\" href=\"#异步\">☆</a>异步</h3>\n<h1>进程的描述与控制</h1>\n<h2 id=\"前趋图和程序执行\"><a class=\"header-anchor\" href=\"#前趋图和程序执行\">☆</a>前趋图和程序执行</h2>\n<p>前趋图：为了能更好的描述程序的顺序和并执行情况。</p>\n<p>顺序执行：顺序性、封闭性、可再现性</p>\n<p>并发执行：间断性、失去封闭性、不可再现性</p>\n<h2 id=\"进程的描述\"><a class=\"header-anchor\" href=\"#进程的描述\">☆</a>进程的描述</h2>\n<p>定义：</p>\n<ul>\n<li>进程是程序的一次执行。</li>\n<li>进程是一个程序及其数据在处理机上顺序执行时所发生的活动。</li>\n<li>进程是具有独立功能的程序在一个数据集合上运行的过程，它是系统进行资源分配和调度的一个独立单位。</li>\n</ul>\n<h2 id=\"信号量\"><a class=\"header-anchor\" href=\"#信号量\">☆</a>信号量</h2>\n<p>含义：</p>\n<p>信号量是一个用来实现进程同步的整型或记录型变量，除了<code>定义初始化</code>外，对它只能执行 <code>wait（或P）</code>和<code>signal（或V）</code>这两种原子操作。</p>\n<h3 id=\"信号量的物理意义\"><a class=\"header-anchor\" href=\"#信号量的物理意义\">☆</a>信号量的物理意义</h3>\n<p>一个信号量S通常对应于一类资源</p>\n<h2 id=\"用信号量实现互斥\"><a class=\"header-anchor\" href=\"#用信号量实现互斥\">☆</a>用信号量实现互斥</h2>\n<p>为了实现进程对临界资源的互斥访问，需为每类临界资源设置一初值为 1的互斥信号量mutex。</p>\n<div id=\"div-border-right-green\">\n- wait操作----申请资源\n- signal操作----释放资源\n</div>\n<h1>管程管理</h1>\n<p>对于信号量机制，每个访问临界资源的进程自备wait、signal操作，给系统管理带来了麻烦，而且容易出现死锁。<br>\n共享变量分部到各程序中，使程序易读性差。<br>\n正确性难以保证。</p>\n<h2 id=\"基本思想\"><a class=\"header-anchor\" href=\"#基本思想\">☆</a>基本思想</h2>\n<p>将共享资源用共享数据结构表示，用对数据结构操作的一组过程表示资源管理程序， 将共享数据结构和对它们的操作集中在一个模块中形成管程。</p>\n<p>一个管程定义了一个数据结构和能为并发进程所执行在该数据结构上的一组操作，这组操作能同步进程和改变管程中的数据。</p>\n<h2 id=\"进程同步问题\"><a class=\"header-anchor\" href=\"#进程同步问题\">☆</a>进程同步问题</h2>\n<h3 id=\"生产者消费者问题\"><a class=\"header-anchor\" href=\"#生产者消费者问题\">☆</a>生产者消费者问题</h3>\n<blockquote>\n<p>☞若干进程共享缓存去的同步问题</p>\n</blockquote>\n<p>利用记录型信号量解决：</p>\n<p>基本工作：</p>\n<ul>\n<li>生产者生产消息放入缓冲区</li>\n<li>消费者从缓冲区取走消息</li>\n</ul>\n<p>互斥：缓冲池是临界资源，设置信号量mutex=1</p>\n<p>同步: (生产者)有空缓冲区放产品，唤醒等待的消费者进程；无空缓冲区则阻塞。<br>\n(消费者)有产品取走，唤醒等待的生产者进程；无产品则阻塞。</p>\n<p>实现同步需要设置两个信号量empty=n,full=0</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">producer</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  producer an item nextp;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  wait(empty);</span><br><span class=\"line\">  wait(mutex);</span><br><span class=\"line\">  buffer[in] = netxp;</span><br><span class=\"line\">  in = (in + <span class=\"number\">1</span>) % n;</span><br><span class=\"line\">  signal(mutex);</span><br><span class=\"line\">  signal(full);</span><br><span class=\"line\">&#125;<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">consumer</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">do</span>&#123;</span><br><span class=\"line\">    wait(full);</span><br><span class=\"line\">    wait(mutex);</span><br><span class=\"line\">    nextc = buffer[out];</span><br><span class=\"line\">    out = (out + <span class=\"number\">1</span>) % n;</span><br><span class=\"line\">    signal(mutex);</span><br><span class=\"line\">    signal(empty);</span><br><span class=\"line\">    consumer the item in nextc;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">  &#125;<span class=\"keyword\">while</span>(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">  cobegin</span><br><span class=\"line\">    producer(); consumer();</span><br><span class=\"line\">  coend</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>作业<br>\n进程的概念（定义） 状态 特征 标志 进程与程序的关系（异同）</p>\n"},{"title":"网络安全复习","copyright":true,"abbrlink":"d3217c3b","notshow":false,"description":"网络安全课本内容整理","sticky":null,"date":"2018-11-18T10:51:08.000Z","password":null,"image":["https://data.singlelovely.cn/CoverPicture/d3217c3b.jpg!CoverPicture"],"photos":[],"_content":"\n{% meting \"2426530028\" \"netease\" \"playlist\" \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\" %}\n\n# 第一章 网络安全特性概述\n\n### 网络安全含义\n\n<span id=\"inline-blue\">网络安全</span>泛指网络系统的硬件、软件及其系统中的数据受到保护，不因偶然的或者恶意的原因而遭到破坏、更改和泄漏，系统能够连续可靠正常地运行，网络服务不被中断。\n\n网络安全的内容包括系统安全和信息安全两部分。\n\n* 系统安全主要指网络设备的硬件、操作系统和应用软件的安全。\n* 信息安全主要指各种信息的存储、传输安全，具体体现在信息的保密性、完整性及不可抵赖性方面。\n\n从内容看，网络安全大致包括4个方面 :\n\n<span id=\"inline-toc\">1.</span> 物理实体安全 ：设备安全；存储介质安全；环境安全\n\n<span id=\"inline-toc\">2.</span> 软件安全：\n\n   - 软件本身是安全的；\n   - 保护网络系统不被非法侵入，系统软件与应用软件不被非法复制、篡改、不受病毒的侵害等。 \n\n<span id=\"inline-toc\">3.</span> 数据安全 \n\n   - 保护网络中数据不被非法存取和破坏，确保其完整性和机密性。\n\n<span id=\"inline-toc\">4.</span> 安全管理 \n\n- 网络安全管理是以保护网络安全技术为基础，配以行政手段的管理活动。\n\n### 两种网络安全基本模型与攻击方式\n\n- 网络安全基本模型：通信主体双方、攻击者、可信第三方。\n- P2DR模型：Policy策略，Protection防护、Detection检测、Response响应\n\n### 网络攻击类型\n\n<span id=\"inline-toc\">1.</span> 被动攻击\n\n- 只是窃听或监视数据传输，即取得中途的信息，这里的被动指攻击者不对数据进行任何修改。  \n\n<span id=\"inline-toc\">2.</span> 主动攻击\n\n- 是指以某种方式修改消息内容或生成假消息。这种攻击很难防止，但容易被发现和恢复。这些攻击包括中断、篡改和伪造。\n\n### 网络安全的服务与机制\n\n#### 五大网络安全服务\n\n* 鉴别服务：\n\t- 对对方实体的合法性、真实性进行确认，以防假冒。这里的实体可以是用户或代表用户的进程。\n* 访问控制服务：\n\t- 用于防止未授权用户非法使用系统资源。它包括用户身份认证，用户的权限确认。\n\t- 在实际网络安全的应用中，为了提高效率，这种保护服务常常提供给用户组，而不是单个用户。\n* 数据完整性服务：\n\t- 阻止非法实体对交换数据的修改、插入和删除。\n* 数据保密性服务：\n\t- 防止网络中各个系统之间交换的数据被截获或被非法存取而造成泄密，提供加密保护。\n* 抗抵赖性服务：\n\t- 防止发送方在发送数据后否认自己发送过此数据，接收方在收到数据后否认自己收到过此数据或伪造接收数据。\n\n#### 八大网络安全机制\n\n* 加密机制：\n\t- 提供信息保密的核心方法，分为对称密钥算法和非对称密钥算法。\n* 访问控制机制：\n\t- 通过对访问者的有关信息进行检查来限制或禁止访问者使用资源的技术。\n\t- 访问控制还可以直接支持数据机密性、数据完整性、可用性，以及合法使用的安全目标。\n* 数据完整性机制：\n\t- 指数据不被增删改\n* 数字签名机制：\n\t- 作用类似于我们现实生活中的手写签名，具有鉴别作用。\n* 交换鉴别机制：\n\t- 通过互相交换信息的方式来确定彼此身份。\n\t* 用于交换鉴别的常用技术有以下几种：\n\t\t- ①口令，②密码技术，③特征实物，如指纹、声音频谱等\n * 公证机制：\n \t- 通过公证机构中转双方的交换信息，并提取必要的证据，日后一旦发生纠纷，就可以据此做出仲裁。\n * 流量填充机制：\n \t- 提供针对流量分析的保护，流量填充的实现方法是：随机生成数据并对其加密，再通过网络发送。\n* 路由控制机制：\n\t- 使得可以指定通过网络发送数据的路径。\n\n\n# 第三章 网络可用性实现机制与评价\n\n<span id=\"inline-blue\">网络可用性</span>是指网络可以提供正确服务的能力，它是为可修复系统提出的，是对系统服务正常和异常状态交互变化过程的一种量化，是网络可以被使用的概率。系统可靠性越高，可维护性越好则可用性越高。\n可靠性：提供正确服务的连续性，描述为系统在一个特定时间内能持续执行特定任务的概率，侧重分析服务正常运行的连续性。\n\n### 网络可用性保障机制\n\n- 网络可靠性+网络可维护性\n\t- 网络可靠性：避错机制+容错机制\n\t\t- 避错：通过改进硬件的制造工艺和设计，选择技术成熟可靠的软硬件等策略来防止网络系统的错误产生。\n\t\t- 硬件避错+软件避错+管理避错\n\t\t- 容错：在网络系统出错的情况下，通过外加冗余资源消除单点故障的措施使系统仍然能够正常工作。为了提高网络系统中的平均故障间隔时间，通过冗余手段来实现系统可靠性。\n\t\t- 硬件容错+软件容错+管理容错。\n\t- 网络可维护性：快速检错+快速排错\n\t\t- 检错：在网络出现故障时，故障管理系统能即使发现故障部位和原因。- 故障检测+故障诊断\n\t\t- 排错：网络出现故障时，逐一排除故障，恢复系统的可用性。\n\t\t- 分层故障排错法+分块故障排错法+分段故障排错法+替换法\n\n### 网络可用性A计算公式\n\n    A=MTBF/(MTBF+MTTR)x100%\n<span id=\"inline-purple\">MTBF：</span>平均无故障时间，反映网络系统的可靠性，取决于网络设备硬件和软件本身的质量，可靠性越高设备成本越高\n<span id=\"inline-purple\">MTTR：</span>平均修复时间，反映网络系统的可维护性，在MTBF一定的情况下，MTTR越小网络的可用性越大\n\n### 网络可用性量化评估的基本方法\n\n如果平均无故障时间(MTBF）远大于平均修复时间(MTTR)，那么系统的可用性将很高。\n\n如果平均修复时间很小，那么可用性也将很高。\n\n如果可靠性下降(MTBF变小），那么就需要减小MTTR （提高可维护性）才能达到同样的可用性。\n\n对一定的可用性，如果可靠性增长了，可维护性就不那么重要了。\n\n所以可以在可靠性和可维护性之间做出平衡来达到同样的可用性目的。\n\n### 设备串联形成的系统可用性评估方法\n\n设网络串联系统是由n个网络设备串联而成的，只要有一个设备不可用系统就是不可用的。\n\n假设整个系统的可用性是A，每个设备的可靠性为A~i~，整个系统可用是指系统中的每个设备都必须可用，其计算公式如下：\n\n![ ](https://data.singlelovely.cn/xsj/2018/11/23/图片11.png)\n\nn个设备串联的可用性会随着设备串联结构的增多越来越低，例如，假设每个设备可用性值是0.99，5个设备串联后的可用性接近0.95，10 个设备串联后的可用性就已经接近0.9。\n\n### 设备并联形成的系统可用性评估方法\n\n为增加系统的可用性，将多个设备并联起来，n个网络设备并联的可用性是指：\n\n- 在并联系统中，多个并联设备同时运行工作，只要有一个设备正常工作系统就是可用的。\n\n- 在并联系统中只有一个子系统是真正需要的，其余n-1个子系统都被称为冗余子系统。\n\n- 系统随着冗余子系统数量的增加，其平均无故障时间(MTBF)也随着增加。这样的并联结构的冗余的代价也是很高的。\n\n整个系统的可用性是A，每个设备的可靠性为A~i~，计算公式如下：\n\n![ ](https://data.singlelovely.cn/xsj/2018/11/23/图片22.png)\n\n# 第四章 网络访问的可控性实现机制与评价\n\n### 网络安全中网络访问的可控性概述\n\n- 网络访问的可控性：指控制网络信息的流向及用户的行为方式，是对所管辖的网络、主机和资源的访问行为进行有效的控制和管理。\n- 访问控制机制是网络安全的一种解决方案，在计算机网络安全中，有四类安全特性与访问控制有直接和间接关系：\n\t- 用户的可鉴别性、数据保密性、数据的完整性、网络的可用性\n    \n### 防火墙含义\n\n防火墙：在两个网络之间执行访问控制策略的一个或一组安全系统，可对整个网络进行访问控制。是一种计算机硬件和软件系统集合，是实现网络安全策略的有效工具之一。\n\n<div class=\"note primary\">分为硬件防火墙和软件防火墙。</div>\n\n常说的防火墙通指硬件防火墙\n\n<span id=\"inline-blue\">硬件防火墙：</span>路由器、计算机或二者的组合配上具有过滤功能的软件形成，软硬件结合打到隔离内外部网络的目的。价格较贵，效果较好\n\n<span id=\"inline-blue\">软件防火墙：</span>用纯软件的方式实现防火墙功能，价格便宜，但只能通过一定的规则来打到限制一些非法用户访问内部网的目的。\n\n防火墙技术\n    <span id=\"font-green\">防火墙基本技术</span>包括<span id=\"inline-green\">包过滤技术</span>、<span id=\"inline-green\">代理服务技术</span>和<span id=\"inline-green\">NAT技术</span>。\n\n<span id=\"inline-toc\">1．</span><span id=\"inline-green\">包过滤：</span>通过拦截数据包过滤掉不应入网的信息。在网络的出入口（如路由器上）对通过的数据包进行检测，满足条件的数据包才允许通过，否则抛弃。优点：用一个放在重要位置的包过滤路由器即可保护整个网络；不需用户软件支持，也不要对客户机进行特殊设置。缺点：配置包过滤规则比较困难，常会忽略建立一些必要规则，或错误配置了已有的规则，且易产生难以发现的冲突。\n\n<span id=\"inline-toc\">2．</span><span id=\"inline-green\">代理服务技术：</span>又称应用级网关，建立协议过滤和转发功能。包过滤只是在网络层拦截所有的信息流，代理服务可以进行身份认证等包过滤没有的控制功能，能力强，缺点是对用户不透明，速度慢。\n\n<span id=\"inline-toc\">3．</span><span id=\"inline-green\">NAT：</span><span id=\"font-green\">网络地址转换技术：</span>通过有限的全球唯一的IP地址（外部地址）作为中继，使计算机网内部使用的非全球位移的IP地址（内部地址）可以对Internet进行透明访问。打到屏蔽内部地址的作用，提高网络安全性，解决地址紧缺的问题。外部主机对内部主机的内部地址进行直接访问是不可能的，因此提高了网络安全性。\n\n### 防火墙体系结构\n\n防火墙体系结构一般有四种,安全程度递增的：过滤路由器结构、双穴主机结构、主机过滤结构、子网过滤结构。\n\n<span id=\"inline-toc\">1. </span>过滤路由器结构：最简单的防火墙结构，可以由厂家专门生产的过滤路由器来实现，也可由安装了具有过滤功能软件的普通路由器实现。过滤路由器防火墙作为内外连接的唯一通道，要求所有的报文都必须在此通过检查。\n\n<span id=\"inline-toc\">2. </span>双穴主机结构：围绕具有双重宿主的主机而构筑的。计算机至少有两个网络接口，同时连接两个不同的网络，这样的主机可以充当与这些接口相连的网络之间的路由器，并能够从一个网络到另一个网络发送IP数据包。防火墙内部的网络系统能与双重宿主主机通信，同时防火墙外部在Internet上的网络系统也能与双重宿主主机通信。通过双重宿主主机进行控制和代理，防火墙内外的计算机便可进行通信。\n\n<span id=\"inline-toc\">3. </span>主机过滤结构：由内部网中提供安全保障的主机（堡垒主机)，加上一台单独的过滤路由器，一起构成该结构的防火墙。它既有主机控制又有路由器过滤，因此称为主机过滤结构。又分为单宿堡垒主机和双宿堡垒主机，单宿堡垒主机只有一个网卡连接在内部网上，双宿堡垒主机有两个网卡：一个连接在内部网上，另一个连接在路由器上，具有更好的安全性。\n\n<span id=\"inline-toc\">4. </span>子网过滤结构：添加了额外的安全层到主机过滤体系结构中，即通过添加一个称为参数网络的网络，更进一步地把内部网络与Internet隔离开。\n\n### 系统资源访问控制的分类\n\n<span id=\"inline-toc\">1．</span>访问控制的方式：分为自主访问控制和强制访问控制。\n\n<span id=\"inline-purple\">自主访问控制：</span>允许用户可以自主地在系统中规定谁可以存取它拥有的资源实体。有权访问且可以授权或收权其他用户。可以非常灵活地对策略进行调整。由于其易用性与可扩展性，自主访问控制机制经常被用于商业系统。\n\n<span id=\"inline-purple\">强制访问控制：</span>用户权限和文件安全属性都是固定的，由系统决定一个用户对某个客体能否实行访问。\n\n<span id=\"inline-toc\">2．</span>访问控制的主体：分为基于用户的访问控制和基于角色的访问控制。\n\n<span id=\"inline-purple\">基于用户：</span>指每个用户都分配其权限，缺点是用户太多，可扩展性差。\n\n<span id=\"inline-purple\">基于角色：</span>是在用户和访问许可权之间引入角色的概念，用户与特定的一个或多个角色相联系，角色再与一个或多个访问许可权相联系，从而实现对用户的访问控制。角色可以根据实际的工作需要生成或取消。\n\n# 第五章 数据保密性实现机制与评价\n\n<span id=\"inline-blue\">数据保密性</span>在网络安全中，数据的保密性是指为了防止网络中各个系统之间交换的数据被未授权的实体截获或被非法存取造成泄密而提供的加密保护。\n\n### 基本加密技术与评价\n\n<span id=\"font-green\">替换加密：</span>明文消息的字符换成另一个字符、数字、符号。不一定替换成原字符集，同时也可以一对多替换。\n\n<span id=\"font-green\">置换加密：</span>对明文字幕重新进行排列，字母本身不变。\n\n### 加密算法分类\n\n<span id=\"inline-toc\">1. </span>按密码体制：对称密钥、非对称密钥\n\n<span id=\"inline-green\">对称密钥：</span>同一个密钥加密解密，<span id=\"font-blue\">应用：</span>数据加密标准DES、高级加密标准AES。<span id=\"font-blue\">优点：</span>速度快；<span id=\"font-blue\">缺点：</span>用户必须让接收人知道自己用的密钥，需双方共同保密密钥。密钥发布时还需防止任何攻击者发现或窃听密钥。\n\n<span id=\"inline-green\">非对称密钥：</span>用公钥加密的结果只能用私钥解密，用私钥加密的结果只能用公钥解密，公钥不能推导出来私钥。<span id=\"font-blue\">优点：</span>加密解密能力分开，实现多个用户加密的消息只能由一个用户解读，或一个用户加密的消息可由多个用户解读。可扩展性强。目前应用最多的公开密钥系统有RSA\n\n<span id=\"inline-toc\">2.</span>按加密方式分类：序列（流）加密法、分组（块）加密法\n\n<span id=\"inline-green\">序列加密：</span>使用一次只对明文中的单个位或字节进行运算的算法。有点：产生流密钥序列简单、加密解密过程均不需复杂算法；缺点：明文、密文和密钥流任意两者可以很容易求得第三者，且很难得到完全随机的密钥流。密钥变换过于频繁，密钥分配较难。目前应用最广泛的序列密码：RC4\n\n<span id=\"inline-green\">分组加密法：</span>是将明文按一定的位长分组，这个固定长度叫块大小。一次加密明文中的一个块。具有较强的抗攻击能力。块越大保密性越好，但加解密算法和设备越复杂，块大小一般64或128字节。应用：DES、IDEA、AES、TEA。\n\n### 数据加密标准DES\nDES：是一个分组加密算法，以64位为分组对数据加密；是一个对称算法，加密解密是同一个密钥。\n\n<span id=\"inline-blue\">6步：</span>\n\n<span id=\"inline-toc\">1.</span> 输入64位明文（56位密钥+8位奇偶校验）\n\n<span id=\"inline-toc\">2. </span>64位明文块送入初始置换函数进行初始置换\n\n<span id=\"inline-toc\">3. </span>置换后的内容分为两块，左明文和右明文，各32位\n\n<span id=\"inline-toc\">4. </span>两块明文都要经过16轮加密，每一轮都进行替换与置换操作\n\n<span id=\"inline-toc\">5. </span>将左右明文重新连接起来，对组成的块进行最终置换\n\n<span id=\"inline-toc\">6. </span>输出64位明文\n\n{% cq %}加密解密过程的唯一差别是密钥部分倒过来。{% endcq %}\n\n### 数据加密标准DES的分析评价\n\n具有极高的安全性，目前为止，出了穷举搜索法对算法进行攻击，没有发现更有效的方法。通过利用多种加密思想实现安全性：替换机制、置换机制、进行多轮反复加密、在替换和置换中同时揉进了压缩与扩展操作、使用了异或的加密操作、算法不公开S盒的设计准则、算法具有雪崩效应。\n\n<span id=\"inline-green\">雪崩效应：</span>明文的一点点变动就会引起密文发生大的变化。\n\n<span id=\"font-blue\">DES密钥发布问题</span>也是决定DES安全程度的重要问题，基本解决方法：\n\n<span id=\"inline-toc\">1.</span> 根据密钥交换协议/算法来实现密钥的发布问题，双方可以用这个方法确定对称密钥，然后用这个密钥进行加密解密；\n\n<span id=\"inline-toc\">2.</span> 结合非对称密钥，先利用接收方得公钥对DES使用的密钥进行加密，然后再利用DES进行加密。\n\n<div class = \"note info\">\nDES可扩展性不好，但密文长度等于明文长度，加密的信息有效率较高。<br>DES工作算法模式：电子编码簿、加密块链接、加密反馈、输出反馈。\n</div>\n\n### RSA加密机制分析与评价\n\n<div class = \"note success\">\nRSA：最广泛接受的公钥方案。\n</div>\n\n算法本身简单，关键选择正确密钥。不存在密钥的发布问题。可扩展性比DES好，信息有效率没有DES高。RSA算法比DES算法速度慢很多\n\n### RSA与DES结合加密机制与评价\n\n<span id=\"inline-toc\">1.</span> 性能和信息有效率得到改善：用对称密钥加密算法和一次性会话密钥加密明文：速度快、明文小\n\n<span id=\"inline-toc\">2.</span> 解决了密钥的发布问题\n\n<span id=\"inline-toc\">3.</span> RSA的中间人攻击：指中间人不需要知道发送方和接收方的思瑶就可以非法查看双方的内容。主要漏洞是公钥被非法替换和调包。\n\n# 第六章 数据完整性 实现机制与评价\n\n### 数据完整性 \n\n<span id=\"inline-blue\">数据完整性</span>是防止非法实体对交换数据的修改、插入、替换和删除，或者如果被修改、插入、替换和删除时可以被检测出来。\n\n在常规的网络安全中，可以通过消息认证模式来保证，基本思路是通过增加额外的信息验证码来对数据完整性验证。  \n\n<span id=\"inline-green\">碰撞：</span>对于两个不同的消息，如果它们的验证码值相同，则发生了碰撞。\n\n### 基于消息摘要的完整性验证与评价\n\n<div class=\"note success\">最常用的消息完整性验证方法。</div>\n\n+ 消息摘要一般通过摘要函数生成。\n\n- 哈希函数是生成消息摘要常用的算法。\n\n- 常用算法：MD4，MD5，SHA-1\n\n如果两个消息得到相同的消息摘要，则称为<span id = \"font-green\">冲突。</span>\n\n<span id = \"font-blue\">优点：</span>双方不需要共享密钥；消息摘要与信息密切关联，接受者能够确信信息为被篡改过；信息有效率较高。\n\n<span id=\"font-blue\">缺点：</span>若攻击者修改网络传输的信息部分同时也根据哈希函数重新计算消息摘要并替换，这时验证机制检测不出消息是否是伪造的，只知道是否完整。\n\n### 基于消息摘要与对称密钥加密的完整性验证机制与评价\n\n假设A是发送方，B是接收方，A要发送的消息是M0，A与B共享密钥K，产生摘要的函数为H。\n\n- 第1步：A用消息摘要算法H计算信息M0的消息摘要MD0。\n- 第2步：A将M0、MD0合在一起，用K加密信息，通过网络发送给B。\n- 第3步：B收到加密的信息后，用同一密钥K把密文解密，并将=者分开，分别设为M1和MD1。\n- 第4步：B用与原始信息相同的消息摘要计算方法H重新计算信息M1的消息摘要MD2。\n- 第5步：B将计算的消息摘要MD2同分离出的消息摘要MD1进行对比，如果相等，B断定信息是完整的，如果不相等，则B断定信息遭到篡改。\n    \n<span id=\"font-blue\">优点：</span>\n- 该机制防止了攻击者篡改信息的攻击。\n \t- 如果攻击者篡改了消息，则B 自己计算的消息摘要MD2同分离出来的消息摘要MD1就不相等了。\n- 也防止了攻击者同时把信息部分和消息摘要部分替换并且保持它们之间的正确匹配关系的攻击。\n\t- 因为密钥K只有双方知道，攻击者同时替换后没办法再用双方的密钥K重新加密。在这种机制中，参照对象是消息摘要。\n\n<span id=\"font-blue\">缺点与改进：</span>\n- 机制的前提是需要双方共享对称密钥K，存在密钥发布问题。\n- 可以用非对称密钥加密体制加密信息\n- 对合并后的信息全部用非对称密钥加密将导致加密的速度过慢，实用性较差\n- 采用对称密钥体制和非对称密钥结合的方法解决密钥的发布问题，就产生基于非对称密钥和对称密钥结合的完整性验证机制。\n    \n\n#### MD5消息摘要计算算法与评价\n\nMD5是计算机安全领域广泛使用的一种哈希函数，用以提供消息的完整性保护，把一个任意长的信息变化产生一个128位的消息摘要。除了满足能满足完成完整性验证必须的要求外，还效率高，提高了完整性验证的性能。\n\n<span id = \"inline-blue\">步骤：</span>\n\nMD5将消息分为若干个512位分组（大块）来处理输入的消息，且每一分组又被划分为16个32位子分组（子块），经过了一系列的处理后，算法的输出由四个32位分组组成，将这四个分组链接生成一个128位的消息摘要。\n\n对于每个大块，信息从512位压缩为128位，位数变为1/4，每一轮前初始化四个32位的固定值的链接量，四个组合在一起正好是128位。\n\nMD5以32位运算为基础，加密有四轮，每轮运算16次。每一轮中每个小块按不同顺序都参与运算，四轮的第一步进行不同的P处理，其他步骤相同。\n\n每一轮的操作也称压缩操作。如下所示：\n- 第1步：P处理首先处理b、c、d。（共abcd四个变量）\n- 第2步：变量a加进P处理的输出\n- 第3步：消息子块加进第2步输出\n- 第4步：常量加进第3步输出\n- 第5步：第4步的输出（abcd内容）循环左移S位\n- 第6步：变量b加进第5步输出\n- 第7步：第6步 的输出赋值给变量a\n- 最后的输出成为下一步的新的abcd。\n\n<span id = \"inline-blue\">评价：</span>\nMD5的核心处理是重复进行位逻辑运算，使得最终输出的摘要中的每一位都与输入消息中所有位相关，达到很好的混淆效果，具有雪崩现象。\n\n# 第七章 用户身份可鉴别性实现机制与评价\n\n### 用户身份可鉴别性\n\n<span id = \"inline-blue\">用户身份可鉴别性：</span>指用户在使用网络资源时，通过对用户身份信息的交换对用户身份的真实性进行确认的过程。\n涉及对象：①提供身份信息的被验证者；②检验身份信息正确性和合法性的认证服务器；③提供仲裁和调解的可信第三方；④企图进行窃听和伪装身份的攻击者；⑤认证设备。\n\n### 用户身份鉴别因素的数量和种类\n\n用户身份鉴别一般通过多个因素来共同鉴别用户身份的真伪，称为多因子鉴别， 最常见的是以下三因子：\n\n<span id=\"inline-toc\">1.</span> 用户所知道的东西，如口令、密码等：\n\n<span id=\"inline-toc\">2.</span> 用户所拥有的东西，如信用卡或U盾等：\n\n<span id=\"inline-toc\">3.</span> 用户所具有的东西，如声音、指纹、视网膜、签字或笔迹等。\n    \n### 数字证书\n\n- 为了进行有效的身份鉴别，类似现实生活中的身份证，在网络中每个用户也发一个网络身份证，即数字证书。由一个可信的权威机构发行。\n- 是一种计算机文件，文件扩展名：.cer（certificate）。\n- 证明证书中的用户与证书中的公钥关联的正确性。\n\n\n### 数字证书的内容\n\n最简单的证书至少包括<span id = \"inline-blue\">三项基本内容：</span><span id = \"inline-green\">公钥</span>、<span id = \"inline-green\">用户名</span>（<span id = \"font-green\">也称主体名</span>）和<span id = \"inline-green\">证书机构的数字签名</span>。\n\n一般情况下证书中还包括<span id = \"font-green\">序号</span>、<span id = \"font-green\">起始日期</span>、 <span id = \"font-green\">终止日期</span>、<span id = \"font-green\">签发者名</span>等信息。\n\n证书的内容和格式遵循X.509国际标准，它于1993和1995年做了两次修订。这个标准的最新版本是X.509V3。在数字证书中用户名被称为主题名，这是因为数字证书不仅可以发给个体用户，还可以发给组织，最后一个字段是证书机构的签名。\n\n### 生成数字证书的参与方\n\n生成数字证书的参与方至少需要两方参与，即主体（最终用户）和签发者（证书机构CA)。证书生成与管理还可能涉及第三方——注册机构RA。\n\n<span id=\"inline-toc\">1.</span> 主体：申请数字证书的人或者组织，主要任务是产生公／私钥密钥对、提出申请和提供与申请者相关的证明材料等。\n\n<span id=\"inline-toc\">2.</span> 注册机构及作用：从最终用户角度看，证书机构与注册机构差别不大。注册机构是用户与证书机构之间的中间实体，帮助证书机构完成日常工作\n\n- 注册机构通常提供下列服务：\n\t- ①接收与验证最终用户的注册信息：\n\t- ②为最终用户生成密钥：\n\t- ③接收与授权证书吊销请求。\n\n- 好处：\n\t >证书机构成为被隔离的实体，更不容易受到安全攻击。最终用户只能通过注册机构与证书机构通信，因此可以将注册机构与证书机构通信高度保护，使这部分连接很难攻击。但注册机构主要为了帮助证书机构与最终用户间交互，不能签发证书，只能由证书机构签发。\n\n<span id=\"inline-toc\">3.</span> 证书机构及作用：证书机构是公钥基础设施的核心机构，它的作用包括：\n\n&emsp;&emsp;① 证书的数字签名与发放，用户相信证书的真假主要看是不是经过可信的CA签名，因此CA对证书的签名很重要。为了防止数字凭证的伪造，证书机构的公共密钥必须是可靠的，证书机构必须公布其公钥。\n\n&emsp;&emsp;② 证书的管理工作，如跟踪证书状态，对因故无效的证书发出吊销通知等。\n    \n<span id = \"inline-blue\">证书的生成（5步）</span>\n\n- 第1步：密钥生成：自己用软件生成；注册机构为用户生成。\n- 第2步：主体注册：用户提供共相关的信息和证明材料。\n- 第3步：由RA完成验证：验证用户身份材料是否真实可靠；验证用户自己持有的私钥跟向注册机构提供的公钥是否相对应。\n- 第4步：数字证书的生成\n- 第5步：数字证书的分发\n\n### 用户身份可鉴别性机制与评价\n\n<span id=\"inline-toc\">1.</span> 基于口令的用户身份鉴别机制：最常用的鉴别形式\n\n&emsp;<span id = \"font-green\">优点：</span>简单易用，在安全性要求不高的情况下易于实现\n\n&emsp;<span id = \"font-red\">缺点：</span>数据库存放的是明文口令；口令以明文形式传递给服务器；口令相对固定。\n\n<span id=\"inline-toc\">2.</span> 基于口令摘要的用户身份鉴别机制：\n\n&emsp;<span id = \"font-green\">优点：</span>解决了基于口令的机制的两打安全隐患，在网络截获、副武器攻击和口令猜测方面都保证了用户鉴别的安全。\n\n&emsp;<span id = \"font-red\">缺点：</span>无法阻止重放攻击。服务器不能鉴别出登录请求来自合法用户还是攻击者。\n\n<span id=\"inline-toc\">3.</span> 基于随机挑战的用户身份鉴别机制：用户用口令摘要加密随机挑战\n\n&emsp;<span id = \"font-green\">优点：</span>解决了基于口令摘要的重放攻击，增加了随机性，提高了安全性。\n\n&emsp;<span id = \"font-red\">缺点：</span>比基于摘要的用户鉴别机制多了一次交互，同时需要客户本地计算机计算口令摘要，并用计算出来的口令摘要加密从服务器收到的随机挑战，存在密钥的分发问题。\n\n# 第八章 用户不可抵赖性实现机制\n\n### 用户不可抵赖性\n\n<span id = \"inline-blue\">不可抵赖性：</span>旨在生成、手机、维护有关已声明的事件或动作的证据，并使该证据可得和缺人，一次来解决关于此事件或动作发生或未发生而引起的争议。\n\n{% cq %}主要通过数字签名来保证。{% endcq %}\n\n<span id = \"font-blue\">包括两个方面：</span><span id = \"font-green\">发送信息方不可抵赖</span>；<span id = \"font-green\">信息的接收方不可抵赖</span>。\n\n一个完整的抗抵赖性机制包括两部分：<span id = \"font-green\">签名部分</span>+<span id = \"font-green\">验证部分</span>：\n\n签名部分密钥必须秘密、独有，只有签名人掌握；\n\n验证部分的密钥应当公开，以便于他人进行验证。\n\t\n### 数字签名\n\n数字签名：附加在数据单元上的一些数据，或是对数据单元所做的密码变换，这种数据或变换允许数据单元的接收者用于确认数据单元的来源和数据单元的完整性，并保护数据，防止被他人伪造。\n\n一个签名算法至少应满足三个条件：\n\n<span id=\"inline-toc\">1.</span> 签名者时候不能否认自己的签名\n\n<span id=\"inline-toc\">2.</span> 接收者能验证签名，而其他任何人都不能伪造签名；\n\n<span id=\"inline-toc\">3.</span> 当双方关于签名的真伪性发生争执时，第三方能解决争执。\n\n<span id = \"inline-blue\">数字签名的作用：</span><span id = \"font-green\">不可抵赖</span>、<span id = \"font-green\">身份认证</span>、<span id = \"font-green\">防假冒</span>\n\n<div class=\"note default\">手写签名与数字签名的区别：</span>\n\n1. 签署文件方面的不同：手写签名是所签文件的物理部分，但数字签名并不是，它必须设法把签名绑到所签文件上。\n2. 验证方面的不同：手写签名是通过和真实的手写签名比较来验证，很不安全且容易伪造；数字签名通过一个公开的验证算法来验证，任何人都能验证。\n3. 拷贝方面不同：数字签名消息的复制品与其本身是一样的，而手写签名纸质文件的复制品与原品不同。\n","source":"_posts/网络安全复习.md","raw":"---\ntitle: 网络安全复习\ncopyright: true\nabbrlink: d3217c3b\nnotshow: false\ntags:\n  - 网络\ncategories: 网络\ndescription: 网络安全课本内容整理\nsticky: \ndate: 2018-11-18 18:51:08\npassword:\nimage:\n- \"https://data.singlelovely.cn/CoverPicture/d3217c3b.jpg!CoverPicture\"\nphotos:\n---\n\n{% meting \"2426530028\" \"netease\" \"playlist\" \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\" %}\n\n# 第一章 网络安全特性概述\n\n### 网络安全含义\n\n<span id=\"inline-blue\">网络安全</span>泛指网络系统的硬件、软件及其系统中的数据受到保护，不因偶然的或者恶意的原因而遭到破坏、更改和泄漏，系统能够连续可靠正常地运行，网络服务不被中断。\n\n网络安全的内容包括系统安全和信息安全两部分。\n\n* 系统安全主要指网络设备的硬件、操作系统和应用软件的安全。\n* 信息安全主要指各种信息的存储、传输安全，具体体现在信息的保密性、完整性及不可抵赖性方面。\n\n从内容看，网络安全大致包括4个方面 :\n\n<span id=\"inline-toc\">1.</span> 物理实体安全 ：设备安全；存储介质安全；环境安全\n\n<span id=\"inline-toc\">2.</span> 软件安全：\n\n   - 软件本身是安全的；\n   - 保护网络系统不被非法侵入，系统软件与应用软件不被非法复制、篡改、不受病毒的侵害等。 \n\n<span id=\"inline-toc\">3.</span> 数据安全 \n\n   - 保护网络中数据不被非法存取和破坏，确保其完整性和机密性。\n\n<span id=\"inline-toc\">4.</span> 安全管理 \n\n- 网络安全管理是以保护网络安全技术为基础，配以行政手段的管理活动。\n\n### 两种网络安全基本模型与攻击方式\n\n- 网络安全基本模型：通信主体双方、攻击者、可信第三方。\n- P2DR模型：Policy策略，Protection防护、Detection检测、Response响应\n\n### 网络攻击类型\n\n<span id=\"inline-toc\">1.</span> 被动攻击\n\n- 只是窃听或监视数据传输，即取得中途的信息，这里的被动指攻击者不对数据进行任何修改。  \n\n<span id=\"inline-toc\">2.</span> 主动攻击\n\n- 是指以某种方式修改消息内容或生成假消息。这种攻击很难防止，但容易被发现和恢复。这些攻击包括中断、篡改和伪造。\n\n### 网络安全的服务与机制\n\n#### 五大网络安全服务\n\n* 鉴别服务：\n\t- 对对方实体的合法性、真实性进行确认，以防假冒。这里的实体可以是用户或代表用户的进程。\n* 访问控制服务：\n\t- 用于防止未授权用户非法使用系统资源。它包括用户身份认证，用户的权限确认。\n\t- 在实际网络安全的应用中，为了提高效率，这种保护服务常常提供给用户组，而不是单个用户。\n* 数据完整性服务：\n\t- 阻止非法实体对交换数据的修改、插入和删除。\n* 数据保密性服务：\n\t- 防止网络中各个系统之间交换的数据被截获或被非法存取而造成泄密，提供加密保护。\n* 抗抵赖性服务：\n\t- 防止发送方在发送数据后否认自己发送过此数据，接收方在收到数据后否认自己收到过此数据或伪造接收数据。\n\n#### 八大网络安全机制\n\n* 加密机制：\n\t- 提供信息保密的核心方法，分为对称密钥算法和非对称密钥算法。\n* 访问控制机制：\n\t- 通过对访问者的有关信息进行检查来限制或禁止访问者使用资源的技术。\n\t- 访问控制还可以直接支持数据机密性、数据完整性、可用性，以及合法使用的安全目标。\n* 数据完整性机制：\n\t- 指数据不被增删改\n* 数字签名机制：\n\t- 作用类似于我们现实生活中的手写签名，具有鉴别作用。\n* 交换鉴别机制：\n\t- 通过互相交换信息的方式来确定彼此身份。\n\t* 用于交换鉴别的常用技术有以下几种：\n\t\t- ①口令，②密码技术，③特征实物，如指纹、声音频谱等\n * 公证机制：\n \t- 通过公证机构中转双方的交换信息，并提取必要的证据，日后一旦发生纠纷，就可以据此做出仲裁。\n * 流量填充机制：\n \t- 提供针对流量分析的保护，流量填充的实现方法是：随机生成数据并对其加密，再通过网络发送。\n* 路由控制机制：\n\t- 使得可以指定通过网络发送数据的路径。\n\n\n# 第三章 网络可用性实现机制与评价\n\n<span id=\"inline-blue\">网络可用性</span>是指网络可以提供正确服务的能力，它是为可修复系统提出的，是对系统服务正常和异常状态交互变化过程的一种量化，是网络可以被使用的概率。系统可靠性越高，可维护性越好则可用性越高。\n可靠性：提供正确服务的连续性，描述为系统在一个特定时间内能持续执行特定任务的概率，侧重分析服务正常运行的连续性。\n\n### 网络可用性保障机制\n\n- 网络可靠性+网络可维护性\n\t- 网络可靠性：避错机制+容错机制\n\t\t- 避错：通过改进硬件的制造工艺和设计，选择技术成熟可靠的软硬件等策略来防止网络系统的错误产生。\n\t\t- 硬件避错+软件避错+管理避错\n\t\t- 容错：在网络系统出错的情况下，通过外加冗余资源消除单点故障的措施使系统仍然能够正常工作。为了提高网络系统中的平均故障间隔时间，通过冗余手段来实现系统可靠性。\n\t\t- 硬件容错+软件容错+管理容错。\n\t- 网络可维护性：快速检错+快速排错\n\t\t- 检错：在网络出现故障时，故障管理系统能即使发现故障部位和原因。- 故障检测+故障诊断\n\t\t- 排错：网络出现故障时，逐一排除故障，恢复系统的可用性。\n\t\t- 分层故障排错法+分块故障排错法+分段故障排错法+替换法\n\n### 网络可用性A计算公式\n\n    A=MTBF/(MTBF+MTTR)x100%\n<span id=\"inline-purple\">MTBF：</span>平均无故障时间，反映网络系统的可靠性，取决于网络设备硬件和软件本身的质量，可靠性越高设备成本越高\n<span id=\"inline-purple\">MTTR：</span>平均修复时间，反映网络系统的可维护性，在MTBF一定的情况下，MTTR越小网络的可用性越大\n\n### 网络可用性量化评估的基本方法\n\n如果平均无故障时间(MTBF）远大于平均修复时间(MTTR)，那么系统的可用性将很高。\n\n如果平均修复时间很小，那么可用性也将很高。\n\n如果可靠性下降(MTBF变小），那么就需要减小MTTR （提高可维护性）才能达到同样的可用性。\n\n对一定的可用性，如果可靠性增长了，可维护性就不那么重要了。\n\n所以可以在可靠性和可维护性之间做出平衡来达到同样的可用性目的。\n\n### 设备串联形成的系统可用性评估方法\n\n设网络串联系统是由n个网络设备串联而成的，只要有一个设备不可用系统就是不可用的。\n\n假设整个系统的可用性是A，每个设备的可靠性为A~i~，整个系统可用是指系统中的每个设备都必须可用，其计算公式如下：\n\n![ ](https://data.singlelovely.cn/xsj/2018/11/23/图片11.png)\n\nn个设备串联的可用性会随着设备串联结构的增多越来越低，例如，假设每个设备可用性值是0.99，5个设备串联后的可用性接近0.95，10 个设备串联后的可用性就已经接近0.9。\n\n### 设备并联形成的系统可用性评估方法\n\n为增加系统的可用性，将多个设备并联起来，n个网络设备并联的可用性是指：\n\n- 在并联系统中，多个并联设备同时运行工作，只要有一个设备正常工作系统就是可用的。\n\n- 在并联系统中只有一个子系统是真正需要的，其余n-1个子系统都被称为冗余子系统。\n\n- 系统随着冗余子系统数量的增加，其平均无故障时间(MTBF)也随着增加。这样的并联结构的冗余的代价也是很高的。\n\n整个系统的可用性是A，每个设备的可靠性为A~i~，计算公式如下：\n\n![ ](https://data.singlelovely.cn/xsj/2018/11/23/图片22.png)\n\n# 第四章 网络访问的可控性实现机制与评价\n\n### 网络安全中网络访问的可控性概述\n\n- 网络访问的可控性：指控制网络信息的流向及用户的行为方式，是对所管辖的网络、主机和资源的访问行为进行有效的控制和管理。\n- 访问控制机制是网络安全的一种解决方案，在计算机网络安全中，有四类安全特性与访问控制有直接和间接关系：\n\t- 用户的可鉴别性、数据保密性、数据的完整性、网络的可用性\n    \n### 防火墙含义\n\n防火墙：在两个网络之间执行访问控制策略的一个或一组安全系统，可对整个网络进行访问控制。是一种计算机硬件和软件系统集合，是实现网络安全策略的有效工具之一。\n\n<div class=\"note primary\">分为硬件防火墙和软件防火墙。</div>\n\n常说的防火墙通指硬件防火墙\n\n<span id=\"inline-blue\">硬件防火墙：</span>路由器、计算机或二者的组合配上具有过滤功能的软件形成，软硬件结合打到隔离内外部网络的目的。价格较贵，效果较好\n\n<span id=\"inline-blue\">软件防火墙：</span>用纯软件的方式实现防火墙功能，价格便宜，但只能通过一定的规则来打到限制一些非法用户访问内部网的目的。\n\n防火墙技术\n    <span id=\"font-green\">防火墙基本技术</span>包括<span id=\"inline-green\">包过滤技术</span>、<span id=\"inline-green\">代理服务技术</span>和<span id=\"inline-green\">NAT技术</span>。\n\n<span id=\"inline-toc\">1．</span><span id=\"inline-green\">包过滤：</span>通过拦截数据包过滤掉不应入网的信息。在网络的出入口（如路由器上）对通过的数据包进行检测，满足条件的数据包才允许通过，否则抛弃。优点：用一个放在重要位置的包过滤路由器即可保护整个网络；不需用户软件支持，也不要对客户机进行特殊设置。缺点：配置包过滤规则比较困难，常会忽略建立一些必要规则，或错误配置了已有的规则，且易产生难以发现的冲突。\n\n<span id=\"inline-toc\">2．</span><span id=\"inline-green\">代理服务技术：</span>又称应用级网关，建立协议过滤和转发功能。包过滤只是在网络层拦截所有的信息流，代理服务可以进行身份认证等包过滤没有的控制功能，能力强，缺点是对用户不透明，速度慢。\n\n<span id=\"inline-toc\">3．</span><span id=\"inline-green\">NAT：</span><span id=\"font-green\">网络地址转换技术：</span>通过有限的全球唯一的IP地址（外部地址）作为中继，使计算机网内部使用的非全球位移的IP地址（内部地址）可以对Internet进行透明访问。打到屏蔽内部地址的作用，提高网络安全性，解决地址紧缺的问题。外部主机对内部主机的内部地址进行直接访问是不可能的，因此提高了网络安全性。\n\n### 防火墙体系结构\n\n防火墙体系结构一般有四种,安全程度递增的：过滤路由器结构、双穴主机结构、主机过滤结构、子网过滤结构。\n\n<span id=\"inline-toc\">1. </span>过滤路由器结构：最简单的防火墙结构，可以由厂家专门生产的过滤路由器来实现，也可由安装了具有过滤功能软件的普通路由器实现。过滤路由器防火墙作为内外连接的唯一通道，要求所有的报文都必须在此通过检查。\n\n<span id=\"inline-toc\">2. </span>双穴主机结构：围绕具有双重宿主的主机而构筑的。计算机至少有两个网络接口，同时连接两个不同的网络，这样的主机可以充当与这些接口相连的网络之间的路由器，并能够从一个网络到另一个网络发送IP数据包。防火墙内部的网络系统能与双重宿主主机通信，同时防火墙外部在Internet上的网络系统也能与双重宿主主机通信。通过双重宿主主机进行控制和代理，防火墙内外的计算机便可进行通信。\n\n<span id=\"inline-toc\">3. </span>主机过滤结构：由内部网中提供安全保障的主机（堡垒主机)，加上一台单独的过滤路由器，一起构成该结构的防火墙。它既有主机控制又有路由器过滤，因此称为主机过滤结构。又分为单宿堡垒主机和双宿堡垒主机，单宿堡垒主机只有一个网卡连接在内部网上，双宿堡垒主机有两个网卡：一个连接在内部网上，另一个连接在路由器上，具有更好的安全性。\n\n<span id=\"inline-toc\">4. </span>子网过滤结构：添加了额外的安全层到主机过滤体系结构中，即通过添加一个称为参数网络的网络，更进一步地把内部网络与Internet隔离开。\n\n### 系统资源访问控制的分类\n\n<span id=\"inline-toc\">1．</span>访问控制的方式：分为自主访问控制和强制访问控制。\n\n<span id=\"inline-purple\">自主访问控制：</span>允许用户可以自主地在系统中规定谁可以存取它拥有的资源实体。有权访问且可以授权或收权其他用户。可以非常灵活地对策略进行调整。由于其易用性与可扩展性，自主访问控制机制经常被用于商业系统。\n\n<span id=\"inline-purple\">强制访问控制：</span>用户权限和文件安全属性都是固定的，由系统决定一个用户对某个客体能否实行访问。\n\n<span id=\"inline-toc\">2．</span>访问控制的主体：分为基于用户的访问控制和基于角色的访问控制。\n\n<span id=\"inline-purple\">基于用户：</span>指每个用户都分配其权限，缺点是用户太多，可扩展性差。\n\n<span id=\"inline-purple\">基于角色：</span>是在用户和访问许可权之间引入角色的概念，用户与特定的一个或多个角色相联系，角色再与一个或多个访问许可权相联系，从而实现对用户的访问控制。角色可以根据实际的工作需要生成或取消。\n\n# 第五章 数据保密性实现机制与评价\n\n<span id=\"inline-blue\">数据保密性</span>在网络安全中，数据的保密性是指为了防止网络中各个系统之间交换的数据被未授权的实体截获或被非法存取造成泄密而提供的加密保护。\n\n### 基本加密技术与评价\n\n<span id=\"font-green\">替换加密：</span>明文消息的字符换成另一个字符、数字、符号。不一定替换成原字符集，同时也可以一对多替换。\n\n<span id=\"font-green\">置换加密：</span>对明文字幕重新进行排列，字母本身不变。\n\n### 加密算法分类\n\n<span id=\"inline-toc\">1. </span>按密码体制：对称密钥、非对称密钥\n\n<span id=\"inline-green\">对称密钥：</span>同一个密钥加密解密，<span id=\"font-blue\">应用：</span>数据加密标准DES、高级加密标准AES。<span id=\"font-blue\">优点：</span>速度快；<span id=\"font-blue\">缺点：</span>用户必须让接收人知道自己用的密钥，需双方共同保密密钥。密钥发布时还需防止任何攻击者发现或窃听密钥。\n\n<span id=\"inline-green\">非对称密钥：</span>用公钥加密的结果只能用私钥解密，用私钥加密的结果只能用公钥解密，公钥不能推导出来私钥。<span id=\"font-blue\">优点：</span>加密解密能力分开，实现多个用户加密的消息只能由一个用户解读，或一个用户加密的消息可由多个用户解读。可扩展性强。目前应用最多的公开密钥系统有RSA\n\n<span id=\"inline-toc\">2.</span>按加密方式分类：序列（流）加密法、分组（块）加密法\n\n<span id=\"inline-green\">序列加密：</span>使用一次只对明文中的单个位或字节进行运算的算法。有点：产生流密钥序列简单、加密解密过程均不需复杂算法；缺点：明文、密文和密钥流任意两者可以很容易求得第三者，且很难得到完全随机的密钥流。密钥变换过于频繁，密钥分配较难。目前应用最广泛的序列密码：RC4\n\n<span id=\"inline-green\">分组加密法：</span>是将明文按一定的位长分组，这个固定长度叫块大小。一次加密明文中的一个块。具有较强的抗攻击能力。块越大保密性越好，但加解密算法和设备越复杂，块大小一般64或128字节。应用：DES、IDEA、AES、TEA。\n\n### 数据加密标准DES\nDES：是一个分组加密算法，以64位为分组对数据加密；是一个对称算法，加密解密是同一个密钥。\n\n<span id=\"inline-blue\">6步：</span>\n\n<span id=\"inline-toc\">1.</span> 输入64位明文（56位密钥+8位奇偶校验）\n\n<span id=\"inline-toc\">2. </span>64位明文块送入初始置换函数进行初始置换\n\n<span id=\"inline-toc\">3. </span>置换后的内容分为两块，左明文和右明文，各32位\n\n<span id=\"inline-toc\">4. </span>两块明文都要经过16轮加密，每一轮都进行替换与置换操作\n\n<span id=\"inline-toc\">5. </span>将左右明文重新连接起来，对组成的块进行最终置换\n\n<span id=\"inline-toc\">6. </span>输出64位明文\n\n{% cq %}加密解密过程的唯一差别是密钥部分倒过来。{% endcq %}\n\n### 数据加密标准DES的分析评价\n\n具有极高的安全性，目前为止，出了穷举搜索法对算法进行攻击，没有发现更有效的方法。通过利用多种加密思想实现安全性：替换机制、置换机制、进行多轮反复加密、在替换和置换中同时揉进了压缩与扩展操作、使用了异或的加密操作、算法不公开S盒的设计准则、算法具有雪崩效应。\n\n<span id=\"inline-green\">雪崩效应：</span>明文的一点点变动就会引起密文发生大的变化。\n\n<span id=\"font-blue\">DES密钥发布问题</span>也是决定DES安全程度的重要问题，基本解决方法：\n\n<span id=\"inline-toc\">1.</span> 根据密钥交换协议/算法来实现密钥的发布问题，双方可以用这个方法确定对称密钥，然后用这个密钥进行加密解密；\n\n<span id=\"inline-toc\">2.</span> 结合非对称密钥，先利用接收方得公钥对DES使用的密钥进行加密，然后再利用DES进行加密。\n\n<div class = \"note info\">\nDES可扩展性不好，但密文长度等于明文长度，加密的信息有效率较高。<br>DES工作算法模式：电子编码簿、加密块链接、加密反馈、输出反馈。\n</div>\n\n### RSA加密机制分析与评价\n\n<div class = \"note success\">\nRSA：最广泛接受的公钥方案。\n</div>\n\n算法本身简单，关键选择正确密钥。不存在密钥的发布问题。可扩展性比DES好，信息有效率没有DES高。RSA算法比DES算法速度慢很多\n\n### RSA与DES结合加密机制与评价\n\n<span id=\"inline-toc\">1.</span> 性能和信息有效率得到改善：用对称密钥加密算法和一次性会话密钥加密明文：速度快、明文小\n\n<span id=\"inline-toc\">2.</span> 解决了密钥的发布问题\n\n<span id=\"inline-toc\">3.</span> RSA的中间人攻击：指中间人不需要知道发送方和接收方的思瑶就可以非法查看双方的内容。主要漏洞是公钥被非法替换和调包。\n\n# 第六章 数据完整性 实现机制与评价\n\n### 数据完整性 \n\n<span id=\"inline-blue\">数据完整性</span>是防止非法实体对交换数据的修改、插入、替换和删除，或者如果被修改、插入、替换和删除时可以被检测出来。\n\n在常规的网络安全中，可以通过消息认证模式来保证，基本思路是通过增加额外的信息验证码来对数据完整性验证。  \n\n<span id=\"inline-green\">碰撞：</span>对于两个不同的消息，如果它们的验证码值相同，则发生了碰撞。\n\n### 基于消息摘要的完整性验证与评价\n\n<div class=\"note success\">最常用的消息完整性验证方法。</div>\n\n+ 消息摘要一般通过摘要函数生成。\n\n- 哈希函数是生成消息摘要常用的算法。\n\n- 常用算法：MD4，MD5，SHA-1\n\n如果两个消息得到相同的消息摘要，则称为<span id = \"font-green\">冲突。</span>\n\n<span id = \"font-blue\">优点：</span>双方不需要共享密钥；消息摘要与信息密切关联，接受者能够确信信息为被篡改过；信息有效率较高。\n\n<span id=\"font-blue\">缺点：</span>若攻击者修改网络传输的信息部分同时也根据哈希函数重新计算消息摘要并替换，这时验证机制检测不出消息是否是伪造的，只知道是否完整。\n\n### 基于消息摘要与对称密钥加密的完整性验证机制与评价\n\n假设A是发送方，B是接收方，A要发送的消息是M0，A与B共享密钥K，产生摘要的函数为H。\n\n- 第1步：A用消息摘要算法H计算信息M0的消息摘要MD0。\n- 第2步：A将M0、MD0合在一起，用K加密信息，通过网络发送给B。\n- 第3步：B收到加密的信息后，用同一密钥K把密文解密，并将=者分开，分别设为M1和MD1。\n- 第4步：B用与原始信息相同的消息摘要计算方法H重新计算信息M1的消息摘要MD2。\n- 第5步：B将计算的消息摘要MD2同分离出的消息摘要MD1进行对比，如果相等，B断定信息是完整的，如果不相等，则B断定信息遭到篡改。\n    \n<span id=\"font-blue\">优点：</span>\n- 该机制防止了攻击者篡改信息的攻击。\n \t- 如果攻击者篡改了消息，则B 自己计算的消息摘要MD2同分离出来的消息摘要MD1就不相等了。\n- 也防止了攻击者同时把信息部分和消息摘要部分替换并且保持它们之间的正确匹配关系的攻击。\n\t- 因为密钥K只有双方知道，攻击者同时替换后没办法再用双方的密钥K重新加密。在这种机制中，参照对象是消息摘要。\n\n<span id=\"font-blue\">缺点与改进：</span>\n- 机制的前提是需要双方共享对称密钥K，存在密钥发布问题。\n- 可以用非对称密钥加密体制加密信息\n- 对合并后的信息全部用非对称密钥加密将导致加密的速度过慢，实用性较差\n- 采用对称密钥体制和非对称密钥结合的方法解决密钥的发布问题，就产生基于非对称密钥和对称密钥结合的完整性验证机制。\n    \n\n#### MD5消息摘要计算算法与评价\n\nMD5是计算机安全领域广泛使用的一种哈希函数，用以提供消息的完整性保护，把一个任意长的信息变化产生一个128位的消息摘要。除了满足能满足完成完整性验证必须的要求外，还效率高，提高了完整性验证的性能。\n\n<span id = \"inline-blue\">步骤：</span>\n\nMD5将消息分为若干个512位分组（大块）来处理输入的消息，且每一分组又被划分为16个32位子分组（子块），经过了一系列的处理后，算法的输出由四个32位分组组成，将这四个分组链接生成一个128位的消息摘要。\n\n对于每个大块，信息从512位压缩为128位，位数变为1/4，每一轮前初始化四个32位的固定值的链接量，四个组合在一起正好是128位。\n\nMD5以32位运算为基础，加密有四轮，每轮运算16次。每一轮中每个小块按不同顺序都参与运算，四轮的第一步进行不同的P处理，其他步骤相同。\n\n每一轮的操作也称压缩操作。如下所示：\n- 第1步：P处理首先处理b、c、d。（共abcd四个变量）\n- 第2步：变量a加进P处理的输出\n- 第3步：消息子块加进第2步输出\n- 第4步：常量加进第3步输出\n- 第5步：第4步的输出（abcd内容）循环左移S位\n- 第6步：变量b加进第5步输出\n- 第7步：第6步 的输出赋值给变量a\n- 最后的输出成为下一步的新的abcd。\n\n<span id = \"inline-blue\">评价：</span>\nMD5的核心处理是重复进行位逻辑运算，使得最终输出的摘要中的每一位都与输入消息中所有位相关，达到很好的混淆效果，具有雪崩现象。\n\n# 第七章 用户身份可鉴别性实现机制与评价\n\n### 用户身份可鉴别性\n\n<span id = \"inline-blue\">用户身份可鉴别性：</span>指用户在使用网络资源时，通过对用户身份信息的交换对用户身份的真实性进行确认的过程。\n涉及对象：①提供身份信息的被验证者；②检验身份信息正确性和合法性的认证服务器；③提供仲裁和调解的可信第三方；④企图进行窃听和伪装身份的攻击者；⑤认证设备。\n\n### 用户身份鉴别因素的数量和种类\n\n用户身份鉴别一般通过多个因素来共同鉴别用户身份的真伪，称为多因子鉴别， 最常见的是以下三因子：\n\n<span id=\"inline-toc\">1.</span> 用户所知道的东西，如口令、密码等：\n\n<span id=\"inline-toc\">2.</span> 用户所拥有的东西，如信用卡或U盾等：\n\n<span id=\"inline-toc\">3.</span> 用户所具有的东西，如声音、指纹、视网膜、签字或笔迹等。\n    \n### 数字证书\n\n- 为了进行有效的身份鉴别，类似现实生活中的身份证，在网络中每个用户也发一个网络身份证，即数字证书。由一个可信的权威机构发行。\n- 是一种计算机文件，文件扩展名：.cer（certificate）。\n- 证明证书中的用户与证书中的公钥关联的正确性。\n\n\n### 数字证书的内容\n\n最简单的证书至少包括<span id = \"inline-blue\">三项基本内容：</span><span id = \"inline-green\">公钥</span>、<span id = \"inline-green\">用户名</span>（<span id = \"font-green\">也称主体名</span>）和<span id = \"inline-green\">证书机构的数字签名</span>。\n\n一般情况下证书中还包括<span id = \"font-green\">序号</span>、<span id = \"font-green\">起始日期</span>、 <span id = \"font-green\">终止日期</span>、<span id = \"font-green\">签发者名</span>等信息。\n\n证书的内容和格式遵循X.509国际标准，它于1993和1995年做了两次修订。这个标准的最新版本是X.509V3。在数字证书中用户名被称为主题名，这是因为数字证书不仅可以发给个体用户，还可以发给组织，最后一个字段是证书机构的签名。\n\n### 生成数字证书的参与方\n\n生成数字证书的参与方至少需要两方参与，即主体（最终用户）和签发者（证书机构CA)。证书生成与管理还可能涉及第三方——注册机构RA。\n\n<span id=\"inline-toc\">1.</span> 主体：申请数字证书的人或者组织，主要任务是产生公／私钥密钥对、提出申请和提供与申请者相关的证明材料等。\n\n<span id=\"inline-toc\">2.</span> 注册机构及作用：从最终用户角度看，证书机构与注册机构差别不大。注册机构是用户与证书机构之间的中间实体，帮助证书机构完成日常工作\n\n- 注册机构通常提供下列服务：\n\t- ①接收与验证最终用户的注册信息：\n\t- ②为最终用户生成密钥：\n\t- ③接收与授权证书吊销请求。\n\n- 好处：\n\t >证书机构成为被隔离的实体，更不容易受到安全攻击。最终用户只能通过注册机构与证书机构通信，因此可以将注册机构与证书机构通信高度保护，使这部分连接很难攻击。但注册机构主要为了帮助证书机构与最终用户间交互，不能签发证书，只能由证书机构签发。\n\n<span id=\"inline-toc\">3.</span> 证书机构及作用：证书机构是公钥基础设施的核心机构，它的作用包括：\n\n&emsp;&emsp;① 证书的数字签名与发放，用户相信证书的真假主要看是不是经过可信的CA签名，因此CA对证书的签名很重要。为了防止数字凭证的伪造，证书机构的公共密钥必须是可靠的，证书机构必须公布其公钥。\n\n&emsp;&emsp;② 证书的管理工作，如跟踪证书状态，对因故无效的证书发出吊销通知等。\n    \n<span id = \"inline-blue\">证书的生成（5步）</span>\n\n- 第1步：密钥生成：自己用软件生成；注册机构为用户生成。\n- 第2步：主体注册：用户提供共相关的信息和证明材料。\n- 第3步：由RA完成验证：验证用户身份材料是否真实可靠；验证用户自己持有的私钥跟向注册机构提供的公钥是否相对应。\n- 第4步：数字证书的生成\n- 第5步：数字证书的分发\n\n### 用户身份可鉴别性机制与评价\n\n<span id=\"inline-toc\">1.</span> 基于口令的用户身份鉴别机制：最常用的鉴别形式\n\n&emsp;<span id = \"font-green\">优点：</span>简单易用，在安全性要求不高的情况下易于实现\n\n&emsp;<span id = \"font-red\">缺点：</span>数据库存放的是明文口令；口令以明文形式传递给服务器；口令相对固定。\n\n<span id=\"inline-toc\">2.</span> 基于口令摘要的用户身份鉴别机制：\n\n&emsp;<span id = \"font-green\">优点：</span>解决了基于口令的机制的两打安全隐患，在网络截获、副武器攻击和口令猜测方面都保证了用户鉴别的安全。\n\n&emsp;<span id = \"font-red\">缺点：</span>无法阻止重放攻击。服务器不能鉴别出登录请求来自合法用户还是攻击者。\n\n<span id=\"inline-toc\">3.</span> 基于随机挑战的用户身份鉴别机制：用户用口令摘要加密随机挑战\n\n&emsp;<span id = \"font-green\">优点：</span>解决了基于口令摘要的重放攻击，增加了随机性，提高了安全性。\n\n&emsp;<span id = \"font-red\">缺点：</span>比基于摘要的用户鉴别机制多了一次交互，同时需要客户本地计算机计算口令摘要，并用计算出来的口令摘要加密从服务器收到的随机挑战，存在密钥的分发问题。\n\n# 第八章 用户不可抵赖性实现机制\n\n### 用户不可抵赖性\n\n<span id = \"inline-blue\">不可抵赖性：</span>旨在生成、手机、维护有关已声明的事件或动作的证据，并使该证据可得和缺人，一次来解决关于此事件或动作发生或未发生而引起的争议。\n\n{% cq %}主要通过数字签名来保证。{% endcq %}\n\n<span id = \"font-blue\">包括两个方面：</span><span id = \"font-green\">发送信息方不可抵赖</span>；<span id = \"font-green\">信息的接收方不可抵赖</span>。\n\n一个完整的抗抵赖性机制包括两部分：<span id = \"font-green\">签名部分</span>+<span id = \"font-green\">验证部分</span>：\n\n签名部分密钥必须秘密、独有，只有签名人掌握；\n\n验证部分的密钥应当公开，以便于他人进行验证。\n\t\n### 数字签名\n\n数字签名：附加在数据单元上的一些数据，或是对数据单元所做的密码变换，这种数据或变换允许数据单元的接收者用于确认数据单元的来源和数据单元的完整性，并保护数据，防止被他人伪造。\n\n一个签名算法至少应满足三个条件：\n\n<span id=\"inline-toc\">1.</span> 签名者时候不能否认自己的签名\n\n<span id=\"inline-toc\">2.</span> 接收者能验证签名，而其他任何人都不能伪造签名；\n\n<span id=\"inline-toc\">3.</span> 当双方关于签名的真伪性发生争执时，第三方能解决争执。\n\n<span id = \"inline-blue\">数字签名的作用：</span><span id = \"font-green\">不可抵赖</span>、<span id = \"font-green\">身份认证</span>、<span id = \"font-green\">防假冒</span>\n\n<div class=\"note default\">手写签名与数字签名的区别：</span>\n\n1. 签署文件方面的不同：手写签名是所签文件的物理部分，但数字签名并不是，它必须设法把签名绑到所签文件上。\n2. 验证方面的不同：手写签名是通过和真实的手写签名比较来验证，很不安全且容易伪造；数字签名通过一个公开的验证算法来验证，任何人都能验证。\n3. 拷贝方面不同：数字签名消息的复制品与其本身是一样的，而手写签名纸质文件的复制品与原品不同。\n","slug":"网络安全复习","published":1,"updated":"2020-02-20T06:06:59.427Z","comments":1,"layout":"post","link":"","_id":"ckec2td41001rfkupttpqa900","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-JSyGnkdd\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"2426530028\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h1>第一章 网络安全特性概述</h1>\n<h3 id=\"网络安全含义\"><a class=\"header-anchor\" href=\"#网络安全含义\">☆</a>网络安全含义</h3>\n<p><span id=\"inline-blue\">网络安全</span>泛指网络系统的硬件、软件及其系统中的数据受到保护，不因偶然的或者恶意的原因而遭到破坏、更改和泄漏，系统能够连续可靠正常地运行，网络服务不被中断。</p>\n<p>网络安全的内容包括系统安全和信息安全两部分。</p>\n<ul>\n<li>系统安全主要指网络设备的硬件、操作系统和应用软件的安全。</li>\n<li>信息安全主要指各种信息的存储、传输安全，具体体现在信息的保密性、完整性及不可抵赖性方面。</li>\n</ul>\n<p>从内容看，网络安全大致包括4个方面 :</p>\n<p><span id=\"inline-toc\">1.</span> 物理实体安全 ：设备安全；存储介质安全；环境安全</p>\n<p><span id=\"inline-toc\">2.</span> 软件安全：</p>\n<ul>\n<li>软件本身是安全的；</li>\n<li>保护网络系统不被非法侵入，系统软件与应用软件不被非法复制、篡改、不受病毒的侵害等。</li>\n</ul>\n<p><span id=\"inline-toc\">3.</span> 数据安全</p>\n<ul>\n<li>保护网络中数据不被非法存取和破坏，确保其完整性和机密性。</li>\n</ul>\n<p><span id=\"inline-toc\">4.</span> 安全管理</p>\n<ul>\n<li>网络安全管理是以保护网络安全技术为基础，配以行政手段的管理活动。</li>\n</ul>\n<h3 id=\"两种网络安全基本模型与攻击方式\"><a class=\"header-anchor\" href=\"#两种网络安全基本模型与攻击方式\">☆</a>两种网络安全基本模型与攻击方式</h3>\n<ul>\n<li>网络安全基本模型：通信主体双方、攻击者、可信第三方。</li>\n<li>P2DR模型：Policy策略，Protection防护、Detection检测、Response响应</li>\n</ul>\n<h3 id=\"网络攻击类型\"><a class=\"header-anchor\" href=\"#网络攻击类型\">☆</a>网络攻击类型</h3>\n<p><span id=\"inline-toc\">1.</span> 被动攻击</p>\n<ul>\n<li>只是窃听或监视数据传输，即取得中途的信息，这里的被动指攻击者不对数据进行任何修改。</li>\n</ul>\n<p><span id=\"inline-toc\">2.</span> 主动攻击</p>\n<ul>\n<li>是指以某种方式修改消息内容或生成假消息。这种攻击很难防止，但容易被发现和恢复。这些攻击包括中断、篡改和伪造。</li>\n</ul>\n<h3 id=\"网络安全的服务与机制\"><a class=\"header-anchor\" href=\"#网络安全的服务与机制\">☆</a>网络安全的服务与机制</h3>\n<h4 id=\"五大网络安全服务\"><a class=\"header-anchor\" href=\"#五大网络安全服务\">☆</a>五大网络安全服务</h4>\n<ul>\n<li>鉴别服务：\n<ul>\n<li>对对方实体的合法性、真实性进行确认，以防假冒。这里的实体可以是用户或代表用户的进程。</li>\n</ul>\n</li>\n<li>访问控制服务：\n<ul>\n<li>用于防止未授权用户非法使用系统资源。它包括用户身份认证，用户的权限确认。</li>\n<li>在实际网络安全的应用中，为了提高效率，这种保护服务常常提供给用户组，而不是单个用户。</li>\n</ul>\n</li>\n<li>数据完整性服务：\n<ul>\n<li>阻止非法实体对交换数据的修改、插入和删除。</li>\n</ul>\n</li>\n<li>数据保密性服务：\n<ul>\n<li>防止网络中各个系统之间交换的数据被截获或被非法存取而造成泄密，提供加密保护。</li>\n</ul>\n</li>\n<li>抗抵赖性服务：\n<ul>\n<li>防止发送方在发送数据后否认自己发送过此数据，接收方在收到数据后否认自己收到过此数据或伪造接收数据。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"八大网络安全机制\"><a class=\"header-anchor\" href=\"#八大网络安全机制\">☆</a>八大网络安全机制</h4>\n<ul>\n<li>加密机制：\n<ul>\n<li>提供信息保密的核心方法，分为对称密钥算法和非对称密钥算法。</li>\n</ul>\n</li>\n<li>访问控制机制：\n<ul>\n<li>通过对访问者的有关信息进行检查来限制或禁止访问者使用资源的技术。</li>\n<li>访问控制还可以直接支持数据机密性、数据完整性、可用性，以及合法使用的安全目标。</li>\n</ul>\n</li>\n<li>数据完整性机制：\n<ul>\n<li>指数据不被增删改</li>\n</ul>\n</li>\n<li>数字签名机制：\n<ul>\n<li>作用类似于我们现实生活中的手写签名，具有鉴别作用。</li>\n</ul>\n</li>\n<li>交换鉴别机制：\n<ul>\n<li>通过互相交换信息的方式来确定彼此身份。</li>\n</ul>\n<ul>\n<li>用于交换鉴别的常用技术有以下几种：\n<ul>\n<li>①口令，②密码技术，③特征实物，如指纹、声音频谱等</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>公证机制：\n<ul>\n<li>通过公证机构中转双方的交换信息，并提取必要的证据，日后一旦发生纠纷，就可以据此做出仲裁。</li>\n</ul>\n</li>\n<li>流量填充机制：\n<ul>\n<li>提供针对流量分析的保护，流量填充的实现方法是：随机生成数据并对其加密，再通过网络发送。</li>\n</ul>\n</li>\n<li>路由控制机制：\n<ul>\n<li>使得可以指定通过网络发送数据的路径。</li>\n</ul>\n</li>\n</ul>\n<h1>第三章 网络可用性实现机制与评价</h1>\n<p><span id=\"inline-blue\">网络可用性</span>是指网络可以提供正确服务的能力，它是为可修复系统提出的，是对系统服务正常和异常状态交互变化过程的一种量化，是网络可以被使用的概率。系统可靠性越高，可维护性越好则可用性越高。<br>\n可靠性：提供正确服务的连续性，描述为系统在一个特定时间内能持续执行特定任务的概率，侧重分析服务正常运行的连续性。</p>\n<h3 id=\"网络可用性保障机制\"><a class=\"header-anchor\" href=\"#网络可用性保障机制\">☆</a>网络可用性保障机制</h3>\n<ul>\n<li>网络可靠性+网络可维护性\n<ul>\n<li>网络可靠性：避错机制+容错机制\n<ul>\n<li>避错：通过改进硬件的制造工艺和设计，选择技术成熟可靠的软硬件等策略来防止网络系统的错误产生。</li>\n<li>硬件避错+软件避错+管理避错</li>\n<li>容错：在网络系统出错的情况下，通过外加冗余资源消除单点故障的措施使系统仍然能够正常工作。为了提高网络系统中的平均故障间隔时间，通过冗余手段来实现系统可靠性。</li>\n<li>硬件容错+软件容错+管理容错。</li>\n</ul>\n</li>\n<li>网络可维护性：快速检错+快速排错\n<ul>\n<li>检错：在网络出现故障时，故障管理系统能即使发现故障部位和原因。- 故障检测+故障诊断</li>\n<li>排错：网络出现故障时，逐一排除故障，恢复系统的可用性。</li>\n<li>分层故障排错法+分块故障排错法+分段故障排错法+替换法</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"网络可用性a计算公式\"><a class=\"header-anchor\" href=\"#网络可用性a计算公式\">☆</a>网络可用性A计算公式</h3>\n<pre><code>A=MTBF/(MTBF+MTTR)x100%\n</code></pre>\n<p><span id=\"inline-purple\">MTBF：</span>平均无故障时间，反映网络系统的可靠性，取决于网络设备硬件和软件本身的质量，可靠性越高设备成本越高<br>\n<span id=\"inline-purple\">MTTR：</span>平均修复时间，反映网络系统的可维护性，在MTBF一定的情况下，MTTR越小网络的可用性越大</p>\n<h3 id=\"网络可用性量化评估的基本方法\"><a class=\"header-anchor\" href=\"#网络可用性量化评估的基本方法\">☆</a>网络可用性量化评估的基本方法</h3>\n<p>如果平均无故障时间(MTBF）远大于平均修复时间(MTTR)，那么系统的可用性将很高。</p>\n<p>如果平均修复时间很小，那么可用性也将很高。</p>\n<p>如果可靠性下降(MTBF变小），那么就需要减小MTTR （提高可维护性）才能达到同样的可用性。</p>\n<p>对一定的可用性，如果可靠性增长了，可维护性就不那么重要了。</p>\n<p>所以可以在可靠性和可维护性之间做出平衡来达到同样的可用性目的。</p>\n<h3 id=\"设备串联形成的系统可用性评估方法\"><a class=\"header-anchor\" href=\"#设备串联形成的系统可用性评估方法\">☆</a>设备串联形成的系统可用性评估方法</h3>\n<p>设网络串联系统是由n个网络设备串联而成的，只要有一个设备不可用系统就是不可用的。</p>\n<p>假设整个系统的可用性是A，每个设备的可靠性为A<sub>i</sub>，整个系统可用是指系统中的每个设备都必须可用，其计算公式如下：</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/11/23/%E5%9B%BE%E7%89%8711.png\" alt=\" \"></p>\n<p>n个设备串联的可用性会随着设备串联结构的增多越来越低，例如，假设每个设备可用性值是0.99，5个设备串联后的可用性接近0.95，10 个设备串联后的可用性就已经接近0.9。</p>\n<h3 id=\"设备并联形成的系统可用性评估方法\"><a class=\"header-anchor\" href=\"#设备并联形成的系统可用性评估方法\">☆</a>设备并联形成的系统可用性评估方法</h3>\n<p>为增加系统的可用性，将多个设备并联起来，n个网络设备并联的可用性是指：</p>\n<ul>\n<li>\n<p>在并联系统中，多个并联设备同时运行工作，只要有一个设备正常工作系统就是可用的。</p>\n</li>\n<li>\n<p>在并联系统中只有一个子系统是真正需要的，其余n-1个子系统都被称为冗余子系统。</p>\n</li>\n<li>\n<p>系统随着冗余子系统数量的增加，其平均无故障时间(MTBF)也随着增加。这样的并联结构的冗余的代价也是很高的。</p>\n</li>\n</ul>\n<p>整个系统的可用性是A，每个设备的可靠性为A<sub>i</sub>，计算公式如下：</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/11/23/%E5%9B%BE%E7%89%8722.png\" alt=\" \"></p>\n<h1>第四章 网络访问的可控性实现机制与评价</h1>\n<h3 id=\"网络安全中网络访问的可控性概述\"><a class=\"header-anchor\" href=\"#网络安全中网络访问的可控性概述\">☆</a>网络安全中网络访问的可控性概述</h3>\n<ul>\n<li>网络访问的可控性：指控制网络信息的流向及用户的行为方式，是对所管辖的网络、主机和资源的访问行为进行有效的控制和管理。</li>\n<li>访问控制机制是网络安全的一种解决方案，在计算机网络安全中，有四类安全特性与访问控制有直接和间接关系：\n<ul>\n<li>用户的可鉴别性、数据保密性、数据的完整性、网络的可用性</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"防火墙含义\"><a class=\"header-anchor\" href=\"#防火墙含义\">☆</a>防火墙含义</h3>\n<p>防火墙：在两个网络之间执行访问控制策略的一个或一组安全系统，可对整个网络进行访问控制。是一种计算机硬件和软件系统集合，是实现网络安全策略的有效工具之一。</p>\n<div class=\"note primary\">分为硬件防火墙和软件防火墙。</div>\n<p>常说的防火墙通指硬件防火墙</p>\n<p><span id=\"inline-blue\">硬件防火墙：</span>路由器、计算机或二者的组合配上具有过滤功能的软件形成，软硬件结合打到隔离内外部网络的目的。价格较贵，效果较好</p>\n<p><span id=\"inline-blue\">软件防火墙：</span>用纯软件的方式实现防火墙功能，价格便宜，但只能通过一定的规则来打到限制一些非法用户访问内部网的目的。</p>\n<p>防火墙技术<br>\n<span id=\"font-green\">防火墙基本技术</span>包括<span id=\"inline-green\">包过滤技术</span>、<span id=\"inline-green\">代理服务技术</span>和<span id=\"inline-green\">NAT技术</span>。</p>\n<p><span id=\"inline-toc\">1．</span><span id=\"inline-green\">包过滤：</span>通过拦截数据包过滤掉不应入网的信息。在网络的出入口（如路由器上）对通过的数据包进行检测，满足条件的数据包才允许通过，否则抛弃。优点：用一个放在重要位置的包过滤路由器即可保护整个网络；不需用户软件支持，也不要对客户机进行特殊设置。缺点：配置包过滤规则比较困难，常会忽略建立一些必要规则，或错误配置了已有的规则，且易产生难以发现的冲突。</p>\n<p><span id=\"inline-toc\">2．</span><span id=\"inline-green\">代理服务技术：</span>又称应用级网关，建立协议过滤和转发功能。包过滤只是在网络层拦截所有的信息流，代理服务可以进行身份认证等包过滤没有的控制功能，能力强，缺点是对用户不透明，速度慢。</p>\n<p><span id=\"inline-toc\">3．</span><span id=\"inline-green\">NAT：</span><span id=\"font-green\">网络地址转换技术：</span>通过有限的全球唯一的IP地址（外部地址）作为中继，使计算机网内部使用的非全球位移的IP地址（内部地址）可以对Internet进行透明访问。打到屏蔽内部地址的作用，提高网络安全性，解决地址紧缺的问题。外部主机对内部主机的内部地址进行直接访问是不可能的，因此提高了网络安全性。</p>\n<h3 id=\"防火墙体系结构\"><a class=\"header-anchor\" href=\"#防火墙体系结构\">☆</a>防火墙体系结构</h3>\n<p>防火墙体系结构一般有四种,安全程度递增的：过滤路由器结构、双穴主机结构、主机过滤结构、子网过滤结构。</p>\n<p><span id=\"inline-toc\">1. </span>过滤路由器结构：最简单的防火墙结构，可以由厂家专门生产的过滤路由器来实现，也可由安装了具有过滤功能软件的普通路由器实现。过滤路由器防火墙作为内外连接的唯一通道，要求所有的报文都必须在此通过检查。</p>\n<p><span id=\"inline-toc\">2. </span>双穴主机结构：围绕具有双重宿主的主机而构筑的。计算机至少有两个网络接口，同时连接两个不同的网络，这样的主机可以充当与这些接口相连的网络之间的路由器，并能够从一个网络到另一个网络发送IP数据包。防火墙内部的网络系统能与双重宿主主机通信，同时防火墙外部在Internet上的网络系统也能与双重宿主主机通信。通过双重宿主主机进行控制和代理，防火墙内外的计算机便可进行通信。</p>\n<p><span id=\"inline-toc\">3. </span>主机过滤结构：由内部网中提供安全保障的主机（堡垒主机)，加上一台单独的过滤路由器，一起构成该结构的防火墙。它既有主机控制又有路由器过滤，因此称为主机过滤结构。又分为单宿堡垒主机和双宿堡垒主机，单宿堡垒主机只有一个网卡连接在内部网上，双宿堡垒主机有两个网卡：一个连接在内部网上，另一个连接在路由器上，具有更好的安全性。</p>\n<p><span id=\"inline-toc\">4. </span>子网过滤结构：添加了额外的安全层到主机过滤体系结构中，即通过添加一个称为参数网络的网络，更进一步地把内部网络与Internet隔离开。</p>\n<h3 id=\"系统资源访问控制的分类\"><a class=\"header-anchor\" href=\"#系统资源访问控制的分类\">☆</a>系统资源访问控制的分类</h3>\n<p><span id=\"inline-toc\">1．</span>访问控制的方式：分为自主访问控制和强制访问控制。</p>\n<p><span id=\"inline-purple\">自主访问控制：</span>允许用户可以自主地在系统中规定谁可以存取它拥有的资源实体。有权访问且可以授权或收权其他用户。可以非常灵活地对策略进行调整。由于其易用性与可扩展性，自主访问控制机制经常被用于商业系统。</p>\n<p><span id=\"inline-purple\">强制访问控制：</span>用户权限和文件安全属性都是固定的，由系统决定一个用户对某个客体能否实行访问。</p>\n<p><span id=\"inline-toc\">2．</span>访问控制的主体：分为基于用户的访问控制和基于角色的访问控制。</p>\n<p><span id=\"inline-purple\">基于用户：</span>指每个用户都分配其权限，缺点是用户太多，可扩展性差。</p>\n<p><span id=\"inline-purple\">基于角色：</span>是在用户和访问许可权之间引入角色的概念，用户与特定的一个或多个角色相联系，角色再与一个或多个访问许可权相联系，从而实现对用户的访问控制。角色可以根据实际的工作需要生成或取消。</p>\n<h1>第五章 数据保密性实现机制与评价</h1>\n<p><span id=\"inline-blue\">数据保密性</span>在网络安全中，数据的保密性是指为了防止网络中各个系统之间交换的数据被未授权的实体截获或被非法存取造成泄密而提供的加密保护。</p>\n<h3 id=\"基本加密技术与评价\"><a class=\"header-anchor\" href=\"#基本加密技术与评价\">☆</a>基本加密技术与评价</h3>\n<p><span id=\"font-green\">替换加密：</span>明文消息的字符换成另一个字符、数字、符号。不一定替换成原字符集，同时也可以一对多替换。</p>\n<p><span id=\"font-green\">置换加密：</span>对明文字幕重新进行排列，字母本身不变。</p>\n<h3 id=\"加密算法分类\"><a class=\"header-anchor\" href=\"#加密算法分类\">☆</a>加密算法分类</h3>\n<p><span id=\"inline-toc\">1. </span>按密码体制：对称密钥、非对称密钥</p>\n<p><span id=\"inline-green\">对称密钥：</span>同一个密钥加密解密，<span id=\"font-blue\">应用：</span>数据加密标准DES、高级加密标准AES。<span id=\"font-blue\">优点：</span>速度快；<span id=\"font-blue\">缺点：</span>用户必须让接收人知道自己用的密钥，需双方共同保密密钥。密钥发布时还需防止任何攻击者发现或窃听密钥。</p>\n<p><span id=\"inline-green\">非对称密钥：</span>用公钥加密的结果只能用私钥解密，用私钥加密的结果只能用公钥解密，公钥不能推导出来私钥。<span id=\"font-blue\">优点：</span>加密解密能力分开，实现多个用户加密的消息只能由一个用户解读，或一个用户加密的消息可由多个用户解读。可扩展性强。目前应用最多的公开密钥系统有RSA</p>\n<p><span id=\"inline-toc\">2.</span>按加密方式分类：序列（流）加密法、分组（块）加密法</p>\n<p><span id=\"inline-green\">序列加密：</span>使用一次只对明文中的单个位或字节进行运算的算法。有点：产生流密钥序列简单、加密解密过程均不需复杂算法；缺点：明文、密文和密钥流任意两者可以很容易求得第三者，且很难得到完全随机的密钥流。密钥变换过于频繁，密钥分配较难。目前应用最广泛的序列密码：RC4</p>\n<p><span id=\"inline-green\">分组加密法：</span>是将明文按一定的位长分组，这个固定长度叫块大小。一次加密明文中的一个块。具有较强的抗攻击能力。块越大保密性越好，但加解密算法和设备越复杂，块大小一般64或128字节。应用：DES、IDEA、AES、TEA。</p>\n<h3 id=\"数据加密标准des\"><a class=\"header-anchor\" href=\"#数据加密标准des\">☆</a>数据加密标准DES</h3>\n<p>DES：是一个分组加密算法，以64位为分组对数据加密；是一个对称算法，加密解密是同一个密钥。</p>\n<p><span id=\"inline-blue\">6步：</span></p>\n<p><span id=\"inline-toc\">1.</span> 输入64位明文（56位密钥+8位奇偶校验）</p>\n<p><span id=\"inline-toc\">2. </span>64位明文块送入初始置换函数进行初始置换</p>\n<p><span id=\"inline-toc\">3. </span>置换后的内容分为两块，左明文和右明文，各32位</p>\n<p><span id=\"inline-toc\">4. </span>两块明文都要经过16轮加密，每一轮都进行替换与置换操作</p>\n<p><span id=\"inline-toc\">5. </span>将左右明文重新连接起来，对组成的块进行最终置换</p>\n<p><span id=\"inline-toc\">6. </span>输出64位明文</p>\n<blockquote class=\"blockquote-center\"><p>加密解密过程的唯一差别是密钥部分倒过来。</p>\n</blockquote>\n<h3 id=\"数据加密标准des的分析评价\"><a class=\"header-anchor\" href=\"#数据加密标准des的分析评价\">☆</a>数据加密标准DES的分析评价</h3>\n<p>具有极高的安全性，目前为止，出了穷举搜索法对算法进行攻击，没有发现更有效的方法。通过利用多种加密思想实现安全性：替换机制、置换机制、进行多轮反复加密、在替换和置换中同时揉进了压缩与扩展操作、使用了异或的加密操作、算法不公开S盒的设计准则、算法具有雪崩效应。</p>\n<p><span id=\"inline-green\">雪崩效应：</span>明文的一点点变动就会引起密文发生大的变化。</p>\n<p><span id=\"font-blue\">DES密钥发布问题</span>也是决定DES安全程度的重要问题，基本解决方法：</p>\n<p><span id=\"inline-toc\">1.</span> 根据密钥交换协议/算法来实现密钥的发布问题，双方可以用这个方法确定对称密钥，然后用这个密钥进行加密解密；</p>\n<p><span id=\"inline-toc\">2.</span> 结合非对称密钥，先利用接收方得公钥对DES使用的密钥进行加密，然后再利用DES进行加密。</p>\n<div class=\"note info\">\nDES可扩展性不好，但密文长度等于明文长度，加密的信息有效率较高。<br>DES工作算法模式：电子编码簿、加密块链接、加密反馈、输出反馈。\n</div>\n<h3 id=\"rsa加密机制分析与评价\"><a class=\"header-anchor\" href=\"#rsa加密机制分析与评价\">☆</a>RSA加密机制分析与评价</h3>\n<div class=\"note success\">\nRSA：最广泛接受的公钥方案。\n</div>\n<p>算法本身简单，关键选择正确密钥。不存在密钥的发布问题。可扩展性比DES好，信息有效率没有DES高。RSA算法比DES算法速度慢很多</p>\n<h3 id=\"rsa与des结合加密机制与评价\"><a class=\"header-anchor\" href=\"#rsa与des结合加密机制与评价\">☆</a>RSA与DES结合加密机制与评价</h3>\n<p><span id=\"inline-toc\">1.</span> 性能和信息有效率得到改善：用对称密钥加密算法和一次性会话密钥加密明文：速度快、明文小</p>\n<p><span id=\"inline-toc\">2.</span> 解决了密钥的发布问题</p>\n<p><span id=\"inline-toc\">3.</span> RSA的中间人攻击：指中间人不需要知道发送方和接收方的思瑶就可以非法查看双方的内容。主要漏洞是公钥被非法替换和调包。</p>\n<h1>第六章 数据完整性 实现机制与评价</h1>\n<h3 id=\"数据完整性\"><a class=\"header-anchor\" href=\"#数据完整性\">☆</a>数据完整性</h3>\n<p><span id=\"inline-blue\">数据完整性</span>是防止非法实体对交换数据的修改、插入、替换和删除，或者如果被修改、插入、替换和删除时可以被检测出来。</p>\n<p>在常规的网络安全中，可以通过消息认证模式来保证，基本思路是通过增加额外的信息验证码来对数据完整性验证。</p>\n<p><span id=\"inline-green\">碰撞：</span>对于两个不同的消息，如果它们的验证码值相同，则发生了碰撞。</p>\n<h3 id=\"基于消息摘要的完整性验证与评价\"><a class=\"header-anchor\" href=\"#基于消息摘要的完整性验证与评价\">☆</a>基于消息摘要的完整性验证与评价</h3>\n<div class=\"note success\">最常用的消息完整性验证方法。</div>\n<ul>\n<li>消息摘要一般通过摘要函数生成。</li>\n</ul>\n<ul>\n<li>\n<p>哈希函数是生成消息摘要常用的算法。</p>\n</li>\n<li>\n<p>常用算法：MD4，MD5，SHA-1</p>\n</li>\n</ul>\n<p>如果两个消息得到相同的消息摘要，则称为<span id=\"font-green\">冲突。</span></p>\n<p><span id=\"font-blue\">优点：</span>双方不需要共享密钥；消息摘要与信息密切关联，接受者能够确信信息为被篡改过；信息有效率较高。</p>\n<p><span id=\"font-blue\">缺点：</span>若攻击者修改网络传输的信息部分同时也根据哈希函数重新计算消息摘要并替换，这时验证机制检测不出消息是否是伪造的，只知道是否完整。</p>\n<h3 id=\"基于消息摘要与对称密钥加密的完整性验证机制与评价\"><a class=\"header-anchor\" href=\"#基于消息摘要与对称密钥加密的完整性验证机制与评价\">☆</a>基于消息摘要与对称密钥加密的完整性验证机制与评价</h3>\n<p>假设A是发送方，B是接收方，A要发送的消息是M0，A与B共享密钥K，产生摘要的函数为H。</p>\n<ul>\n<li>第1步：A用消息摘要算法H计算信息M0的消息摘要MD0。</li>\n<li>第2步：A将M0、MD0合在一起，用K加密信息，通过网络发送给B。</li>\n<li>第3步：B收到加密的信息后，用同一密钥K把密文解密，并将=者分开，分别设为M1和MD1。</li>\n<li>第4步：B用与原始信息相同的消息摘要计算方法H重新计算信息M1的消息摘要MD2。</li>\n<li>第5步：B将计算的消息摘要MD2同分离出的消息摘要MD1进行对比，如果相等，B断定信息是完整的，如果不相等，则B断定信息遭到篡改。</li>\n</ul>\n<p><span id=\"font-blue\">优点：</span></p>\n<ul>\n<li>该机制防止了攻击者篡改信息的攻击。\n<ul>\n<li>如果攻击者篡改了消息，则B 自己计算的消息摘要MD2同分离出来的消息摘要MD1就不相等了。</li>\n</ul>\n</li>\n<li>也防止了攻击者同时把信息部分和消息摘要部分替换并且保持它们之间的正确匹配关系的攻击。\n<ul>\n<li>因为密钥K只有双方知道，攻击者同时替换后没办法再用双方的密钥K重新加密。在这种机制中，参照对象是消息摘要。</li>\n</ul>\n</li>\n</ul>\n<p><span id=\"font-blue\">缺点与改进：</span></p>\n<ul>\n<li>机制的前提是需要双方共享对称密钥K，存在密钥发布问题。</li>\n<li>可以用非对称密钥加密体制加密信息</li>\n<li>对合并后的信息全部用非对称密钥加密将导致加密的速度过慢，实用性较差</li>\n<li>采用对称密钥体制和非对称密钥结合的方法解决密钥的发布问题，就产生基于非对称密钥和对称密钥结合的完整性验证机制。</li>\n</ul>\n<h4 id=\"md5消息摘要计算算法与评价\"><a class=\"header-anchor\" href=\"#md5消息摘要计算算法与评价\">☆</a>MD5消息摘要计算算法与评价</h4>\n<p>MD5是计算机安全领域广泛使用的一种哈希函数，用以提供消息的完整性保护，把一个任意长的信息变化产生一个128位的消息摘要。除了满足能满足完成完整性验证必须的要求外，还效率高，提高了完整性验证的性能。</p>\n<p><span id=\"inline-blue\">步骤：</span></p>\n<p>MD5将消息分为若干个512位分组（大块）来处理输入的消息，且每一分组又被划分为16个32位子分组（子块），经过了一系列的处理后，算法的输出由四个32位分组组成，将这四个分组链接生成一个128位的消息摘要。</p>\n<p>对于每个大块，信息从512位压缩为128位，位数变为1/4，每一轮前初始化四个32位的固定值的链接量，四个组合在一起正好是128位。</p>\n<p>MD5以32位运算为基础，加密有四轮，每轮运算16次。每一轮中每个小块按不同顺序都参与运算，四轮的第一步进行不同的P处理，其他步骤相同。</p>\n<p>每一轮的操作也称压缩操作。如下所示：</p>\n<ul>\n<li>第1步：P处理首先处理b、c、d。（共abcd四个变量）</li>\n<li>第2步：变量a加进P处理的输出</li>\n<li>第3步：消息子块加进第2步输出</li>\n<li>第4步：常量加进第3步输出</li>\n<li>第5步：第4步的输出（abcd内容）循环左移S位</li>\n<li>第6步：变量b加进第5步输出</li>\n<li>第7步：第6步 的输出赋值给变量a</li>\n<li>最后的输出成为下一步的新的abcd。</li>\n</ul>\n<p><span id=\"inline-blue\">评价：</span><br>\nMD5的核心处理是重复进行位逻辑运算，使得最终输出的摘要中的每一位都与输入消息中所有位相关，达到很好的混淆效果，具有雪崩现象。</p>\n<h1>第七章 用户身份可鉴别性实现机制与评价</h1>\n<h3 id=\"用户身份可鉴别性\"><a class=\"header-anchor\" href=\"#用户身份可鉴别性\">☆</a>用户身份可鉴别性</h3>\n<p><span id=\"inline-blue\">用户身份可鉴别性：</span>指用户在使用网络资源时，通过对用户身份信息的交换对用户身份的真实性进行确认的过程。<br>\n涉及对象：①提供身份信息的被验证者；②检验身份信息正确性和合法性的认证服务器；③提供仲裁和调解的可信第三方；④企图进行窃听和伪装身份的攻击者；⑤认证设备。</p>\n<h3 id=\"用户身份鉴别因素的数量和种类\"><a class=\"header-anchor\" href=\"#用户身份鉴别因素的数量和种类\">☆</a>用户身份鉴别因素的数量和种类</h3>\n<p>用户身份鉴别一般通过多个因素来共同鉴别用户身份的真伪，称为多因子鉴别， 最常见的是以下三因子：</p>\n<p><span id=\"inline-toc\">1.</span> 用户所知道的东西，如口令、密码等：</p>\n<p><span id=\"inline-toc\">2.</span> 用户所拥有的东西，如信用卡或U盾等：</p>\n<p><span id=\"inline-toc\">3.</span> 用户所具有的东西，如声音、指纹、视网膜、签字或笔迹等。</p>\n<h3 id=\"数字证书\"><a class=\"header-anchor\" href=\"#数字证书\">☆</a>数字证书</h3>\n<ul>\n<li>为了进行有效的身份鉴别，类似现实生活中的身份证，在网络中每个用户也发一个网络身份证，即数字证书。由一个可信的权威机构发行。</li>\n<li>是一种计算机文件，文件扩展名：.cer（certificate）。</li>\n<li>证明证书中的用户与证书中的公钥关联的正确性。</li>\n</ul>\n<h3 id=\"数字证书的内容\"><a class=\"header-anchor\" href=\"#数字证书的内容\">☆</a>数字证书的内容</h3>\n<p>最简单的证书至少包括<span id=\"inline-blue\">三项基本内容：</span><span id=\"inline-green\">公钥</span>、<span id=\"inline-green\">用户名</span>（<span id=\"font-green\">也称主体名</span>）和<span id=\"inline-green\">证书机构的数字签名</span>。</p>\n<p>一般情况下证书中还包括<span id=\"font-green\">序号</span>、<span id=\"font-green\">起始日期</span>、 <span id=\"font-green\">终止日期</span>、<span id=\"font-green\">签发者名</span>等信息。</p>\n<p>证书的内容和格式遵循X.509国际标准，它于1993和1995年做了两次修订。这个标准的最新版本是X.509V3。在数字证书中用户名被称为主题名，这是因为数字证书不仅可以发给个体用户，还可以发给组织，最后一个字段是证书机构的签名。</p>\n<h3 id=\"生成数字证书的参与方\"><a class=\"header-anchor\" href=\"#生成数字证书的参与方\">☆</a>生成数字证书的参与方</h3>\n<p>生成数字证书的参与方至少需要两方参与，即主体（最终用户）和签发者（证书机构CA)。证书生成与管理还可能涉及第三方——注册机构RA。</p>\n<p><span id=\"inline-toc\">1.</span> 主体：申请数字证书的人或者组织，主要任务是产生公／私钥密钥对、提出申请和提供与申请者相关的证明材料等。</p>\n<p><span id=\"inline-toc\">2.</span> 注册机构及作用：从最终用户角度看，证书机构与注册机构差别不大。注册机构是用户与证书机构之间的中间实体，帮助证书机构完成日常工作</p>\n<ul>\n<li>\n<p>注册机构通常提供下列服务：</p>\n<ul>\n<li>①接收与验证最终用户的注册信息：</li>\n<li>②为最终用户生成密钥：</li>\n<li>③接收与授权证书吊销请求。</li>\n</ul>\n</li>\n<li>\n<p>好处：</p>\n<blockquote>\n<p>证书机构成为被隔离的实体，更不容易受到安全攻击。最终用户只能通过注册机构与证书机构通信，因此可以将注册机构与证书机构通信高度保护，使这部分连接很难攻击。但注册机构主要为了帮助证书机构与最终用户间交互，不能签发证书，只能由证书机构签发。</p>\n</blockquote>\n</li>\n</ul>\n<p><span id=\"inline-toc\">3.</span> 证书机构及作用：证书机构是公钥基础设施的核心机构，它的作用包括：</p>\n<p>  ① 证书的数字签名与发放，用户相信证书的真假主要看是不是经过可信的CA签名，因此CA对证书的签名很重要。为了防止数字凭证的伪造，证书机构的公共密钥必须是可靠的，证书机构必须公布其公钥。</p>\n<p>  ② 证书的管理工作，如跟踪证书状态，对因故无效的证书发出吊销通知等。</p>\n<p><span id=\"inline-blue\">证书的生成（5步）</span></p>\n<ul>\n<li>第1步：密钥生成：自己用软件生成；注册机构为用户生成。</li>\n<li>第2步：主体注册：用户提供共相关的信息和证明材料。</li>\n<li>第3步：由RA完成验证：验证用户身份材料是否真实可靠；验证用户自己持有的私钥跟向注册机构提供的公钥是否相对应。</li>\n<li>第4步：数字证书的生成</li>\n<li>第5步：数字证书的分发</li>\n</ul>\n<h3 id=\"用户身份可鉴别性机制与评价\"><a class=\"header-anchor\" href=\"#用户身份可鉴别性机制与评价\">☆</a>用户身份可鉴别性机制与评价</h3>\n<p><span id=\"inline-toc\">1.</span> 基于口令的用户身份鉴别机制：最常用的鉴别形式</p>\n<p> <span id=\"font-green\">优点：</span>简单易用，在安全性要求不高的情况下易于实现</p>\n<p> <span id=\"font-red\">缺点：</span>数据库存放的是明文口令；口令以明文形式传递给服务器；口令相对固定。</p>\n<p><span id=\"inline-toc\">2.</span> 基于口令摘要的用户身份鉴别机制：</p>\n<p> <span id=\"font-green\">优点：</span>解决了基于口令的机制的两打安全隐患，在网络截获、副武器攻击和口令猜测方面都保证了用户鉴别的安全。</p>\n<p> <span id=\"font-red\">缺点：</span>无法阻止重放攻击。服务器不能鉴别出登录请求来自合法用户还是攻击者。</p>\n<p><span id=\"inline-toc\">3.</span> 基于随机挑战的用户身份鉴别机制：用户用口令摘要加密随机挑战</p>\n<p> <span id=\"font-green\">优点：</span>解决了基于口令摘要的重放攻击，增加了随机性，提高了安全性。</p>\n<p> <span id=\"font-red\">缺点：</span>比基于摘要的用户鉴别机制多了一次交互，同时需要客户本地计算机计算口令摘要，并用计算出来的口令摘要加密从服务器收到的随机挑战，存在密钥的分发问题。</p>\n<h1>第八章 用户不可抵赖性实现机制</h1>\n<h3 id=\"用户不可抵赖性\"><a class=\"header-anchor\" href=\"#用户不可抵赖性\">☆</a>用户不可抵赖性</h3>\n<p><span id=\"inline-blue\">不可抵赖性：</span>旨在生成、手机、维护有关已声明的事件或动作的证据，并使该证据可得和缺人，一次来解决关于此事件或动作发生或未发生而引起的争议。</p>\n<blockquote class=\"blockquote-center\"><p>主要通过数字签名来保证。</p>\n</blockquote>\n<p><span id=\"font-blue\">包括两个方面：</span><span id=\"font-green\">发送信息方不可抵赖</span>；<span id=\"font-green\">信息的接收方不可抵赖</span>。</p>\n<p>一个完整的抗抵赖性机制包括两部分：<span id=\"font-green\">签名部分</span>+<span id=\"font-green\">验证部分</span>：</p>\n<p>签名部分密钥必须秘密、独有，只有签名人掌握；</p>\n<p>验证部分的密钥应当公开，以便于他人进行验证。</p>\n<h3 id=\"数字签名\"><a class=\"header-anchor\" href=\"#数字签名\">☆</a>数字签名</h3>\n<p>数字签名：附加在数据单元上的一些数据，或是对数据单元所做的密码变换，这种数据或变换允许数据单元的接收者用于确认数据单元的来源和数据单元的完整性，并保护数据，防止被他人伪造。</p>\n<p>一个签名算法至少应满足三个条件：</p>\n<p><span id=\"inline-toc\">1.</span> 签名者时候不能否认自己的签名</p>\n<p><span id=\"inline-toc\">2.</span> 接收者能验证签名，而其他任何人都不能伪造签名；</p>\n<p><span id=\"inline-toc\">3.</span> 当双方关于签名的真伪性发生争执时，第三方能解决争执。</p>\n<p><span id=\"inline-blue\">数字签名的作用：</span><span id=\"font-green\">不可抵赖</span>、<span id=\"font-green\">身份认证</span>、<span id=\"font-green\">防假冒</span></p>\n<div class=\"note default\">手写签名与数字签名的区别：\n<ol>\n<li>签署文件方面的不同：手写签名是所签文件的物理部分，但数字签名并不是，它必须设法把签名绑到所签文件上。</li>\n<li>验证方面的不同：手写签名是通过和真实的手写签名比较来验证，很不安全且容易伪造；数字签名通过一个公开的验证算法来验证，任何人都能验证。</li>\n<li>拷贝方面不同：数字签名消息的复制品与其本身是一样的，而手写签名纸质文件的复制品与原品不同。</li>\n</ol>\n</div>","site":{"data":{}},"length":9406,"excerpt":"","more":"\n    <div id=\"aplayer-JSyGnkdd\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"2426530028\" data-server=\"netease\" data-type=\"playlist\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h1>第一章 网络安全特性概述</h1>\n<h3 id=\"网络安全含义\"><a class=\"header-anchor\" href=\"#网络安全含义\">☆</a>网络安全含义</h3>\n<p><span id=\"inline-blue\">网络安全</span>泛指网络系统的硬件、软件及其系统中的数据受到保护，不因偶然的或者恶意的原因而遭到破坏、更改和泄漏，系统能够连续可靠正常地运行，网络服务不被中断。</p>\n<p>网络安全的内容包括系统安全和信息安全两部分。</p>\n<ul>\n<li>系统安全主要指网络设备的硬件、操作系统和应用软件的安全。</li>\n<li>信息安全主要指各种信息的存储、传输安全，具体体现在信息的保密性、完整性及不可抵赖性方面。</li>\n</ul>\n<p>从内容看，网络安全大致包括4个方面 :</p>\n<p><span id=\"inline-toc\">1.</span> 物理实体安全 ：设备安全；存储介质安全；环境安全</p>\n<p><span id=\"inline-toc\">2.</span> 软件安全：</p>\n<ul>\n<li>软件本身是安全的；</li>\n<li>保护网络系统不被非法侵入，系统软件与应用软件不被非法复制、篡改、不受病毒的侵害等。</li>\n</ul>\n<p><span id=\"inline-toc\">3.</span> 数据安全</p>\n<ul>\n<li>保护网络中数据不被非法存取和破坏，确保其完整性和机密性。</li>\n</ul>\n<p><span id=\"inline-toc\">4.</span> 安全管理</p>\n<ul>\n<li>网络安全管理是以保护网络安全技术为基础，配以行政手段的管理活动。</li>\n</ul>\n<h3 id=\"两种网络安全基本模型与攻击方式\"><a class=\"header-anchor\" href=\"#两种网络安全基本模型与攻击方式\">☆</a>两种网络安全基本模型与攻击方式</h3>\n<ul>\n<li>网络安全基本模型：通信主体双方、攻击者、可信第三方。</li>\n<li>P2DR模型：Policy策略，Protection防护、Detection检测、Response响应</li>\n</ul>\n<h3 id=\"网络攻击类型\"><a class=\"header-anchor\" href=\"#网络攻击类型\">☆</a>网络攻击类型</h3>\n<p><span id=\"inline-toc\">1.</span> 被动攻击</p>\n<ul>\n<li>只是窃听或监视数据传输，即取得中途的信息，这里的被动指攻击者不对数据进行任何修改。</li>\n</ul>\n<p><span id=\"inline-toc\">2.</span> 主动攻击</p>\n<ul>\n<li>是指以某种方式修改消息内容或生成假消息。这种攻击很难防止，但容易被发现和恢复。这些攻击包括中断、篡改和伪造。</li>\n</ul>\n<h3 id=\"网络安全的服务与机制\"><a class=\"header-anchor\" href=\"#网络安全的服务与机制\">☆</a>网络安全的服务与机制</h3>\n<h4 id=\"五大网络安全服务\"><a class=\"header-anchor\" href=\"#五大网络安全服务\">☆</a>五大网络安全服务</h4>\n<ul>\n<li>鉴别服务：\n<ul>\n<li>对对方实体的合法性、真实性进行确认，以防假冒。这里的实体可以是用户或代表用户的进程。</li>\n</ul>\n</li>\n<li>访问控制服务：\n<ul>\n<li>用于防止未授权用户非法使用系统资源。它包括用户身份认证，用户的权限确认。</li>\n<li>在实际网络安全的应用中，为了提高效率，这种保护服务常常提供给用户组，而不是单个用户。</li>\n</ul>\n</li>\n<li>数据完整性服务：\n<ul>\n<li>阻止非法实体对交换数据的修改、插入和删除。</li>\n</ul>\n</li>\n<li>数据保密性服务：\n<ul>\n<li>防止网络中各个系统之间交换的数据被截获或被非法存取而造成泄密，提供加密保护。</li>\n</ul>\n</li>\n<li>抗抵赖性服务：\n<ul>\n<li>防止发送方在发送数据后否认自己发送过此数据，接收方在收到数据后否认自己收到过此数据或伪造接收数据。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"八大网络安全机制\"><a class=\"header-anchor\" href=\"#八大网络安全机制\">☆</a>八大网络安全机制</h4>\n<ul>\n<li>加密机制：\n<ul>\n<li>提供信息保密的核心方法，分为对称密钥算法和非对称密钥算法。</li>\n</ul>\n</li>\n<li>访问控制机制：\n<ul>\n<li>通过对访问者的有关信息进行检查来限制或禁止访问者使用资源的技术。</li>\n<li>访问控制还可以直接支持数据机密性、数据完整性、可用性，以及合法使用的安全目标。</li>\n</ul>\n</li>\n<li>数据完整性机制：\n<ul>\n<li>指数据不被增删改</li>\n</ul>\n</li>\n<li>数字签名机制：\n<ul>\n<li>作用类似于我们现实生活中的手写签名，具有鉴别作用。</li>\n</ul>\n</li>\n<li>交换鉴别机制：\n<ul>\n<li>通过互相交换信息的方式来确定彼此身份。</li>\n</ul>\n<ul>\n<li>用于交换鉴别的常用技术有以下几种：\n<ul>\n<li>①口令，②密码技术，③特征实物，如指纹、声音频谱等</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>公证机制：\n<ul>\n<li>通过公证机构中转双方的交换信息，并提取必要的证据，日后一旦发生纠纷，就可以据此做出仲裁。</li>\n</ul>\n</li>\n<li>流量填充机制：\n<ul>\n<li>提供针对流量分析的保护，流量填充的实现方法是：随机生成数据并对其加密，再通过网络发送。</li>\n</ul>\n</li>\n<li>路由控制机制：\n<ul>\n<li>使得可以指定通过网络发送数据的路径。</li>\n</ul>\n</li>\n</ul>\n<h1>第三章 网络可用性实现机制与评价</h1>\n<p><span id=\"inline-blue\">网络可用性</span>是指网络可以提供正确服务的能力，它是为可修复系统提出的，是对系统服务正常和异常状态交互变化过程的一种量化，是网络可以被使用的概率。系统可靠性越高，可维护性越好则可用性越高。<br>\n可靠性：提供正确服务的连续性，描述为系统在一个特定时间内能持续执行特定任务的概率，侧重分析服务正常运行的连续性。</p>\n<h3 id=\"网络可用性保障机制\"><a class=\"header-anchor\" href=\"#网络可用性保障机制\">☆</a>网络可用性保障机制</h3>\n<ul>\n<li>网络可靠性+网络可维护性\n<ul>\n<li>网络可靠性：避错机制+容错机制\n<ul>\n<li>避错：通过改进硬件的制造工艺和设计，选择技术成熟可靠的软硬件等策略来防止网络系统的错误产生。</li>\n<li>硬件避错+软件避错+管理避错</li>\n<li>容错：在网络系统出错的情况下，通过外加冗余资源消除单点故障的措施使系统仍然能够正常工作。为了提高网络系统中的平均故障间隔时间，通过冗余手段来实现系统可靠性。</li>\n<li>硬件容错+软件容错+管理容错。</li>\n</ul>\n</li>\n<li>网络可维护性：快速检错+快速排错\n<ul>\n<li>检错：在网络出现故障时，故障管理系统能即使发现故障部位和原因。- 故障检测+故障诊断</li>\n<li>排错：网络出现故障时，逐一排除故障，恢复系统的可用性。</li>\n<li>分层故障排错法+分块故障排错法+分段故障排错法+替换法</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"网络可用性a计算公式\"><a class=\"header-anchor\" href=\"#网络可用性a计算公式\">☆</a>网络可用性A计算公式</h3>\n<pre><code>A=MTBF/(MTBF+MTTR)x100%\n</code></pre>\n<p><span id=\"inline-purple\">MTBF：</span>平均无故障时间，反映网络系统的可靠性，取决于网络设备硬件和软件本身的质量，可靠性越高设备成本越高<br>\n<span id=\"inline-purple\">MTTR：</span>平均修复时间，反映网络系统的可维护性，在MTBF一定的情况下，MTTR越小网络的可用性越大</p>\n<h3 id=\"网络可用性量化评估的基本方法\"><a class=\"header-anchor\" href=\"#网络可用性量化评估的基本方法\">☆</a>网络可用性量化评估的基本方法</h3>\n<p>如果平均无故障时间(MTBF）远大于平均修复时间(MTTR)，那么系统的可用性将很高。</p>\n<p>如果平均修复时间很小，那么可用性也将很高。</p>\n<p>如果可靠性下降(MTBF变小），那么就需要减小MTTR （提高可维护性）才能达到同样的可用性。</p>\n<p>对一定的可用性，如果可靠性增长了，可维护性就不那么重要了。</p>\n<p>所以可以在可靠性和可维护性之间做出平衡来达到同样的可用性目的。</p>\n<h3 id=\"设备串联形成的系统可用性评估方法\"><a class=\"header-anchor\" href=\"#设备串联形成的系统可用性评估方法\">☆</a>设备串联形成的系统可用性评估方法</h3>\n<p>设网络串联系统是由n个网络设备串联而成的，只要有一个设备不可用系统就是不可用的。</p>\n<p>假设整个系统的可用性是A，每个设备的可靠性为A<sub>i</sub>，整个系统可用是指系统中的每个设备都必须可用，其计算公式如下：</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/11/23/%E5%9B%BE%E7%89%8711.png\" alt=\" \"></p>\n<p>n个设备串联的可用性会随着设备串联结构的增多越来越低，例如，假设每个设备可用性值是0.99，5个设备串联后的可用性接近0.95，10 个设备串联后的可用性就已经接近0.9。</p>\n<h3 id=\"设备并联形成的系统可用性评估方法\"><a class=\"header-anchor\" href=\"#设备并联形成的系统可用性评估方法\">☆</a>设备并联形成的系统可用性评估方法</h3>\n<p>为增加系统的可用性，将多个设备并联起来，n个网络设备并联的可用性是指：</p>\n<ul>\n<li>\n<p>在并联系统中，多个并联设备同时运行工作，只要有一个设备正常工作系统就是可用的。</p>\n</li>\n<li>\n<p>在并联系统中只有一个子系统是真正需要的，其余n-1个子系统都被称为冗余子系统。</p>\n</li>\n<li>\n<p>系统随着冗余子系统数量的增加，其平均无故障时间(MTBF)也随着增加。这样的并联结构的冗余的代价也是很高的。</p>\n</li>\n</ul>\n<p>整个系统的可用性是A，每个设备的可靠性为A<sub>i</sub>，计算公式如下：</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/11/23/%E5%9B%BE%E7%89%8722.png\" alt=\" \"></p>\n<h1>第四章 网络访问的可控性实现机制与评价</h1>\n<h3 id=\"网络安全中网络访问的可控性概述\"><a class=\"header-anchor\" href=\"#网络安全中网络访问的可控性概述\">☆</a>网络安全中网络访问的可控性概述</h3>\n<ul>\n<li>网络访问的可控性：指控制网络信息的流向及用户的行为方式，是对所管辖的网络、主机和资源的访问行为进行有效的控制和管理。</li>\n<li>访问控制机制是网络安全的一种解决方案，在计算机网络安全中，有四类安全特性与访问控制有直接和间接关系：\n<ul>\n<li>用户的可鉴别性、数据保密性、数据的完整性、网络的可用性</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"防火墙含义\"><a class=\"header-anchor\" href=\"#防火墙含义\">☆</a>防火墙含义</h3>\n<p>防火墙：在两个网络之间执行访问控制策略的一个或一组安全系统，可对整个网络进行访问控制。是一种计算机硬件和软件系统集合，是实现网络安全策略的有效工具之一。</p>\n<div class=\"note primary\">分为硬件防火墙和软件防火墙。</div>\n<p>常说的防火墙通指硬件防火墙</p>\n<p><span id=\"inline-blue\">硬件防火墙：</span>路由器、计算机或二者的组合配上具有过滤功能的软件形成，软硬件结合打到隔离内外部网络的目的。价格较贵，效果较好</p>\n<p><span id=\"inline-blue\">软件防火墙：</span>用纯软件的方式实现防火墙功能，价格便宜，但只能通过一定的规则来打到限制一些非法用户访问内部网的目的。</p>\n<p>防火墙技术<br>\n<span id=\"font-green\">防火墙基本技术</span>包括<span id=\"inline-green\">包过滤技术</span>、<span id=\"inline-green\">代理服务技术</span>和<span id=\"inline-green\">NAT技术</span>。</p>\n<p><span id=\"inline-toc\">1．</span><span id=\"inline-green\">包过滤：</span>通过拦截数据包过滤掉不应入网的信息。在网络的出入口（如路由器上）对通过的数据包进行检测，满足条件的数据包才允许通过，否则抛弃。优点：用一个放在重要位置的包过滤路由器即可保护整个网络；不需用户软件支持，也不要对客户机进行特殊设置。缺点：配置包过滤规则比较困难，常会忽略建立一些必要规则，或错误配置了已有的规则，且易产生难以发现的冲突。</p>\n<p><span id=\"inline-toc\">2．</span><span id=\"inline-green\">代理服务技术：</span>又称应用级网关，建立协议过滤和转发功能。包过滤只是在网络层拦截所有的信息流，代理服务可以进行身份认证等包过滤没有的控制功能，能力强，缺点是对用户不透明，速度慢。</p>\n<p><span id=\"inline-toc\">3．</span><span id=\"inline-green\">NAT：</span><span id=\"font-green\">网络地址转换技术：</span>通过有限的全球唯一的IP地址（外部地址）作为中继，使计算机网内部使用的非全球位移的IP地址（内部地址）可以对Internet进行透明访问。打到屏蔽内部地址的作用，提高网络安全性，解决地址紧缺的问题。外部主机对内部主机的内部地址进行直接访问是不可能的，因此提高了网络安全性。</p>\n<h3 id=\"防火墙体系结构\"><a class=\"header-anchor\" href=\"#防火墙体系结构\">☆</a>防火墙体系结构</h3>\n<p>防火墙体系结构一般有四种,安全程度递增的：过滤路由器结构、双穴主机结构、主机过滤结构、子网过滤结构。</p>\n<p><span id=\"inline-toc\">1. </span>过滤路由器结构：最简单的防火墙结构，可以由厂家专门生产的过滤路由器来实现，也可由安装了具有过滤功能软件的普通路由器实现。过滤路由器防火墙作为内外连接的唯一通道，要求所有的报文都必须在此通过检查。</p>\n<p><span id=\"inline-toc\">2. </span>双穴主机结构：围绕具有双重宿主的主机而构筑的。计算机至少有两个网络接口，同时连接两个不同的网络，这样的主机可以充当与这些接口相连的网络之间的路由器，并能够从一个网络到另一个网络发送IP数据包。防火墙内部的网络系统能与双重宿主主机通信，同时防火墙外部在Internet上的网络系统也能与双重宿主主机通信。通过双重宿主主机进行控制和代理，防火墙内外的计算机便可进行通信。</p>\n<p><span id=\"inline-toc\">3. </span>主机过滤结构：由内部网中提供安全保障的主机（堡垒主机)，加上一台单独的过滤路由器，一起构成该结构的防火墙。它既有主机控制又有路由器过滤，因此称为主机过滤结构。又分为单宿堡垒主机和双宿堡垒主机，单宿堡垒主机只有一个网卡连接在内部网上，双宿堡垒主机有两个网卡：一个连接在内部网上，另一个连接在路由器上，具有更好的安全性。</p>\n<p><span id=\"inline-toc\">4. </span>子网过滤结构：添加了额外的安全层到主机过滤体系结构中，即通过添加一个称为参数网络的网络，更进一步地把内部网络与Internet隔离开。</p>\n<h3 id=\"系统资源访问控制的分类\"><a class=\"header-anchor\" href=\"#系统资源访问控制的分类\">☆</a>系统资源访问控制的分类</h3>\n<p><span id=\"inline-toc\">1．</span>访问控制的方式：分为自主访问控制和强制访问控制。</p>\n<p><span id=\"inline-purple\">自主访问控制：</span>允许用户可以自主地在系统中规定谁可以存取它拥有的资源实体。有权访问且可以授权或收权其他用户。可以非常灵活地对策略进行调整。由于其易用性与可扩展性，自主访问控制机制经常被用于商业系统。</p>\n<p><span id=\"inline-purple\">强制访问控制：</span>用户权限和文件安全属性都是固定的，由系统决定一个用户对某个客体能否实行访问。</p>\n<p><span id=\"inline-toc\">2．</span>访问控制的主体：分为基于用户的访问控制和基于角色的访问控制。</p>\n<p><span id=\"inline-purple\">基于用户：</span>指每个用户都分配其权限，缺点是用户太多，可扩展性差。</p>\n<p><span id=\"inline-purple\">基于角色：</span>是在用户和访问许可权之间引入角色的概念，用户与特定的一个或多个角色相联系，角色再与一个或多个访问许可权相联系，从而实现对用户的访问控制。角色可以根据实际的工作需要生成或取消。</p>\n<h1>第五章 数据保密性实现机制与评价</h1>\n<p><span id=\"inline-blue\">数据保密性</span>在网络安全中，数据的保密性是指为了防止网络中各个系统之间交换的数据被未授权的实体截获或被非法存取造成泄密而提供的加密保护。</p>\n<h3 id=\"基本加密技术与评价\"><a class=\"header-anchor\" href=\"#基本加密技术与评价\">☆</a>基本加密技术与评价</h3>\n<p><span id=\"font-green\">替换加密：</span>明文消息的字符换成另一个字符、数字、符号。不一定替换成原字符集，同时也可以一对多替换。</p>\n<p><span id=\"font-green\">置换加密：</span>对明文字幕重新进行排列，字母本身不变。</p>\n<h3 id=\"加密算法分类\"><a class=\"header-anchor\" href=\"#加密算法分类\">☆</a>加密算法分类</h3>\n<p><span id=\"inline-toc\">1. </span>按密码体制：对称密钥、非对称密钥</p>\n<p><span id=\"inline-green\">对称密钥：</span>同一个密钥加密解密，<span id=\"font-blue\">应用：</span>数据加密标准DES、高级加密标准AES。<span id=\"font-blue\">优点：</span>速度快；<span id=\"font-blue\">缺点：</span>用户必须让接收人知道自己用的密钥，需双方共同保密密钥。密钥发布时还需防止任何攻击者发现或窃听密钥。</p>\n<p><span id=\"inline-green\">非对称密钥：</span>用公钥加密的结果只能用私钥解密，用私钥加密的结果只能用公钥解密，公钥不能推导出来私钥。<span id=\"font-blue\">优点：</span>加密解密能力分开，实现多个用户加密的消息只能由一个用户解读，或一个用户加密的消息可由多个用户解读。可扩展性强。目前应用最多的公开密钥系统有RSA</p>\n<p><span id=\"inline-toc\">2.</span>按加密方式分类：序列（流）加密法、分组（块）加密法</p>\n<p><span id=\"inline-green\">序列加密：</span>使用一次只对明文中的单个位或字节进行运算的算法。有点：产生流密钥序列简单、加密解密过程均不需复杂算法；缺点：明文、密文和密钥流任意两者可以很容易求得第三者，且很难得到完全随机的密钥流。密钥变换过于频繁，密钥分配较难。目前应用最广泛的序列密码：RC4</p>\n<p><span id=\"inline-green\">分组加密法：</span>是将明文按一定的位长分组，这个固定长度叫块大小。一次加密明文中的一个块。具有较强的抗攻击能力。块越大保密性越好，但加解密算法和设备越复杂，块大小一般64或128字节。应用：DES、IDEA、AES、TEA。</p>\n<h3 id=\"数据加密标准des\"><a class=\"header-anchor\" href=\"#数据加密标准des\">☆</a>数据加密标准DES</h3>\n<p>DES：是一个分组加密算法，以64位为分组对数据加密；是一个对称算法，加密解密是同一个密钥。</p>\n<p><span id=\"inline-blue\">6步：</span></p>\n<p><span id=\"inline-toc\">1.</span> 输入64位明文（56位密钥+8位奇偶校验）</p>\n<p><span id=\"inline-toc\">2. </span>64位明文块送入初始置换函数进行初始置换</p>\n<p><span id=\"inline-toc\">3. </span>置换后的内容分为两块，左明文和右明文，各32位</p>\n<p><span id=\"inline-toc\">4. </span>两块明文都要经过16轮加密，每一轮都进行替换与置换操作</p>\n<p><span id=\"inline-toc\">5. </span>将左右明文重新连接起来，对组成的块进行最终置换</p>\n<p><span id=\"inline-toc\">6. </span>输出64位明文</p>\n<blockquote class=\"blockquote-center\"><p>加密解密过程的唯一差别是密钥部分倒过来。</p>\n</blockquote>\n<h3 id=\"数据加密标准des的分析评价\"><a class=\"header-anchor\" href=\"#数据加密标准des的分析评价\">☆</a>数据加密标准DES的分析评价</h3>\n<p>具有极高的安全性，目前为止，出了穷举搜索法对算法进行攻击，没有发现更有效的方法。通过利用多种加密思想实现安全性：替换机制、置换机制、进行多轮反复加密、在替换和置换中同时揉进了压缩与扩展操作、使用了异或的加密操作、算法不公开S盒的设计准则、算法具有雪崩效应。</p>\n<p><span id=\"inline-green\">雪崩效应：</span>明文的一点点变动就会引起密文发生大的变化。</p>\n<p><span id=\"font-blue\">DES密钥发布问题</span>也是决定DES安全程度的重要问题，基本解决方法：</p>\n<p><span id=\"inline-toc\">1.</span> 根据密钥交换协议/算法来实现密钥的发布问题，双方可以用这个方法确定对称密钥，然后用这个密钥进行加密解密；</p>\n<p><span id=\"inline-toc\">2.</span> 结合非对称密钥，先利用接收方得公钥对DES使用的密钥进行加密，然后再利用DES进行加密。</p>\n<div class=\"note info\">\nDES可扩展性不好，但密文长度等于明文长度，加密的信息有效率较高。<br>DES工作算法模式：电子编码簿、加密块链接、加密反馈、输出反馈。\n</div>\n<h3 id=\"rsa加密机制分析与评价\"><a class=\"header-anchor\" href=\"#rsa加密机制分析与评价\">☆</a>RSA加密机制分析与评价</h3>\n<div class=\"note success\">\nRSA：最广泛接受的公钥方案。\n</div>\n<p>算法本身简单，关键选择正确密钥。不存在密钥的发布问题。可扩展性比DES好，信息有效率没有DES高。RSA算法比DES算法速度慢很多</p>\n<h3 id=\"rsa与des结合加密机制与评价\"><a class=\"header-anchor\" href=\"#rsa与des结合加密机制与评价\">☆</a>RSA与DES结合加密机制与评价</h3>\n<p><span id=\"inline-toc\">1.</span> 性能和信息有效率得到改善：用对称密钥加密算法和一次性会话密钥加密明文：速度快、明文小</p>\n<p><span id=\"inline-toc\">2.</span> 解决了密钥的发布问题</p>\n<p><span id=\"inline-toc\">3.</span> RSA的中间人攻击：指中间人不需要知道发送方和接收方的思瑶就可以非法查看双方的内容。主要漏洞是公钥被非法替换和调包。</p>\n<h1>第六章 数据完整性 实现机制与评价</h1>\n<h3 id=\"数据完整性\"><a class=\"header-anchor\" href=\"#数据完整性\">☆</a>数据完整性</h3>\n<p><span id=\"inline-blue\">数据完整性</span>是防止非法实体对交换数据的修改、插入、替换和删除，或者如果被修改、插入、替换和删除时可以被检测出来。</p>\n<p>在常规的网络安全中，可以通过消息认证模式来保证，基本思路是通过增加额外的信息验证码来对数据完整性验证。</p>\n<p><span id=\"inline-green\">碰撞：</span>对于两个不同的消息，如果它们的验证码值相同，则发生了碰撞。</p>\n<h3 id=\"基于消息摘要的完整性验证与评价\"><a class=\"header-anchor\" href=\"#基于消息摘要的完整性验证与评价\">☆</a>基于消息摘要的完整性验证与评价</h3>\n<div class=\"note success\">最常用的消息完整性验证方法。</div>\n<ul>\n<li>消息摘要一般通过摘要函数生成。</li>\n</ul>\n<ul>\n<li>\n<p>哈希函数是生成消息摘要常用的算法。</p>\n</li>\n<li>\n<p>常用算法：MD4，MD5，SHA-1</p>\n</li>\n</ul>\n<p>如果两个消息得到相同的消息摘要，则称为<span id=\"font-green\">冲突。</span></p>\n<p><span id=\"font-blue\">优点：</span>双方不需要共享密钥；消息摘要与信息密切关联，接受者能够确信信息为被篡改过；信息有效率较高。</p>\n<p><span id=\"font-blue\">缺点：</span>若攻击者修改网络传输的信息部分同时也根据哈希函数重新计算消息摘要并替换，这时验证机制检测不出消息是否是伪造的，只知道是否完整。</p>\n<h3 id=\"基于消息摘要与对称密钥加密的完整性验证机制与评价\"><a class=\"header-anchor\" href=\"#基于消息摘要与对称密钥加密的完整性验证机制与评价\">☆</a>基于消息摘要与对称密钥加密的完整性验证机制与评价</h3>\n<p>假设A是发送方，B是接收方，A要发送的消息是M0，A与B共享密钥K，产生摘要的函数为H。</p>\n<ul>\n<li>第1步：A用消息摘要算法H计算信息M0的消息摘要MD0。</li>\n<li>第2步：A将M0、MD0合在一起，用K加密信息，通过网络发送给B。</li>\n<li>第3步：B收到加密的信息后，用同一密钥K把密文解密，并将=者分开，分别设为M1和MD1。</li>\n<li>第4步：B用与原始信息相同的消息摘要计算方法H重新计算信息M1的消息摘要MD2。</li>\n<li>第5步：B将计算的消息摘要MD2同分离出的消息摘要MD1进行对比，如果相等，B断定信息是完整的，如果不相等，则B断定信息遭到篡改。</li>\n</ul>\n<p><span id=\"font-blue\">优点：</span></p>\n<ul>\n<li>该机制防止了攻击者篡改信息的攻击。\n<ul>\n<li>如果攻击者篡改了消息，则B 自己计算的消息摘要MD2同分离出来的消息摘要MD1就不相等了。</li>\n</ul>\n</li>\n<li>也防止了攻击者同时把信息部分和消息摘要部分替换并且保持它们之间的正确匹配关系的攻击。\n<ul>\n<li>因为密钥K只有双方知道，攻击者同时替换后没办法再用双方的密钥K重新加密。在这种机制中，参照对象是消息摘要。</li>\n</ul>\n</li>\n</ul>\n<p><span id=\"font-blue\">缺点与改进：</span></p>\n<ul>\n<li>机制的前提是需要双方共享对称密钥K，存在密钥发布问题。</li>\n<li>可以用非对称密钥加密体制加密信息</li>\n<li>对合并后的信息全部用非对称密钥加密将导致加密的速度过慢，实用性较差</li>\n<li>采用对称密钥体制和非对称密钥结合的方法解决密钥的发布问题，就产生基于非对称密钥和对称密钥结合的完整性验证机制。</li>\n</ul>\n<h4 id=\"md5消息摘要计算算法与评价\"><a class=\"header-anchor\" href=\"#md5消息摘要计算算法与评价\">☆</a>MD5消息摘要计算算法与评价</h4>\n<p>MD5是计算机安全领域广泛使用的一种哈希函数，用以提供消息的完整性保护，把一个任意长的信息变化产生一个128位的消息摘要。除了满足能满足完成完整性验证必须的要求外，还效率高，提高了完整性验证的性能。</p>\n<p><span id=\"inline-blue\">步骤：</span></p>\n<p>MD5将消息分为若干个512位分组（大块）来处理输入的消息，且每一分组又被划分为16个32位子分组（子块），经过了一系列的处理后，算法的输出由四个32位分组组成，将这四个分组链接生成一个128位的消息摘要。</p>\n<p>对于每个大块，信息从512位压缩为128位，位数变为1/4，每一轮前初始化四个32位的固定值的链接量，四个组合在一起正好是128位。</p>\n<p>MD5以32位运算为基础，加密有四轮，每轮运算16次。每一轮中每个小块按不同顺序都参与运算，四轮的第一步进行不同的P处理，其他步骤相同。</p>\n<p>每一轮的操作也称压缩操作。如下所示：</p>\n<ul>\n<li>第1步：P处理首先处理b、c、d。（共abcd四个变量）</li>\n<li>第2步：变量a加进P处理的输出</li>\n<li>第3步：消息子块加进第2步输出</li>\n<li>第4步：常量加进第3步输出</li>\n<li>第5步：第4步的输出（abcd内容）循环左移S位</li>\n<li>第6步：变量b加进第5步输出</li>\n<li>第7步：第6步 的输出赋值给变量a</li>\n<li>最后的输出成为下一步的新的abcd。</li>\n</ul>\n<p><span id=\"inline-blue\">评价：</span><br>\nMD5的核心处理是重复进行位逻辑运算，使得最终输出的摘要中的每一位都与输入消息中所有位相关，达到很好的混淆效果，具有雪崩现象。</p>\n<h1>第七章 用户身份可鉴别性实现机制与评价</h1>\n<h3 id=\"用户身份可鉴别性\"><a class=\"header-anchor\" href=\"#用户身份可鉴别性\">☆</a>用户身份可鉴别性</h3>\n<p><span id=\"inline-blue\">用户身份可鉴别性：</span>指用户在使用网络资源时，通过对用户身份信息的交换对用户身份的真实性进行确认的过程。<br>\n涉及对象：①提供身份信息的被验证者；②检验身份信息正确性和合法性的认证服务器；③提供仲裁和调解的可信第三方；④企图进行窃听和伪装身份的攻击者；⑤认证设备。</p>\n<h3 id=\"用户身份鉴别因素的数量和种类\"><a class=\"header-anchor\" href=\"#用户身份鉴别因素的数量和种类\">☆</a>用户身份鉴别因素的数量和种类</h3>\n<p>用户身份鉴别一般通过多个因素来共同鉴别用户身份的真伪，称为多因子鉴别， 最常见的是以下三因子：</p>\n<p><span id=\"inline-toc\">1.</span> 用户所知道的东西，如口令、密码等：</p>\n<p><span id=\"inline-toc\">2.</span> 用户所拥有的东西，如信用卡或U盾等：</p>\n<p><span id=\"inline-toc\">3.</span> 用户所具有的东西，如声音、指纹、视网膜、签字或笔迹等。</p>\n<h3 id=\"数字证书\"><a class=\"header-anchor\" href=\"#数字证书\">☆</a>数字证书</h3>\n<ul>\n<li>为了进行有效的身份鉴别，类似现实生活中的身份证，在网络中每个用户也发一个网络身份证，即数字证书。由一个可信的权威机构发行。</li>\n<li>是一种计算机文件，文件扩展名：.cer（certificate）。</li>\n<li>证明证书中的用户与证书中的公钥关联的正确性。</li>\n</ul>\n<h3 id=\"数字证书的内容\"><a class=\"header-anchor\" href=\"#数字证书的内容\">☆</a>数字证书的内容</h3>\n<p>最简单的证书至少包括<span id=\"inline-blue\">三项基本内容：</span><span id=\"inline-green\">公钥</span>、<span id=\"inline-green\">用户名</span>（<span id=\"font-green\">也称主体名</span>）和<span id=\"inline-green\">证书机构的数字签名</span>。</p>\n<p>一般情况下证书中还包括<span id=\"font-green\">序号</span>、<span id=\"font-green\">起始日期</span>、 <span id=\"font-green\">终止日期</span>、<span id=\"font-green\">签发者名</span>等信息。</p>\n<p>证书的内容和格式遵循X.509国际标准，它于1993和1995年做了两次修订。这个标准的最新版本是X.509V3。在数字证书中用户名被称为主题名，这是因为数字证书不仅可以发给个体用户，还可以发给组织，最后一个字段是证书机构的签名。</p>\n<h3 id=\"生成数字证书的参与方\"><a class=\"header-anchor\" href=\"#生成数字证书的参与方\">☆</a>生成数字证书的参与方</h3>\n<p>生成数字证书的参与方至少需要两方参与，即主体（最终用户）和签发者（证书机构CA)。证书生成与管理还可能涉及第三方——注册机构RA。</p>\n<p><span id=\"inline-toc\">1.</span> 主体：申请数字证书的人或者组织，主要任务是产生公／私钥密钥对、提出申请和提供与申请者相关的证明材料等。</p>\n<p><span id=\"inline-toc\">2.</span> 注册机构及作用：从最终用户角度看，证书机构与注册机构差别不大。注册机构是用户与证书机构之间的中间实体，帮助证书机构完成日常工作</p>\n<ul>\n<li>\n<p>注册机构通常提供下列服务：</p>\n<ul>\n<li>①接收与验证最终用户的注册信息：</li>\n<li>②为最终用户生成密钥：</li>\n<li>③接收与授权证书吊销请求。</li>\n</ul>\n</li>\n<li>\n<p>好处：</p>\n<blockquote>\n<p>证书机构成为被隔离的实体，更不容易受到安全攻击。最终用户只能通过注册机构与证书机构通信，因此可以将注册机构与证书机构通信高度保护，使这部分连接很难攻击。但注册机构主要为了帮助证书机构与最终用户间交互，不能签发证书，只能由证书机构签发。</p>\n</blockquote>\n</li>\n</ul>\n<p><span id=\"inline-toc\">3.</span> 证书机构及作用：证书机构是公钥基础设施的核心机构，它的作用包括：</p>\n<p>  ① 证书的数字签名与发放，用户相信证书的真假主要看是不是经过可信的CA签名，因此CA对证书的签名很重要。为了防止数字凭证的伪造，证书机构的公共密钥必须是可靠的，证书机构必须公布其公钥。</p>\n<p>  ② 证书的管理工作，如跟踪证书状态，对因故无效的证书发出吊销通知等。</p>\n<p><span id=\"inline-blue\">证书的生成（5步）</span></p>\n<ul>\n<li>第1步：密钥生成：自己用软件生成；注册机构为用户生成。</li>\n<li>第2步：主体注册：用户提供共相关的信息和证明材料。</li>\n<li>第3步：由RA完成验证：验证用户身份材料是否真实可靠；验证用户自己持有的私钥跟向注册机构提供的公钥是否相对应。</li>\n<li>第4步：数字证书的生成</li>\n<li>第5步：数字证书的分发</li>\n</ul>\n<h3 id=\"用户身份可鉴别性机制与评价\"><a class=\"header-anchor\" href=\"#用户身份可鉴别性机制与评价\">☆</a>用户身份可鉴别性机制与评价</h3>\n<p><span id=\"inline-toc\">1.</span> 基于口令的用户身份鉴别机制：最常用的鉴别形式</p>\n<p> <span id=\"font-green\">优点：</span>简单易用，在安全性要求不高的情况下易于实现</p>\n<p> <span id=\"font-red\">缺点：</span>数据库存放的是明文口令；口令以明文形式传递给服务器；口令相对固定。</p>\n<p><span id=\"inline-toc\">2.</span> 基于口令摘要的用户身份鉴别机制：</p>\n<p> <span id=\"font-green\">优点：</span>解决了基于口令的机制的两打安全隐患，在网络截获、副武器攻击和口令猜测方面都保证了用户鉴别的安全。</p>\n<p> <span id=\"font-red\">缺点：</span>无法阻止重放攻击。服务器不能鉴别出登录请求来自合法用户还是攻击者。</p>\n<p><span id=\"inline-toc\">3.</span> 基于随机挑战的用户身份鉴别机制：用户用口令摘要加密随机挑战</p>\n<p> <span id=\"font-green\">优点：</span>解决了基于口令摘要的重放攻击，增加了随机性，提高了安全性。</p>\n<p> <span id=\"font-red\">缺点：</span>比基于摘要的用户鉴别机制多了一次交互，同时需要客户本地计算机计算口令摘要，并用计算出来的口令摘要加密从服务器收到的随机挑战，存在密钥的分发问题。</p>\n<h1>第八章 用户不可抵赖性实现机制</h1>\n<h3 id=\"用户不可抵赖性\"><a class=\"header-anchor\" href=\"#用户不可抵赖性\">☆</a>用户不可抵赖性</h3>\n<p><span id=\"inline-blue\">不可抵赖性：</span>旨在生成、手机、维护有关已声明的事件或动作的证据，并使该证据可得和缺人，一次来解决关于此事件或动作发生或未发生而引起的争议。</p>\n<blockquote class=\"blockquote-center\"><p>主要通过数字签名来保证。</p>\n</blockquote>\n<p><span id=\"font-blue\">包括两个方面：</span><span id=\"font-green\">发送信息方不可抵赖</span>；<span id=\"font-green\">信息的接收方不可抵赖</span>。</p>\n<p>一个完整的抗抵赖性机制包括两部分：<span id=\"font-green\">签名部分</span>+<span id=\"font-green\">验证部分</span>：</p>\n<p>签名部分密钥必须秘密、独有，只有签名人掌握；</p>\n<p>验证部分的密钥应当公开，以便于他人进行验证。</p>\n<h3 id=\"数字签名\"><a class=\"header-anchor\" href=\"#数字签名\">☆</a>数字签名</h3>\n<p>数字签名：附加在数据单元上的一些数据，或是对数据单元所做的密码变换，这种数据或变换允许数据单元的接收者用于确认数据单元的来源和数据单元的完整性，并保护数据，防止被他人伪造。</p>\n<p>一个签名算法至少应满足三个条件：</p>\n<p><span id=\"inline-toc\">1.</span> 签名者时候不能否认自己的签名</p>\n<p><span id=\"inline-toc\">2.</span> 接收者能验证签名，而其他任何人都不能伪造签名；</p>\n<p><span id=\"inline-toc\">3.</span> 当双方关于签名的真伪性发生争执时，第三方能解决争执。</p>\n<p><span id=\"inline-blue\">数字签名的作用：</span><span id=\"font-green\">不可抵赖</span>、<span id=\"font-green\">身份认证</span>、<span id=\"font-green\">防假冒</span></p>\n<div class=\"note default\">手写签名与数字签名的区别：\n<ol>\n<li>签署文件方面的不同：手写签名是所签文件的物理部分，但数字签名并不是，它必须设法把签名绑到所签文件上。</li>\n<li>验证方面的不同：手写签名是通过和真实的手写签名比较来验证，很不安全且容易伪造；数字签名通过一个公开的验证算法来验证，任何人都能验证。</li>\n<li>拷贝方面不同：数字签名消息的复制品与其本身是一样的，而手写签名纸质文件的复制品与原品不同。</li>\n</ol>\n</div>"},{"title":"计算机网络考研复习整理","copyright":false,"abbrlink":"1566eda6","notshow":true,"date":"2019-09-05T14:46:00.000Z","password":null,"description":null,"image":null,"photos":[],"sticky":null,"_content":"\n## 各协议对应的osi层次\n\n物理层： RJ45 、 CLOCK 、 IEEE802.3 （中继器，集线器，网关） - \n数据链路： PPP 、 FR 、 HDLC 、 VLAN 、 MAC （网桥，交换机） - \n网络层： IP 、 ICMP 、 ARP 、 RARP 、 OSPF 、 IPX 、 RIP 、 IGRP 、 （路由器） - \n传输层： TCP 、 UDP 、 SPX - \n会话层： NFS 、 SQL 、 NETBIOS 、 RPC - \n表示层： JPEG 、 MPEG 、 ASII - \n应用层： FTP 、 DNS 、 Telnet 、 SMTP 、 HTTP 、 WWW 、 NFS\n\n## HTTP协议相关\n\n1、OPTIONS\n返回服务器针对特定资源所支持的HTTP请求方法，也可以利用向web服务器发送‘*’的请求来测试服务器的功能性\n2、HEAD\n向服务器索与GET请求相一致的响应，只不过响应体将不会被返回。这一方法可以再不必传输整个响应内容的情况下，就可以获取包含在响应小消息头中的元信息。\n3、GET\n向特定的资源发出请求。注意：GET方法不应当被用于产生“副作用”的操作中，例如在Web Application中，其中一个原因是GET可能会被网络蜘蛛等随意访问。Loadrunner中对应get请求函数：web_link和web_url\n4、POST\n向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。 Loadrunner中对应POST请求函数：web_submit_data,web_submit_form\n5、PUT\n向指定资源位置上传其最新内容\n6、DELETE\n请求服务器删除Request-URL所标识的资源\n7、TRACE\n回显服务器收到的请求，主要用于测试或诊断\n8、CONNECT\nHTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。\n\nHTTP协议的主要特点可概括如下：\n\n1.支持客户/服务器模式。\n\n2.简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。\n\n3.灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。\n\n4.无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。\n\n5.无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。\n\n## 常见的网络协议\\端口号\n\n一个网络协议至少包括三要素:\n语法 用来规定信息格式；数据及控制信息的格式、编码及信号电平等。\n语义 用来说明通信双方应当怎么做；用于协调与差错处理的控制信息。\n时序（定时 ）详细说明事件的先后顺序；速度匹配和排序等\n网际(络)层协议：包括：IP协议、ICMP协议、ARP协议、RARP协议。\n传输层协议：TCP协议、UDP协议。\n应用层协议：FTP、Telnet、SMTP、HTTP、RIP、NFS、DNS。\n\n使用TCP协议的常见端口主要有以下几种：\n（1）\nFTP：定义了文件传输协议，使用21端口。常说某某计算机开了FTP服务便是启动了文件传输服务。下载文件，上传主页，都要用到FTP服务。\n（2）\nTelnet：它是一种用于远程登陆的端口，用户可以以自己的身份远程连接到计算机上，通过这种端口可以提供一种基于DOS模式下的通信服务。如以前的BBS是纯字符界面的，支持BBS的服务器将23端口打开，对外提供服务。\n（3）\nSMTP：定义了简单邮件传送协议，现在很多邮件服务器都用的是这个协议，用于发送邮件。如常见的免费邮件服务中用的就是这个邮件服务端口，所以在电子邮件设置中常看到有这么SMTP端口设置这个栏，服务器开放的是25号端口。\n（4）\nPOP3：它是和SMTP对应，POP3用于接收邮件。通常情况下，POP3协议所用的是110端口。也是说，只要你有相应的使用POP3协议的程序（例如Foxmail或Outlook），就可以不以Web方式登陆进邮箱界面，直接用邮件程序就可以收到邮件（如是163邮箱就没有必要先进入网易网站，再进入自己的邮箱来收信）。\n使用UDP协议端口常见的有：\n（1）\nHTTP：这是大家用得最多的协议，它就是常说的\"超文本传输协议\"。上网浏览网页时，就得在提供网页资源的计算机上打开80号端口以提供服务。常说\"WWW服务\"、\"Web服务器\"用的就是这个端口。\n（2）\nDNS：用于域名解析服务，这种服务在Windows\nNT系统中用得最多的。因特网上的每一台计算机都有一个网络地址与之对应，这个地址是常说的IP地址，它以纯数字+\".\"的形式表示。然而这却不便记忆，于是出现了域名，访问计算机的时候只需要知道域名，域名和IP地址之间的变换由DNS服务器来完成。DNS用的是53号端口。\n（3）\nSNMP：简单网络管理协议，使用161号端口，是用来管理网络设备的。由于网络设备很多，无连接的服务就体现出其优势。\n\n另外代理服务器常用以下端口：\n（1）. HTTP协议代理服务器常用端口号：80/8080/3128/8081/9080\n（2）. SOCKS代理协议服务器常用端口号：1080\n（3）. FTP协议代理服务器常用端口号：21\n（4）. Telnet协议代理服务器常用端口：23\n\nWIN2003远程登陆，默认的端口号为3389；\nDHCP server的端口号是67\n端口号的范围是从1～65535。其中1～1024是被RFC 3232规定好了的，被称作“众所周知的端口”(Well Known Ports)；从1025～65535的端口被称为动态端口（Dynamic Ports），可用来建立与其它主机的会话，也可由用户自定义用途。\n\n一些常见的端口号及其用途如下：\nTCP 21端口：FTP 文件传输服务\nTCP 23端口：TELNET 终端仿真服务\nTCP 25端口：SMTP 简单邮件传输服务\nUDP 53端口：DNS 域名解析服务\nTCP 80端口：HTTP 超文本传输服务\nTCP 110端口：POP3 “邮局协议版本3”使用的端口\nTCP 443端口：HTTPS 加密的超文本传输服务\nTCP 1521端口：Oracle数据库服务\nTCP 1863端口：MSN Messenger的文件传输功能所使用的端口\nTCP 3389端口：Microsoft RDP 微软远程桌面使用的端口\nTCP 5631端口：Symantec pcAnywhere 远程控制数据传输时使用的端口\nUDP 5632端口：Symantec pcAnywhere 主控端扫描被控端时使用的端口\nTCP 5000端口：MS SQL Server使用的端口\nUDP 8000端口：腾讯QQ\n\n## 同步异步传输相关\n\n同步传输方式中发送方和接收方的时钟是统一的、字符与字符间的传输是同步无间隔的。\n异步传输方式并不要求发送方和接收方的时钟完全一样，字符与字符间的传输是异步的。\n\n区别点\n1,异步传输是面向字符的传输，而同步传输是面向比特的传输。\n2,异步传输的单位是字符而同步传输的单位是帧。\n3,异步传输通过字符起始和停止码抓住再同步的机会，而同步传输则是在数据中抽取同步信息。\n4,异步传输对时序的要求较低，同步传输往往通过特定的时钟线路协调时序。\n5,异步传输相对于同步传输效率较低。\n\n简单形容\n同步传输就是，数据没有被对方确认收到则调用传输的函数就不返回。\n接收时，如果对方没有发送数据，则你的线程就一直等待，直到有数据了才返回，可以继续执行其他指令\n异步传输就是，你调用一个函数发送数据，马上返回，你可以继续处理其他事，\n接收时，对方的有数据来，你会接收到一个消息，或者你的相关接收函数会被调用。\n\n形象形容\n异步传输: 你传输吧，我去做我的事了，传输完了告诉我一声\n同步传输： 你现在传输，我要亲眼看你传输完成，才去做别的事\n\n## 各协议与对应的层次\n\n![](https://data.singlelovely.cn/images/20190909234526.png)\n\n`注`：RIP  使用应用层520端口。\n\n## TCP协议\n\n[图解TCP连接建立与释放](https://blog.csdn.net/oyhy_/article/details/70201855)\n\n`CLOSED`: 表示初始状态。\n\n`LISTEN`: 表示服务器端的某个SOCKET处于监听状态，可以接受连接。\n\n`SYN_RCVD`: 这个状态表示接受到了SYN报文，在正常情况下，这个状态是服务器端的SOCKET在建立TCP连接时的三次握手会话过程中的一个中间状态，很短暂，基本上用netstat你是很难看到这种状态的，除非你特意写了一个客户端测试程序，故意将三次TCP握手过程中最后一个ACK报文不予发送。因此这种状态时，当收到客户端的ACK报文后，它会进入到ESTABLISHED状态。\n\n`SYN_SENT`: 这个状态与SYN_RCVD遥想呼应，当客户端SOCKET执行CONNECT连接时，它首先发送SYN报文，因此也随即它会进入到了SYN_SENT状态，并等待服务端的发送三次握手中的第2个报文。SYN_SENT状态表示客户端已发送SYN报文。\n\n`ESTABLISHED`：表示连接已经建立。\n\n`FIN_WAIT_1`: FIN_WAIT_1和FIN_WAIT_2状态的真正含义都是表示等待对方的FIN报文。而这两种状态的区别是：FIN_WAIT_1状态实际上是当SOCKET在ESTABLISHED状态时，它想主动关闭连接，向对方发送了FIN报文，此时该SOCKET即进入到FIN_WAIT_1状态。而当对方回应ACK报文后，则进入到FIN_WAIT_2状态，当然在实际的正常情况下，无论对方何种情况下，都应该马上回应ACK报文，所以FIN_WAIT_1状态一般是比较难见到的，而FIN_WAIT_2状态还有时常常可以用netstat看到。\n\n`FIN_WAIT_2`：FIN_WAIT_2状态下的SOCKET，表示半连接，也即有一方要求close连接，但另外还告诉对方，还有数据需要传送，稍后再关闭连接。\n\n`TIME_WAIT`: 表示收到了对方的FIN报文，并发送出了ACK报文，就等2MSL后即可回到CLOSED可用状态了。如果FIN_WAIT_1状态下，收到了对方同时带FIN标志和ACK标志的报文时，可以直接进入到TIME_WAIT状态，而无须经过FIN_WAIT_2状态。\n\n`CLOSING`: 属于一种比较罕见的例外状态。正常情况下，当你发送FIN报文后，按理来说是应该先收到（或同时收到）对方的ACK报文，再收到对方的FIN报文。但是CLOSING状态表示你发送FIN报文后，并没有收到对方的ACK报文，反而却也收到了对方的FIN报文。\n\n`CLOSE_WAIT`: 这种状态的含义表示在等待关闭。当对方close一个SOCKET后发送FIN报文，你系统毫无疑问地会回应一个ACK报文给对方，此时则进入到CLOSE_WAIT状态。\nLAST_ACK: 它是被动关闭一方在发送FIN报文后，最后等待对方的ACK报文。当收到ACK报文后，也即可以进入到CLOSED可用状态了。","source":"_posts/计算机网络考研复习整理.md","raw":"---\ntitle: 计算机网络考研复习整理\ncopyright: false\nabbrlink: 1566eda6\nnotshow: true\ndate: 2019-09-05 22:46:00\ntags:\n- 网络\n- 学习\ncategories: 网络\npassword:\ndescription:\nimage:\nphotos:\nsticky:\n---\n\n## 各协议对应的osi层次\n\n物理层： RJ45 、 CLOCK 、 IEEE802.3 （中继器，集线器，网关） - \n数据链路： PPP 、 FR 、 HDLC 、 VLAN 、 MAC （网桥，交换机） - \n网络层： IP 、 ICMP 、 ARP 、 RARP 、 OSPF 、 IPX 、 RIP 、 IGRP 、 （路由器） - \n传输层： TCP 、 UDP 、 SPX - \n会话层： NFS 、 SQL 、 NETBIOS 、 RPC - \n表示层： JPEG 、 MPEG 、 ASII - \n应用层： FTP 、 DNS 、 Telnet 、 SMTP 、 HTTP 、 WWW 、 NFS\n\n## HTTP协议相关\n\n1、OPTIONS\n返回服务器针对特定资源所支持的HTTP请求方法，也可以利用向web服务器发送‘*’的请求来测试服务器的功能性\n2、HEAD\n向服务器索与GET请求相一致的响应，只不过响应体将不会被返回。这一方法可以再不必传输整个响应内容的情况下，就可以获取包含在响应小消息头中的元信息。\n3、GET\n向特定的资源发出请求。注意：GET方法不应当被用于产生“副作用”的操作中，例如在Web Application中，其中一个原因是GET可能会被网络蜘蛛等随意访问。Loadrunner中对应get请求函数：web_link和web_url\n4、POST\n向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。 Loadrunner中对应POST请求函数：web_submit_data,web_submit_form\n5、PUT\n向指定资源位置上传其最新内容\n6、DELETE\n请求服务器删除Request-URL所标识的资源\n7、TRACE\n回显服务器收到的请求，主要用于测试或诊断\n8、CONNECT\nHTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。\n\nHTTP协议的主要特点可概括如下：\n\n1.支持客户/服务器模式。\n\n2.简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。\n\n3.灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。\n\n4.无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。\n\n5.无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。\n\n## 常见的网络协议\\端口号\n\n一个网络协议至少包括三要素:\n语法 用来规定信息格式；数据及控制信息的格式、编码及信号电平等。\n语义 用来说明通信双方应当怎么做；用于协调与差错处理的控制信息。\n时序（定时 ）详细说明事件的先后顺序；速度匹配和排序等\n网际(络)层协议：包括：IP协议、ICMP协议、ARP协议、RARP协议。\n传输层协议：TCP协议、UDP协议。\n应用层协议：FTP、Telnet、SMTP、HTTP、RIP、NFS、DNS。\n\n使用TCP协议的常见端口主要有以下几种：\n（1）\nFTP：定义了文件传输协议，使用21端口。常说某某计算机开了FTP服务便是启动了文件传输服务。下载文件，上传主页，都要用到FTP服务。\n（2）\nTelnet：它是一种用于远程登陆的端口，用户可以以自己的身份远程连接到计算机上，通过这种端口可以提供一种基于DOS模式下的通信服务。如以前的BBS是纯字符界面的，支持BBS的服务器将23端口打开，对外提供服务。\n（3）\nSMTP：定义了简单邮件传送协议，现在很多邮件服务器都用的是这个协议，用于发送邮件。如常见的免费邮件服务中用的就是这个邮件服务端口，所以在电子邮件设置中常看到有这么SMTP端口设置这个栏，服务器开放的是25号端口。\n（4）\nPOP3：它是和SMTP对应，POP3用于接收邮件。通常情况下，POP3协议所用的是110端口。也是说，只要你有相应的使用POP3协议的程序（例如Foxmail或Outlook），就可以不以Web方式登陆进邮箱界面，直接用邮件程序就可以收到邮件（如是163邮箱就没有必要先进入网易网站，再进入自己的邮箱来收信）。\n使用UDP协议端口常见的有：\n（1）\nHTTP：这是大家用得最多的协议，它就是常说的\"超文本传输协议\"。上网浏览网页时，就得在提供网页资源的计算机上打开80号端口以提供服务。常说\"WWW服务\"、\"Web服务器\"用的就是这个端口。\n（2）\nDNS：用于域名解析服务，这种服务在Windows\nNT系统中用得最多的。因特网上的每一台计算机都有一个网络地址与之对应，这个地址是常说的IP地址，它以纯数字+\".\"的形式表示。然而这却不便记忆，于是出现了域名，访问计算机的时候只需要知道域名，域名和IP地址之间的变换由DNS服务器来完成。DNS用的是53号端口。\n（3）\nSNMP：简单网络管理协议，使用161号端口，是用来管理网络设备的。由于网络设备很多，无连接的服务就体现出其优势。\n\n另外代理服务器常用以下端口：\n（1）. HTTP协议代理服务器常用端口号：80/8080/3128/8081/9080\n（2）. SOCKS代理协议服务器常用端口号：1080\n（3）. FTP协议代理服务器常用端口号：21\n（4）. Telnet协议代理服务器常用端口：23\n\nWIN2003远程登陆，默认的端口号为3389；\nDHCP server的端口号是67\n端口号的范围是从1～65535。其中1～1024是被RFC 3232规定好了的，被称作“众所周知的端口”(Well Known Ports)；从1025～65535的端口被称为动态端口（Dynamic Ports），可用来建立与其它主机的会话，也可由用户自定义用途。\n\n一些常见的端口号及其用途如下：\nTCP 21端口：FTP 文件传输服务\nTCP 23端口：TELNET 终端仿真服务\nTCP 25端口：SMTP 简单邮件传输服务\nUDP 53端口：DNS 域名解析服务\nTCP 80端口：HTTP 超文本传输服务\nTCP 110端口：POP3 “邮局协议版本3”使用的端口\nTCP 443端口：HTTPS 加密的超文本传输服务\nTCP 1521端口：Oracle数据库服务\nTCP 1863端口：MSN Messenger的文件传输功能所使用的端口\nTCP 3389端口：Microsoft RDP 微软远程桌面使用的端口\nTCP 5631端口：Symantec pcAnywhere 远程控制数据传输时使用的端口\nUDP 5632端口：Symantec pcAnywhere 主控端扫描被控端时使用的端口\nTCP 5000端口：MS SQL Server使用的端口\nUDP 8000端口：腾讯QQ\n\n## 同步异步传输相关\n\n同步传输方式中发送方和接收方的时钟是统一的、字符与字符间的传输是同步无间隔的。\n异步传输方式并不要求发送方和接收方的时钟完全一样，字符与字符间的传输是异步的。\n\n区别点\n1,异步传输是面向字符的传输，而同步传输是面向比特的传输。\n2,异步传输的单位是字符而同步传输的单位是帧。\n3,异步传输通过字符起始和停止码抓住再同步的机会，而同步传输则是在数据中抽取同步信息。\n4,异步传输对时序的要求较低，同步传输往往通过特定的时钟线路协调时序。\n5,异步传输相对于同步传输效率较低。\n\n简单形容\n同步传输就是，数据没有被对方确认收到则调用传输的函数就不返回。\n接收时，如果对方没有发送数据，则你的线程就一直等待，直到有数据了才返回，可以继续执行其他指令\n异步传输就是，你调用一个函数发送数据，马上返回，你可以继续处理其他事，\n接收时，对方的有数据来，你会接收到一个消息，或者你的相关接收函数会被调用。\n\n形象形容\n异步传输: 你传输吧，我去做我的事了，传输完了告诉我一声\n同步传输： 你现在传输，我要亲眼看你传输完成，才去做别的事\n\n## 各协议与对应的层次\n\n![](https://data.singlelovely.cn/images/20190909234526.png)\n\n`注`：RIP  使用应用层520端口。\n\n## TCP协议\n\n[图解TCP连接建立与释放](https://blog.csdn.net/oyhy_/article/details/70201855)\n\n`CLOSED`: 表示初始状态。\n\n`LISTEN`: 表示服务器端的某个SOCKET处于监听状态，可以接受连接。\n\n`SYN_RCVD`: 这个状态表示接受到了SYN报文，在正常情况下，这个状态是服务器端的SOCKET在建立TCP连接时的三次握手会话过程中的一个中间状态，很短暂，基本上用netstat你是很难看到这种状态的，除非你特意写了一个客户端测试程序，故意将三次TCP握手过程中最后一个ACK报文不予发送。因此这种状态时，当收到客户端的ACK报文后，它会进入到ESTABLISHED状态。\n\n`SYN_SENT`: 这个状态与SYN_RCVD遥想呼应，当客户端SOCKET执行CONNECT连接时，它首先发送SYN报文，因此也随即它会进入到了SYN_SENT状态，并等待服务端的发送三次握手中的第2个报文。SYN_SENT状态表示客户端已发送SYN报文。\n\n`ESTABLISHED`：表示连接已经建立。\n\n`FIN_WAIT_1`: FIN_WAIT_1和FIN_WAIT_2状态的真正含义都是表示等待对方的FIN报文。而这两种状态的区别是：FIN_WAIT_1状态实际上是当SOCKET在ESTABLISHED状态时，它想主动关闭连接，向对方发送了FIN报文，此时该SOCKET即进入到FIN_WAIT_1状态。而当对方回应ACK报文后，则进入到FIN_WAIT_2状态，当然在实际的正常情况下，无论对方何种情况下，都应该马上回应ACK报文，所以FIN_WAIT_1状态一般是比较难见到的，而FIN_WAIT_2状态还有时常常可以用netstat看到。\n\n`FIN_WAIT_2`：FIN_WAIT_2状态下的SOCKET，表示半连接，也即有一方要求close连接，但另外还告诉对方，还有数据需要传送，稍后再关闭连接。\n\n`TIME_WAIT`: 表示收到了对方的FIN报文，并发送出了ACK报文，就等2MSL后即可回到CLOSED可用状态了。如果FIN_WAIT_1状态下，收到了对方同时带FIN标志和ACK标志的报文时，可以直接进入到TIME_WAIT状态，而无须经过FIN_WAIT_2状态。\n\n`CLOSING`: 属于一种比较罕见的例外状态。正常情况下，当你发送FIN报文后，按理来说是应该先收到（或同时收到）对方的ACK报文，再收到对方的FIN报文。但是CLOSING状态表示你发送FIN报文后，并没有收到对方的ACK报文，反而却也收到了对方的FIN报文。\n\n`CLOSE_WAIT`: 这种状态的含义表示在等待关闭。当对方close一个SOCKET后发送FIN报文，你系统毫无疑问地会回应一个ACK报文给对方，此时则进入到CLOSE_WAIT状态。\nLAST_ACK: 它是被动关闭一方在发送FIN报文后，最后等待对方的ACK报文。当收到ACK报文后，也即可以进入到CLOSED可用状态了。","slug":"计算机网络考研复习整理","published":1,"updated":"2020-02-20T06:06:59.431Z","comments":1,"layout":"post","link":"","_id":"ckec2td42001sfkupebon9y4p","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"各协议对应的osi层次\"><a class=\"header-anchor\" href=\"#各协议对应的osi层次\">☆</a>各协议对应的osi层次</h2>\n<p>物理层： RJ45 、 CLOCK 、 IEEE802.3 （中继器，集线器，网关） -<br>\n数据链路： PPP 、 FR 、 HDLC 、 VLAN 、 MAC （网桥，交换机） -<br>\n网络层： IP 、 ICMP 、 ARP 、 RARP 、 OSPF 、 IPX 、 RIP 、 IGRP 、 （路由器） -<br>\n传输层： TCP 、 UDP 、 SPX -<br>\n会话层： NFS 、 SQL 、 NETBIOS 、 RPC -<br>\n表示层： JPEG 、 MPEG 、 ASII -<br>\n应用层： FTP 、 DNS 、 Telnet 、 SMTP 、 HTTP 、 WWW 、 NFS</p>\n<h2 id=\"http协议相关\"><a class=\"header-anchor\" href=\"#http协议相关\">☆</a>HTTP协议相关</h2>\n<p>1、OPTIONS<br>\n返回服务器针对特定资源所支持的HTTP请求方法，也可以利用向web服务器发送‘*’的请求来测试服务器的功能性<br>\n2、HEAD<br>\n向服务器索与GET请求相一致的响应，只不过响应体将不会被返回。这一方法可以再不必传输整个响应内容的情况下，就可以获取包含在响应小消息头中的元信息。<br>\n3、GET<br>\n向特定的资源发出请求。注意：GET方法不应当被用于产生“副作用”的操作中，例如在Web Application中，其中一个原因是GET可能会被网络蜘蛛等随意访问。Loadrunner中对应get请求函数：web_link和web_url<br>\n4、POST<br>\n向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。 Loadrunner中对应POST请求函数：web_submit_data,web_submit_form<br>\n5、PUT<br>\n向指定资源位置上传其最新内容<br>\n6、DELETE<br>\n请求服务器删除Request-URL所标识的资源<br>\n7、TRACE<br>\n回显服务器收到的请求，主要用于测试或诊断<br>\n8、CONNECT<br>\nHTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。</p>\n<p>HTTP协议的主要特点可概括如下：</p>\n<p>1.支持客户/服务器模式。</p>\n<p>2.简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。</p>\n<p>3.灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。</p>\n<p>4.无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</p>\n<p>5.无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</p>\n<h2 id=\"常见的网络协议-端口号\"><a class=\"header-anchor\" href=\"#常见的网络协议-端口号\">☆</a>常见的网络协议\\端口号</h2>\n<p>一个网络协议至少包括三要素:<br>\n语法 用来规定信息格式；数据及控制信息的格式、编码及信号电平等。<br>\n语义 用来说明通信双方应当怎么做；用于协调与差错处理的控制信息。<br>\n时序（定时 ）详细说明事件的先后顺序；速度匹配和排序等<br>\n网际(络)层协议：包括：IP协议、ICMP协议、ARP协议、RARP协议。<br>\n传输层协议：TCP协议、UDP协议。<br>\n应用层协议：FTP、Telnet、SMTP、HTTP、RIP、NFS、DNS。</p>\n<p>使用TCP协议的常见端口主要有以下几种：<br>\n（1）<br>\nFTP：定义了文件传输协议，使用21端口。常说某某计算机开了FTP服务便是启动了文件传输服务。下载文件，上传主页，都要用到FTP服务。<br>\n（2）<br>\nTelnet：它是一种用于远程登陆的端口，用户可以以自己的身份远程连接到计算机上，通过这种端口可以提供一种基于DOS模式下的通信服务。如以前的BBS是纯字符界面的，支持BBS的服务器将23端口打开，对外提供服务。<br>\n（3）<br>\nSMTP：定义了简单邮件传送协议，现在很多邮件服务器都用的是这个协议，用于发送邮件。如常见的免费邮件服务中用的就是这个邮件服务端口，所以在电子邮件设置中常看到有这么SMTP端口设置这个栏，服务器开放的是25号端口。<br>\n（4）<br>\nPOP3：它是和SMTP对应，POP3用于接收邮件。通常情况下，POP3协议所用的是110端口。也是说，只要你有相应的使用POP3协议的程序（例如Foxmail或Outlook），就可以不以Web方式登陆进邮箱界面，直接用邮件程序就可以收到邮件（如是163邮箱就没有必要先进入网易网站，再进入自己的邮箱来收信）。<br>\n使用UDP协议端口常见的有：<br>\n（1）<br>\nHTTP：这是大家用得最多的协议，它就是常说的&quot;超文本传输协议&quot;。上网浏览网页时，就得在提供网页资源的计算机上打开80号端口以提供服务。常说&quot;WWW服务&quot;、“Web服务器&quot;用的就是这个端口。<br>\n（2）<br>\nDNS：用于域名解析服务，这种服务在Windows<br>\nNT系统中用得最多的。因特网上的每一台计算机都有一个网络地址与之对应，这个地址是常说的IP地址，它以纯数字+”.&quot;的形式表示。然而这却不便记忆，于是出现了域名，访问计算机的时候只需要知道域名，域名和IP地址之间的变换由DNS服务器来完成。DNS用的是53号端口。<br>\n（3）<br>\nSNMP：简单网络管理协议，使用161号端口，是用来管理网络设备的。由于网络设备很多，无连接的服务就体现出其优势。</p>\n<p>另外代理服务器常用以下端口：<br>\n（1）. HTTP协议代理服务器常用端口号：80/8080/3128/8081/9080<br>\n（2）. SOCKS代理协议服务器常用端口号：1080<br>\n（3）. FTP协议代理服务器常用端口号：21<br>\n（4）. Telnet协议代理服务器常用端口：23</p>\n<p>WIN2003远程登陆，默认的端口号为3389；<br>\nDHCP server的端口号是67<br>\n端口号的范围是从1～65535。其中1～1024是被RFC 3232规定好了的，被称作“众所周知的端口”(Well Known Ports)；从1025～65535的端口被称为动态端口（Dynamic Ports），可用来建立与其它主机的会话，也可由用户自定义用途。</p>\n<p>一些常见的端口号及其用途如下：<br>\nTCP 21端口：FTP 文件传输服务<br>\nTCP 23端口：TELNET 终端仿真服务<br>\nTCP 25端口：SMTP 简单邮件传输服务<br>\nUDP 53端口：DNS 域名解析服务<br>\nTCP 80端口：HTTP 超文本传输服务<br>\nTCP 110端口：POP3 “邮局协议版本3”使用的端口<br>\nTCP 443端口：HTTPS 加密的超文本传输服务<br>\nTCP 1521端口：Oracle数据库服务<br>\nTCP 1863端口：MSN Messenger的文件传输功能所使用的端口<br>\nTCP 3389端口：Microsoft RDP 微软远程桌面使用的端口<br>\nTCP 5631端口：Symantec pcAnywhere 远程控制数据传输时使用的端口<br>\nUDP 5632端口：Symantec pcAnywhere 主控端扫描被控端时使用的端口<br>\nTCP 5000端口：MS SQL Server使用的端口<br>\nUDP 8000端口：腾讯QQ</p>\n<h2 id=\"同步异步传输相关\"><a class=\"header-anchor\" href=\"#同步异步传输相关\">☆</a>同步异步传输相关</h2>\n<p>同步传输方式中发送方和接收方的时钟是统一的、字符与字符间的传输是同步无间隔的。<br>\n异步传输方式并不要求发送方和接收方的时钟完全一样，字符与字符间的传输是异步的。</p>\n<p>区别点<br>\n1,异步传输是面向字符的传输，而同步传输是面向比特的传输。<br>\n2,异步传输的单位是字符而同步传输的单位是帧。<br>\n3,异步传输通过字符起始和停止码抓住再同步的机会，而同步传输则是在数据中抽取同步信息。<br>\n4,异步传输对时序的要求较低，同步传输往往通过特定的时钟线路协调时序。<br>\n5,异步传输相对于同步传输效率较低。</p>\n<p>简单形容<br>\n同步传输就是，数据没有被对方确认收到则调用传输的函数就不返回。<br>\n接收时，如果对方没有发送数据，则你的线程就一直等待，直到有数据了才返回，可以继续执行其他指令<br>\n异步传输就是，你调用一个函数发送数据，马上返回，你可以继续处理其他事，<br>\n接收时，对方的有数据来，你会接收到一个消息，或者你的相关接收函数会被调用。</p>\n<p>形象形容<br>\n异步传输: 你传输吧，我去做我的事了，传输完了告诉我一声<br>\n同步传输： 你现在传输，我要亲眼看你传输完成，才去做别的事</p>\n<h2 id=\"各协议与对应的层次\"><a class=\"header-anchor\" href=\"#各协议与对应的层次\">☆</a>各协议与对应的层次</h2>\n<p><img src=\"https://data.singlelovely.cn/images/20190909234526.png\" alt></p>\n<p><code>注</code>：RIP  使用应用层520端口。</p>\n<h2 id=\"tcp协议\"><a class=\"header-anchor\" href=\"#tcp协议\">☆</a>TCP协议</h2>\n<p><a href=\"https://blog.csdn.net/oyhy_/article/details/70201855\" target=\"_blank\" rel=\"noopener\">图解TCP连接建立与释放</a></p>\n<p><code>CLOSED</code>: 表示初始状态。</p>\n<p><code>LISTEN</code>: 表示服务器端的某个SOCKET处于监听状态，可以接受连接。</p>\n<p><code>SYN_RCVD</code>: 这个状态表示接受到了SYN报文，在正常情况下，这个状态是服务器端的SOCKET在建立TCP连接时的三次握手会话过程中的一个中间状态，很短暂，基本上用netstat你是很难看到这种状态的，除非你特意写了一个客户端测试程序，故意将三次TCP握手过程中最后一个ACK报文不予发送。因此这种状态时，当收到客户端的ACK报文后，它会进入到ESTABLISHED状态。</p>\n<p><code>SYN_SENT</code>: 这个状态与SYN_RCVD遥想呼应，当客户端SOCKET执行CONNECT连接时，它首先发送SYN报文，因此也随即它会进入到了SYN_SENT状态，并等待服务端的发送三次握手中的第2个报文。SYN_SENT状态表示客户端已发送SYN报文。</p>\n<p><code>ESTABLISHED</code>：表示连接已经建立。</p>\n<p><code>FIN_WAIT_1</code>: FIN_WAIT_1和FIN_WAIT_2状态的真正含义都是表示等待对方的FIN报文。而这两种状态的区别是：FIN_WAIT_1状态实际上是当SOCKET在ESTABLISHED状态时，它想主动关闭连接，向对方发送了FIN报文，此时该SOCKET即进入到FIN_WAIT_1状态。而当对方回应ACK报文后，则进入到FIN_WAIT_2状态，当然在实际的正常情况下，无论对方何种情况下，都应该马上回应ACK报文，所以FIN_WAIT_1状态一般是比较难见到的，而FIN_WAIT_2状态还有时常常可以用netstat看到。</p>\n<p><code>FIN_WAIT_2</code>：FIN_WAIT_2状态下的SOCKET，表示半连接，也即有一方要求close连接，但另外还告诉对方，还有数据需要传送，稍后再关闭连接。</p>\n<p><code>TIME_WAIT</code>: 表示收到了对方的FIN报文，并发送出了ACK报文，就等2MSL后即可回到CLOSED可用状态了。如果FIN_WAIT_1状态下，收到了对方同时带FIN标志和ACK标志的报文时，可以直接进入到TIME_WAIT状态，而无须经过FIN_WAIT_2状态。</p>\n<p><code>CLOSING</code>: 属于一种比较罕见的例外状态。正常情况下，当你发送FIN报文后，按理来说是应该先收到（或同时收到）对方的ACK报文，再收到对方的FIN报文。但是CLOSING状态表示你发送FIN报文后，并没有收到对方的ACK报文，反而却也收到了对方的FIN报文。</p>\n<p><code>CLOSE_WAIT</code>: 这种状态的含义表示在等待关闭。当对方close一个SOCKET后发送FIN报文，你系统毫无疑问地会回应一个ACK报文给对方，此时则进入到CLOSE_WAIT状态。<br>\nLAST_ACK: 它是被动关闭一方在发送FIN报文后，最后等待对方的ACK报文。当收到ACK报文后，也即可以进入到CLOSED可用状态了。</p>\n","site":{"data":{}},"length":4603,"excerpt":"","more":"<h2 id=\"各协议对应的osi层次\"><a class=\"header-anchor\" href=\"#各协议对应的osi层次\">☆</a>各协议对应的osi层次</h2>\n<p>物理层： RJ45 、 CLOCK 、 IEEE802.3 （中继器，集线器，网关） -<br>\n数据链路： PPP 、 FR 、 HDLC 、 VLAN 、 MAC （网桥，交换机） -<br>\n网络层： IP 、 ICMP 、 ARP 、 RARP 、 OSPF 、 IPX 、 RIP 、 IGRP 、 （路由器） -<br>\n传输层： TCP 、 UDP 、 SPX -<br>\n会话层： NFS 、 SQL 、 NETBIOS 、 RPC -<br>\n表示层： JPEG 、 MPEG 、 ASII -<br>\n应用层： FTP 、 DNS 、 Telnet 、 SMTP 、 HTTP 、 WWW 、 NFS</p>\n<h2 id=\"http协议相关\"><a class=\"header-anchor\" href=\"#http协议相关\">☆</a>HTTP协议相关</h2>\n<p>1、OPTIONS<br>\n返回服务器针对特定资源所支持的HTTP请求方法，也可以利用向web服务器发送‘*’的请求来测试服务器的功能性<br>\n2、HEAD<br>\n向服务器索与GET请求相一致的响应，只不过响应体将不会被返回。这一方法可以再不必传输整个响应内容的情况下，就可以获取包含在响应小消息头中的元信息。<br>\n3、GET<br>\n向特定的资源发出请求。注意：GET方法不应当被用于产生“副作用”的操作中，例如在Web Application中，其中一个原因是GET可能会被网络蜘蛛等随意访问。Loadrunner中对应get请求函数：web_link和web_url<br>\n4、POST<br>\n向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的建立和/或已有资源的修改。 Loadrunner中对应POST请求函数：web_submit_data,web_submit_form<br>\n5、PUT<br>\n向指定资源位置上传其最新内容<br>\n6、DELETE<br>\n请求服务器删除Request-URL所标识的资源<br>\n7、TRACE<br>\n回显服务器收到的请求，主要用于测试或诊断<br>\n8、CONNECT<br>\nHTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。</p>\n<p>HTTP协议的主要特点可概括如下：</p>\n<p>1.支持客户/服务器模式。</p>\n<p>2.简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。</p>\n<p>3.灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。</p>\n<p>4.无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</p>\n<p>5.无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</p>\n<h2 id=\"常见的网络协议-端口号\"><a class=\"header-anchor\" href=\"#常见的网络协议-端口号\">☆</a>常见的网络协议\\端口号</h2>\n<p>一个网络协议至少包括三要素:<br>\n语法 用来规定信息格式；数据及控制信息的格式、编码及信号电平等。<br>\n语义 用来说明通信双方应当怎么做；用于协调与差错处理的控制信息。<br>\n时序（定时 ）详细说明事件的先后顺序；速度匹配和排序等<br>\n网际(络)层协议：包括：IP协议、ICMP协议、ARP协议、RARP协议。<br>\n传输层协议：TCP协议、UDP协议。<br>\n应用层协议：FTP、Telnet、SMTP、HTTP、RIP、NFS、DNS。</p>\n<p>使用TCP协议的常见端口主要有以下几种：<br>\n（1）<br>\nFTP：定义了文件传输协议，使用21端口。常说某某计算机开了FTP服务便是启动了文件传输服务。下载文件，上传主页，都要用到FTP服务。<br>\n（2）<br>\nTelnet：它是一种用于远程登陆的端口，用户可以以自己的身份远程连接到计算机上，通过这种端口可以提供一种基于DOS模式下的通信服务。如以前的BBS是纯字符界面的，支持BBS的服务器将23端口打开，对外提供服务。<br>\n（3）<br>\nSMTP：定义了简单邮件传送协议，现在很多邮件服务器都用的是这个协议，用于发送邮件。如常见的免费邮件服务中用的就是这个邮件服务端口，所以在电子邮件设置中常看到有这么SMTP端口设置这个栏，服务器开放的是25号端口。<br>\n（4）<br>\nPOP3：它是和SMTP对应，POP3用于接收邮件。通常情况下，POP3协议所用的是110端口。也是说，只要你有相应的使用POP3协议的程序（例如Foxmail或Outlook），就可以不以Web方式登陆进邮箱界面，直接用邮件程序就可以收到邮件（如是163邮箱就没有必要先进入网易网站，再进入自己的邮箱来收信）。<br>\n使用UDP协议端口常见的有：<br>\n（1）<br>\nHTTP：这是大家用得最多的协议，它就是常说的&quot;超文本传输协议&quot;。上网浏览网页时，就得在提供网页资源的计算机上打开80号端口以提供服务。常说&quot;WWW服务&quot;、“Web服务器&quot;用的就是这个端口。<br>\n（2）<br>\nDNS：用于域名解析服务，这种服务在Windows<br>\nNT系统中用得最多的。因特网上的每一台计算机都有一个网络地址与之对应，这个地址是常说的IP地址，它以纯数字+”.&quot;的形式表示。然而这却不便记忆，于是出现了域名，访问计算机的时候只需要知道域名，域名和IP地址之间的变换由DNS服务器来完成。DNS用的是53号端口。<br>\n（3）<br>\nSNMP：简单网络管理协议，使用161号端口，是用来管理网络设备的。由于网络设备很多，无连接的服务就体现出其优势。</p>\n<p>另外代理服务器常用以下端口：<br>\n（1）. HTTP协议代理服务器常用端口号：80/8080/3128/8081/9080<br>\n（2）. SOCKS代理协议服务器常用端口号：1080<br>\n（3）. FTP协议代理服务器常用端口号：21<br>\n（4）. Telnet协议代理服务器常用端口：23</p>\n<p>WIN2003远程登陆，默认的端口号为3389；<br>\nDHCP server的端口号是67<br>\n端口号的范围是从1～65535。其中1～1024是被RFC 3232规定好了的，被称作“众所周知的端口”(Well Known Ports)；从1025～65535的端口被称为动态端口（Dynamic Ports），可用来建立与其它主机的会话，也可由用户自定义用途。</p>\n<p>一些常见的端口号及其用途如下：<br>\nTCP 21端口：FTP 文件传输服务<br>\nTCP 23端口：TELNET 终端仿真服务<br>\nTCP 25端口：SMTP 简单邮件传输服务<br>\nUDP 53端口：DNS 域名解析服务<br>\nTCP 80端口：HTTP 超文本传输服务<br>\nTCP 110端口：POP3 “邮局协议版本3”使用的端口<br>\nTCP 443端口：HTTPS 加密的超文本传输服务<br>\nTCP 1521端口：Oracle数据库服务<br>\nTCP 1863端口：MSN Messenger的文件传输功能所使用的端口<br>\nTCP 3389端口：Microsoft RDP 微软远程桌面使用的端口<br>\nTCP 5631端口：Symantec pcAnywhere 远程控制数据传输时使用的端口<br>\nUDP 5632端口：Symantec pcAnywhere 主控端扫描被控端时使用的端口<br>\nTCP 5000端口：MS SQL Server使用的端口<br>\nUDP 8000端口：腾讯QQ</p>\n<h2 id=\"同步异步传输相关\"><a class=\"header-anchor\" href=\"#同步异步传输相关\">☆</a>同步异步传输相关</h2>\n<p>同步传输方式中发送方和接收方的时钟是统一的、字符与字符间的传输是同步无间隔的。<br>\n异步传输方式并不要求发送方和接收方的时钟完全一样，字符与字符间的传输是异步的。</p>\n<p>区别点<br>\n1,异步传输是面向字符的传输，而同步传输是面向比特的传输。<br>\n2,异步传输的单位是字符而同步传输的单位是帧。<br>\n3,异步传输通过字符起始和停止码抓住再同步的机会，而同步传输则是在数据中抽取同步信息。<br>\n4,异步传输对时序的要求较低，同步传输往往通过特定的时钟线路协调时序。<br>\n5,异步传输相对于同步传输效率较低。</p>\n<p>简单形容<br>\n同步传输就是，数据没有被对方确认收到则调用传输的函数就不返回。<br>\n接收时，如果对方没有发送数据，则你的线程就一直等待，直到有数据了才返回，可以继续执行其他指令<br>\n异步传输就是，你调用一个函数发送数据，马上返回，你可以继续处理其他事，<br>\n接收时，对方的有数据来，你会接收到一个消息，或者你的相关接收函数会被调用。</p>\n<p>形象形容<br>\n异步传输: 你传输吧，我去做我的事了，传输完了告诉我一声<br>\n同步传输： 你现在传输，我要亲眼看你传输完成，才去做别的事</p>\n<h2 id=\"各协议与对应的层次\"><a class=\"header-anchor\" href=\"#各协议与对应的层次\">☆</a>各协议与对应的层次</h2>\n<p><img src=\"https://data.singlelovely.cn/images/20190909234526.png\" alt></p>\n<p><code>注</code>：RIP  使用应用层520端口。</p>\n<h2 id=\"tcp协议\"><a class=\"header-anchor\" href=\"#tcp协议\">☆</a>TCP协议</h2>\n<p><a href=\"https://blog.csdn.net/oyhy_/article/details/70201855\" target=\"_blank\" rel=\"noopener\">图解TCP连接建立与释放</a></p>\n<p><code>CLOSED</code>: 表示初始状态。</p>\n<p><code>LISTEN</code>: 表示服务器端的某个SOCKET处于监听状态，可以接受连接。</p>\n<p><code>SYN_RCVD</code>: 这个状态表示接受到了SYN报文，在正常情况下，这个状态是服务器端的SOCKET在建立TCP连接时的三次握手会话过程中的一个中间状态，很短暂，基本上用netstat你是很难看到这种状态的，除非你特意写了一个客户端测试程序，故意将三次TCP握手过程中最后一个ACK报文不予发送。因此这种状态时，当收到客户端的ACK报文后，它会进入到ESTABLISHED状态。</p>\n<p><code>SYN_SENT</code>: 这个状态与SYN_RCVD遥想呼应，当客户端SOCKET执行CONNECT连接时，它首先发送SYN报文，因此也随即它会进入到了SYN_SENT状态，并等待服务端的发送三次握手中的第2个报文。SYN_SENT状态表示客户端已发送SYN报文。</p>\n<p><code>ESTABLISHED</code>：表示连接已经建立。</p>\n<p><code>FIN_WAIT_1</code>: FIN_WAIT_1和FIN_WAIT_2状态的真正含义都是表示等待对方的FIN报文。而这两种状态的区别是：FIN_WAIT_1状态实际上是当SOCKET在ESTABLISHED状态时，它想主动关闭连接，向对方发送了FIN报文，此时该SOCKET即进入到FIN_WAIT_1状态。而当对方回应ACK报文后，则进入到FIN_WAIT_2状态，当然在实际的正常情况下，无论对方何种情况下，都应该马上回应ACK报文，所以FIN_WAIT_1状态一般是比较难见到的，而FIN_WAIT_2状态还有时常常可以用netstat看到。</p>\n<p><code>FIN_WAIT_2</code>：FIN_WAIT_2状态下的SOCKET，表示半连接，也即有一方要求close连接，但另外还告诉对方，还有数据需要传送，稍后再关闭连接。</p>\n<p><code>TIME_WAIT</code>: 表示收到了对方的FIN报文，并发送出了ACK报文，就等2MSL后即可回到CLOSED可用状态了。如果FIN_WAIT_1状态下，收到了对方同时带FIN标志和ACK标志的报文时，可以直接进入到TIME_WAIT状态，而无须经过FIN_WAIT_2状态。</p>\n<p><code>CLOSING</code>: 属于一种比较罕见的例外状态。正常情况下，当你发送FIN报文后，按理来说是应该先收到（或同时收到）对方的ACK报文，再收到对方的FIN报文。但是CLOSING状态表示你发送FIN报文后，并没有收到对方的ACK报文，反而却也收到了对方的FIN报文。</p>\n<p><code>CLOSE_WAIT</code>: 这种状态的含义表示在等待关闭。当对方close一个SOCKET后发送FIN报文，你系统毫无疑问地会回应一个ACK报文给对方，此时则进入到CLOSE_WAIT状态。<br>\nLAST_ACK: 它是被动关闭一方在发送FIN报文后，最后等待对方的ACK报文。当收到ACK报文后，也即可以进入到CLOSED可用状态了。</p>\n"},{"title":"计算机网络复习","copyright":true,"abbrlink":"9a8cdc59","date":"2018-06-13T00:37:27.000Z","password":null,"_content":"\n{% meting \"1795310580\" \"xiami\" \"song\"  \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n### 第一章  概述\n#### 概念复习\n1. 什么是网络协议？\n\t为进行网络中的数据交换而建立的规则、标准或约定。\n2. 网络协议的三要素是？\n\t- 语法 数据与控制信息的结构或格式 。 \n    - 语义 需要发出何种控制信息，完成何种动作以及做出何种响应。 \n\t- 同步 事件实现顺序的详细说明。\n\n### 第二章  物理层\n#### 概念复习\n1. OSI/RM包括哪些层次？\n\t应用层、表示层、会话层、运输层、网络层、数据链路层、物理层\n2. TCP/IP包括哪些层次？\n\t应用层、运输层、网际层IP、网络接口层\n3. 五层协议？\n\t应用层、运输层、网络层、数据链路层、物理层\n\n4. 物理层的主要任务是？\n\t- 实现位操作\n    - 数据信号的传输\n    - 接口设计\n    - 信号传输规程\n    - 屏蔽掉传输媒体和通信手段的差异\n    - 完成传输方式的转换\n\n\n5. 数据通信的方式有哪些？\n\t- 单向通信（单工）\n\t- 双向交替通信（半双工）\n\t- 双向同时通信（全双工）\n\n\n6. 基带信号调制方法包括哪些？\n\t- 调幅 \n\t-  调频    \n\t-  调相\n\n\n7. 常用编码方式？P44\n\t- 不归零制：正电平代表1，负电平代表0\n\t- 归零制：正脉冲代表1，负脉冲代表0\n\t- 曼彻斯特编码：位于周期中心的向上跳变代表0，位于周期中心的向下跳变代表1\n\t- 差分曼彻斯特编码：在每一位的中心处始终都有跳变。位开始边界有跳变代表1，位开始边界没有跳变代表0。\n\n\n8. 信道的复用技术有哪些？\n\t- 频分复用\n\t\t 频分复用的所有用户在同样的时间占用不同的带宽资源（请注意，这里的“带宽”是频率带宽而不是数据的发送速率）。\n\t- 时分复用\n\t\t- 时分复用的所有用户是在不同的时间点占用同样的频带宽度。\n\t\t- 将时间划分为一段段等长的时分复用帧（TDM 帧）。每一个时分复用的用户在每一个 TDM 帧中占用固定序号的时隙。\n\t\t- 每一个用户所占用的时隙是周期性地出现（其周期就是 TDM  帧的长度）。\n\t\t- TDM 信号也称为等时(isochronous)信号。\n\t- 统计时分复用\n\t\t又称异步时分复用，常用于：集中器\n\t\t\n\t\t![统计时分复用](https://data.singlelovely.cn/xsj/2018/6/14/统计时分复用.png)\n\t\t\n\t- 波分复用：光的频分复用 \n\t\n\t\t ![波分复用](https://data.singlelovely.cn/xsj/2018/6/14/波分复用.png)\n\t\t \n\t- 码分复用：\n\t\t- 码分复用常用的名词时码分多址CDMA。\n\t\t- 各用户使用经过特殊挑选的不同码型，因此彼此不会造成干扰。\n\t\t- 这种系统发送的信号有很强的抗干扰能力，其频谱类似于白噪声，不易被敌人发现。 \n\n\n9. PCM的过程包括？\n\t- PCM：脉冲编码调制\n\t- 采样 、量化 、编码\n\n\n10. 传输媒体包括哪些类型？各有哪些传输介质?\n\t- 引导型传输媒体\n\t\t- 双绞线\n\t\t- 同轴电缆\n\t\t- 光缆\n\t- 非引导型传输媒体\n\t\t- 地面微波接力\n\t\t- 卫星通信\n\n\n#### 练习题\n\n1. 一个码元传输速率为300Baud的信道，如果采用4元制，其信道的传输速率为(  B     )\n\tA.300bit/s    \tB.600bit/s\n\tC.1200bit/s     \tD.2400bit/s\n\t\n2. 采用8个相位的调相传输码元，传输速率为200Baud，则数据传输率为(      B     )\n\tA.400bit/s    \tB.600bit/s\n\tC.800bit/s     \tD.1600bit/s\n\n3. 对于带宽为50khz的信道，若用16种不同的物理状态来表示数据，信噪比为20dB，问该信道的最大数据传输率是多少？若不考虑噪声，则信道的极限传输速率是多少？\n**解：**\n根据奈奎斯特定理：\nC=2Wlog<sub>2</sub> 𝑽=2\\*50\\*log<sub>2</sub>16=400kbit/s\n香浓定理: \n因为：10log<sub>10</sub> (S/N)=20dB，所以S/N=100 \nC = W log<sub>2</sub>(1+S/N)\n=50\\*log2(1+100)kbit/s\n=333kbit/s\n\n\n\n课后习题\n5、7、8、13(2)、14(1)、16\n\n\n{% meting \"1795858870\" \"xiami\" \"song\"  \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n### 第三章  数据链路层\n\n#### 概念复习\n1. 宽带接入技术有哪些？\n\t2.6.1  ADSL 技术\t\n\t- DSL 就是数字用户线\n\t- 非对称数字用户线 ADSL \n\t- 标准模拟电话信号的频带被限制在 300~3400 Hz 的范围内，但用户线本身实际可通过的信号频率仍然超过 1 MHz。ADSL 技术就把 0~4 kHz 低端频谱留给传统电话使用，而把原来没有被利用的高端频谱留给用户上网使用。\n\t- ADSL 的传输距离取决于数据率和用户线的线径（用户线越细，信号传输时的衰减就越大）。\n\t- ADSL 所能得到的最高数据传输速率与实际的用户线上的信噪比密切相关。\n\t- 需要ADSL调制解调器\n&emsp;\n\n\t2.6.2  光纤同轴混合网（HFC网）\n\t\t&emsp;&emsp;&emsp;主干部分改换为光纤，并使用模拟光纤技术\n\t\t\n\t2.6.3  FTTx 技术\n\t&emsp;&emsp;&emsp;多种宽带光纤接入\n\n2. 数据链路层的信道有哪些？.\n\t点对点信道\n\t广播信道\n\t\n3. 帧定界的方法有哪些？\n\t带位填充的首尾标记定界法\n\t违法编码定界法\n\t用控制字符进行帧定界法（SOH和EOT）\n\n\t\n#### 练习\n1.&emsp;要发送的数据是1101 0110 11，采用CRC校验，生成多项式是10011，那么最终发送的数据应该是(       1101 0110 1111 10    )\n\n2.&emsp;采用生成多项式x6+x4+x+1发送的报文到达接收方为101011000110，所接收的报文是否正确？试说明理由。\n&emsp;&emsp;多项式x6+x4+x+1对应的位串是1010011，用它来除接收到的报文，若能整除则所接收报文正确。\n&emsp;&emsp;能够整除，所以收到的报文是正确的。\n\n3.&emsp;一个准备发送的PPP帧的数据部分是 \n  7E AB 15 7D 78 09 7E。试问进行字符填充后的数据是什么（用十六进制写出）\n\n**解**：7D 5E AB 7D 35 7D 5D 78 7D 29 7D 5E\n\n\n4.&emsp;一个PPP帧的数据部分（用十六进制写出）是7D 5E FE 27 7D 5D 7D 23 44 7D 5E。试问真正的数据是什么（用十六进制写出）\n\n**解**：7E FE 27 7D 03 44 7E\n\n5.&emsp;PPP协议使用同步传输技术传送比特串01110 11111 11111 010，试问经过零比特填充后变成怎样的比特串？若接收端收到的PPP帧的数据部分是00011 10111 11011 11100 1010，问删除发送端加入的零比特后变成怎么样的比特串？\n\n**解**：\n&emsp;&emsp;01110 11111 011111 0010\n&emsp;&emsp;00011 10111 11111 11010 10\n\n#### 概念复习\n\n1. PPP帧如何解决透明传输问题\n\t- 当 PPP 用在同步传输链路时，协议规定采用硬件来完成比特填充（和 HDLC 的做法一样）。 \n\t- 当 PPP 用在异步传输时，就使用一种特殊的字符填充法。\n\t\t- 将信息字段中出现的每一个 0x7E 字节转变成为 2 字节序列 (0x7D, 0x5E)。 \n\t\t- 若信息字段中出现一个 0x7D 的字节, 则将其转变成为 2 字节序列 (0x7D, 0x5D)。\n\t\t- 若信息字段中出现 ASCII 码的控制字符（即数值小于 0x20 的字符），则在该字符前面要加入一个 0x7D 字节，后面部分与0x20异或。\n&emsp;\n\n2. CSMA/CD协议的要点有哪些？P88\n\t多点接入：总线型网络，许多计算机以多点接入的方式连接在一根总线上\n\t载波监听：发送前检测信道是否空闲，空闲则发送，若忙则继续检测，直到空闲发送。\n\t碰撞检测：边发送变检测；在发送过程中继续检测信道，若一直未检测到碰撞，就顺利把这个帧成功发送完毕。若检测到碰撞，则终止数据的发送，并发送人为的阻塞信号\n3. 判对错：\n\tCSMA/CD以太网是全双工通信。（错）\n\t曼彻斯特编码是一种自同步编码。（对）\n\t以太网中，小于64字节的帧是无效帧。（对）\n\t循环冗余校验码的缩写为CRC。（对）\n\n#### 练习\n1.CSMA/CD定义的冲突检测时间是（  A  ）\n\tA.信号在最远两个端点之间往返传输的时间\n\tB.信号从线路一端传输到另一端的时间\n\tC.从发送开始到收到应答的时间\n\tD.从发送完毕到收到应答的时间\n2.CSMA/CD方法用来解决多结点如何共享共用总线传输介质的问题，在采用CSMA/CD的网络中(   A   ）\n\tA.不存在集中控制的结点\n\tB.存在一个集中控制的结点\n\tC.存在多个集中控制的结点\n\tD.可以有也可以没有集中控制的结点\n\n3.若10Mbps的CSMA/CD局域网的结点的最大距离为2.5km，信号在介质中的传播速度为2\\*108m/s。求该网的最短帧长。\n\n解：最短帧 =2*\\[(2.5\\*103m)/(2\\*108m/s)]\\*10\\*106bps=250bit\n\n\n4.在一个采用CSMA/CD协议的网络中，传输介质是一个完整的电缆，传输速率为1Gbps，电缆中的信号传播速度是200000km/s。若最小数据帧长度减少800比特，则最远的两个站点之间的距离至少需要（ D   ）\n    A.增加160m   B.增加80m   C.减少160m   D.减少80m\n    本题为2009年全国考研题\n\n\n\n#### 概念复习\n1. MAC帧的格式是？\n\n\t![ ](https://data.singlelovely.cn/xsj/2018/6/15/V2mac帧格式.png)\n\t\n2. 哪些属于无效的MAC帧？\n\t帧的长度不是整数个字节；\n\t用收到的帧检验序列 FCS 查出有差错；\n\t数据字段的长度不在 46 ~ 1500 字节之间。\n\t\n3. 网桥自学习和转发帧的步骤是？\n\t- 交换机收到一帧后先进行自学习。查找交换表中与收到帧的源地址有无相匹配的项目。\n\t\t- 如没有，就在交换表中增加一个项目（源地址、进入的接口和有效时间）。\n\t\t- 如有，则把原有的项目进行更新（进入的接口或有效时间）。\n\t- 转发帧。查找交换表中与收到帧的目的地址有无相匹配的项目。\n\t\t- 如没有，则向所有其他接口（进入的接口除外）转发。\n\t\t- 如有，则按交换表中给出的接口进行转发。\n\t\t- 若交换表中给出的接口就是该帧进入交换机的接口，则应丢弃这个帧（因为这时不需要经过交换机进行转发）\n&emsp;\n\n\n4. 数据链路层解决的三个问题\n\t封装成帧、透明传输、差错检测\n\t\n#### 概念复习\n1.点对点协议PPP\n满足的需求：\n- 简单\n- 封装成帧\n- 透明性\n- 多种网络层协议\n- 多种类型链路\n- 差错检测\n- 检测连接状态\n- 最大传送单元\n- 网络层地址协商\n- 数据压缩协商\n\n\n组成部分：\n- 一个将 IP 数据报封装到串行链路的方法。异步和同步\n-  链路控制协议LCP(Link Control Protocol)。一个用来建立、配置和测试数据链路连接的链路控制协议。\n- 网络控制协议 NCP (Network Control Protocol)。一套网络控制协议，其中的每一个协议支持不同的网络层协议。\n\nPPP帧格式：\t\t\n- 标志字段 F = 0x7E  7E 的二进制表示是 01111110\n- 地址字段 A 只置为 0xFF（广播）。\n- 控制字段 C 通常置为 0x03（无序号的帧）。\n- 这两个字段实际上并不起作用。\n- 帧检验序列（FCS）：用CRC计算得到\n- PPP 是面向字节的，所有的 PPP 帧的长度都是整数字节。\n\n- PPP 有一个 2 个字节的协议字段。其值\n\t- 若为 0x0021，则信息字段就是 IP 数据报。\n\t- 若为 0x8021，则信息字段是网络控制数据。\n\t- 若为 0xC021，则信息字段是 PPP 链路控制数据。\n\t- 若为 0xC023，则信息字段是鉴别数据。\n\n\n\n2.CSMA/CD协议（略）\n3.MAC帧   **P96**\n4.扩展以太网(物理层、数据链路层、VLAN) **P97**\n\t三个基本概念：广播\t 广播域    冲突域\n5.高速以太网 **P103**\n\n课后复习题\n3、7、8、9、10、14(1、2)\n\n\n#### 练习\n\n1.要发送的数据比特序列为10100 01101，CRC校验生成多项式为G(x)=x5+x4+x2+1，试计算CRC校验码\n2、若构造一个CSMA/CD总线网，速率为100Mbit/s，信号在电缆中传播速度为2\\*105km/s，数据帧的最小长度为125B。试求总线电缆的最大长度（假设总线电缆中无中继器）\n\n答案：\n1、01110\n2、125\\*8 = 10^8^\\*t  -->  t  =  10^3^/10^8^=10^-5^\nT=2s/v -> s=t\\*v/2=10^-5^\\*2\\*10^8^/2=10^3^\n\n3、通过IEEE802.3局域网传送ASCII码信息”Good morning!”，若封装成一个MAC帧，请问：\n(1)、该帧的数据字段有效字节为多少？\n(2)、需要填充多少个字节？\n4、一个准备发送的PPP帧的数据部分是 \n  EB 7E 5D 12 7D 21 5E 7E。试问进行字符填充后的数据是什么（用十六进制写出）\n  \n答案：\n3、13B、46-13=33B\n4、EB 7D 5E 5D 7D 32 7D 5D 21 5E 7D 5E\n\n\n{% meting \"1769883494\" \"xiami\" \"song\"  \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n### 第四章    网络层\n\n4.1  网络层提供的两种服务  \n4.2  网际协议 IP  \n4.3  划分子网和构造超网  \n4.4  网际控制报文协议 ICMP  \n4.5  互联网的路由选择协议  \n4.6  IPv6  \n4.7  IP 多播 \n4.8  虚拟专用网 VPN 和网络地址转换 NAT  \n4.9  多协议标记交换 MPLS \n\n\n#### 概念复习\n\n\n1. 网络适配器的作用是什么？网络适配器工作在 哪一层？ \n\t- 进行数据串行传输和并行传输的转换包的装配和拆装网络存取控制数据缓存和网络信号。\n\t- 网络适配器工作在物理层。\n2. 循环冗余校验中某位变为0是否能检测出来？ \n·················\n\n**网际协议 IP** \n与 IP 协议配套使用的还有三个协议：\n\n地址解析协议 ARP     (Address Resolution Protocol) \n网际控制报文协议 ICMP    (Internet Control Message Protocol) \n网际组管理协议 IGMP    (Internet Group Management Protocol) \n\n\n**局域网与局域网的互连** \n- 同种局域网互连 \n\t- 使用相同协议\n\t-  互连比较简单 \n\t-  可使用中继器、集线器进行互连 \n- 异种局域网互连 \n\t- 使用不同协议 \n\t- 可用网桥、交换机互连 \n\t- 多个局域网可以用路由器进行互连 \n\n\n\n **IPv4地址分为A,B,C,D,E类:**\n\n\t- A类:1.0.0.0~126.255.255.255,默认子网掩码/8,即255.0.0.0 (其中127.0.0.0~127.255.255.255为环回地址,用于本地环回测试等用途)；\n\t- B类:128.0.0.0~191.255.255.255,默认子网掩码/16,即255.255.0.0；\n\t- C类:192.0.0.0~223.255.255.255,默认子网掩码/24,即255.255.255.0；\n\t- D类:224.0.0.0~239.255.255.255,一般于用组播\n\t- E类:240.0.0.0~255.255.255.255(其中255.255.255.255为全网广播地址),E类地址一般用于研究用途..\n\n- IPv4中还有一种私有地址,即比如内部局域网所用的地址,分别为:\n\n\t\t10.0.0.0~10.255.255.255；\n\t\t172.16.0.0~172.31.0.0；\n\t\t192.168.0.0~192.168.255.255\n\n\n一般不指派的特殊IP地址 ：\n\n\t\t- 主机号全0、全1不指派\n\t\t- 网络号：\n\t\t\t- A类(0…)  ——全0和127(01111111)不指派           \n\t\t\t- B类(10…) ——128.0不指派           \n\t\t\t-  C类(110…)——192.0.0不指派\n\t\t- 主机号全0——本主机所连接的单个网络地址    \n\t\t- 主机号全1——指定网络内的所有主机    \n\t\t- 网络号全0——本网络    \n\t\t- 网络号127——保留作为本地软件环回测试，即本主机进程之间通信时使用 \n\n#### 练习\n1. 网络层的主要目的是(  C   ) \n \n\t\t A、在邻接结点间进行数据报传输 \n\t\t B、在邻接结点间进行数据报的可靠传输 \n\t\t C、在任意结点间进行数据报传输 \n\t\t D、在任意结点间进行数据报可靠传输 \n \n 2. 以下协议都为网络层协议的是(  C   ) .....\n\t\t\n\t\tA、IP、ICMP、ARP、UDP  \n\t\tB、 TCP、ICMP、UDP、ARP   \n\t\tC、 IP、ICMP、ARP、RARP   \n\t\tD、UDP、 IP、ICMP、RARP \n \n 3. 下列地址中，属于本地回路地址的是( D  ) \n\t \n\t\tA、10.10.10.1  \n\t\tB、 255.255.255.0  \n\t\tC、 192.168.24.59   \n\t\tD、127.0.0.1 \n \n 4. 以下IP地址中可以作为互联网上的IP地址的是 （ C ） \n\n\t\tA、192.46.10.0    \n\t\tB、127.0.0.1    \n\t\tC、110.47.10.0   \n\t\tD、211.60.256.21 \n \n \n #### 虚电路服务与数据报服务\n \n ![](https://data.singlelovely.cn/xsj/2018/6/20/虚电路与数据报服务.png \"虚电路与数据报服务\")\n \n\n \n #### 复习题\n1. 网络层提供了哪两种服务，分别是？\n\t 虚电路服务和数据报服务\n2. 分类的IP地址将IP地址分为几类？如何进行划分？ \n3. 下列IP地址分别是哪类IP地址。 \n   193.52.3.6、 C\n   129.45.26.3、 B\n   10.2.3.5、 A\n   118.45.62.3、A\n   224.34.124.56  D\n\n#### IP协议的特点 \n- 不可靠的投递服务 :  IP协议无法保证数据报投递的结果\n- 无连接的投递服务  : 每个数据报都是独立处理和传输的，IP协议无法保证它们 能够按序到达接收方 \n- 尽力的投递服务 :  IP协议不简单地丢弃数据报，有一线希望，就尽力向前投 递 \n\n#### 练习\n + &emsp; 假设有一个IP数据报，头部长度为20B，数据部分长度为2000B。现该分组从源主机到目的主机需要经过两个网络，这两个网络所允许的最大传输单元MTU为1500B和576B。请问该数据报如何进行分片？ \n\n\n **解：**\n \n \t经过第一个网络时进行分片，分为2个分片 \n     分片1携带1480B的数据，大小为1500B；\n\t 分片2携带520B的数据，大小为540B；\n\t 经过第2个网络时，分片1需要进一步分片 \n\t 分片3携带556B数据，大小为576B \n\t 分片4携带556B数据，大小为576B \n\t 分片5携带368B数据，大小为388B \n\t 分片2大小为540B，因此无需分片 \n\t 目的主机将收到4个分片，即分片2、3、4、5 \n\t\n\t\n\t\n + &emsp;一个IPv4分组到达一个结点时，其头部信息（十六进制 表示）如下： 0x45 00 00 54 00 03 18 50 20 06 FF F0  7C 4E 03 02 B4 0E 0F 02 试问：\n 1. 分组在传输过程中是否已经被破坏\n 2. 该分组是否有选项\n 3. 该分组是否已经被分割（即原始分片中的一片）\n 4.  该分组数据域的大小如何 \n 5. 根据分组头中的生成时间域判断，该分组还可以经过多 少个路由器\n 6.  分组的标识符是什么 \n 7. 分组的服务类型是什么\n 8. 用点分十进制表示，分组的源地址和目的地址各是什么\n\t\n **解：**\n \n\t1. 是，校验和为3F F1，与分组头中的检验和值不同 \n\t2. 没有，分组头长5，不包含选项部分 \n\t3. 已经被分割，偏移值不等于0\n    4. 总长度84个字节(0x54)，头长20，因此数据域的长 度是64个字节 \n    5. 32(0x20) \n    6. 00 03(十六进制) \n    7. 0x00 \n    8. 源地址：124.78.3.2       目的地址：180.14.15.2 \n\n + &emsp;在某个子网中给一共四台主机分配IP地址（子网 掩码均为255.255.255.224），其中一台因IP地 址分配不当存在通信故障，这一台主机IP地址是 （     A     ）\n \n\t\t\t                          四个IP地址的最后一个字节为224---11100000\n\t\t\tA. 200.10.1.60         00111100\n\t\t\tB. 200.10.1.65         01000001\n\t\t\tC. 200.10.1.70         01000110            \n\t\t\tD. 200.10.1.75         01001011 \n\n\n + &emsp; 例：将一个C类网络分成4个子网，若所用网络号为 192.9.200.0 ，则写出网络的子网掩码，并写出每个子网的IP地址范围\n\n        (1)求子网掩码       \n\t\t\t\t要划分4个子网，m=3       \n\t\t\t\t将11100000转换为十进制：224        \n\t\t\t\t子网掩码：255.255.255.224 \n\t\t(2)4个子网的IP地址范围(原网络号192.9.200.0) \n\t\t\t\t1)当子网号=001时，二进制范围为 \n\t\t\t\t\t\t\t11000000 00001001 11001000 00100001~11000000 00001001 11001000 00111110     \n\t\t\t\t\t\t\t相应十进制范围为：192.9.200.33~192.9.200.62\n\t\t\t    2)当子网号=010时，二进制范围为     \n\t\t\t\t\t\t   11000000 00001001 11001000 01000001 ~ 11000000 00001001 11001000 01011110 \n\t\t\t\t\t\t   相应十进制范围为：192.9.200.65~192.9.200.94 \n\t\t\t    3)当子网号=011时，二进制范围为     \n\t\t\t\t\t\t  11000000 00001001 11001000 01100001 ~ 11000000 00001001 11001000 01111110     \n\t\t\t\t\t\t  相应十进制范围为：192.9.200.97~192.9.200.126 \n\t\t\t    4)当子网号=100时，二进制范围为     \n\t\t\t\t\t\t  11000000 00001001 11001000 10000001 ~ 11000000 00001001 11001000 10011110 \n\t\t\t\t\t\t  相应十进制范围为：192.9.200.129~192.9.200.158\n\t\t\n**作业：**\n + &emsp; 现有一个公司需要创建内部的网络，该公司包括工 程技术部、市场部、财务部和办公室4个部门，每个部门约 有20~30台计算机。试问： \n\t + (1)若要将几个部门从网络上进行分开。如果分配该公    司使用的地址为一个C类地址，网络地址为192.168.    161.0，如何划分网络可以将几个部门分开？\n\t +  (2)确定各个部门的网络地址和子网掩码，并写出分配    给每个部门网络中的主机IP地址范围。 \n\n + &emsp; 设某路由器建立了如下路由表： \n\n![ ](https://data.singlelovely.cn/xsj/2018/6/29/420题目路由表.png)\n现共收到5个分组，其目的地址分别为：\n\t\t1. 128.96.39.10 \n\t\t2. 128.96.40.12\n\t\t3. 128.96.40.151 \n\t\t4. 192.4.153.17 \n\t\t5. 192.4.153.90 \n\t试分别计算其下一跳 \n\t\n\t\t\t1. 128.96.39.10   m0    \n\t\t\t2. 128.96.40.12   R2 \n\t\t\t3. 128.96.40.151   R4 \n\t\t\t4. 192.4.153.17   R3 \n\t\t\t5. 192.4.153.90   R4 \n    \n  + &emsp; 某单位分配到一个B类的IP地址，其Net-id为 129.250.0.0.该单位有4000台机器，分布在18个不同的网点，以后可能继续增大各网点的主机 数，试给出此网络的子网掩码。 \n\t + 255.255.248.0 \n\n+ &emsp; 假如正在构建一个有22个子网的B类网络，但是 几个月后该网络将增加至80个子网。每个子网 要求支持至少300个主机，应该选择下面哪个子 网掩码（  B  ） \n\n\t\t\tA  255.255.0.0 \n\t\t\tB  255.255.254.0 \n\t\t\tC  255.255.255.0 \n\t\t\tD  255.255.248.0 \n\n+ &emsp;  152.112.150.82/20所在地址块的最小最大地址 分别是？ \n\n\t\t\t 152.112.144.0 \n\t\t\t 152.112.159.255 \n+ &emsp;  有如下的4个/24地址块，试进行最大可能的聚合 \n\n\t\t\t212.56.132.0/24 \n\t\t\t212.56.133.0/24 \n\t\t\t212.56.134.0/24 \n\t\t\t212.56.135.0/24 \n\n+ &emsp; 已知地址块中的一个地址是140.120.84.24/20。试求这个地址块中最小地址和最大地址，地址掩码是什么？地址块中共有多少个地址？相当于多少 个C类地址\n\n\n\n#### 练习（4.29）\n+ &emsp;一个自治系统有5个局域网，LAN2至LAN5上的 主机数分别为：91，150，3和15.该自治系统分 配到的IP地址块为30.138.118/23。试给出每一 个局域网的地址块（包括前缀）。 \n\n![  ](https://data.singlelovely.cn/xsj/2018/6/29/练习题4291.png)\n\n1.位于不同子网中的主机之间相互通信，下面说法中正确的 是（ C ） \n\n\t\t\t\tA.路由器在转发IP数据报时，重新封装源IP地址和目的IP地址 \n\t\t\t\tB.路由器在转发IP数据报时，重新封装目的IP地址和目的硬件地址 \n\t\t\t\tC.路由器在转发IP数据报时，重新封装源硬件地址和目的硬件地址 \n\t\t\t\tD.路由器在转发IP数据报时，重新封装源IP地址和源硬件地址 \n\n2.关于IP提供的服务，下列说法中正确的是（A ） \n\n\t\tA.IP提供不可靠的数据报传送服务，因此数据报传送不能受到保障\n\t\tB.IP提供不可靠的数据报传送服务，因此它可以随意丢弃数据报 \n\t\tC.IP提供可靠的数据报传送服务，因此数据报传送可以受到保障 \n\t\tD.IP提供可靠的数据报传送服务，因此它不能随意丢弃数据报 \n\n3.一个主机有两个IP地址，一个地址是192.168.11.25，另一 个地址可能是（C ） \n \n\t\t\tA.192.168.11.0              B.192.168.11.26   \n\t\t\tC.192.168.13.25             D.192.168.11.24\n\n4.下列地址中，属于子网86.32.0.0/12的地址是（A ） \n\n\t\t A.86.33.224.123             B.86.79.65.126   \n\t\t C.86.79.65.216              D.86.68.206.154  \n \n 5.某单位分配了一个B类地址，计划将内部网络分成35个子网， 将来要增加16个子网，每个子网的主机数目接近800台，可 行的掩码方案是（ B  ）       \n\n\t\t\tA.255.255.248.0              B.255.255.252.0  \n\t\t\tC.255.255.254.0              D.255.255.255.0   \n\n\n6.如果子网掩码是255.255.192.0，那么下列主机必须通过路 由器才能与主机129.23.144.16通信的是（B）  \n\n\t\t\tA.129.23.191.21        B.129.23.127.222  \n\t\t\tC.129.23.130.33        D.129.23.148.127 \n\n7.在子网192.168.4.0/30中，能接收目的地址为192.168.4.3 的IP分组的最大主机数是（ C ）    \n\n\t\t\tA.0        B.1        C.2        D.4     \n\t\t\t本题为2011年全国考研题 \n \n8.某一个网络地址块192.168.75.0中有5台主机A、B、   C、D和E，A主机的IP地址为192.168.75.18，B主机的    IP地址为192.168.75.146，C主机的IP地址为   192.168.75.158，D主机的IP地址为192.168.75.161，   E主机的IP地址为192.168.75.173，共同的子网掩码是   255.255.255.240。   请回答以下问题，并写出解答过程。 \n&emsp;&emsp;(1)5台主机A、B、C、D、E分属几个网段？哪些主机位于    同一网段？主机D的网络地址为多少？ \n&emsp;&emsp;(2)若要加入第6台主机F，使它能与主机A属于同一网    段，其IP地址范围是多少？\n&emsp;&emsp;(3)若在网络中另加入一台主机，其IP地址设为    192.168.75.164，它的广播地址是多少？哪些主机能     够收到？ \n**解：** \n\n\t\t(1)A主机网络地址：192.168.75.16   \n\t\t\t B主机网络地址：192.168.75.144    \n\t\t\t C主机网络地址：192.168.75.144   \n\t\t\t D主机网络地址：192.168.75.160    \n\t\t\t E主机网络地址：192.168.75.160    \n\t\t\t 5台主机A、B、C、D、E分属3个网段，B和C主机在一个网段，D和E主机在一个网段，A主机在一个网段。    \n\t\t\t D主机网络地址：192.168.75.160 \n\t\t(2)其IP地址范围是192.168.75.17~192.168.75.30之间，并且不能为192.168.75.18 \n\t\t(3)广播地址是：192.168.75.175    D和E可以收到\n\n9.设路由器R的不完整路由表如下表所示(其中下一跳给出的 是路由器的端口)。\n\n![ ](https://data.singlelovely.cn/xsj/2018/6/29/R的不完整路由表.png)\n请回答下列问题：\n(1) 表中序号1~4的目的网络属于哪类网络？它们是由什么网络划分出来的？\n(2) 假如R1端口1和R2端口2的IP地址的host-id均为5(十进制)，请给出它们的IP地址。\n(3) 到目的主机H1~H6的下一跳是什么(如果是直接交付，则请写出转发端口)？ \n\n**解: **\n\n(1) 表中序号1~4的目的网络属于B类网络，它们是由166.111.0.0划分的子网\n(2)R1端口1和R2端口2的IP地址分别连接在网络166.111.32.0和166.111.16.0上，它们的IP地址分别为：166.111.32.5和166.111.16.5\n(3)到目的主机H1~H6的下一跳分别是：  \n\n\t\tH1:166.111.16.5\t\t\t H2:166.111.32.5    \n\t\tH3:直接交付，R的端口2   H4:直接交付，R的端口1    \n\t\tH5:直接交付，R的端口3   H6:166.111.16.5 \n\n{% meting \"1769367394\" \"xiami\" \"song\"  \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n\n### 第五章  传输层\n\n#### 概念复习\n1. 传输层的作用是什么？\n运输层的作用：屏蔽网络层在可靠性等性能上的差异，向应用层提供可靠、无误（差错检测）的数据传输，提供应用进程间的逻辑通信\n\n\n2. 传输层的主要协议有？\n(1) 用户数据报协议 UDP (User Datagram Protocol)\n(2) 传输控制协议 TCP (Transmission Control \n\n\t\tUDP：一种无连接协议\n\t\t提供无连接服务。\n\t\t在传送数据之前不需要先建立连接。\n\t\t传送的数据单位协议是 UDP 报文或用户数据报。\n\t\t对方的运输层在收到 UDP 报文后，不需要给出任何确认。\n\t\t虽然 UDP 不提供可靠交付，但在某些情况下 UDP 是一种最有效的工作方式。\n\t\t\n\t\tTCP：一种面向连接的协议\n\t\t提供面向连接的服务。\n\t\t传送的数据单位协议是 TCP 报文段 (segment)。\n\t\tTCP 不提供广播或多播服务。\n\t\t由于 TCP 要提供可靠的、面向连接的运输服务，因此不可避免地增加了许多的开销。这不仅使协议数据单元的首部增大很多，还要占用许多的处理机资源。\n\n\n3. 端口号分为哪几类？\n(1)熟知端口:数值一般为 0~1023\n(2)登记端口号:数值为 1024~49151\n(3)客户端口或短暂端口号，数值为 49152~65535\n\n4. 套接字的表示方法？\n套接字 = 主机IP地址：端口号\n套接字实际是一个通信端点\n\n#### 练习\n\n一个TCP首部的数据信息为：0x 0D 28 00 15 50 5F A9 06 00 00 00 00 70 02 40 00 C0 29 00 00.\n请回答:\n（1）源端口号和目的端口号是多少？\n（2）发送的序列号是多少？确认号是多少？\n（3）TCP首部的长度是多少？\n（4）这是一个使用什么协议的TCP连接？该TCP连接的状态是什么？\n**解：**\n\n\t\t\t（1）源端口号：3368，目的端口号：21\n\t\t\t（2）发送的序列号是50 5F A9 06，确认号：0\n\t\t\t（3）TCP首部的长度：28\n\t\t\t（4）这是一个使用FTP协议的TCP连接，该TCP连接的状态是建立连接状态\n\n1.UDP数据报头部不包括(     )\n\n\t\tA.UDP源端口号\t\tB.UDP检验和\n\t\tC.UDP目的端口号\t\tD.UDP数据报头部长度\n2.在TCP/IP网络上，用来标识主机和在主机上的应用程序的是(     )\n\n\t\tA.端口号 主机地址 \t\tB.主机地址 IP地址\n\t\tC.IP地址 主机地址\t\tD.IP 地址 端口号\n3.TCP报文中，确认号为1000表示________\n\n\n#### 练习2\n+ &emsp; 主机A向主机B连续发送了两个TCP报文段，其序号分别为70和100。试问：      \n\t- 第一个报文段携带了多少个字节的数据？ \n\t- 主机B收到第一个报文段后发回的确认中的确认号应当是多少？\n\t- 如果主机B收到第二个报文段后发回的确认中的确认号是180，试问A发送的第二个报文段中的数据有多少字节？ \n\t- 如果A发送的第一个报文段丢失了，但第二个报文段到达了B。B在第二个报文段到达后向A发送确认。试问这个确认号应为多少？ \n\n\n**解：**\n\n\t（1）第一个报文段的数据序号是70到99，共30字节的数据。 \n\t（2）确认号应为100. \n\t（3）80字节。       \n\t（4）70 \n\n课本练习题：\n5-39\n\n#### 概念复习\nTCP如何解决对方发送零窗口通知而死锁的情况？\n\n\tTCP 为每一个连接设有一个持续计时器  (persistence timer) 。\n\t只要 TCP 连接的一方收到对方的零窗口通知，就启动该持续计时器。\n\t若持续计时器设置的时间到期，就发送一个零窗口探测报文段（仅携带 1 字节的数据），而对方就在确认这个探测报文段时给出了现在的窗口值。\n\t若窗口仍然是零，则收到这个报文段的一方就重新设置持续计时器。\n\t若窗口不是零，则死锁的僵局就可以打破了。 \n\n\n拥塞控制方法有哪些？\n\n\t四种（ RFC 5681） ：\n\t\t慢开始 (slow-start)\n\t\t拥塞避免 (congestion avoidance)\n\t\t快重传 (fast retransmit)\n\t\t快恢复 (fast recovery)\nUDP（特点、首部、校验）\nTCP（特点、首部、连接管理、可靠传输机制、流量控制、拥塞方法）\n\n#### 练习题\n\n\n1.主机甲和乙建立了TCP连接，甲始终以MSS=1kb大小的段发送数据，并一直有数据发送；乙每收到一个数据段都会发送一个接收窗口为10KB的确认段。若甲在t时刻发生超时时拥塞窗口为8KB，则从t时刻起，不再发生超时的情况下，经过10个RTT后，甲的发送窗口是(  A     ) 。\n\n\t   A. 10KB     B. 12KB \t C. 14KB \t D. 15KB\n\n2.以下关于TCP报头格式的描述中，错误的是(    D  ) 。\n\n\t   A.报头长度为20~60字节，其中固定部分为20字节\n\t   B.端口号字段依次表示源端口号和目的端口号 \n\t   C.报头长度总是4的倍数个字节\n\t   D. TCP校验和伪首部中IP分组头的协议字段为17\n\n\n\n3.滑动窗口的作用是 (  A  ) 。\n\n\t\tA.流量控制\n\t   B.拥塞控制\n\t   C.路由控制\n\t   D.差错控制\n\n4.A和B之间建立了TCP连接，A向B发送了一个报文段，其中序号字段seq=200，确认号字段ACK=201，数据部分有2个字节，那么 在B对该报文段的确认报文段中(  C  ) 。\n\n\n\t\t   A.seq=202，ack=200\n\t\t   B.seq=201，ack=201\n\t\t   C.seq=201，ack=202\n\t\t   D.seq=202，ack=201\n\n5.TCP的通信双方，有一方发送了带有FIN标志的数据段后表示 (   B   ) 。\n  \n\t   A.将断开通信双方的TCP连接\n\t   B.单方面释放连接，表示本方已经无数据发送，但可以接收对方的数据\n\t   C.终止数据发送，双方都不能发送数据\n\t   D.连接被重新建立\n\n6.主机甲和乙之间建立了一个TCP连接，主机甲向主机乙发送了两个连续的TCP段，分别包含300字节和500字节的有效载荷，第一个段的序号为200，主机乙正确收到这两个段后，发送给主机甲的确认序号是 (  D  ) 。\n\n\t   A.500\n\t   B.700\n\t   C.800\n\t   D.1000\n\n7.主机甲和乙之间建立了一个TCP连接，主机甲向主机乙发送了3个连续的TCP段，分别包含300字节400字节和500字节的有效载荷，第3个段的序号为900，若主机乙仅正确收到第1和第3个段，则主机乙发送给主机甲的确认序号是 (   B  ) 。\n\n\t   A. \t300   B. 500   C. \t1200   D. 1400\n\n8.主机甲向主机乙发送一个(SYN=1，seq=11220)的TCP段，期望与主机乙建立TCP连接，若主机乙接受该连接请求，则主机乙向主机甲发送的正确的TCP段可能是（ C ）\n\n\t  A.(SYN=0,ACK=0,seq=11221,ack=11221)\n\t  B.(SYN=1,ACK=1,seq=11220,ack=11220)\n\t  C.(SYN=1,ACK=1,seq=11221,ack=11221)\n\t  D.(SYN=0,ACK=0,seq=11220,ack=11220)\n\t  注：本题为2011年全国考研题\n\n9. TCP报文段的长度必须适应于其下层IP数据报的长度，这样TCP报文段的数据部分最多为（  C ）个字节。\n\n\t\tA.65535       B.65515        C. 65495       D.不确定\n10. 设TCP的拥塞窗口的慢开始门限值初始为8(单位为报文段)，当拥塞窗口上升到12时网络发生超时，TCP开始慢启动和拥塞避免，那么第13次传输时拥塞窗口大小为（  C  ）\n\n\t\tA.4              B.6                C.7                 D.8\n\t\t提示：拥塞窗口变化为：1,2,4,8,9,10,11,12,1,2,4,6,7,8,9……\n\n11. 假设某应用程序每秒产生一个60B的数据块，每个数据块被封装在一个TCP报文中，然后在封装在一个IP数据报中，那么最后每个数据报所包含的应用数据所占的百分比是（注意：TCP和IP报文的首部没有附加字段）（   C  ）\n\n\t\tA.20%       B.40%        C. 60%       D.80%\n12. TCP协议中，发送方的窗口大小取决于（  C  ）\n\n\t\tA.仅接收方允许的窗口              \n\t\tB.接收方允许的窗口和发送方允许的窗口                \n\t\tC.接收方允许的窗口和拥塞窗口                 \n\t\tD.发送方允许的窗口和拥塞窗口\n\n13. TCP“三次握手”过程中，第二次握手时，发送的报文段中（  D ）标志位被置为1\n\n\t\tA.SYN       B.ACK       C. ACK和RST       D.SYN和ACK\n14. 在一个TCP连接中，MSS为1KB，当拥塞窗口为34KB时收到了三个冗余ACK报文，如果在接下来的4个RTT内报文段传输都是成功的，那么当这些报文均得到确认后，拥塞窗口的大小是（  D  ）KB\n\n\t\tA.   8  \t\tB. 16    \tC.   20  \tD.21\n\n15. 主机A基于TCP向主机B连续发送3个TCP报文段，第1个报文段的序号是90，第2个报文段的序号是120，第3个报文段的序号是150.\n\n- (1)第1、2个报文段中有多少数据\n- (2)假设第2个报文段丢失而其他两个报文段到达B，那么在主机B发往主机A的确认报文中，确认号是多少？\n\n\t\t- (1)30、30\n\t\t- (2)120\n\n16.主机H通过快速以太网连接Internet，IP地址为192.168.0.8，服务器S的IP地址为211.68.71.80。H与S使用TCP通信时，在H上捕获的其中5个IP分组如下表所示。\n\n![  ](https://data.singlelovely.cn/xsj/2018/7/1/练习16.png)\n\n(1)表1中的IP分组中，哪几个是由H发送的?哪几个完成了TCP连接建立过程?哪几个在通过快速以太网传输时进行了填充?\n(2)根据表1中的IP分组，分析S已经收到的应用层数据字节数是多少？\n(3)若表1中的某个IP分组在S发出时的前40个字节如表2所示，则该IP分组到达H时经过了多少个路由器？\n\n![ ](https://data.singlelovely.cn/xsj/2018/7/1/练习162.png)\n\n**解：**\n\n\t(1)\t1、3、4由H发送的；\n\t\t1、2、3完成了TCP连接建立过程；\n\t\t3、5通过快速以太网传输时进行了填充.\n\t(2) 846b41d6H-846b41c5H=11H=17字节\n\t(3)S发出的IP分组的标识=6811H，所以对应5号分组，\tS发出时TTL=40H=64,5号分组的TTL=31H=49,\n\t\t64-49=15，\n\t\t所以该IP分组到达H时经过了15个路由器\n\n{% meting \"1770780609\" \"xiami\" \"song\"  \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n### 第六章 \n\n6.1  域名系统 DNS\n6.2  文件传送协议\n6.3  远程终端协议 TELNET\n6.4  万维网 WWW\n6.5  电子邮件\n6.6  动态主机配置协议 DHCP\n6.7  简单网络管理协议 SNMP\n6.8  应用进程跨越网络的通信\n6.9  P2P 应用\n\n#### 概念复习\n\n- DNS的作用？\n\t- 为域名的命名定义一组规则\n\t- 完成域名到IP地址的转换\n\n\n- 在服务器端不考虑负责均衡的情况下：\n\t- 一个域名一个IP地址\n\t- 一个IP地址多个域名\n    原因：一台计算机提供多个服务，既作www服务器又作邮件服务器\n\t\n- 域名服务器的类型？\n\t- 根域名服务器 \n\t- 顶级域名服务器 \n\t- 权限域名服务器 \n\t- 本地域名服务器\n\n- 域名的解析过程有哪些？\n\t- 主机向本地域名服务器的查询一般都是采用递归查询。\n\t- 本地域名服务器向根域名服务器的查询通常是采用迭代查询。\n\n- FTP协议的两个连接分别是？\n\t- FTP使用的两种TCP连接：控制连接、数据连接\n\n\t\t\t控制连接和数据连接的区别：\n\t\t\t控制连接连接的是客户端和服务器端的两个控制进程\n\t\t\t\t数据连接连接的是客户端和服务器端的两个数据传输进程\n\t\t\t控制连接传输的是FTP命令  端口号21\n\t\t\t\t数据连接传输的是文件  端口号22\n\t\t\t控制连接在整个会话期间一直打开——持久连接\n\t\t\t\t数据连接可能为每次传输文件重新打开一次，传输完该文件后关闭——非持久连接\n\n- HTTP 的主要特点 \n\t- HTTP 是面向事务的客户服务器协议。\n\t- HTTP 1.0 协议是无状态的 (stateless)。\n\t- HTTP 协议本身也是无连接的，虽然它使用了面向连接的 TCP 向上提供的服务\n\n- HTTP协议的两种连接方式是指？\n\t- 请求报文——从客户向服务器发送请求报文。\n\t- 响应报文——从服务器到客户的回答。\n\n\n- DHCP 协议的工作过程 \n\n\t\t首先，DHCP客户端发送DHCP发现报文来发现DHCP服务器。DHCP服务器会选取一个未分配的IP地址，向DHCP客户端发送DHCP提供报文。此报文中包含分配给客户端的IP地址和其他配置信息。如果存在多个DHCP服务器，每个DHCP服务器都会响应。\n\t\t如果有多个DHCP服务器向DHCP客户端发送DHCP提供报文，DHCP客户端将会选择收到的第一个DHCP提供报文，然后发送DHCP请求报文，报文中包含请求的IP地址。收到DHCP请求报文后，提供该IP地址的DHCP服务器会向DHCP客户端发送一个DHCP确认报文，包含提供的IP地址和其他配置信息。DHCP客户端收到DHCP确认报文后，会发送免费ARP报文，检查网络中是否有其他主机使用分配的IP地址。如果指定时间内没有收到ARP应答，DHCP客户端会使用这个IP地址。如果有主机使用该IP地址，DHCP客户端会向DHCP服务器发送DHCP拒绝报文，通知服务器该IP地址已被占用。然后DHCP客户端会向服务器重新申请一个IP地址。\n\n- DHCP 协议需要配置的项目\n\t(1) IP 地址\n\t(2) 子网掩码\n\t(3) 默认路由器的 IP 地址\n\t(4) 域名服务器的 IP 地址\n\n#### 练习\n\n\n1. 域名与(   D  )具有一一对应的关系\n\n\t   A. IP地址\n\t   B. MAC地址\n\t   C. 主机\n\t   D. 以上都不是\n\n2. 下列说法错误的是(   A   ) 。\n\n\t   A. Internet上提供客户访问的主机一定要有域名\n\t   B. 同一域名在不同时间可能解析出不同的IP地址\n\t   C. 多个域名可以指向同一个主机IP地址\n\t   D. IP子网中主机可以由不同的域名服务器来维护其映射\n\n3.FTP客户和服务器之间传递FTP命令时，使用的连接是 (  A  ) 。\n\n\t   A. 建立在TCP之上的控制连接\t\n\t   B. 建立在TCP之上的数据连接\n\t   C. 建立在UDP之上的控制连接\n\t   D. 建立在UDP之上的数据连接\n\n4.从协议分析的角度，WWW服务的第一步操作是浏览器对服务器的 (  C  ) 。\n\n\t   A. 请求地址解析\n\t   B. 传输连接建立\n\t   C. 请求域名解析\n\t   D. 会话连接建立\n\n5.万维网上每个页面都有一个唯一的地址，这些地址统称为 (  C   ) 。\n\n\t   A. IP地址\n\t   B. 域名地址\n\t   C. 统一资源定位符 \t\n\t   D. WWW地址\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n6.使用浏览器访问某大学 Web网站主页时，不可能使用到的协议是(  D  ) 。\n   \n\t   A. PPP\n\t   B. ARP\n\t   C. UDP\n\t   D. SMTP\n\n7.HTTP是一个无状态协议，然而Web站点经常希望能够识别用户，这时需要用到( B ) 。\n \n\t   A. Web缓存\n\t   B. Cookie\n\t   C. 条件GET\n\t   D. 持久链接\n\n8.WWW网页文件的编写语言及相应的支持协议分别为（   C  ）\n\n\tA、HTML，HTPT                B、HTTL，HTTP \n\tC、HTML，HTTP                D、以上均不对\n\n9.在因特网域名中，com通常表示（  A   ）\n\n\tA、商业组织   B、教育机构  \n\tC、政府部门   D、军事部门\t\t\n\n\n\n{% meting \"1770780619\" \"xiami\" \"song\"  \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n\n### 第 9 章  无线网络和移动网络\n\n\n9.1  无线局域网 WLAN\n9.2  无线个人区域网 WPAN\n9.3  无线城域网 WMAN\n9.4  蜂窝移动通信网\n9.5  两种不同无线上网\n\n\n#### 无线局域网的组成\n\n- 无线局域网 WLAN (Wireless Local Area Network) 可分为两大类：\n\t- 有固定基础设施的 WLAN\n\t- 无固定基础设施的 WLAN\n\n- 所谓“固定基础设施”是指预先建立起来的、能够覆盖一定地理范围的一批固定基站。\n\n- 固定接入 (fixed access)——在作为网络用户期间，用户设置的地理位置保持不变。\n- 移动接入 (mobility access)——用户设置能够以车辆速度移动时进行网络通信。当发生切换时，通信仍然是连续的。\n- 便携接入 (portable access)——在受限的网络覆盖面积中，用户设备能够在以步行速度移动时进行网络通信，提供有限的切换能力。\n- 游牧接入 (nomadic access)——用户设备的地理位置至少在进行网络通信时保持不变。如用户设备移动了位置，则再次进行通信时可能还要寻找最佳的基站。\n\n\n#### CSMA/CA 算法归纳\n\n(1) 若站点最初有数据要发送（而不是发送不成功再进行重传），且检测到信道空闲，在等待时间 DIFS 后，就发送整个数据帧。\n(2) 否则，站点执行 CSMA/CA 协议的退避算法。一旦检测到信道忙，就冻结退避计时器。只要信道空闲，退避计时器就进行倒计时。\n(3) 当退避计时器时间减少到零时（这时信道只可能是空闲的），站点就发送整个的帧并等待确认。\n(4) 发送站若收到确认，就知道已发送的帧被目的站正确收到了。这时如果要发送第二帧，就要从上面的步骤 (2) 开始，执行 CSMA/CA 协议的退避算法，随机选定一段退避时间。若源站在规定时间内没有收到确认帧 ACK（由重传计时器控制这段时间），就必须重传此帧（再次使用 CSMA/CA 协议争用接入信道），直到收到确认为止，或者经过若干次的重传失败后放弃发送。\n\n#### ZigBee技术的技术特点\n\n数据传输速率低：10KB/秒~250KB /秒，专注于低传输\n成本低：模块成本低，ZifBee协议免专利费\n功耗低：低功耗待机模式下，两节5号电池可用6~24个月 \n时延短：通常时延都在15ms~30ms\n安全： ZigBee采用AES-128加密算法\n有效范围小：传输距离在1-100m的范围内,但可以继续增加\n工作频段灵活：使用频段为2.4GHz、868MHz（欧洲）和915MHz（美国），均为免执照（免费）的频段\n网络容量大：65535个节点\n\n\n#### 无线个人区域网 WPAN\n\n无线个人区域网 WPAN (Wireless Personal Area Network) 就是在个人工作地方把属于个人使用的电子设备用无线技术连接起来自组网络，不需要使用接入点 AP。\n整个网络的范围大约在 10 m左右。\nWPAN可以是一个人使用，也可以是若干人共同使用。\n无线个人区域网 WPAN 和个人区域网 PAN (Personal Area Network) 并不完全等同，因为 PAN 不一定都是使用无线连接的。\n\n1. 蓝牙系统 (Bluetooth)\n\n\t\t最早使用的 WPAN 是 1994 年爱立信公司推出的蓝牙系统，其标准是 IEEE 802.15.1 。\n\t\t蓝牙的数据率为 720 kbit/s，通信范围在 10 米左右。\n\t\t蓝牙使用 TDM 方式和扩频跳频 FHSS 技术组成不用基站的皮可网 (piconet)。\n\n2. 低速 WPAN \n\n\t\t低速 WPAN 主要用于工业监控组网、办公自动化与控制等领域，其速率是 2 ~ 250 kbit/s。\n\t\t低速 WPAN 的标准是 IEEE 802.15.4。最近新修订的标准是 IEEE 802.15.4-2006。\n\t\t低速 WPAN 中最重要的就是 ZigBee。\n\t\tZigBee 技术主要用于各种电子设备（固定的、便携的或移动的）之间的无线通信，其主要特点是通信距离短（10 ~ 80 m），传输数据速率低，并且成本低廉\n\n3. 高速 WPAN\n\n\t\t高速 WPAN 用于在便携式多媒体装置之间传送数据，支持11 ~ 55 Mbit/s 的数据率，标准是 802.15.3。\n\t\tIEEE 802.15.3a 工作组还提出了更高数据率的物理层标准的超高速 WPAN，它使用超宽带 UWB 技术。\n\t\tUWB 技术工作在 3.1 ~ 10.6 GHz 微波频段，有非常高的信道带宽。超宽带信号的带宽应超过信号中心频率的 25% 以上，或信号的绝对带宽超过 500 MHz。\n\t\t超宽带技术使用了瞬间高速脉冲，可支持 100 ~ 400 Mbit/s 的数据率，可用于小范围内高速传送图像或 DVD 质量的多媒体视频文件。 \n\n#### 蜂窝无线通信技术简介 \n\n\t\t蜂窝移动网络的发展非常迅速，到目前为止，世界上先后已有超过了 30 种不同的标准。\n\t\t第一代（1G）蜂窝无线通信是为话音通信设计的模拟 FDM 系统。\n\t\t第二代（2G）蜂窝无线通信提供低速数字通信（短信服务），其代表性体制就是最流行的 GSM 系统。\n\t\t2.5G 技术是从 2G 向第三代（3G）过渡的衔接性技术，如 GPRS 和 EDGE 等。\n\t\t第三代（3G） 移动通信和计算机网络的关系非常密切，它使用 IP 的体系结构和混合的交换机制（电路交换和分组交换），能够提供移动宽带多媒体业务（话音、数据、视频等，可收发电子邮件，浏览网页，进行视频会议等），如 CDMA2000，WCDMA 和 TD-SCDMA。\n\t\t从 3G 开始以后的各代蜂窝移动通信都是以传输数据业务为主的通信系统，而且必须兼容 2G 的功能（即能够通电话和发送短信），这就是所谓的向后兼容。  \n\t\t第四代（4G）正式名称是 IMT-Advanced (International Mobile Telecommunications-Advanced)，意思是高级国际移动通信。\n\t\t4G的一个重要技术指标就是要实现更高的数据率。目标峰值数据率是：固定的和低速移动通信时应达到1 Gbit/s，在高速移动通信时（如在火车、汽车上）应达到100 Mbit/s。\n\n- 4G 现有两个国际标准：\n\n\t\tLTE (Long-Term Evolution)： \n\t\t又分为时分双工 TD-LTE 和 频分双工 FDD-LTE 两种。\n\t\t把带宽增加到 20 MHz，采用了高阶调制 64QAM 和 MIMO 技术。\n\t\tLTE-A (LTE-Advanced)：\n\t\tLTE 的升级版，俗称为 3.9G。\n\t\t带宽高达 100 MHz。\n\n#### 练习\n\n1.IEEE802.11帧分为3种类型：控制帧、管理帧 和 数据帧\n2.IEEE 802.11标准采用. CSMA/CA 机制，可在所有站支持竞争型异步业务，从而是信号冲突概率减少到最小。\n3.无线局域网有两种类型的扫描：主动扫描 和 被动扫描\n\n\n\n4、以下不属于WPAN的是（  D  ）\n\n\tA、Bluetooth      B、ZigBee        \n\tC、UWB       \tD、WiMAX\n\n5、以下不属于第三代移动通信采用的标准体系的是（  D  ）\n\n\tA、CDMA2000\t\tB、WCDMA \t\n\tC、 TD-SCDMA\t\tD、GPRS\n\n\n\n<center> <font color = yellowgreen size = 20>—— 全文完 ——</font> </center> \n\n\n","source":"_posts/计算机网络复习.md","raw":"---\ntitle: 计算机网络复习\ncopyright: true\nabbrlink: 9a8cdc59\ntags: \n- 网络\n- 学习\ncategories: 网络\ndate: 2018-06-13 08:37:27\npassword:\n---\n\n{% meting \"1795310580\" \"xiami\" \"song\"  \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n### 第一章  概述\n#### 概念复习\n1. 什么是网络协议？\n\t为进行网络中的数据交换而建立的规则、标准或约定。\n2. 网络协议的三要素是？\n\t- 语法 数据与控制信息的结构或格式 。 \n    - 语义 需要发出何种控制信息，完成何种动作以及做出何种响应。 \n\t- 同步 事件实现顺序的详细说明。\n\n### 第二章  物理层\n#### 概念复习\n1. OSI/RM包括哪些层次？\n\t应用层、表示层、会话层、运输层、网络层、数据链路层、物理层\n2. TCP/IP包括哪些层次？\n\t应用层、运输层、网际层IP、网络接口层\n3. 五层协议？\n\t应用层、运输层、网络层、数据链路层、物理层\n\n4. 物理层的主要任务是？\n\t- 实现位操作\n    - 数据信号的传输\n    - 接口设计\n    - 信号传输规程\n    - 屏蔽掉传输媒体和通信手段的差异\n    - 完成传输方式的转换\n\n\n5. 数据通信的方式有哪些？\n\t- 单向通信（单工）\n\t- 双向交替通信（半双工）\n\t- 双向同时通信（全双工）\n\n\n6. 基带信号调制方法包括哪些？\n\t- 调幅 \n\t-  调频    \n\t-  调相\n\n\n7. 常用编码方式？P44\n\t- 不归零制：正电平代表1，负电平代表0\n\t- 归零制：正脉冲代表1，负脉冲代表0\n\t- 曼彻斯特编码：位于周期中心的向上跳变代表0，位于周期中心的向下跳变代表1\n\t- 差分曼彻斯特编码：在每一位的中心处始终都有跳变。位开始边界有跳变代表1，位开始边界没有跳变代表0。\n\n\n8. 信道的复用技术有哪些？\n\t- 频分复用\n\t\t 频分复用的所有用户在同样的时间占用不同的带宽资源（请注意，这里的“带宽”是频率带宽而不是数据的发送速率）。\n\t- 时分复用\n\t\t- 时分复用的所有用户是在不同的时间点占用同样的频带宽度。\n\t\t- 将时间划分为一段段等长的时分复用帧（TDM 帧）。每一个时分复用的用户在每一个 TDM 帧中占用固定序号的时隙。\n\t\t- 每一个用户所占用的时隙是周期性地出现（其周期就是 TDM  帧的长度）。\n\t\t- TDM 信号也称为等时(isochronous)信号。\n\t- 统计时分复用\n\t\t又称异步时分复用，常用于：集中器\n\t\t\n\t\t![统计时分复用](https://data.singlelovely.cn/xsj/2018/6/14/统计时分复用.png)\n\t\t\n\t- 波分复用：光的频分复用 \n\t\n\t\t ![波分复用](https://data.singlelovely.cn/xsj/2018/6/14/波分复用.png)\n\t\t \n\t- 码分复用：\n\t\t- 码分复用常用的名词时码分多址CDMA。\n\t\t- 各用户使用经过特殊挑选的不同码型，因此彼此不会造成干扰。\n\t\t- 这种系统发送的信号有很强的抗干扰能力，其频谱类似于白噪声，不易被敌人发现。 \n\n\n9. PCM的过程包括？\n\t- PCM：脉冲编码调制\n\t- 采样 、量化 、编码\n\n\n10. 传输媒体包括哪些类型？各有哪些传输介质?\n\t- 引导型传输媒体\n\t\t- 双绞线\n\t\t- 同轴电缆\n\t\t- 光缆\n\t- 非引导型传输媒体\n\t\t- 地面微波接力\n\t\t- 卫星通信\n\n\n#### 练习题\n\n1. 一个码元传输速率为300Baud的信道，如果采用4元制，其信道的传输速率为(  B     )\n\tA.300bit/s    \tB.600bit/s\n\tC.1200bit/s     \tD.2400bit/s\n\t\n2. 采用8个相位的调相传输码元，传输速率为200Baud，则数据传输率为(      B     )\n\tA.400bit/s    \tB.600bit/s\n\tC.800bit/s     \tD.1600bit/s\n\n3. 对于带宽为50khz的信道，若用16种不同的物理状态来表示数据，信噪比为20dB，问该信道的最大数据传输率是多少？若不考虑噪声，则信道的极限传输速率是多少？\n**解：**\n根据奈奎斯特定理：\nC=2Wlog<sub>2</sub> 𝑽=2\\*50\\*log<sub>2</sub>16=400kbit/s\n香浓定理: \n因为：10log<sub>10</sub> (S/N)=20dB，所以S/N=100 \nC = W log<sub>2</sub>(1+S/N)\n=50\\*log2(1+100)kbit/s\n=333kbit/s\n\n\n\n课后习题\n5、7、8、13(2)、14(1)、16\n\n\n{% meting \"1795858870\" \"xiami\" \"song\"  \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n### 第三章  数据链路层\n\n#### 概念复习\n1. 宽带接入技术有哪些？\n\t2.6.1  ADSL 技术\t\n\t- DSL 就是数字用户线\n\t- 非对称数字用户线 ADSL \n\t- 标准模拟电话信号的频带被限制在 300~3400 Hz 的范围内，但用户线本身实际可通过的信号频率仍然超过 1 MHz。ADSL 技术就把 0~4 kHz 低端频谱留给传统电话使用，而把原来没有被利用的高端频谱留给用户上网使用。\n\t- ADSL 的传输距离取决于数据率和用户线的线径（用户线越细，信号传输时的衰减就越大）。\n\t- ADSL 所能得到的最高数据传输速率与实际的用户线上的信噪比密切相关。\n\t- 需要ADSL调制解调器\n&emsp;\n\n\t2.6.2  光纤同轴混合网（HFC网）\n\t\t&emsp;&emsp;&emsp;主干部分改换为光纤，并使用模拟光纤技术\n\t\t\n\t2.6.3  FTTx 技术\n\t&emsp;&emsp;&emsp;多种宽带光纤接入\n\n2. 数据链路层的信道有哪些？.\n\t点对点信道\n\t广播信道\n\t\n3. 帧定界的方法有哪些？\n\t带位填充的首尾标记定界法\n\t违法编码定界法\n\t用控制字符进行帧定界法（SOH和EOT）\n\n\t\n#### 练习\n1.&emsp;要发送的数据是1101 0110 11，采用CRC校验，生成多项式是10011，那么最终发送的数据应该是(       1101 0110 1111 10    )\n\n2.&emsp;采用生成多项式x6+x4+x+1发送的报文到达接收方为101011000110，所接收的报文是否正确？试说明理由。\n&emsp;&emsp;多项式x6+x4+x+1对应的位串是1010011，用它来除接收到的报文，若能整除则所接收报文正确。\n&emsp;&emsp;能够整除，所以收到的报文是正确的。\n\n3.&emsp;一个准备发送的PPP帧的数据部分是 \n  7E AB 15 7D 78 09 7E。试问进行字符填充后的数据是什么（用十六进制写出）\n\n**解**：7D 5E AB 7D 35 7D 5D 78 7D 29 7D 5E\n\n\n4.&emsp;一个PPP帧的数据部分（用十六进制写出）是7D 5E FE 27 7D 5D 7D 23 44 7D 5E。试问真正的数据是什么（用十六进制写出）\n\n**解**：7E FE 27 7D 03 44 7E\n\n5.&emsp;PPP协议使用同步传输技术传送比特串01110 11111 11111 010，试问经过零比特填充后变成怎样的比特串？若接收端收到的PPP帧的数据部分是00011 10111 11011 11100 1010，问删除发送端加入的零比特后变成怎么样的比特串？\n\n**解**：\n&emsp;&emsp;01110 11111 011111 0010\n&emsp;&emsp;00011 10111 11111 11010 10\n\n#### 概念复习\n\n1. PPP帧如何解决透明传输问题\n\t- 当 PPP 用在同步传输链路时，协议规定采用硬件来完成比特填充（和 HDLC 的做法一样）。 \n\t- 当 PPP 用在异步传输时，就使用一种特殊的字符填充法。\n\t\t- 将信息字段中出现的每一个 0x7E 字节转变成为 2 字节序列 (0x7D, 0x5E)。 \n\t\t- 若信息字段中出现一个 0x7D 的字节, 则将其转变成为 2 字节序列 (0x7D, 0x5D)。\n\t\t- 若信息字段中出现 ASCII 码的控制字符（即数值小于 0x20 的字符），则在该字符前面要加入一个 0x7D 字节，后面部分与0x20异或。\n&emsp;\n\n2. CSMA/CD协议的要点有哪些？P88\n\t多点接入：总线型网络，许多计算机以多点接入的方式连接在一根总线上\n\t载波监听：发送前检测信道是否空闲，空闲则发送，若忙则继续检测，直到空闲发送。\n\t碰撞检测：边发送变检测；在发送过程中继续检测信道，若一直未检测到碰撞，就顺利把这个帧成功发送完毕。若检测到碰撞，则终止数据的发送，并发送人为的阻塞信号\n3. 判对错：\n\tCSMA/CD以太网是全双工通信。（错）\n\t曼彻斯特编码是一种自同步编码。（对）\n\t以太网中，小于64字节的帧是无效帧。（对）\n\t循环冗余校验码的缩写为CRC。（对）\n\n#### 练习\n1.CSMA/CD定义的冲突检测时间是（  A  ）\n\tA.信号在最远两个端点之间往返传输的时间\n\tB.信号从线路一端传输到另一端的时间\n\tC.从发送开始到收到应答的时间\n\tD.从发送完毕到收到应答的时间\n2.CSMA/CD方法用来解决多结点如何共享共用总线传输介质的问题，在采用CSMA/CD的网络中(   A   ）\n\tA.不存在集中控制的结点\n\tB.存在一个集中控制的结点\n\tC.存在多个集中控制的结点\n\tD.可以有也可以没有集中控制的结点\n\n3.若10Mbps的CSMA/CD局域网的结点的最大距离为2.5km，信号在介质中的传播速度为2\\*108m/s。求该网的最短帧长。\n\n解：最短帧 =2*\\[(2.5\\*103m)/(2\\*108m/s)]\\*10\\*106bps=250bit\n\n\n4.在一个采用CSMA/CD协议的网络中，传输介质是一个完整的电缆，传输速率为1Gbps，电缆中的信号传播速度是200000km/s。若最小数据帧长度减少800比特，则最远的两个站点之间的距离至少需要（ D   ）\n    A.增加160m   B.增加80m   C.减少160m   D.减少80m\n    本题为2009年全国考研题\n\n\n\n#### 概念复习\n1. MAC帧的格式是？\n\n\t![ ](https://data.singlelovely.cn/xsj/2018/6/15/V2mac帧格式.png)\n\t\n2. 哪些属于无效的MAC帧？\n\t帧的长度不是整数个字节；\n\t用收到的帧检验序列 FCS 查出有差错；\n\t数据字段的长度不在 46 ~ 1500 字节之间。\n\t\n3. 网桥自学习和转发帧的步骤是？\n\t- 交换机收到一帧后先进行自学习。查找交换表中与收到帧的源地址有无相匹配的项目。\n\t\t- 如没有，就在交换表中增加一个项目（源地址、进入的接口和有效时间）。\n\t\t- 如有，则把原有的项目进行更新（进入的接口或有效时间）。\n\t- 转发帧。查找交换表中与收到帧的目的地址有无相匹配的项目。\n\t\t- 如没有，则向所有其他接口（进入的接口除外）转发。\n\t\t- 如有，则按交换表中给出的接口进行转发。\n\t\t- 若交换表中给出的接口就是该帧进入交换机的接口，则应丢弃这个帧（因为这时不需要经过交换机进行转发）\n&emsp;\n\n\n4. 数据链路层解决的三个问题\n\t封装成帧、透明传输、差错检测\n\t\n#### 概念复习\n1.点对点协议PPP\n满足的需求：\n- 简单\n- 封装成帧\n- 透明性\n- 多种网络层协议\n- 多种类型链路\n- 差错检测\n- 检测连接状态\n- 最大传送单元\n- 网络层地址协商\n- 数据压缩协商\n\n\n组成部分：\n- 一个将 IP 数据报封装到串行链路的方法。异步和同步\n-  链路控制协议LCP(Link Control Protocol)。一个用来建立、配置和测试数据链路连接的链路控制协议。\n- 网络控制协议 NCP (Network Control Protocol)。一套网络控制协议，其中的每一个协议支持不同的网络层协议。\n\nPPP帧格式：\t\t\n- 标志字段 F = 0x7E  7E 的二进制表示是 01111110\n- 地址字段 A 只置为 0xFF（广播）。\n- 控制字段 C 通常置为 0x03（无序号的帧）。\n- 这两个字段实际上并不起作用。\n- 帧检验序列（FCS）：用CRC计算得到\n- PPP 是面向字节的，所有的 PPP 帧的长度都是整数字节。\n\n- PPP 有一个 2 个字节的协议字段。其值\n\t- 若为 0x0021，则信息字段就是 IP 数据报。\n\t- 若为 0x8021，则信息字段是网络控制数据。\n\t- 若为 0xC021，则信息字段是 PPP 链路控制数据。\n\t- 若为 0xC023，则信息字段是鉴别数据。\n\n\n\n2.CSMA/CD协议（略）\n3.MAC帧   **P96**\n4.扩展以太网(物理层、数据链路层、VLAN) **P97**\n\t三个基本概念：广播\t 广播域    冲突域\n5.高速以太网 **P103**\n\n课后复习题\n3、7、8、9、10、14(1、2)\n\n\n#### 练习\n\n1.要发送的数据比特序列为10100 01101，CRC校验生成多项式为G(x)=x5+x4+x2+1，试计算CRC校验码\n2、若构造一个CSMA/CD总线网，速率为100Mbit/s，信号在电缆中传播速度为2\\*105km/s，数据帧的最小长度为125B。试求总线电缆的最大长度（假设总线电缆中无中继器）\n\n答案：\n1、01110\n2、125\\*8 = 10^8^\\*t  -->  t  =  10^3^/10^8^=10^-5^\nT=2s/v -> s=t\\*v/2=10^-5^\\*2\\*10^8^/2=10^3^\n\n3、通过IEEE802.3局域网传送ASCII码信息”Good morning!”，若封装成一个MAC帧，请问：\n(1)、该帧的数据字段有效字节为多少？\n(2)、需要填充多少个字节？\n4、一个准备发送的PPP帧的数据部分是 \n  EB 7E 5D 12 7D 21 5E 7E。试问进行字符填充后的数据是什么（用十六进制写出）\n  \n答案：\n3、13B、46-13=33B\n4、EB 7D 5E 5D 7D 32 7D 5D 21 5E 7D 5E\n\n\n{% meting \"1769883494\" \"xiami\" \"song\"  \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n### 第四章    网络层\n\n4.1  网络层提供的两种服务  \n4.2  网际协议 IP  \n4.3  划分子网和构造超网  \n4.4  网际控制报文协议 ICMP  \n4.5  互联网的路由选择协议  \n4.6  IPv6  \n4.7  IP 多播 \n4.8  虚拟专用网 VPN 和网络地址转换 NAT  \n4.9  多协议标记交换 MPLS \n\n\n#### 概念复习\n\n\n1. 网络适配器的作用是什么？网络适配器工作在 哪一层？ \n\t- 进行数据串行传输和并行传输的转换包的装配和拆装网络存取控制数据缓存和网络信号。\n\t- 网络适配器工作在物理层。\n2. 循环冗余校验中某位变为0是否能检测出来？ \n·················\n\n**网际协议 IP** \n与 IP 协议配套使用的还有三个协议：\n\n地址解析协议 ARP     (Address Resolution Protocol) \n网际控制报文协议 ICMP    (Internet Control Message Protocol) \n网际组管理协议 IGMP    (Internet Group Management Protocol) \n\n\n**局域网与局域网的互连** \n- 同种局域网互连 \n\t- 使用相同协议\n\t-  互连比较简单 \n\t-  可使用中继器、集线器进行互连 \n- 异种局域网互连 \n\t- 使用不同协议 \n\t- 可用网桥、交换机互连 \n\t- 多个局域网可以用路由器进行互连 \n\n\n\n **IPv4地址分为A,B,C,D,E类:**\n\n\t- A类:1.0.0.0~126.255.255.255,默认子网掩码/8,即255.0.0.0 (其中127.0.0.0~127.255.255.255为环回地址,用于本地环回测试等用途)；\n\t- B类:128.0.0.0~191.255.255.255,默认子网掩码/16,即255.255.0.0；\n\t- C类:192.0.0.0~223.255.255.255,默认子网掩码/24,即255.255.255.0；\n\t- D类:224.0.0.0~239.255.255.255,一般于用组播\n\t- E类:240.0.0.0~255.255.255.255(其中255.255.255.255为全网广播地址),E类地址一般用于研究用途..\n\n- IPv4中还有一种私有地址,即比如内部局域网所用的地址,分别为:\n\n\t\t10.0.0.0~10.255.255.255；\n\t\t172.16.0.0~172.31.0.0；\n\t\t192.168.0.0~192.168.255.255\n\n\n一般不指派的特殊IP地址 ：\n\n\t\t- 主机号全0、全1不指派\n\t\t- 网络号：\n\t\t\t- A类(0…)  ——全0和127(01111111)不指派           \n\t\t\t- B类(10…) ——128.0不指派           \n\t\t\t-  C类(110…)——192.0.0不指派\n\t\t- 主机号全0——本主机所连接的单个网络地址    \n\t\t- 主机号全1——指定网络内的所有主机    \n\t\t- 网络号全0——本网络    \n\t\t- 网络号127——保留作为本地软件环回测试，即本主机进程之间通信时使用 \n\n#### 练习\n1. 网络层的主要目的是(  C   ) \n \n\t\t A、在邻接结点间进行数据报传输 \n\t\t B、在邻接结点间进行数据报的可靠传输 \n\t\t C、在任意结点间进行数据报传输 \n\t\t D、在任意结点间进行数据报可靠传输 \n \n 2. 以下协议都为网络层协议的是(  C   ) .....\n\t\t\n\t\tA、IP、ICMP、ARP、UDP  \n\t\tB、 TCP、ICMP、UDP、ARP   \n\t\tC、 IP、ICMP、ARP、RARP   \n\t\tD、UDP、 IP、ICMP、RARP \n \n 3. 下列地址中，属于本地回路地址的是( D  ) \n\t \n\t\tA、10.10.10.1  \n\t\tB、 255.255.255.0  \n\t\tC、 192.168.24.59   \n\t\tD、127.0.0.1 \n \n 4. 以下IP地址中可以作为互联网上的IP地址的是 （ C ） \n\n\t\tA、192.46.10.0    \n\t\tB、127.0.0.1    \n\t\tC、110.47.10.0   \n\t\tD、211.60.256.21 \n \n \n #### 虚电路服务与数据报服务\n \n ![](https://data.singlelovely.cn/xsj/2018/6/20/虚电路与数据报服务.png \"虚电路与数据报服务\")\n \n\n \n #### 复习题\n1. 网络层提供了哪两种服务，分别是？\n\t 虚电路服务和数据报服务\n2. 分类的IP地址将IP地址分为几类？如何进行划分？ \n3. 下列IP地址分别是哪类IP地址。 \n   193.52.3.6、 C\n   129.45.26.3、 B\n   10.2.3.5、 A\n   118.45.62.3、A\n   224.34.124.56  D\n\n#### IP协议的特点 \n- 不可靠的投递服务 :  IP协议无法保证数据报投递的结果\n- 无连接的投递服务  : 每个数据报都是独立处理和传输的，IP协议无法保证它们 能够按序到达接收方 \n- 尽力的投递服务 :  IP协议不简单地丢弃数据报，有一线希望，就尽力向前投 递 \n\n#### 练习\n + &emsp; 假设有一个IP数据报，头部长度为20B，数据部分长度为2000B。现该分组从源主机到目的主机需要经过两个网络，这两个网络所允许的最大传输单元MTU为1500B和576B。请问该数据报如何进行分片？ \n\n\n **解：**\n \n \t经过第一个网络时进行分片，分为2个分片 \n     分片1携带1480B的数据，大小为1500B；\n\t 分片2携带520B的数据，大小为540B；\n\t 经过第2个网络时，分片1需要进一步分片 \n\t 分片3携带556B数据，大小为576B \n\t 分片4携带556B数据，大小为576B \n\t 分片5携带368B数据，大小为388B \n\t 分片2大小为540B，因此无需分片 \n\t 目的主机将收到4个分片，即分片2、3、4、5 \n\t\n\t\n\t\n + &emsp;一个IPv4分组到达一个结点时，其头部信息（十六进制 表示）如下： 0x45 00 00 54 00 03 18 50 20 06 FF F0  7C 4E 03 02 B4 0E 0F 02 试问：\n 1. 分组在传输过程中是否已经被破坏\n 2. 该分组是否有选项\n 3. 该分组是否已经被分割（即原始分片中的一片）\n 4.  该分组数据域的大小如何 \n 5. 根据分组头中的生成时间域判断，该分组还可以经过多 少个路由器\n 6.  分组的标识符是什么 \n 7. 分组的服务类型是什么\n 8. 用点分十进制表示，分组的源地址和目的地址各是什么\n\t\n **解：**\n \n\t1. 是，校验和为3F F1，与分组头中的检验和值不同 \n\t2. 没有，分组头长5，不包含选项部分 \n\t3. 已经被分割，偏移值不等于0\n    4. 总长度84个字节(0x54)，头长20，因此数据域的长 度是64个字节 \n    5. 32(0x20) \n    6. 00 03(十六进制) \n    7. 0x00 \n    8. 源地址：124.78.3.2       目的地址：180.14.15.2 \n\n + &emsp;在某个子网中给一共四台主机分配IP地址（子网 掩码均为255.255.255.224），其中一台因IP地 址分配不当存在通信故障，这一台主机IP地址是 （     A     ）\n \n\t\t\t                          四个IP地址的最后一个字节为224---11100000\n\t\t\tA. 200.10.1.60         00111100\n\t\t\tB. 200.10.1.65         01000001\n\t\t\tC. 200.10.1.70         01000110            \n\t\t\tD. 200.10.1.75         01001011 \n\n\n + &emsp; 例：将一个C类网络分成4个子网，若所用网络号为 192.9.200.0 ，则写出网络的子网掩码，并写出每个子网的IP地址范围\n\n        (1)求子网掩码       \n\t\t\t\t要划分4个子网，m=3       \n\t\t\t\t将11100000转换为十进制：224        \n\t\t\t\t子网掩码：255.255.255.224 \n\t\t(2)4个子网的IP地址范围(原网络号192.9.200.0) \n\t\t\t\t1)当子网号=001时，二进制范围为 \n\t\t\t\t\t\t\t11000000 00001001 11001000 00100001~11000000 00001001 11001000 00111110     \n\t\t\t\t\t\t\t相应十进制范围为：192.9.200.33~192.9.200.62\n\t\t\t    2)当子网号=010时，二进制范围为     \n\t\t\t\t\t\t   11000000 00001001 11001000 01000001 ~ 11000000 00001001 11001000 01011110 \n\t\t\t\t\t\t   相应十进制范围为：192.9.200.65~192.9.200.94 \n\t\t\t    3)当子网号=011时，二进制范围为     \n\t\t\t\t\t\t  11000000 00001001 11001000 01100001 ~ 11000000 00001001 11001000 01111110     \n\t\t\t\t\t\t  相应十进制范围为：192.9.200.97~192.9.200.126 \n\t\t\t    4)当子网号=100时，二进制范围为     \n\t\t\t\t\t\t  11000000 00001001 11001000 10000001 ~ 11000000 00001001 11001000 10011110 \n\t\t\t\t\t\t  相应十进制范围为：192.9.200.129~192.9.200.158\n\t\t\n**作业：**\n + &emsp; 现有一个公司需要创建内部的网络，该公司包括工 程技术部、市场部、财务部和办公室4个部门，每个部门约 有20~30台计算机。试问： \n\t + (1)若要将几个部门从网络上进行分开。如果分配该公    司使用的地址为一个C类地址，网络地址为192.168.    161.0，如何划分网络可以将几个部门分开？\n\t +  (2)确定各个部门的网络地址和子网掩码，并写出分配    给每个部门网络中的主机IP地址范围。 \n\n + &emsp; 设某路由器建立了如下路由表： \n\n![ ](https://data.singlelovely.cn/xsj/2018/6/29/420题目路由表.png)\n现共收到5个分组，其目的地址分别为：\n\t\t1. 128.96.39.10 \n\t\t2. 128.96.40.12\n\t\t3. 128.96.40.151 \n\t\t4. 192.4.153.17 \n\t\t5. 192.4.153.90 \n\t试分别计算其下一跳 \n\t\n\t\t\t1. 128.96.39.10   m0    \n\t\t\t2. 128.96.40.12   R2 \n\t\t\t3. 128.96.40.151   R4 \n\t\t\t4. 192.4.153.17   R3 \n\t\t\t5. 192.4.153.90   R4 \n    \n  + &emsp; 某单位分配到一个B类的IP地址，其Net-id为 129.250.0.0.该单位有4000台机器，分布在18个不同的网点，以后可能继续增大各网点的主机 数，试给出此网络的子网掩码。 \n\t + 255.255.248.0 \n\n+ &emsp; 假如正在构建一个有22个子网的B类网络，但是 几个月后该网络将增加至80个子网。每个子网 要求支持至少300个主机，应该选择下面哪个子 网掩码（  B  ） \n\n\t\t\tA  255.255.0.0 \n\t\t\tB  255.255.254.0 \n\t\t\tC  255.255.255.0 \n\t\t\tD  255.255.248.0 \n\n+ &emsp;  152.112.150.82/20所在地址块的最小最大地址 分别是？ \n\n\t\t\t 152.112.144.0 \n\t\t\t 152.112.159.255 \n+ &emsp;  有如下的4个/24地址块，试进行最大可能的聚合 \n\n\t\t\t212.56.132.0/24 \n\t\t\t212.56.133.0/24 \n\t\t\t212.56.134.0/24 \n\t\t\t212.56.135.0/24 \n\n+ &emsp; 已知地址块中的一个地址是140.120.84.24/20。试求这个地址块中最小地址和最大地址，地址掩码是什么？地址块中共有多少个地址？相当于多少 个C类地址\n\n\n\n#### 练习（4.29）\n+ &emsp;一个自治系统有5个局域网，LAN2至LAN5上的 主机数分别为：91，150，3和15.该自治系统分 配到的IP地址块为30.138.118/23。试给出每一 个局域网的地址块（包括前缀）。 \n\n![  ](https://data.singlelovely.cn/xsj/2018/6/29/练习题4291.png)\n\n1.位于不同子网中的主机之间相互通信，下面说法中正确的 是（ C ） \n\n\t\t\t\tA.路由器在转发IP数据报时，重新封装源IP地址和目的IP地址 \n\t\t\t\tB.路由器在转发IP数据报时，重新封装目的IP地址和目的硬件地址 \n\t\t\t\tC.路由器在转发IP数据报时，重新封装源硬件地址和目的硬件地址 \n\t\t\t\tD.路由器在转发IP数据报时，重新封装源IP地址和源硬件地址 \n\n2.关于IP提供的服务，下列说法中正确的是（A ） \n\n\t\tA.IP提供不可靠的数据报传送服务，因此数据报传送不能受到保障\n\t\tB.IP提供不可靠的数据报传送服务，因此它可以随意丢弃数据报 \n\t\tC.IP提供可靠的数据报传送服务，因此数据报传送可以受到保障 \n\t\tD.IP提供可靠的数据报传送服务，因此它不能随意丢弃数据报 \n\n3.一个主机有两个IP地址，一个地址是192.168.11.25，另一 个地址可能是（C ） \n \n\t\t\tA.192.168.11.0              B.192.168.11.26   \n\t\t\tC.192.168.13.25             D.192.168.11.24\n\n4.下列地址中，属于子网86.32.0.0/12的地址是（A ） \n\n\t\t A.86.33.224.123             B.86.79.65.126   \n\t\t C.86.79.65.216              D.86.68.206.154  \n \n 5.某单位分配了一个B类地址，计划将内部网络分成35个子网， 将来要增加16个子网，每个子网的主机数目接近800台，可 行的掩码方案是（ B  ）       \n\n\t\t\tA.255.255.248.0              B.255.255.252.0  \n\t\t\tC.255.255.254.0              D.255.255.255.0   \n\n\n6.如果子网掩码是255.255.192.0，那么下列主机必须通过路 由器才能与主机129.23.144.16通信的是（B）  \n\n\t\t\tA.129.23.191.21        B.129.23.127.222  \n\t\t\tC.129.23.130.33        D.129.23.148.127 \n\n7.在子网192.168.4.0/30中，能接收目的地址为192.168.4.3 的IP分组的最大主机数是（ C ）    \n\n\t\t\tA.0        B.1        C.2        D.4     \n\t\t\t本题为2011年全国考研题 \n \n8.某一个网络地址块192.168.75.0中有5台主机A、B、   C、D和E，A主机的IP地址为192.168.75.18，B主机的    IP地址为192.168.75.146，C主机的IP地址为   192.168.75.158，D主机的IP地址为192.168.75.161，   E主机的IP地址为192.168.75.173，共同的子网掩码是   255.255.255.240。   请回答以下问题，并写出解答过程。 \n&emsp;&emsp;(1)5台主机A、B、C、D、E分属几个网段？哪些主机位于    同一网段？主机D的网络地址为多少？ \n&emsp;&emsp;(2)若要加入第6台主机F，使它能与主机A属于同一网    段，其IP地址范围是多少？\n&emsp;&emsp;(3)若在网络中另加入一台主机，其IP地址设为    192.168.75.164，它的广播地址是多少？哪些主机能     够收到？ \n**解：** \n\n\t\t(1)A主机网络地址：192.168.75.16   \n\t\t\t B主机网络地址：192.168.75.144    \n\t\t\t C主机网络地址：192.168.75.144   \n\t\t\t D主机网络地址：192.168.75.160    \n\t\t\t E主机网络地址：192.168.75.160    \n\t\t\t 5台主机A、B、C、D、E分属3个网段，B和C主机在一个网段，D和E主机在一个网段，A主机在一个网段。    \n\t\t\t D主机网络地址：192.168.75.160 \n\t\t(2)其IP地址范围是192.168.75.17~192.168.75.30之间，并且不能为192.168.75.18 \n\t\t(3)广播地址是：192.168.75.175    D和E可以收到\n\n9.设路由器R的不完整路由表如下表所示(其中下一跳给出的 是路由器的端口)。\n\n![ ](https://data.singlelovely.cn/xsj/2018/6/29/R的不完整路由表.png)\n请回答下列问题：\n(1) 表中序号1~4的目的网络属于哪类网络？它们是由什么网络划分出来的？\n(2) 假如R1端口1和R2端口2的IP地址的host-id均为5(十进制)，请给出它们的IP地址。\n(3) 到目的主机H1~H6的下一跳是什么(如果是直接交付，则请写出转发端口)？ \n\n**解: **\n\n(1) 表中序号1~4的目的网络属于B类网络，它们是由166.111.0.0划分的子网\n(2)R1端口1和R2端口2的IP地址分别连接在网络166.111.32.0和166.111.16.0上，它们的IP地址分别为：166.111.32.5和166.111.16.5\n(3)到目的主机H1~H6的下一跳分别是：  \n\n\t\tH1:166.111.16.5\t\t\t H2:166.111.32.5    \n\t\tH3:直接交付，R的端口2   H4:直接交付，R的端口1    \n\t\tH5:直接交付，R的端口3   H6:166.111.16.5 \n\n{% meting \"1769367394\" \"xiami\" \"song\"  \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n\n### 第五章  传输层\n\n#### 概念复习\n1. 传输层的作用是什么？\n运输层的作用：屏蔽网络层在可靠性等性能上的差异，向应用层提供可靠、无误（差错检测）的数据传输，提供应用进程间的逻辑通信\n\n\n2. 传输层的主要协议有？\n(1) 用户数据报协议 UDP (User Datagram Protocol)\n(2) 传输控制协议 TCP (Transmission Control \n\n\t\tUDP：一种无连接协议\n\t\t提供无连接服务。\n\t\t在传送数据之前不需要先建立连接。\n\t\t传送的数据单位协议是 UDP 报文或用户数据报。\n\t\t对方的运输层在收到 UDP 报文后，不需要给出任何确认。\n\t\t虽然 UDP 不提供可靠交付，但在某些情况下 UDP 是一种最有效的工作方式。\n\t\t\n\t\tTCP：一种面向连接的协议\n\t\t提供面向连接的服务。\n\t\t传送的数据单位协议是 TCP 报文段 (segment)。\n\t\tTCP 不提供广播或多播服务。\n\t\t由于 TCP 要提供可靠的、面向连接的运输服务，因此不可避免地增加了许多的开销。这不仅使协议数据单元的首部增大很多，还要占用许多的处理机资源。\n\n\n3. 端口号分为哪几类？\n(1)熟知端口:数值一般为 0~1023\n(2)登记端口号:数值为 1024~49151\n(3)客户端口或短暂端口号，数值为 49152~65535\n\n4. 套接字的表示方法？\n套接字 = 主机IP地址：端口号\n套接字实际是一个通信端点\n\n#### 练习\n\n一个TCP首部的数据信息为：0x 0D 28 00 15 50 5F A9 06 00 00 00 00 70 02 40 00 C0 29 00 00.\n请回答:\n（1）源端口号和目的端口号是多少？\n（2）发送的序列号是多少？确认号是多少？\n（3）TCP首部的长度是多少？\n（4）这是一个使用什么协议的TCP连接？该TCP连接的状态是什么？\n**解：**\n\n\t\t\t（1）源端口号：3368，目的端口号：21\n\t\t\t（2）发送的序列号是50 5F A9 06，确认号：0\n\t\t\t（3）TCP首部的长度：28\n\t\t\t（4）这是一个使用FTP协议的TCP连接，该TCP连接的状态是建立连接状态\n\n1.UDP数据报头部不包括(     )\n\n\t\tA.UDP源端口号\t\tB.UDP检验和\n\t\tC.UDP目的端口号\t\tD.UDP数据报头部长度\n2.在TCP/IP网络上，用来标识主机和在主机上的应用程序的是(     )\n\n\t\tA.端口号 主机地址 \t\tB.主机地址 IP地址\n\t\tC.IP地址 主机地址\t\tD.IP 地址 端口号\n3.TCP报文中，确认号为1000表示________\n\n\n#### 练习2\n+ &emsp; 主机A向主机B连续发送了两个TCP报文段，其序号分别为70和100。试问：      \n\t- 第一个报文段携带了多少个字节的数据？ \n\t- 主机B收到第一个报文段后发回的确认中的确认号应当是多少？\n\t- 如果主机B收到第二个报文段后发回的确认中的确认号是180，试问A发送的第二个报文段中的数据有多少字节？ \n\t- 如果A发送的第一个报文段丢失了，但第二个报文段到达了B。B在第二个报文段到达后向A发送确认。试问这个确认号应为多少？ \n\n\n**解：**\n\n\t（1）第一个报文段的数据序号是70到99，共30字节的数据。 \n\t（2）确认号应为100. \n\t（3）80字节。       \n\t（4）70 \n\n课本练习题：\n5-39\n\n#### 概念复习\nTCP如何解决对方发送零窗口通知而死锁的情况？\n\n\tTCP 为每一个连接设有一个持续计时器  (persistence timer) 。\n\t只要 TCP 连接的一方收到对方的零窗口通知，就启动该持续计时器。\n\t若持续计时器设置的时间到期，就发送一个零窗口探测报文段（仅携带 1 字节的数据），而对方就在确认这个探测报文段时给出了现在的窗口值。\n\t若窗口仍然是零，则收到这个报文段的一方就重新设置持续计时器。\n\t若窗口不是零，则死锁的僵局就可以打破了。 \n\n\n拥塞控制方法有哪些？\n\n\t四种（ RFC 5681） ：\n\t\t慢开始 (slow-start)\n\t\t拥塞避免 (congestion avoidance)\n\t\t快重传 (fast retransmit)\n\t\t快恢复 (fast recovery)\nUDP（特点、首部、校验）\nTCP（特点、首部、连接管理、可靠传输机制、流量控制、拥塞方法）\n\n#### 练习题\n\n\n1.主机甲和乙建立了TCP连接，甲始终以MSS=1kb大小的段发送数据，并一直有数据发送；乙每收到一个数据段都会发送一个接收窗口为10KB的确认段。若甲在t时刻发生超时时拥塞窗口为8KB，则从t时刻起，不再发生超时的情况下，经过10个RTT后，甲的发送窗口是(  A     ) 。\n\n\t   A. 10KB     B. 12KB \t C. 14KB \t D. 15KB\n\n2.以下关于TCP报头格式的描述中，错误的是(    D  ) 。\n\n\t   A.报头长度为20~60字节，其中固定部分为20字节\n\t   B.端口号字段依次表示源端口号和目的端口号 \n\t   C.报头长度总是4的倍数个字节\n\t   D. TCP校验和伪首部中IP分组头的协议字段为17\n\n\n\n3.滑动窗口的作用是 (  A  ) 。\n\n\t\tA.流量控制\n\t   B.拥塞控制\n\t   C.路由控制\n\t   D.差错控制\n\n4.A和B之间建立了TCP连接，A向B发送了一个报文段，其中序号字段seq=200，确认号字段ACK=201，数据部分有2个字节，那么 在B对该报文段的确认报文段中(  C  ) 。\n\n\n\t\t   A.seq=202，ack=200\n\t\t   B.seq=201，ack=201\n\t\t   C.seq=201，ack=202\n\t\t   D.seq=202，ack=201\n\n5.TCP的通信双方，有一方发送了带有FIN标志的数据段后表示 (   B   ) 。\n  \n\t   A.将断开通信双方的TCP连接\n\t   B.单方面释放连接，表示本方已经无数据发送，但可以接收对方的数据\n\t   C.终止数据发送，双方都不能发送数据\n\t   D.连接被重新建立\n\n6.主机甲和乙之间建立了一个TCP连接，主机甲向主机乙发送了两个连续的TCP段，分别包含300字节和500字节的有效载荷，第一个段的序号为200，主机乙正确收到这两个段后，发送给主机甲的确认序号是 (  D  ) 。\n\n\t   A.500\n\t   B.700\n\t   C.800\n\t   D.1000\n\n7.主机甲和乙之间建立了一个TCP连接，主机甲向主机乙发送了3个连续的TCP段，分别包含300字节400字节和500字节的有效载荷，第3个段的序号为900，若主机乙仅正确收到第1和第3个段，则主机乙发送给主机甲的确认序号是 (   B  ) 。\n\n\t   A. \t300   B. 500   C. \t1200   D. 1400\n\n8.主机甲向主机乙发送一个(SYN=1，seq=11220)的TCP段，期望与主机乙建立TCP连接，若主机乙接受该连接请求，则主机乙向主机甲发送的正确的TCP段可能是（ C ）\n\n\t  A.(SYN=0,ACK=0,seq=11221,ack=11221)\n\t  B.(SYN=1,ACK=1,seq=11220,ack=11220)\n\t  C.(SYN=1,ACK=1,seq=11221,ack=11221)\n\t  D.(SYN=0,ACK=0,seq=11220,ack=11220)\n\t  注：本题为2011年全国考研题\n\n9. TCP报文段的长度必须适应于其下层IP数据报的长度，这样TCP报文段的数据部分最多为（  C ）个字节。\n\n\t\tA.65535       B.65515        C. 65495       D.不确定\n10. 设TCP的拥塞窗口的慢开始门限值初始为8(单位为报文段)，当拥塞窗口上升到12时网络发生超时，TCP开始慢启动和拥塞避免，那么第13次传输时拥塞窗口大小为（  C  ）\n\n\t\tA.4              B.6                C.7                 D.8\n\t\t提示：拥塞窗口变化为：1,2,4,8,9,10,11,12,1,2,4,6,7,8,9……\n\n11. 假设某应用程序每秒产生一个60B的数据块，每个数据块被封装在一个TCP报文中，然后在封装在一个IP数据报中，那么最后每个数据报所包含的应用数据所占的百分比是（注意：TCP和IP报文的首部没有附加字段）（   C  ）\n\n\t\tA.20%       B.40%        C. 60%       D.80%\n12. TCP协议中，发送方的窗口大小取决于（  C  ）\n\n\t\tA.仅接收方允许的窗口              \n\t\tB.接收方允许的窗口和发送方允许的窗口                \n\t\tC.接收方允许的窗口和拥塞窗口                 \n\t\tD.发送方允许的窗口和拥塞窗口\n\n13. TCP“三次握手”过程中，第二次握手时，发送的报文段中（  D ）标志位被置为1\n\n\t\tA.SYN       B.ACK       C. ACK和RST       D.SYN和ACK\n14. 在一个TCP连接中，MSS为1KB，当拥塞窗口为34KB时收到了三个冗余ACK报文，如果在接下来的4个RTT内报文段传输都是成功的，那么当这些报文均得到确认后，拥塞窗口的大小是（  D  ）KB\n\n\t\tA.   8  \t\tB. 16    \tC.   20  \tD.21\n\n15. 主机A基于TCP向主机B连续发送3个TCP报文段，第1个报文段的序号是90，第2个报文段的序号是120，第3个报文段的序号是150.\n\n- (1)第1、2个报文段中有多少数据\n- (2)假设第2个报文段丢失而其他两个报文段到达B，那么在主机B发往主机A的确认报文中，确认号是多少？\n\n\t\t- (1)30、30\n\t\t- (2)120\n\n16.主机H通过快速以太网连接Internet，IP地址为192.168.0.8，服务器S的IP地址为211.68.71.80。H与S使用TCP通信时，在H上捕获的其中5个IP分组如下表所示。\n\n![  ](https://data.singlelovely.cn/xsj/2018/7/1/练习16.png)\n\n(1)表1中的IP分组中，哪几个是由H发送的?哪几个完成了TCP连接建立过程?哪几个在通过快速以太网传输时进行了填充?\n(2)根据表1中的IP分组，分析S已经收到的应用层数据字节数是多少？\n(3)若表1中的某个IP分组在S发出时的前40个字节如表2所示，则该IP分组到达H时经过了多少个路由器？\n\n![ ](https://data.singlelovely.cn/xsj/2018/7/1/练习162.png)\n\n**解：**\n\n\t(1)\t1、3、4由H发送的；\n\t\t1、2、3完成了TCP连接建立过程；\n\t\t3、5通过快速以太网传输时进行了填充.\n\t(2) 846b41d6H-846b41c5H=11H=17字节\n\t(3)S发出的IP分组的标识=6811H，所以对应5号分组，\tS发出时TTL=40H=64,5号分组的TTL=31H=49,\n\t\t64-49=15，\n\t\t所以该IP分组到达H时经过了15个路由器\n\n{% meting \"1770780609\" \"xiami\" \"song\"  \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n### 第六章 \n\n6.1  域名系统 DNS\n6.2  文件传送协议\n6.3  远程终端协议 TELNET\n6.4  万维网 WWW\n6.5  电子邮件\n6.6  动态主机配置协议 DHCP\n6.7  简单网络管理协议 SNMP\n6.8  应用进程跨越网络的通信\n6.9  P2P 应用\n\n#### 概念复习\n\n- DNS的作用？\n\t- 为域名的命名定义一组规则\n\t- 完成域名到IP地址的转换\n\n\n- 在服务器端不考虑负责均衡的情况下：\n\t- 一个域名一个IP地址\n\t- 一个IP地址多个域名\n    原因：一台计算机提供多个服务，既作www服务器又作邮件服务器\n\t\n- 域名服务器的类型？\n\t- 根域名服务器 \n\t- 顶级域名服务器 \n\t- 权限域名服务器 \n\t- 本地域名服务器\n\n- 域名的解析过程有哪些？\n\t- 主机向本地域名服务器的查询一般都是采用递归查询。\n\t- 本地域名服务器向根域名服务器的查询通常是采用迭代查询。\n\n- FTP协议的两个连接分别是？\n\t- FTP使用的两种TCP连接：控制连接、数据连接\n\n\t\t\t控制连接和数据连接的区别：\n\t\t\t控制连接连接的是客户端和服务器端的两个控制进程\n\t\t\t\t数据连接连接的是客户端和服务器端的两个数据传输进程\n\t\t\t控制连接传输的是FTP命令  端口号21\n\t\t\t\t数据连接传输的是文件  端口号22\n\t\t\t控制连接在整个会话期间一直打开——持久连接\n\t\t\t\t数据连接可能为每次传输文件重新打开一次，传输完该文件后关闭——非持久连接\n\n- HTTP 的主要特点 \n\t- HTTP 是面向事务的客户服务器协议。\n\t- HTTP 1.0 协议是无状态的 (stateless)。\n\t- HTTP 协议本身也是无连接的，虽然它使用了面向连接的 TCP 向上提供的服务\n\n- HTTP协议的两种连接方式是指？\n\t- 请求报文——从客户向服务器发送请求报文。\n\t- 响应报文——从服务器到客户的回答。\n\n\n- DHCP 协议的工作过程 \n\n\t\t首先，DHCP客户端发送DHCP发现报文来发现DHCP服务器。DHCP服务器会选取一个未分配的IP地址，向DHCP客户端发送DHCP提供报文。此报文中包含分配给客户端的IP地址和其他配置信息。如果存在多个DHCP服务器，每个DHCP服务器都会响应。\n\t\t如果有多个DHCP服务器向DHCP客户端发送DHCP提供报文，DHCP客户端将会选择收到的第一个DHCP提供报文，然后发送DHCP请求报文，报文中包含请求的IP地址。收到DHCP请求报文后，提供该IP地址的DHCP服务器会向DHCP客户端发送一个DHCP确认报文，包含提供的IP地址和其他配置信息。DHCP客户端收到DHCP确认报文后，会发送免费ARP报文，检查网络中是否有其他主机使用分配的IP地址。如果指定时间内没有收到ARP应答，DHCP客户端会使用这个IP地址。如果有主机使用该IP地址，DHCP客户端会向DHCP服务器发送DHCP拒绝报文，通知服务器该IP地址已被占用。然后DHCP客户端会向服务器重新申请一个IP地址。\n\n- DHCP 协议需要配置的项目\n\t(1) IP 地址\n\t(2) 子网掩码\n\t(3) 默认路由器的 IP 地址\n\t(4) 域名服务器的 IP 地址\n\n#### 练习\n\n\n1. 域名与(   D  )具有一一对应的关系\n\n\t   A. IP地址\n\t   B. MAC地址\n\t   C. 主机\n\t   D. 以上都不是\n\n2. 下列说法错误的是(   A   ) 。\n\n\t   A. Internet上提供客户访问的主机一定要有域名\n\t   B. 同一域名在不同时间可能解析出不同的IP地址\n\t   C. 多个域名可以指向同一个主机IP地址\n\t   D. IP子网中主机可以由不同的域名服务器来维护其映射\n\n3.FTP客户和服务器之间传递FTP命令时，使用的连接是 (  A  ) 。\n\n\t   A. 建立在TCP之上的控制连接\t\n\t   B. 建立在TCP之上的数据连接\n\t   C. 建立在UDP之上的控制连接\n\t   D. 建立在UDP之上的数据连接\n\n4.从协议分析的角度，WWW服务的第一步操作是浏览器对服务器的 (  C  ) 。\n\n\t   A. 请求地址解析\n\t   B. 传输连接建立\n\t   C. 请求域名解析\n\t   D. 会话连接建立\n\n5.万维网上每个页面都有一个唯一的地址，这些地址统称为 (  C   ) 。\n\n\t   A. IP地址\n\t   B. 域名地址\n\t   C. 统一资源定位符 \t\n\t   D. WWW地址\t\t\t\t\t\t\t\t\t\t\t\t\t\n\n6.使用浏览器访问某大学 Web网站主页时，不可能使用到的协议是(  D  ) 。\n   \n\t   A. PPP\n\t   B. ARP\n\t   C. UDP\n\t   D. SMTP\n\n7.HTTP是一个无状态协议，然而Web站点经常希望能够识别用户，这时需要用到( B ) 。\n \n\t   A. Web缓存\n\t   B. Cookie\n\t   C. 条件GET\n\t   D. 持久链接\n\n8.WWW网页文件的编写语言及相应的支持协议分别为（   C  ）\n\n\tA、HTML，HTPT                B、HTTL，HTTP \n\tC、HTML，HTTP                D、以上均不对\n\n9.在因特网域名中，com通常表示（  A   ）\n\n\tA、商业组织   B、教育机构  \n\tC、政府部门   D、军事部门\t\t\n\n\n\n{% meting \"1770780619\" \"xiami\" \"song\"  \"mutex:true\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n\n### 第 9 章  无线网络和移动网络\n\n\n9.1  无线局域网 WLAN\n9.2  无线个人区域网 WPAN\n9.3  无线城域网 WMAN\n9.4  蜂窝移动通信网\n9.5  两种不同无线上网\n\n\n#### 无线局域网的组成\n\n- 无线局域网 WLAN (Wireless Local Area Network) 可分为两大类：\n\t- 有固定基础设施的 WLAN\n\t- 无固定基础设施的 WLAN\n\n- 所谓“固定基础设施”是指预先建立起来的、能够覆盖一定地理范围的一批固定基站。\n\n- 固定接入 (fixed access)——在作为网络用户期间，用户设置的地理位置保持不变。\n- 移动接入 (mobility access)——用户设置能够以车辆速度移动时进行网络通信。当发生切换时，通信仍然是连续的。\n- 便携接入 (portable access)——在受限的网络覆盖面积中，用户设备能够在以步行速度移动时进行网络通信，提供有限的切换能力。\n- 游牧接入 (nomadic access)——用户设备的地理位置至少在进行网络通信时保持不变。如用户设备移动了位置，则再次进行通信时可能还要寻找最佳的基站。\n\n\n#### CSMA/CA 算法归纳\n\n(1) 若站点最初有数据要发送（而不是发送不成功再进行重传），且检测到信道空闲，在等待时间 DIFS 后，就发送整个数据帧。\n(2) 否则，站点执行 CSMA/CA 协议的退避算法。一旦检测到信道忙，就冻结退避计时器。只要信道空闲，退避计时器就进行倒计时。\n(3) 当退避计时器时间减少到零时（这时信道只可能是空闲的），站点就发送整个的帧并等待确认。\n(4) 发送站若收到确认，就知道已发送的帧被目的站正确收到了。这时如果要发送第二帧，就要从上面的步骤 (2) 开始，执行 CSMA/CA 协议的退避算法，随机选定一段退避时间。若源站在规定时间内没有收到确认帧 ACK（由重传计时器控制这段时间），就必须重传此帧（再次使用 CSMA/CA 协议争用接入信道），直到收到确认为止，或者经过若干次的重传失败后放弃发送。\n\n#### ZigBee技术的技术特点\n\n数据传输速率低：10KB/秒~250KB /秒，专注于低传输\n成本低：模块成本低，ZifBee协议免专利费\n功耗低：低功耗待机模式下，两节5号电池可用6~24个月 \n时延短：通常时延都在15ms~30ms\n安全： ZigBee采用AES-128加密算法\n有效范围小：传输距离在1-100m的范围内,但可以继续增加\n工作频段灵活：使用频段为2.4GHz、868MHz（欧洲）和915MHz（美国），均为免执照（免费）的频段\n网络容量大：65535个节点\n\n\n#### 无线个人区域网 WPAN\n\n无线个人区域网 WPAN (Wireless Personal Area Network) 就是在个人工作地方把属于个人使用的电子设备用无线技术连接起来自组网络，不需要使用接入点 AP。\n整个网络的范围大约在 10 m左右。\nWPAN可以是一个人使用，也可以是若干人共同使用。\n无线个人区域网 WPAN 和个人区域网 PAN (Personal Area Network) 并不完全等同，因为 PAN 不一定都是使用无线连接的。\n\n1. 蓝牙系统 (Bluetooth)\n\n\t\t最早使用的 WPAN 是 1994 年爱立信公司推出的蓝牙系统，其标准是 IEEE 802.15.1 。\n\t\t蓝牙的数据率为 720 kbit/s，通信范围在 10 米左右。\n\t\t蓝牙使用 TDM 方式和扩频跳频 FHSS 技术组成不用基站的皮可网 (piconet)。\n\n2. 低速 WPAN \n\n\t\t低速 WPAN 主要用于工业监控组网、办公自动化与控制等领域，其速率是 2 ~ 250 kbit/s。\n\t\t低速 WPAN 的标准是 IEEE 802.15.4。最近新修订的标准是 IEEE 802.15.4-2006。\n\t\t低速 WPAN 中最重要的就是 ZigBee。\n\t\tZigBee 技术主要用于各种电子设备（固定的、便携的或移动的）之间的无线通信，其主要特点是通信距离短（10 ~ 80 m），传输数据速率低，并且成本低廉\n\n3. 高速 WPAN\n\n\t\t高速 WPAN 用于在便携式多媒体装置之间传送数据，支持11 ~ 55 Mbit/s 的数据率，标准是 802.15.3。\n\t\tIEEE 802.15.3a 工作组还提出了更高数据率的物理层标准的超高速 WPAN，它使用超宽带 UWB 技术。\n\t\tUWB 技术工作在 3.1 ~ 10.6 GHz 微波频段，有非常高的信道带宽。超宽带信号的带宽应超过信号中心频率的 25% 以上，或信号的绝对带宽超过 500 MHz。\n\t\t超宽带技术使用了瞬间高速脉冲，可支持 100 ~ 400 Mbit/s 的数据率，可用于小范围内高速传送图像或 DVD 质量的多媒体视频文件。 \n\n#### 蜂窝无线通信技术简介 \n\n\t\t蜂窝移动网络的发展非常迅速，到目前为止，世界上先后已有超过了 30 种不同的标准。\n\t\t第一代（1G）蜂窝无线通信是为话音通信设计的模拟 FDM 系统。\n\t\t第二代（2G）蜂窝无线通信提供低速数字通信（短信服务），其代表性体制就是最流行的 GSM 系统。\n\t\t2.5G 技术是从 2G 向第三代（3G）过渡的衔接性技术，如 GPRS 和 EDGE 等。\n\t\t第三代（3G） 移动通信和计算机网络的关系非常密切，它使用 IP 的体系结构和混合的交换机制（电路交换和分组交换），能够提供移动宽带多媒体业务（话音、数据、视频等，可收发电子邮件，浏览网页，进行视频会议等），如 CDMA2000，WCDMA 和 TD-SCDMA。\n\t\t从 3G 开始以后的各代蜂窝移动通信都是以传输数据业务为主的通信系统，而且必须兼容 2G 的功能（即能够通电话和发送短信），这就是所谓的向后兼容。  \n\t\t第四代（4G）正式名称是 IMT-Advanced (International Mobile Telecommunications-Advanced)，意思是高级国际移动通信。\n\t\t4G的一个重要技术指标就是要实现更高的数据率。目标峰值数据率是：固定的和低速移动通信时应达到1 Gbit/s，在高速移动通信时（如在火车、汽车上）应达到100 Mbit/s。\n\n- 4G 现有两个国际标准：\n\n\t\tLTE (Long-Term Evolution)： \n\t\t又分为时分双工 TD-LTE 和 频分双工 FDD-LTE 两种。\n\t\t把带宽增加到 20 MHz，采用了高阶调制 64QAM 和 MIMO 技术。\n\t\tLTE-A (LTE-Advanced)：\n\t\tLTE 的升级版，俗称为 3.9G。\n\t\t带宽高达 100 MHz。\n\n#### 练习\n\n1.IEEE802.11帧分为3种类型：控制帧、管理帧 和 数据帧\n2.IEEE 802.11标准采用. CSMA/CA 机制，可在所有站支持竞争型异步业务，从而是信号冲突概率减少到最小。\n3.无线局域网有两种类型的扫描：主动扫描 和 被动扫描\n\n\n\n4、以下不属于WPAN的是（  D  ）\n\n\tA、Bluetooth      B、ZigBee        \n\tC、UWB       \tD、WiMAX\n\n5、以下不属于第三代移动通信采用的标准体系的是（  D  ）\n\n\tA、CDMA2000\t\tB、WCDMA \t\n\tC、 TD-SCDMA\t\tD、GPRS\n\n\n\n<center> <font color = yellowgreen size = 20>—— 全文完 ——</font> </center> \n\n\n","slug":"计算机网络复习","published":1,"updated":"2020-02-20T06:06:59.429Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td43001tfkup4hk6kc9x","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script>\n    <div id=\"aplayer-aptrVTNp\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1795310580\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h3 id=\"第一章-概述\"><a class=\"header-anchor\" href=\"#第一章-概述\">☆</a>第一章  概述</h3>\n<h4 id=\"概念复习\"><a class=\"header-anchor\" href=\"#概念复习\">☆</a>概念复习</h4>\n<ol>\n<li>什么是网络协议？<br>\n为进行网络中的数据交换而建立的规则、标准或约定。</li>\n<li>网络协议的三要素是？\n<ul>\n<li>语法 数据与控制信息的结构或格式 。</li>\n<li>语义 需要发出何种控制信息，完成何种动作以及做出何种响应。</li>\n<li>同步 事件实现顺序的详细说明。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"第二章-物理层\"><a class=\"header-anchor\" href=\"#第二章-物理层\">☆</a>第二章  物理层</h3>\n<h4 id=\"概念复习-v2\"><a class=\"header-anchor\" href=\"#概念复习-v2\">☆</a>概念复习</h4>\n<ol>\n<li>\n<p>OSI/RM包括哪些层次？<br>\n应用层、表示层、会话层、运输层、网络层、数据链路层、物理层</p>\n</li>\n<li>\n<p>TCP/IP包括哪些层次？<br>\n应用层、运输层、网际层IP、网络接口层</p>\n</li>\n<li>\n<p>五层协议？<br>\n应用层、运输层、网络层、数据链路层、物理层</p>\n</li>\n<li>\n<p>物理层的主要任务是？</p>\n<ul>\n<li>实现位操作</li>\n<li>数据信号的传输</li>\n<li>接口设计</li>\n<li>信号传输规程</li>\n<li>屏蔽掉传输媒体和通信手段的差异</li>\n<li>完成传输方式的转换</li>\n</ul>\n</li>\n</ol>\n<ol start=\"5\">\n<li>数据通信的方式有哪些？\n<ul>\n<li>单向通信（单工）</li>\n<li>双向交替通信（半双工）</li>\n<li>双向同时通信（全双工）</li>\n</ul>\n</li>\n</ol>\n<ol start=\"6\">\n<li>基带信号调制方法包括哪些？\n<ul>\n<li>调幅</li>\n<li>调频</li>\n<li>调相</li>\n</ul>\n</li>\n</ol>\n<ol start=\"7\">\n<li>常用编码方式？P44\n<ul>\n<li>不归零制：正电平代表1，负电平代表0</li>\n<li>归零制：正脉冲代表1，负脉冲代表0</li>\n<li>曼彻斯特编码：位于周期中心的向上跳变代表0，位于周期中心的向下跳变代表1</li>\n<li>差分曼彻斯特编码：在每一位的中心处始终都有跳变。位开始边界有跳变代表1，位开始边界没有跳变代表0。</li>\n</ul>\n</li>\n</ol>\n<ol start=\"8\">\n<li>信道的复用技术有哪些？\n<ul>\n<li>\n<p>频分复用<br>\n频分复用的所有用户在同样的时间占用不同的带宽资源（请注意，这里的“带宽”是频率带宽而不是数据的发送速率）。</p>\n</li>\n<li>\n<p>时分复用</p>\n<ul>\n<li>时分复用的所有用户是在不同的时间点占用同样的频带宽度。</li>\n<li>将时间划分为一段段等长的时分复用帧（TDM 帧）。每一个时分复用的用户在每一个 TDM 帧中占用固定序号的时隙。</li>\n<li>每一个用户所占用的时隙是周期性地出现（其周期就是 TDM  帧的长度）。</li>\n<li>TDM 信号也称为等时(isochronous)信号。</li>\n</ul>\n</li>\n<li>\n<p>统计时分复用<br>\n又称异步时分复用，常用于：集中器</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/14/%E7%BB%9F%E8%AE%A1%E6%97%B6%E5%88%86%E5%A4%8D%E7%94%A8.png\" alt=\"统计时分复用\"></p>\n</li>\n<li>\n<p>波分复用：光的频分复用</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/14/%E6%B3%A2%E5%88%86%E5%A4%8D%E7%94%A8.png\" alt=\"波分复用\"></p>\n</li>\n<li>\n<p>码分复用：</p>\n<ul>\n<li>码分复用常用的名词时码分多址CDMA。</li>\n<li>各用户使用经过特殊挑选的不同码型，因此彼此不会造成干扰。</li>\n<li>这种系统发送的信号有很强的抗干扰能力，其频谱类似于白噪声，不易被敌人发现。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<ol start=\"9\">\n<li>PCM的过程包括？\n<ul>\n<li>PCM：脉冲编码调制</li>\n<li>采样 、量化 、编码</li>\n</ul>\n</li>\n</ol>\n<ol start=\"10\">\n<li>传输媒体包括哪些类型？各有哪些传输介质?\n<ul>\n<li>引导型传输媒体\n<ul>\n<li>双绞线</li>\n<li>同轴电缆</li>\n<li>光缆</li>\n</ul>\n</li>\n<li>非引导型传输媒体\n<ul>\n<li>地面微波接力</li>\n<li>卫星通信</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"练习题\"><a class=\"header-anchor\" href=\"#练习题\">☆</a>练习题</h4>\n<ol>\n<li>\n<p>一个码元传输速率为300Baud的信道，如果采用4元制，其信道的传输速率为(  B     )<br>\nA.300bit/s    \tB.600bit/s<br>\nC.1200bit/s     \tD.2400bit/s</p>\n</li>\n<li>\n<p>采用8个相位的调相传输码元，传输速率为200Baud，则数据传输率为(      B     )<br>\nA.400bit/s    \tB.600bit/s<br>\nC.800bit/s     \tD.1600bit/s</p>\n</li>\n<li>\n<p>对于带宽为50khz的信道，若用16种不同的物理状态来表示数据，信噪比为20dB，问该信道的最大数据传输率是多少？若不考虑噪声，则信道的极限传输速率是多少？<br>\n<strong>解：</strong><br>\n根据奈奎斯特定理：<br>\nC=2Wlog<sub>2</sub> 𝑽=2*50*log<sub>2</sub>16=400kbit/s<br>\n香浓定理:<br>\n因为：10log<sub>10</sub> (S/N)=20dB，所以S/N=100<br>\nC = W log<sub>2</sub>(1+S/N)<br>\n=50*log2(1+100)kbit/s<br>\n=333kbit/s</p>\n</li>\n</ol>\n<p>课后习题<br>\n5、7、8、13(2)、14(1)、16</p>\n\n    <div id=\"aplayer-AmplukAB\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1795858870\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h3 id=\"第三章-数据链路层\"><a class=\"header-anchor\" href=\"#第三章-数据链路层\">☆</a>第三章  数据链路层</h3>\n<h4 id=\"概念复习-v3\"><a class=\"header-anchor\" href=\"#概念复习-v3\">☆</a>概念复习</h4>\n<ol>\n<li>\n<p>宽带接入技术有哪些？<br>\n2.6.1  ADSL 技术</p>\n<ul>\n<li>DSL 就是数字用户线</li>\n<li>非对称数字用户线 ADSL</li>\n<li>标准模拟电话信号的频带被限制在 300~3400 Hz 的范围内，但用户线本身实际可通过的信号频率仍然超过 1 MHz。ADSL 技术就把 0~4 kHz 低端频谱留给传统电话使用，而把原来没有被利用的高端频谱留给用户上网使用。</li>\n<li>ADSL 的传输距离取决于数据率和用户线的线径（用户线越细，信号传输时的衰减就越大）。</li>\n<li>ADSL 所能得到的最高数据传输速率与实际的用户线上的信噪比密切相关。</li>\n<li>需要ADSL调制解调器<br>\n </li>\n</ul>\n<p>2.6.2  光纤同轴混合网（HFC网）<br>\n\t   主干部分改换为光纤，并使用模拟光纤技术</p>\n<p>2.6.3  FTTx 技术<br>\n   多种宽带光纤接入</p>\n</li>\n<li>\n<p>数据链路层的信道有哪些？.<br>\n点对点信道<br>\n广播信道</p>\n</li>\n<li>\n<p>帧定界的方法有哪些？<br>\n带位填充的首尾标记定界法<br>\n违法编码定界法<br>\n用控制字符进行帧定界法（SOH和EOT）</p>\n</li>\n</ol>\n<h4 id=\"练习\"><a class=\"header-anchor\" href=\"#练习\">☆</a>练习</h4>\n<p>1. 要发送的数据是1101 0110 11，采用CRC校验，生成多项式是10011，那么最终发送的数据应该是(       1101 0110 1111 10    )</p>\n<p>2. 采用生成多项式x6+x4+x+1发送的报文到达接收方为101011000110，所接收的报文是否正确？试说明理由。<br>\n  多项式x6+x4+x+1对应的位串是1010011，用它来除接收到的报文，若能整除则所接收报文正确。<br>\n  能够整除，所以收到的报文是正确的。</p>\n<p>3. 一个准备发送的PPP帧的数据部分是<br>\n7E AB 15 7D 78 09 7E。试问进行字符填充后的数据是什么（用十六进制写出）</p>\n<p><strong>解</strong>：7D 5E AB 7D 35 7D 5D 78 7D 29 7D 5E</p>\n<p>4. 一个PPP帧的数据部分（用十六进制写出）是7D 5E FE 27 7D 5D 7D 23 44 7D 5E。试问真正的数据是什么（用十六进制写出）</p>\n<p><strong>解</strong>：7E FE 27 7D 03 44 7E</p>\n<p>5. PPP协议使用同步传输技术传送比特串01110 11111 11111 010，试问经过零比特填充后变成怎样的比特串？若接收端收到的PPP帧的数据部分是00011 10111 11011 11100 1010，问删除发送端加入的零比特后变成怎么样的比特串？</p>\n<p><strong>解</strong>：<br>\n  01110 11111 011111 0010<br>\n  00011 10111 11111 11010 10</p>\n<h4 id=\"概念复习-v4\"><a class=\"header-anchor\" href=\"#概念复习-v4\">☆</a>概念复习</h4>\n<ol>\n<li>\n<p>PPP帧如何解决透明传输问题</p>\n<ul>\n<li>当 PPP 用在同步传输链路时，协议规定采用硬件来完成比特填充（和 HDLC 的做法一样）。</li>\n<li>当 PPP 用在异步传输时，就使用一种特殊的字符填充法。\n<ul>\n<li>将信息字段中出现的每一个 0x7E 字节转变成为 2 字节序列 (0x7D, 0x5E)。</li>\n<li>若信息字段中出现一个 0x7D 的字节, 则将其转变成为 2 字节序列 (0x7D, 0x5D)。</li>\n<li>若信息字段中出现 ASCII 码的控制字符（即数值小于 0x20 的字符），则在该字符前面要加入一个 0x7D 字节，后面部分与0x20异或。<br>\n </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>CSMA/CD协议的要点有哪些？P88<br>\n多点接入：总线型网络，许多计算机以多点接入的方式连接在一根总线上<br>\n载波监听：发送前检测信道是否空闲，空闲则发送，若忙则继续检测，直到空闲发送。<br>\n碰撞检测：边发送变检测；在发送过程中继续检测信道，若一直未检测到碰撞，就顺利把这个帧成功发送完毕。若检测到碰撞，则终止数据的发送，并发送人为的阻塞信号</p>\n</li>\n<li>\n<p>判对错：<br>\nCSMA/CD以太网是全双工通信。（错）<br>\n曼彻斯特编码是一种自同步编码。（对）<br>\n以太网中，小于64字节的帧是无效帧。（对）<br>\n循环冗余校验码的缩写为CRC。（对）</p>\n</li>\n</ol>\n<h4 id=\"练习-v2\"><a class=\"header-anchor\" href=\"#练习-v2\">☆</a>练习</h4>\n<p>1.CSMA/CD定义的冲突检测时间是（  A  ）<br>\n\tA.信号在最远两个端点之间往返传输的时间<br>\n\tB.信号从线路一端传输到另一端的时间<br>\n\tC.从发送开始到收到应答的时间<br>\n\tD.从发送完毕到收到应答的时间<br>\n2.CSMA/CD方法用来解决多结点如何共享共用总线传输介质的问题，在采用CSMA/CD的网络中(   A   ）<br>\n\tA.不存在集中控制的结点<br>\n\tB.存在一个集中控制的结点<br>\n\tC.存在多个集中控制的结点<br>\n\tD.可以有也可以没有集中控制的结点</p>\n<p>3.若10Mbps的CSMA/CD局域网的结点的最大距离为2.5km，信号在介质中的传播速度为2*108m/s。求该网的最短帧长。</p>\n<p>解：最短帧 =2*[(2.5*103m)/(2*108m/s)]*10*106bps=250bit</p>\n<p>4.在一个采用CSMA/CD协议的网络中，传输介质是一个完整的电缆，传输速率为1Gbps，电缆中的信号传播速度是200000km/s。若最小数据帧长度减少800比特，则最远的两个站点之间的距离至少需要（ D   ）<br>\nA.增加160m   B.增加80m   C.减少160m   D.减少80m<br>\n本题为2009年全国考研题</p>\n<h4 id=\"概念复习-v5\"><a class=\"header-anchor\" href=\"#概念复习-v5\">☆</a>概念复习</h4>\n<ol>\n<li>\n<p>MAC帧的格式是？</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/15/V2mac%E5%B8%A7%E6%A0%BC%E5%BC%8F.png\" alt=\" \"></p>\n</li>\n<li>\n<p>哪些属于无效的MAC帧？<br>\n帧的长度不是整数个字节；<br>\n用收到的帧检验序列 FCS 查出有差错；<br>\n数据字段的长度不在 46 ~ 1500 字节之间。</p>\n</li>\n<li>\n<p>网桥自学习和转发帧的步骤是？</p>\n<ul>\n<li>交换机收到一帧后先进行自学习。查找交换表中与收到帧的源地址有无相匹配的项目。\n<ul>\n<li>如没有，就在交换表中增加一个项目（源地址、进入的接口和有效时间）。</li>\n<li>如有，则把原有的项目进行更新（进入的接口或有效时间）。</li>\n</ul>\n</li>\n<li>转发帧。查找交换表中与收到帧的目的地址有无相匹配的项目。\n<ul>\n<li>如没有，则向所有其他接口（进入的接口除外）转发。</li>\n<li>如有，则按交换表中给出的接口进行转发。</li>\n<li>若交换表中给出的接口就是该帧进入交换机的接口，则应丢弃这个帧（因为这时不需要经过交换机进行转发）<br>\n </li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<ol start=\"4\">\n<li>数据链路层解决的三个问题<br>\n封装成帧、透明传输、差错检测</li>\n</ol>\n<h4 id=\"概念复习-v6\"><a class=\"header-anchor\" href=\"#概念复习-v6\">☆</a>概念复习</h4>\n<p>1.点对点协议PPP<br>\n满足的需求：</p>\n<ul>\n<li>简单</li>\n<li>封装成帧</li>\n<li>透明性</li>\n<li>多种网络层协议</li>\n<li>多种类型链路</li>\n<li>差错检测</li>\n<li>检测连接状态</li>\n<li>最大传送单元</li>\n<li>网络层地址协商</li>\n<li>数据压缩协商</li>\n</ul>\n<p>组成部分：</p>\n<ul>\n<li>一个将 IP 数据报封装到串行链路的方法。异步和同步</li>\n<li>链路控制协议LCP(Link Control Protocol)。一个用来建立、配置和测试数据链路连接的链路控制协议。</li>\n<li>网络控制协议 NCP (Network Control Protocol)。一套网络控制协议，其中的每一个协议支持不同的网络层协议。</li>\n</ul>\n<p>PPP帧格式：</p>\n<ul>\n<li>\n<p>标志字段 F = 0x7E  7E 的二进制表示是 01111110</p>\n</li>\n<li>\n<p>地址字段 A 只置为 0xFF（广播）。</p>\n</li>\n<li>\n<p>控制字段 C 通常置为 0x03（无序号的帧）。</p>\n</li>\n<li>\n<p>这两个字段实际上并不起作用。</p>\n</li>\n<li>\n<p>帧检验序列（FCS）：用CRC计算得到</p>\n</li>\n<li>\n<p>PPP 是面向字节的，所有的 PPP 帧的长度都是整数字节。</p>\n</li>\n<li>\n<p>PPP 有一个 2 个字节的协议字段。其值</p>\n<ul>\n<li>若为 0x0021，则信息字段就是 IP 数据报。</li>\n<li>若为 0x8021，则信息字段是网络控制数据。</li>\n<li>若为 0xC021，则信息字段是 PPP 链路控制数据。</li>\n<li>若为 0xC023，则信息字段是鉴别数据。</li>\n</ul>\n</li>\n</ul>\n<p>2.CSMA/CD协议（略）<br>\n3.MAC帧   <strong>P96</strong><br>\n4.扩展以太网(物理层、数据链路层、VLAN) <strong>P97</strong><br>\n\t三个基本概念：广播\t 广播域    冲突域<br>\n5.高速以太网 <strong>P103</strong></p>\n<p>课后复习题<br>\n3、7、8、9、10、14(1、2)</p>\n<h4 id=\"练习-v3\"><a class=\"header-anchor\" href=\"#练习-v3\">☆</a>练习</h4>\n<p>1.要发送的数据比特序列为10100 01101，CRC校验生成多项式为G(x)=x5+x4+x2+1，试计算CRC校验码<br>\n2、若构造一个CSMA/CD总线网，速率为100Mbit/s，信号在电缆中传播速度为2*105km/s，数据帧的最小长度为125B。试求总线电缆的最大长度（假设总线电缆中无中继器）</p>\n<p>答案：<br>\n1、01110<br>\n2、125*8 = 10<sup>8</sup>*t  --&gt;  t  =  10<sup>3</sup>/10<sup>8</sup>=10<sup>-5</sup><br>\nT=2s/v -&gt; s=t*v/2=10<sup>-5</sup>*2*10<sup>8</sup>/2=10<sup>3</sup></p>\n<p>3、通过IEEE802.3局域网传送ASCII码信息”Good morning!”，若封装成一个MAC帧，请问：<br>\n(1)、该帧的数据字段有效字节为多少？<br>\n(2)、需要填充多少个字节？<br>\n4、一个准备发送的PPP帧的数据部分是<br>\nEB 7E 5D 12 7D 21 5E 7E。试问进行字符填充后的数据是什么（用十六进制写出）</p>\n<p>答案：<br>\n3、13B、46-13=33B<br>\n4、EB 7D 5E 5D 7D 32 7D 5D 21 5E 7D 5E</p>\n\n    <div id=\"aplayer-rbmvWXWf\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1769883494\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h3 id=\"第四章-网络层\"><a class=\"header-anchor\" href=\"#第四章-网络层\">☆</a>第四章    网络层</h3>\n<p>4.1  网络层提供的两种服务 <br>\n4.2  网际协议 IP <br>\n4.3  划分子网和构造超网 <br>\n4.4  网际控制报文协议 ICMP <br>\n4.5  互联网的路由选择协议 <br>\n4.6  IPv6 <br>\n4.7  IP 多播 <br>\n4.8  虚拟专用网 VPN 和网络地址转换 NAT <br>\n4.9  多协议标记交换 MPLS</p>\n<h4 id=\"概念复习-v7\"><a class=\"header-anchor\" href=\"#概念复习-v7\">☆</a>概念复习</h4>\n<ol>\n<li>网络适配器的作用是什么？网络适配器工作在 哪一层？\n<ul>\n<li>进行数据串行传输和并行传输的转换包的装配和拆装网络存取控制数据缓存和网络信号。</li>\n<li>网络适配器工作在物理层。</li>\n</ul>\n</li>\n<li>循环冗余校验中某位变为0是否能检测出来？<br>\n·················</li>\n</ol>\n<p><strong>网际协议 IP</strong><br>\n与 IP 协议配套使用的还有三个协议：</p>\n<p>地址解析协议 ARP     (Address Resolution Protocol)<br>\n网际控制报文协议 ICMP    (Internet Control Message Protocol)<br>\n网际组管理协议 IGMP    (Internet Group Management Protocol)</p>\n<p><strong>局域网与局域网的互连</strong></p>\n<ul>\n<li>同种局域网互连\n<ul>\n<li>使用相同协议</li>\n<li>互连比较简单</li>\n<li>可使用中继器、集线器进行互连</li>\n</ul>\n</li>\n<li>异种局域网互连\n<ul>\n<li>使用不同协议</li>\n<li>可用网桥、交换机互连</li>\n<li>多个局域网可以用路由器进行互连</li>\n</ul>\n</li>\n</ul>\n<p><strong>IPv4地址分为A,B,C,D,E类:</strong></p>\n<pre><code>- A类:1.0.0.0~126.255.255.255,默认子网掩码/8,即255.0.0.0 (其中127.0.0.0~127.255.255.255为环回地址,用于本地环回测试等用途)；\n- B类:128.0.0.0~191.255.255.255,默认子网掩码/16,即255.255.0.0；\n- C类:192.0.0.0~223.255.255.255,默认子网掩码/24,即255.255.255.0；\n- D类:224.0.0.0~239.255.255.255,一般于用组播\n- E类:240.0.0.0~255.255.255.255(其中255.255.255.255为全网广播地址),E类地址一般用于研究用途..\n</code></pre>\n<ul>\n<li>\n<p>IPv4中还有一种私有地址,即比如内部局域网所用的地址,分别为:</p>\n<pre><code>10.0.0.0~10.255.255.255；\n172.16.0.0~172.31.0.0；\n192.168.0.0~192.168.255.255\n</code></pre>\n</li>\n</ul>\n<p>一般不指派的特殊IP地址 ：</p>\n<pre><code>\t- 主机号全0、全1不指派\n\t- 网络号：\n\t\t- A类(0…)  ——全0和127(01111111)不指派           \n\t\t- B类(10…) ——128.0不指派           \n\t\t-  C类(110…)——192.0.0不指派\n\t- 主机号全0——本主机所连接的单个网络地址    \n\t- 主机号全1——指定网络内的所有主机    \n\t- 网络号全0——本网络    \n\t- 网络号127——保留作为本地软件环回测试，即本主机进程之间通信时使用 \n</code></pre>\n<h4 id=\"练习-v4\"><a class=\"header-anchor\" href=\"#练习-v4\">☆</a>练习</h4>\n<ol>\n<li>\n<p>网络层的主要目的是(  C   )</p>\n<pre><code> A、在邻接结点间进行数据报传输 \n B、在邻接结点间进行数据报的可靠传输 \n C、在任意结点间进行数据报传输 \n D、在任意结点间进行数据报可靠传输 \n</code></pre>\n</li>\n<li>\n<p>以下协议都为网络层协议的是(  C   ) …</p>\n<pre><code>A、IP、ICMP、ARP、UDP  \nB、 TCP、ICMP、UDP、ARP   \nC、 IP、ICMP、ARP、RARP   \nD、UDP、 IP、ICMP、RARP \n</code></pre>\n</li>\n<li>\n<p>下列地址中，属于本地回路地址的是( D  )</p>\n<pre><code>A、10.10.10.1  \nB、 255.255.255.0  \nC、 192.168.24.59   \nD、127.0.0.1 \n</code></pre>\n</li>\n<li>\n<p>以下IP地址中可以作为互联网上的IP地址的是 （ C ）</p>\n<pre><code>A、192.46.10.0    \nB、127.0.0.1    \nC、110.47.10.0   \nD、211.60.256.21 \n</code></pre>\n</li>\n</ol>\n<h4 id=\"虚电路服务与数据报服务\"><a class=\"header-anchor\" href=\"#虚电路服务与数据报服务\">☆</a>虚电路服务与数据报服务</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/20/%E8%99%9A%E7%94%B5%E8%B7%AF%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%9C%8D%E5%8A%A1.png\" alt title=\"虚电路与数据报服务\"></p>\n<h4 id=\"复习题\"><a class=\"header-anchor\" href=\"#复习题\">☆</a>复习题</h4>\n<ol>\n<li>网络层提供了哪两种服务，分别是？<br>\n虚电路服务和数据报服务</li>\n<li>分类的IP地址将IP地址分为几类？如何进行划分？</li>\n<li>下列IP地址分别是哪类IP地址。<br>\n193.52.3.6、 C<br>\n129.45.26.3、 B<br>\n10.2.3.5、 A<br>\n118.45.62.3、A<br>\n224.34.124.56  D</li>\n</ol>\n<h4 id=\"ip协议的特点\"><a class=\"header-anchor\" href=\"#ip协议的特点\">☆</a>IP协议的特点</h4>\n<ul>\n<li>不可靠的投递服务 :  IP协议无法保证数据报投递的结果</li>\n<li>无连接的投递服务  : 每个数据报都是独立处理和传输的，IP协议无法保证它们 能够按序到达接收方</li>\n<li>尽力的投递服务 :  IP协议不简单地丢弃数据报，有一线希望，就尽力向前投 递</li>\n</ul>\n<h4 id=\"练习-v5\"><a class=\"header-anchor\" href=\"#练习-v5\">☆</a>练习</h4>\n<ul>\n<li>  假设有一个IP数据报，头部长度为20B，数据部分长度为2000B。现该分组从源主机到目的主机需要经过两个网络，这两个网络所允许的最大传输单元MTU为1500B和576B。请问该数据报如何进行分片？</li>\n</ul>\n<p><strong>解：</strong></p>\n<pre><code>经过第一个网络时进行分片，分为2个分片 \n 分片1携带1480B的数据，大小为1500B；\n 分片2携带520B的数据，大小为540B；\n 经过第2个网络时，分片1需要进一步分片 \n 分片3携带556B数据，大小为576B \n 分片4携带556B数据，大小为576B \n 分片5携带368B数据，大小为388B \n 分片2大小为540B，因此无需分片 \n 目的主机将收到4个分片，即分片2、3、4、5 \n</code></pre>\n<ul>\n<li> 一个IPv4分组到达一个结点时，其头部信息（十六进制 表示）如下： 0x45 00 00 54 00 03 18 50 20 06 FF F0  7C 4E 03 02 B4 0E 0F 02 试问：</li>\n</ul>\n<ol>\n<li>分组在传输过程中是否已经被破坏</li>\n<li>该分组是否有选项</li>\n<li>该分组是否已经被分割（即原始分片中的一片）</li>\n<li>该分组数据域的大小如何</li>\n<li>根据分组头中的生成时间域判断，该分组还可以经过多 少个路由器</li>\n<li>分组的标识符是什么</li>\n<li>分组的服务类型是什么</li>\n<li>用点分十进制表示，分组的源地址和目的地址各是什么</li>\n</ol>\n<p><strong>解：</strong></p>\n<pre><code>1. 是，校验和为3F F1，与分组头中的检验和值不同 \n2. 没有，分组头长5，不包含选项部分 \n3. 已经被分割，偏移值不等于0\n4. 总长度84个字节(0x54)，头长20，因此数据域的长 度是64个字节 \n5. 32(0x20) \n6. 00 03(十六进制) \n7. 0x00 \n8. 源地址：124.78.3.2       目的地址：180.14.15.2 \n</code></pre>\n<ul>\n<li>\n<p> 在某个子网中给一共四台主机分配IP地址（子网 掩码均为255.255.255.224），其中一台因IP地 址分配不当存在通信故障，这一台主机IP地址是 （     A     ）</p>\n<pre><code>\t                          四个IP地址的最后一个字节为224---11100000\n\tA. 200.10.1.60         00111100\n\tB. 200.10.1.65         01000001\n\tC. 200.10.1.70         01000110            \n\tD. 200.10.1.75         01001011 \n</code></pre>\n</li>\n<li>\n<p>  例：将一个C类网络分成4个子网，若所用网络号为 192.9.200.0 ，则写出网络的子网掩码，并写出每个子网的IP地址范围</p>\n<pre><code> (1)求子网掩码       \n\t\t要划分4个子网，m=3       \n\t\t将11100000转换为十进制：224        \n\t\t子网掩码：255.255.255.224 \n(2)4个子网的IP地址范围(原网络号192.9.200.0) \n\t\t1)当子网号=001时，二进制范围为 \n\t\t\t\t\t11000000 00001001 11001000 00100001~11000000 00001001 11001000 00111110     \n\t\t\t\t\t相应十进制范围为：192.9.200.33~192.9.200.62\n\t    2)当子网号=010时，二进制范围为     \n\t\t\t\t   11000000 00001001 11001000 01000001 ~ 11000000 00001001 11001000 01011110 \n\t\t\t\t   相应十进制范围为：192.9.200.65~192.9.200.94 \n\t    3)当子网号=011时，二进制范围为     \n\t\t\t\t  11000000 00001001 11001000 01100001 ~ 11000000 00001001 11001000 01111110     \n\t\t\t\t  相应十进制范围为：192.9.200.97~192.9.200.126 \n\t    4)当子网号=100时，二进制范围为     \n\t\t\t\t  11000000 00001001 11001000 10000001 ~ 11000000 00001001 11001000 10011110 \n\t\t\t\t  相应十进制范围为：192.9.200.129~192.9.200.158\n</code></pre>\n</li>\n</ul>\n<p><strong>作业：</strong></p>\n<ul>\n<li>\n<p>  现有一个公司需要创建内部的网络，该公司包括工 程技术部、市场部、财务部和办公室4个部门，每个部门约 有20~30台计算机。试问：</p>\n<ul>\n<li>(1)若要将几个部门从网络上进行分开。如果分配该公    司使用的地址为一个C类地址，网络地址为192.168.    161.0，如何划分网络可以将几个部门分开？</li>\n<li>(2)确定各个部门的网络地址和子网掩码，并写出分配    给每个部门网络中的主机IP地址范围。</li>\n</ul>\n</li>\n<li>\n<p>  设某路由器建立了如下路由表：</p>\n</li>\n</ul>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/29/420%E9%A2%98%E7%9B%AE%E8%B7%AF%E7%94%B1%E8%A1%A8.png\" alt=\" \"><br>\n现共收到5个分组，其目的地址分别为：<br>\n\t\t1. 128.96.39.10<br>\n\t\t2. 128.96.40.12<br>\n\t\t3. 128.96.40.151<br>\n\t\t4. 192.4.153.17<br>\n\t\t5. 192.4.153.90<br>\n\t试分别计算其下一跳</p>\n<pre><code>\t\t1. 128.96.39.10   m0    \n\t\t2. 128.96.40.12   R2 \n\t\t3. 128.96.40.151   R4 \n\t\t4. 192.4.153.17   R3 \n\t\t5. 192.4.153.90   R4 \n</code></pre>\n<ul>\n<li>\n<p>  某单位分配到一个B类的IP地址，其Net-id为 129.250.0.0.该单位有4000台机器，分布在18个不同的网点，以后可能继续增大各网点的主机 数，试给出此网络的子网掩码。</p>\n<ul>\n<li>255.255.248.0</li>\n</ul>\n</li>\n<li>\n<p>  假如正在构建一个有22个子网的B类网络，但是 几个月后该网络将增加至80个子网。每个子网 要求支持至少300个主机，应该选择下面哪个子 网掩码（  B  ）</p>\n<pre><code>\tA  255.255.0.0 \n\tB  255.255.254.0 \n\tC  255.255.255.0 \n\tD  255.255.248.0 \n</code></pre>\n</li>\n<li>\n<p>   152.112.150.82/20所在地址块的最小最大地址 分别是？</p>\n<pre><code>\t 152.112.144.0 \n\t 152.112.159.255 \n</code></pre>\n</li>\n<li>\n<p>   有如下的4个/24地址块，试进行最大可能的聚合</p>\n<pre><code>\t212.56.132.0/24 \n\t212.56.133.0/24 \n\t212.56.134.0/24 \n\t212.56.135.0/24 \n</code></pre>\n</li>\n<li>\n<p>  已知地址块中的一个地址是140.120.84.24/20。试求这个地址块中最小地址和最大地址，地址掩码是什么？地址块中共有多少个地址？相当于多少 个C类地址</p>\n</li>\n</ul>\n<h4 id=\"练习-4-29\"><a class=\"header-anchor\" href=\"#练习-4-29\">☆</a>练习（4.29）</h4>\n<ul>\n<li> 一个自治系统有5个局域网，LAN2至LAN5上的 主机数分别为：91，150，3和15.该自治系统分 配到的IP地址块为30.138.118/23。试给出每一 个局域网的地址块（包括前缀）。</li>\n</ul>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/29/%E7%BB%83%E4%B9%A0%E9%A2%984291.png\" alt=\"  \"></p>\n<p>1.位于不同子网中的主机之间相互通信，下面说法中正确的 是（ C ）</p>\n<pre><code>\t\t\tA.路由器在转发IP数据报时，重新封装源IP地址和目的IP地址 \n\t\t\tB.路由器在转发IP数据报时，重新封装目的IP地址和目的硬件地址 \n\t\t\tC.路由器在转发IP数据报时，重新封装源硬件地址和目的硬件地址 \n\t\t\tD.路由器在转发IP数据报时，重新封装源IP地址和源硬件地址 \n</code></pre>\n<p>2.关于IP提供的服务，下列说法中正确的是（A ）</p>\n<pre><code>\tA.IP提供不可靠的数据报传送服务，因此数据报传送不能受到保障\n\tB.IP提供不可靠的数据报传送服务，因此它可以随意丢弃数据报 \n\tC.IP提供可靠的数据报传送服务，因此数据报传送可以受到保障 \n\tD.IP提供可靠的数据报传送服务，因此它不能随意丢弃数据报 \n</code></pre>\n<p>3.一个主机有两个IP地址，一个地址是192.168.11.25，另一 个地址可能是（C ）</p>\n<pre><code>\t\tA.192.168.11.0              B.192.168.11.26   \n\t\tC.192.168.13.25             D.192.168.11.24\n</code></pre>\n<p>4.下列地址中，属于子网86.32.0.0/12的地址是（A ）</p>\n<pre><code>\t A.86.33.224.123             B.86.79.65.126   \n\t C.86.79.65.216              D.86.68.206.154  \n</code></pre>\n<p>5.某单位分配了一个B类地址，计划将内部网络分成35个子网， 将来要增加16个子网，每个子网的主机数目接近800台，可 行的掩码方案是（ B  ）</p>\n<pre><code>\t\tA.255.255.248.0              B.255.255.252.0  \n\t\tC.255.255.254.0              D.255.255.255.0   \n</code></pre>\n<p>6.如果子网掩码是255.255.192.0，那么下列主机必须通过路 由器才能与主机129.23.144.16通信的是（B）</p>\n<pre><code>\t\tA.129.23.191.21        B.129.23.127.222  \n\t\tC.129.23.130.33        D.129.23.148.127 \n</code></pre>\n<p>7.在子网192.168.4.0/30中，能接收目的地址为192.168.4.3 的IP分组的最大主机数是（ C ）</p>\n<pre><code>\t\tA.0        B.1        C.2        D.4     \n\t\t本题为2011年全国考研题 \n</code></pre>\n<p>8.某一个网络地址块192.168.75.0中有5台主机A、B、   C、D和E，A主机的IP地址为192.168.75.18，B主机的    IP地址为192.168.75.146，C主机的IP地址为   192.168.75.158，D主机的IP地址为192.168.75.161，   E主机的IP地址为192.168.75.173，共同的子网掩码是   255.255.255.240。   请回答以下问题，并写出解答过程。<br>\n  (1)5台主机A、B、C、D、E分属几个网段？哪些主机位于    同一网段？主机D的网络地址为多少？<br>\n  (2)若要加入第6台主机F，使它能与主机A属于同一网    段，其IP地址范围是多少？<br>\n  (3)若在网络中另加入一台主机，其IP地址设为    192.168.75.164，它的广播地址是多少？哪些主机能     够收到？<br>\n<strong>解：</strong></p>\n<pre><code>\t(1)A主机网络地址：192.168.75.16   \n\t\t B主机网络地址：192.168.75.144    \n\t\t C主机网络地址：192.168.75.144   \n\t\t D主机网络地址：192.168.75.160    \n\t\t E主机网络地址：192.168.75.160    \n\t\t 5台主机A、B、C、D、E分属3个网段，B和C主机在一个网段，D和E主机在一个网段，A主机在一个网段。    \n\t\t D主机网络地址：192.168.75.160 \n\t(2)其IP地址范围是192.168.75.17~192.168.75.30之间，并且不能为192.168.75.18 \n\t(3)广播地址是：192.168.75.175    D和E可以收到\n</code></pre>\n<p>9.设路由器R的不完整路由表如下表所示(其中下一跳给出的 是路由器的端口)。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/29/R%E7%9A%84%E4%B8%8D%E5%AE%8C%E6%95%B4%E8%B7%AF%E7%94%B1%E8%A1%A8.png\" alt=\" \"><br>\n请回答下列问题：<br>\n(1) 表中序号1~4的目的网络属于哪类网络？它们是由什么网络划分出来的？<br>\n(2) 假如R1端口1和R2端口2的IP地址的host-id均为5(十进制)，请给出它们的IP地址。<br>\n(3) 到目的主机H1~H6的下一跳是什么(如果是直接交付，则请写出转发端口)？</p>\n<p>**解: **</p>\n<p>(1) 表中序号1~4的目的网络属于B类网络，它们是由166.111.0.0划分的子网<br>\n(2)R1端口1和R2端口2的IP地址分别连接在网络166.111.32.0和166.111.16.0上，它们的IP地址分别为：166.111.32.5和166.111.16.5<br>\n(3)到目的主机H1~H6的下一跳分别是：</p>\n<pre><code>\tH1:166.111.16.5\t\t\t H2:166.111.32.5    \n\tH3:直接交付，R的端口2   H4:直接交付，R的端口1    \n\tH5:直接交付，R的端口3   H6:166.111.16.5 \n</code></pre>\n\n    <div id=\"aplayer-YrpREBiM\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1769367394\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h3 id=\"第五章-传输层\"><a class=\"header-anchor\" href=\"#第五章-传输层\">☆</a>第五章  传输层</h3>\n<h4 id=\"概念复习-v8\"><a class=\"header-anchor\" href=\"#概念复习-v8\">☆</a>概念复习</h4>\n<ol>\n<li>传输层的作用是什么？<br>\n运输层的作用：屏蔽网络层在可靠性等性能上的差异，向应用层提供可靠、无误（差错检测）的数据传输，提供应用进程间的逻辑通信</li>\n</ol>\n<ol start=\"2\">\n<li>\n<p>传输层的主要协议有？<br>\n(1) 用户数据报协议 UDP (User Datagram Protocol)<br>\n(2) 传输控制协议 TCP (Transmission Control</p>\n<pre><code>UDP：一种无连接协议\n提供无连接服务。\n在传送数据之前不需要先建立连接。\n传送的数据单位协议是 UDP 报文或用户数据报。\n对方的运输层在收到 UDP 报文后，不需要给出任何确认。\n虽然 UDP 不提供可靠交付，但在某些情况下 UDP 是一种最有效的工作方式。\n\nTCP：一种面向连接的协议\n提供面向连接的服务。\n传送的数据单位协议是 TCP 报文段 (segment)。\nTCP 不提供广播或多播服务。\n由于 TCP 要提供可靠的、面向连接的运输服务，因此不可避免地增加了许多的开销。这不仅使协议数据单元的首部增大很多，还要占用许多的处理机资源。\n</code></pre>\n</li>\n<li>\n<p>端口号分为哪几类？<br>\n(1)熟知端口:数值一般为 0~1023<br>\n(2)登记端口号:数值为 1024~49151<br>\n(3)客户端口或短暂端口号，数值为 49152~65535</p>\n</li>\n<li>\n<p>套接字的表示方法？<br>\n套接字 = 主机IP地址：端口号<br>\n套接字实际是一个通信端点</p>\n</li>\n</ol>\n<h4 id=\"练习-v6\"><a class=\"header-anchor\" href=\"#练习-v6\">☆</a>练习</h4>\n<p>一个TCP首部的数据信息为：0x 0D 28 00 15 50 5F A9 06 00 00 00 00 70 02 40 00 C0 29 00 00.<br>\n请回答:<br>\n（1）源端口号和目的端口号是多少？<br>\n（2）发送的序列号是多少？确认号是多少？<br>\n（3）TCP首部的长度是多少？<br>\n（4）这是一个使用什么协议的TCP连接？该TCP连接的状态是什么？<br>\n<strong>解：</strong></p>\n<pre><code>\t\t（1）源端口号：3368，目的端口号：21\n\t\t（2）发送的序列号是50 5F A9 06，确认号：0\n\t\t（3）TCP首部的长度：28\n\t\t（4）这是一个使用FTP协议的TCP连接，该TCP连接的状态是建立连接状态\n</code></pre>\n<p>1.UDP数据报头部不包括(     )</p>\n<pre><code>\tA.UDP源端口号\t\tB.UDP检验和\n\tC.UDP目的端口号\t\tD.UDP数据报头部长度\n</code></pre>\n<p>2.在TCP/IP网络上，用来标识主机和在主机上的应用程序的是(     )</p>\n<pre><code>\tA.端口号 主机地址 \t\tB.主机地址 IP地址\n\tC.IP地址 主机地址\t\tD.IP 地址 端口号\n</code></pre>\n<p>3.TCP报文中，确认号为1000表示________</p>\n<h4 id=\"练习2\"><a class=\"header-anchor\" href=\"#练习2\">☆</a>练习2</h4>\n<ul>\n<li>  主机A向主机B连续发送了两个TCP报文段，其序号分别为70和100。试问：\n<ul>\n<li>第一个报文段携带了多少个字节的数据？</li>\n<li>主机B收到第一个报文段后发回的确认中的确认号应当是多少？</li>\n<li>如果主机B收到第二个报文段后发回的确认中的确认号是180，试问A发送的第二个报文段中的数据有多少字节？</li>\n<li>如果A发送的第一个报文段丢失了，但第二个报文段到达了B。B在第二个报文段到达后向A发送确认。试问这个确认号应为多少？</li>\n</ul>\n</li>\n</ul>\n<p><strong>解：</strong></p>\n<pre><code>（1）第一个报文段的数据序号是70到99，共30字节的数据。 \n（2）确认号应为100. \n（3）80字节。       \n（4）70 \n</code></pre>\n<p>课本练习题：<br>\n5-39</p>\n<h4 id=\"概念复习-v9\"><a class=\"header-anchor\" href=\"#概念复习-v9\">☆</a>概念复习</h4>\n<p>TCP如何解决对方发送零窗口通知而死锁的情况？</p>\n<pre><code>TCP 为每一个连接设有一个持续计时器  (persistence timer) 。\n只要 TCP 连接的一方收到对方的零窗口通知，就启动该持续计时器。\n若持续计时器设置的时间到期，就发送一个零窗口探测报文段（仅携带 1 字节的数据），而对方就在确认这个探测报文段时给出了现在的窗口值。\n若窗口仍然是零，则收到这个报文段的一方就重新设置持续计时器。\n若窗口不是零，则死锁的僵局就可以打破了。 \n</code></pre>\n<p>拥塞控制方法有哪些？</p>\n<pre><code>四种（ RFC 5681） ：\n\t慢开始 (slow-start)\n\t拥塞避免 (congestion avoidance)\n\t快重传 (fast retransmit)\n\t快恢复 (fast recovery)\n</code></pre>\n<p>UDP（特点、首部、校验）<br>\nTCP（特点、首部、连接管理、可靠传输机制、流量控制、拥塞方法）</p>\n<h4 id=\"练习题-v2\"><a class=\"header-anchor\" href=\"#练习题-v2\">☆</a>练习题</h4>\n<p>1.主机甲和乙建立了TCP连接，甲始终以MSS=1kb大小的段发送数据，并一直有数据发送；乙每收到一个数据段都会发送一个接收窗口为10KB的确认段。若甲在t时刻发生超时时拥塞窗口为8KB，则从t时刻起，不再发生超时的情况下，经过10个RTT后，甲的发送窗口是(  A     ) 。</p>\n<pre><code>   A. 10KB     B. 12KB \t C. 14KB \t D. 15KB\n</code></pre>\n<p>2.以下关于TCP报头格式的描述中，错误的是(    D  ) 。</p>\n<pre><code>   A.报头长度为20~60字节，其中固定部分为20字节\n   B.端口号字段依次表示源端口号和目的端口号 \n   C.报头长度总是4的倍数个字节\n   D. TCP校验和伪首部中IP分组头的协议字段为17\n</code></pre>\n<p>3.滑动窗口的作用是 (  A  ) 。</p>\n<pre><code>\tA.流量控制\n   B.拥塞控制\n   C.路由控制\n   D.差错控制\n</code></pre>\n<p>4.A和B之间建立了TCP连接，A向B发送了一个报文段，其中序号字段seq=200，确认号字段ACK=201，数据部分有2个字节，那么 在B对该报文段的确认报文段中(  C  ) 。</p>\n<pre><code>\t   A.seq=202，ack=200\n\t   B.seq=201，ack=201\n\t   C.seq=201，ack=202\n\t   D.seq=202，ack=201\n</code></pre>\n<p>5.TCP的通信双方，有一方发送了带有FIN标志的数据段后表示 (   B   ) 。</p>\n<pre><code>   A.将断开通信双方的TCP连接\n   B.单方面释放连接，表示本方已经无数据发送，但可以接收对方的数据\n   C.终止数据发送，双方都不能发送数据\n   D.连接被重新建立\n</code></pre>\n<p>6.主机甲和乙之间建立了一个TCP连接，主机甲向主机乙发送了两个连续的TCP段，分别包含300字节和500字节的有效载荷，第一个段的序号为200，主机乙正确收到这两个段后，发送给主机甲的确认序号是 (  D  ) 。</p>\n<pre><code>   A.500\n   B.700\n   C.800\n   D.1000\n</code></pre>\n<p>7.主机甲和乙之间建立了一个TCP连接，主机甲向主机乙发送了3个连续的TCP段，分别包含300字节400字节和500字节的有效载荷，第3个段的序号为900，若主机乙仅正确收到第1和第3个段，则主机乙发送给主机甲的确认序号是 (   B  ) 。</p>\n<pre><code>   A. \t300   B. 500   C. \t1200   D. 1400\n</code></pre>\n<p>8.主机甲向主机乙发送一个(SYN=1，seq=11220)的TCP段，期望与主机乙建立TCP连接，若主机乙接受该连接请求，则主机乙向主机甲发送的正确的TCP段可能是（ C ）</p>\n<pre><code>  A.(SYN=0,ACK=0,seq=11221,ack=11221)\n  B.(SYN=1,ACK=1,seq=11220,ack=11220)\n  C.(SYN=1,ACK=1,seq=11221,ack=11221)\n  D.(SYN=0,ACK=0,seq=11220,ack=11220)\n  注：本题为2011年全国考研题\n</code></pre>\n<ol start=\"9\">\n<li>\n<p>TCP报文段的长度必须适应于其下层IP数据报的长度，这样TCP报文段的数据部分最多为（  C ）个字节。</p>\n<pre><code>A.65535       B.65515        C. 65495       D.不确定\n</code></pre>\n</li>\n<li>\n<p>设TCP的拥塞窗口的慢开始门限值初始为8(单位为报文段)，当拥塞窗口上升到12时网络发生超时，TCP开始慢启动和拥塞避免，那么第13次传输时拥塞窗口大小为（  C  ）</p>\n<pre><code>A.4              B.6                C.7                 D.8\n提示：拥塞窗口变化为：1,2,4,8,9,10,11,12,1,2,4,6,7,8,9……\n</code></pre>\n</li>\n<li>\n<p>假设某应用程序每秒产生一个60B的数据块，每个数据块被封装在一个TCP报文中，然后在封装在一个IP数据报中，那么最后每个数据报所包含的应用数据所占的百分比是（注意：TCP和IP报文的首部没有附加字段）（   C  ）</p>\n<pre><code>A.20%       B.40%        C. 60%       D.80%\n</code></pre>\n</li>\n<li>\n<p>TCP协议中，发送方的窗口大小取决于（  C  ）</p>\n<pre><code>A.仅接收方允许的窗口              \nB.接收方允许的窗口和发送方允许的窗口                \nC.接收方允许的窗口和拥塞窗口                 \nD.发送方允许的窗口和拥塞窗口\n</code></pre>\n</li>\n<li>\n<p>TCP“三次握手”过程中，第二次握手时，发送的报文段中（  D ）标志位被置为1</p>\n<pre><code>A.SYN       B.ACK       C. ACK和RST       D.SYN和ACK\n</code></pre>\n</li>\n<li>\n<p>在一个TCP连接中，MSS为1KB，当拥塞窗口为34KB时收到了三个冗余ACK报文，如果在接下来的4个RTT内报文段传输都是成功的，那么当这些报文均得到确认后，拥塞窗口的大小是（  D  ）KB</p>\n<pre><code>A.   8  \t\tB. 16    \tC.   20  \tD.21\n</code></pre>\n</li>\n<li>\n<p>主机A基于TCP向主机B连续发送3个TCP报文段，第1个报文段的序号是90，第2个报文段的序号是120，第3个报文段的序号是150.</p>\n</li>\n</ol>\n<ul>\n<li>\n<p>(1)第1、2个报文段中有多少数据</p>\n</li>\n<li>\n<p>(2)假设第2个报文段丢失而其他两个报文段到达B，那么在主机B发往主机A的确认报文中，确认号是多少？</p>\n<pre><code>- (1)30、30\n- (2)120\n</code></pre>\n</li>\n</ul>\n<p>16.主机H通过快速以太网连接Internet，IP地址为192.168.0.8，服务器S的IP地址为211.68.71.80。H与S使用TCP通信时，在H上捕获的其中5个IP分组如下表所示。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/7/1/%E7%BB%83%E4%B9%A016.png\" alt=\"  \"></p>\n<p>(1)表1中的IP分组中，哪几个是由H发送的?哪几个完成了TCP连接建立过程?哪几个在通过快速以太网传输时进行了填充?<br>\n(2)根据表1中的IP分组，分析S已经收到的应用层数据字节数是多少？<br>\n(3)若表1中的某个IP分组在S发出时的前40个字节如表2所示，则该IP分组到达H时经过了多少个路由器？</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/7/1/%E7%BB%83%E4%B9%A0162.png\" alt=\" \"></p>\n<p><strong>解：</strong></p>\n<pre><code>(1)\t1、3、4由H发送的；\n\t1、2、3完成了TCP连接建立过程；\n\t3、5通过快速以太网传输时进行了填充.\n(2) 846b41d6H-846b41c5H=11H=17字节\n(3)S发出的IP分组的标识=6811H，所以对应5号分组，\tS发出时TTL=40H=64,5号分组的TTL=31H=49,\n\t64-49=15，\n\t所以该IP分组到达H时经过了15个路由器\n</code></pre>\n\n    <div id=\"aplayer-EvQcauOq\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1770780609\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h3 id=\"第六章\"><a class=\"header-anchor\" href=\"#第六章\">☆</a>第六章</h3>\n<p>6.1  域名系统 DNS<br>\n6.2  文件传送协议<br>\n6.3  远程终端协议 TELNET<br>\n6.4  万维网 WWW<br>\n6.5  电子邮件<br>\n6.6  动态主机配置协议 DHCP<br>\n6.7  简单网络管理协议 SNMP<br>\n6.8  应用进程跨越网络的通信<br>\n6.9  P2P 应用</p>\n<h4 id=\"概念复习-v10\"><a class=\"header-anchor\" href=\"#概念复习-v10\">☆</a>概念复习</h4>\n<ul>\n<li>DNS的作用？\n<ul>\n<li>为域名的命名定义一组规则</li>\n<li>完成域名到IP地址的转换</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>\n<p>在服务器端不考虑负责均衡的情况下：</p>\n<ul>\n<li>一个域名一个IP地址</li>\n<li>一个IP地址多个域名<br>\n原因：一台计算机提供多个服务，既作www服务器又作邮件服务器</li>\n</ul>\n</li>\n<li>\n<p>域名服务器的类型？</p>\n<ul>\n<li>根域名服务器</li>\n<li>顶级域名服务器</li>\n<li>权限域名服务器</li>\n<li>本地域名服务器</li>\n</ul>\n</li>\n<li>\n<p>域名的解析过程有哪些？</p>\n<ul>\n<li>主机向本地域名服务器的查询一般都是采用递归查询。</li>\n<li>本地域名服务器向根域名服务器的查询通常是采用迭代查询。</li>\n</ul>\n</li>\n<li>\n<p>FTP协议的两个连接分别是？</p>\n<ul>\n<li>\n<p>FTP使用的两种TCP连接：控制连接、数据连接</p>\n<pre><code>控制连接和数据连接的区别：\n控制连接连接的是客户端和服务器端的两个控制进程\n\t数据连接连接的是客户端和服务器端的两个数据传输进程\n控制连接传输的是FTP命令  端口号21\n\t数据连接传输的是文件  端口号22\n控制连接在整个会话期间一直打开——持久连接\n\t数据连接可能为每次传输文件重新打开一次，传输完该文件后关闭——非持久连接\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>HTTP 的主要特点</p>\n<ul>\n<li>HTTP 是面向事务的客户服务器协议。</li>\n<li>HTTP 1.0 协议是无状态的 (stateless)。</li>\n<li>HTTP 协议本身也是无连接的，虽然它使用了面向连接的 TCP 向上提供的服务</li>\n</ul>\n</li>\n<li>\n<p>HTTP协议的两种连接方式是指？</p>\n<ul>\n<li>请求报文——从客户向服务器发送请求报文。</li>\n<li>响应报文——从服务器到客户的回答。</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>\n<p>DHCP 协议的工作过程</p>\n<pre><code>首先，DHCP客户端发送DHCP发现报文来发现DHCP服务器。DHCP服务器会选取一个未分配的IP地址，向DHCP客户端发送DHCP提供报文。此报文中包含分配给客户端的IP地址和其他配置信息。如果存在多个DHCP服务器，每个DHCP服务器都会响应。\n如果有多个DHCP服务器向DHCP客户端发送DHCP提供报文，DHCP客户端将会选择收到的第一个DHCP提供报文，然后发送DHCP请求报文，报文中包含请求的IP地址。收到DHCP请求报文后，提供该IP地址的DHCP服务器会向DHCP客户端发送一个DHCP确认报文，包含提供的IP地址和其他配置信息。DHCP客户端收到DHCP确认报文后，会发送免费ARP报文，检查网络中是否有其他主机使用分配的IP地址。如果指定时间内没有收到ARP应答，DHCP客户端会使用这个IP地址。如果有主机使用该IP地址，DHCP客户端会向DHCP服务器发送DHCP拒绝报文，通知服务器该IP地址已被占用。然后DHCP客户端会向服务器重新申请一个IP地址。\n</code></pre>\n</li>\n<li>\n<p>DHCP 协议需要配置的项目<br>\n(1) IP 地址<br>\n(2) 子网掩码<br>\n(3) 默认路由器的 IP 地址<br>\n(4) 域名服务器的 IP 地址</p>\n</li>\n</ul>\n<h4 id=\"练习-v7\"><a class=\"header-anchor\" href=\"#练习-v7\">☆</a>练习</h4>\n<ol>\n<li>\n<p>域名与(   D  )具有一一对应的关系</p>\n<pre><code>A. IP地址\nB. MAC地址\nC. 主机\nD. 以上都不是\n</code></pre>\n</li>\n<li>\n<p>下列说法错误的是(   A   ) 。</p>\n<pre><code>A. Internet上提供客户访问的主机一定要有域名\nB. 同一域名在不同时间可能解析出不同的IP地址\nC. 多个域名可以指向同一个主机IP地址\nD. IP子网中主机可以由不同的域名服务器来维护其映射\n</code></pre>\n</li>\n</ol>\n<p>3.FTP客户和服务器之间传递FTP命令时，使用的连接是 (  A  ) 。</p>\n<pre><code>   A. 建立在TCP之上的控制连接\t\n   B. 建立在TCP之上的数据连接\n   C. 建立在UDP之上的控制连接\n   D. 建立在UDP之上的数据连接\n</code></pre>\n<p>4.从协议分析的角度，WWW服务的第一步操作是浏览器对服务器的 (  C  ) 。</p>\n<pre><code>   A. 请求地址解析\n   B. 传输连接建立\n   C. 请求域名解析\n   D. 会话连接建立\n</code></pre>\n<p>5.万维网上每个页面都有一个唯一的地址，这些地址统称为 (  C   ) 。</p>\n<pre><code>   A. IP地址\n   B. 域名地址\n   C. 统一资源定位符 \t\n   D. WWW地址\t\t\t\t\t\t\t\t\t\t\t\t\t\n</code></pre>\n<p>6.使用浏览器访问某大学 Web网站主页时，不可能使用到的协议是(  D  ) 。</p>\n<pre><code>   A. PPP\n   B. ARP\n   C. UDP\n   D. SMTP\n</code></pre>\n<p>7.HTTP是一个无状态协议，然而Web站点经常希望能够识别用户，这时需要用到( B ) 。</p>\n<pre><code>   A. Web缓存\n   B. Cookie\n   C. 条件GET\n   D. 持久链接\n</code></pre>\n<p>8.WWW网页文件的编写语言及相应的支持协议分别为（   C  ）</p>\n<pre><code>A、HTML，HTPT                B、HTTL，HTTP \nC、HTML，HTTP                D、以上均不对\n</code></pre>\n<p>9.在因特网域名中，com通常表示（  A   ）</p>\n<pre><code>A、商业组织   B、教育机构  \nC、政府部门   D、军事部门\t\t\n</code></pre>\n\n    <div id=\"aplayer-kfXoaSIf\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1770780619\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h3 id=\"第-9-章-无线网络和移动网络\"><a class=\"header-anchor\" href=\"#第-9-章-无线网络和移动网络\">☆</a>第 9 章  无线网络和移动网络</h3>\n<p>9.1  无线局域网 WLAN<br>\n9.2  无线个人区域网 WPAN<br>\n9.3  无线城域网 WMAN<br>\n9.4  蜂窝移动通信网<br>\n9.5  两种不同无线上网</p>\n<h4 id=\"无线局域网的组成\"><a class=\"header-anchor\" href=\"#无线局域网的组成\">☆</a>无线局域网的组成</h4>\n<ul>\n<li>\n<p>无线局域网 WLAN (Wireless Local Area Network) 可分为两大类：</p>\n<ul>\n<li>有固定基础设施的 WLAN</li>\n<li>无固定基础设施的 WLAN</li>\n</ul>\n</li>\n<li>\n<p>所谓“固定基础设施”是指预先建立起来的、能够覆盖一定地理范围的一批固定基站。</p>\n</li>\n<li>\n<p>固定接入 (fixed access)——在作为网络用户期间，用户设置的地理位置保持不变。</p>\n</li>\n<li>\n<p>移动接入 (mobility access)——用户设置能够以车辆速度移动时进行网络通信。当发生切换时，通信仍然是连续的。</p>\n</li>\n<li>\n<p>便携接入 (portable access)——在受限的网络覆盖面积中，用户设备能够在以步行速度移动时进行网络通信，提供有限的切换能力。</p>\n</li>\n<li>\n<p>游牧接入 (nomadic access)——用户设备的地理位置至少在进行网络通信时保持不变。如用户设备移动了位置，则再次进行通信时可能还要寻找最佳的基站。</p>\n</li>\n</ul>\n<h4 id=\"csma-ca-算法归纳\"><a class=\"header-anchor\" href=\"#csma-ca-算法归纳\">☆</a>CSMA/CA 算法归纳</h4>\n<p>(1) 若站点最初有数据要发送（而不是发送不成功再进行重传），且检测到信道空闲，在等待时间 DIFS 后，就发送整个数据帧。<br>\n(2) 否则，站点执行 CSMA/CA 协议的退避算法。一旦检测到信道忙，就冻结退避计时器。只要信道空闲，退避计时器就进行倒计时。<br>\n(3) 当退避计时器时间减少到零时（这时信道只可能是空闲的），站点就发送整个的帧并等待确认。<br>\n(4) 发送站若收到确认，就知道已发送的帧被目的站正确收到了。这时如果要发送第二帧，就要从上面的步骤 (2) 开始，执行 CSMA/CA 协议的退避算法，随机选定一段退避时间。若源站在规定时间内没有收到确认帧 ACK（由重传计时器控制这段时间），就必须重传此帧（再次使用 CSMA/CA 协议争用接入信道），直到收到确认为止，或者经过若干次的重传失败后放弃发送。</p>\n<h4 id=\"zigbee技术的技术特点\"><a class=\"header-anchor\" href=\"#zigbee技术的技术特点\">☆</a>ZigBee技术的技术特点</h4>\n<p>数据传输速率低：10KB/秒~250KB /秒，专注于低传输<br>\n成本低：模块成本低，ZifBee协议免专利费<br>\n功耗低：低功耗待机模式下，两节5号电池可用6~24个月<br>\n时延短：通常时延都在15ms~30ms<br>\n安全： ZigBee采用AES-128加密算法<br>\n有效范围小：传输距离在1-100m的范围内,但可以继续增加<br>\n工作频段灵活：使用频段为2.4GHz、868MHz（欧洲）和915MHz（美国），均为免执照（免费）的频段<br>\n网络容量大：65535个节点</p>\n<h4 id=\"无线个人区域网-wpan\"><a class=\"header-anchor\" href=\"#无线个人区域网-wpan\">☆</a>无线个人区域网 WPAN</h4>\n<p>无线个人区域网 WPAN (Wireless Personal Area Network) 就是在个人工作地方把属于个人使用的电子设备用无线技术连接起来自组网络，不需要使用接入点 AP。<br>\n整个网络的范围大约在 10 m左右。<br>\nWPAN可以是一个人使用，也可以是若干人共同使用。<br>\n无线个人区域网 WPAN 和个人区域网 PAN (Personal Area Network) 并不完全等同，因为 PAN 不一定都是使用无线连接的。</p>\n<ol>\n<li>\n<p>蓝牙系统 (Bluetooth)</p>\n<pre><code>最早使用的 WPAN 是 1994 年爱立信公司推出的蓝牙系统，其标准是 IEEE 802.15.1 。\n蓝牙的数据率为 720 kbit/s，通信范围在 10 米左右。\n蓝牙使用 TDM 方式和扩频跳频 FHSS 技术组成不用基站的皮可网 (piconet)。\n</code></pre>\n</li>\n<li>\n<p>低速 WPAN</p>\n<pre><code>低速 WPAN 主要用于工业监控组网、办公自动化与控制等领域，其速率是 2 ~ 250 kbit/s。\n低速 WPAN 的标准是 IEEE 802.15.4。最近新修订的标准是 IEEE 802.15.4-2006。\n低速 WPAN 中最重要的就是 ZigBee。\nZigBee 技术主要用于各种电子设备（固定的、便携的或移动的）之间的无线通信，其主要特点是通信距离短（10 ~ 80 m），传输数据速率低，并且成本低廉\n</code></pre>\n</li>\n<li>\n<p>高速 WPAN</p>\n<pre><code>高速 WPAN 用于在便携式多媒体装置之间传送数据，支持11 ~ 55 Mbit/s 的数据率，标准是 802.15.3。\nIEEE 802.15.3a 工作组还提出了更高数据率的物理层标准的超高速 WPAN，它使用超宽带 UWB 技术。\nUWB 技术工作在 3.1 ~ 10.6 GHz 微波频段，有非常高的信道带宽。超宽带信号的带宽应超过信号中心频率的 25% 以上，或信号的绝对带宽超过 500 MHz。\n超宽带技术使用了瞬间高速脉冲，可支持 100 ~ 400 Mbit/s 的数据率，可用于小范围内高速传送图像或 DVD 质量的多媒体视频文件。 \n</code></pre>\n</li>\n</ol>\n<h4 id=\"蜂窝无线通信技术简介\"><a class=\"header-anchor\" href=\"#蜂窝无线通信技术简介\">☆</a>蜂窝无线通信技术简介</h4>\n<pre><code>\t蜂窝移动网络的发展非常迅速，到目前为止，世界上先后已有超过了 30 种不同的标准。\n\t第一代（1G）蜂窝无线通信是为话音通信设计的模拟 FDM 系统。\n\t第二代（2G）蜂窝无线通信提供低速数字通信（短信服务），其代表性体制就是最流行的 GSM 系统。\n\t2.5G 技术是从 2G 向第三代（3G）过渡的衔接性技术，如 GPRS 和 EDGE 等。\n\t第三代（3G） 移动通信和计算机网络的关系非常密切，它使用 IP 的体系结构和混合的交换机制（电路交换和分组交换），能够提供移动宽带多媒体业务（话音、数据、视频等，可收发电子邮件，浏览网页，进行视频会议等），如 CDMA2000，WCDMA 和 TD-SCDMA。\n\t从 3G 开始以后的各代蜂窝移动通信都是以传输数据业务为主的通信系统，而且必须兼容 2G 的功能（即能够通电话和发送短信），这就是所谓的向后兼容。  \n\t第四代（4G）正式名称是 IMT-Advanced (International Mobile Telecommunications-Advanced)，意思是高级国际移动通信。\n\t4G的一个重要技术指标就是要实现更高的数据率。目标峰值数据率是：固定的和低速移动通信时应达到1 Gbit/s，在高速移动通信时（如在火车、汽车上）应达到100 Mbit/s。\n</code></pre>\n<ul>\n<li>\n<p>4G 现有两个国际标准：</p>\n<pre><code>LTE (Long-Term Evolution)： \n又分为时分双工 TD-LTE 和 频分双工 FDD-LTE 两种。\n把带宽增加到 20 MHz，采用了高阶调制 64QAM 和 MIMO 技术。\nLTE-A (LTE-Advanced)：\nLTE 的升级版，俗称为 3.9G。\n带宽高达 100 MHz。\n</code></pre>\n</li>\n</ul>\n<h4 id=\"练习-v8\"><a class=\"header-anchor\" href=\"#练习-v8\">☆</a>练习</h4>\n<p>1.IEEE802.11帧分为3种类型：控制帧、管理帧 和 数据帧<br>\n2.IEEE 802.11标准采用. CSMA/CA 机制，可在所有站支持竞争型异步业务，从而是信号冲突概率减少到最小。<br>\n3.无线局域网有两种类型的扫描：主动扫描 和 被动扫描</p>\n<p>4、以下不属于WPAN的是（  D  ）</p>\n<pre><code>A、Bluetooth      B、ZigBee        \nC、UWB       \tD、WiMAX\n</code></pre>\n<p>5、以下不属于第三代移动通信采用的标准体系的是（  D  ）</p>\n<pre><code>A、CDMA2000\t\tB、WCDMA \t\nC、 TD-SCDMA\t\tD、GPRS\n</code></pre>\n<center> <font color=\"yellowgreen\" size=\"20\">—— 全文完 ——</font> </center> \n","site":{"data":{}},"length":20826,"excerpt":"","more":"\n    <div id=\"aplayer-aptrVTNp\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1795310580\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h3 id=\"第一章-概述\"><a class=\"header-anchor\" href=\"#第一章-概述\">☆</a>第一章  概述</h3>\n<h4 id=\"概念复习\"><a class=\"header-anchor\" href=\"#概念复习\">☆</a>概念复习</h4>\n<ol>\n<li>什么是网络协议？<br>\n为进行网络中的数据交换而建立的规则、标准或约定。</li>\n<li>网络协议的三要素是？\n<ul>\n<li>语法 数据与控制信息的结构或格式 。</li>\n<li>语义 需要发出何种控制信息，完成何种动作以及做出何种响应。</li>\n<li>同步 事件实现顺序的详细说明。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"第二章-物理层\"><a class=\"header-anchor\" href=\"#第二章-物理层\">☆</a>第二章  物理层</h3>\n<h4 id=\"概念复习-v2\"><a class=\"header-anchor\" href=\"#概念复习-v2\">☆</a>概念复习</h4>\n<ol>\n<li>\n<p>OSI/RM包括哪些层次？<br>\n应用层、表示层、会话层、运输层、网络层、数据链路层、物理层</p>\n</li>\n<li>\n<p>TCP/IP包括哪些层次？<br>\n应用层、运输层、网际层IP、网络接口层</p>\n</li>\n<li>\n<p>五层协议？<br>\n应用层、运输层、网络层、数据链路层、物理层</p>\n</li>\n<li>\n<p>物理层的主要任务是？</p>\n<ul>\n<li>实现位操作</li>\n<li>数据信号的传输</li>\n<li>接口设计</li>\n<li>信号传输规程</li>\n<li>屏蔽掉传输媒体和通信手段的差异</li>\n<li>完成传输方式的转换</li>\n</ul>\n</li>\n</ol>\n<ol start=\"5\">\n<li>数据通信的方式有哪些？\n<ul>\n<li>单向通信（单工）</li>\n<li>双向交替通信（半双工）</li>\n<li>双向同时通信（全双工）</li>\n</ul>\n</li>\n</ol>\n<ol start=\"6\">\n<li>基带信号调制方法包括哪些？\n<ul>\n<li>调幅</li>\n<li>调频</li>\n<li>调相</li>\n</ul>\n</li>\n</ol>\n<ol start=\"7\">\n<li>常用编码方式？P44\n<ul>\n<li>不归零制：正电平代表1，负电平代表0</li>\n<li>归零制：正脉冲代表1，负脉冲代表0</li>\n<li>曼彻斯特编码：位于周期中心的向上跳变代表0，位于周期中心的向下跳变代表1</li>\n<li>差分曼彻斯特编码：在每一位的中心处始终都有跳变。位开始边界有跳变代表1，位开始边界没有跳变代表0。</li>\n</ul>\n</li>\n</ol>\n<ol start=\"8\">\n<li>信道的复用技术有哪些？\n<ul>\n<li>\n<p>频分复用<br>\n频分复用的所有用户在同样的时间占用不同的带宽资源（请注意，这里的“带宽”是频率带宽而不是数据的发送速率）。</p>\n</li>\n<li>\n<p>时分复用</p>\n<ul>\n<li>时分复用的所有用户是在不同的时间点占用同样的频带宽度。</li>\n<li>将时间划分为一段段等长的时分复用帧（TDM 帧）。每一个时分复用的用户在每一个 TDM 帧中占用固定序号的时隙。</li>\n<li>每一个用户所占用的时隙是周期性地出现（其周期就是 TDM  帧的长度）。</li>\n<li>TDM 信号也称为等时(isochronous)信号。</li>\n</ul>\n</li>\n<li>\n<p>统计时分复用<br>\n又称异步时分复用，常用于：集中器</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/14/%E7%BB%9F%E8%AE%A1%E6%97%B6%E5%88%86%E5%A4%8D%E7%94%A8.png\" alt=\"统计时分复用\"></p>\n</li>\n<li>\n<p>波分复用：光的频分复用</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/14/%E6%B3%A2%E5%88%86%E5%A4%8D%E7%94%A8.png\" alt=\"波分复用\"></p>\n</li>\n<li>\n<p>码分复用：</p>\n<ul>\n<li>码分复用常用的名词时码分多址CDMA。</li>\n<li>各用户使用经过特殊挑选的不同码型，因此彼此不会造成干扰。</li>\n<li>这种系统发送的信号有很强的抗干扰能力，其频谱类似于白噪声，不易被敌人发现。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<ol start=\"9\">\n<li>PCM的过程包括？\n<ul>\n<li>PCM：脉冲编码调制</li>\n<li>采样 、量化 、编码</li>\n</ul>\n</li>\n</ol>\n<ol start=\"10\">\n<li>传输媒体包括哪些类型？各有哪些传输介质?\n<ul>\n<li>引导型传输媒体\n<ul>\n<li>双绞线</li>\n<li>同轴电缆</li>\n<li>光缆</li>\n</ul>\n</li>\n<li>非引导型传输媒体\n<ul>\n<li>地面微波接力</li>\n<li>卫星通信</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"练习题\"><a class=\"header-anchor\" href=\"#练习题\">☆</a>练习题</h4>\n<ol>\n<li>\n<p>一个码元传输速率为300Baud的信道，如果采用4元制，其信道的传输速率为(  B     )<br>\nA.300bit/s    \tB.600bit/s<br>\nC.1200bit/s     \tD.2400bit/s</p>\n</li>\n<li>\n<p>采用8个相位的调相传输码元，传输速率为200Baud，则数据传输率为(      B     )<br>\nA.400bit/s    \tB.600bit/s<br>\nC.800bit/s     \tD.1600bit/s</p>\n</li>\n<li>\n<p>对于带宽为50khz的信道，若用16种不同的物理状态来表示数据，信噪比为20dB，问该信道的最大数据传输率是多少？若不考虑噪声，则信道的极限传输速率是多少？<br>\n<strong>解：</strong><br>\n根据奈奎斯特定理：<br>\nC=2Wlog<sub>2</sub> 𝑽=2*50*log<sub>2</sub>16=400kbit/s<br>\n香浓定理:<br>\n因为：10log<sub>10</sub> (S/N)=20dB，所以S/N=100<br>\nC = W log<sub>2</sub>(1+S/N)<br>\n=50*log2(1+100)kbit/s<br>\n=333kbit/s</p>\n</li>\n</ol>\n<p>课后习题<br>\n5、7、8、13(2)、14(1)、16</p>\n\n    <div id=\"aplayer-AmplukAB\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1795858870\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h3 id=\"第三章-数据链路层\"><a class=\"header-anchor\" href=\"#第三章-数据链路层\">☆</a>第三章  数据链路层</h3>\n<h4 id=\"概念复习-v3\"><a class=\"header-anchor\" href=\"#概念复习-v3\">☆</a>概念复习</h4>\n<ol>\n<li>\n<p>宽带接入技术有哪些？<br>\n2.6.1  ADSL 技术</p>\n<ul>\n<li>DSL 就是数字用户线</li>\n<li>非对称数字用户线 ADSL</li>\n<li>标准模拟电话信号的频带被限制在 300~3400 Hz 的范围内，但用户线本身实际可通过的信号频率仍然超过 1 MHz。ADSL 技术就把 0~4 kHz 低端频谱留给传统电话使用，而把原来没有被利用的高端频谱留给用户上网使用。</li>\n<li>ADSL 的传输距离取决于数据率和用户线的线径（用户线越细，信号传输时的衰减就越大）。</li>\n<li>ADSL 所能得到的最高数据传输速率与实际的用户线上的信噪比密切相关。</li>\n<li>需要ADSL调制解调器<br>\n </li>\n</ul>\n<p>2.6.2  光纤同轴混合网（HFC网）<br>\n\t   主干部分改换为光纤，并使用模拟光纤技术</p>\n<p>2.6.3  FTTx 技术<br>\n   多种宽带光纤接入</p>\n</li>\n<li>\n<p>数据链路层的信道有哪些？.<br>\n点对点信道<br>\n广播信道</p>\n</li>\n<li>\n<p>帧定界的方法有哪些？<br>\n带位填充的首尾标记定界法<br>\n违法编码定界法<br>\n用控制字符进行帧定界法（SOH和EOT）</p>\n</li>\n</ol>\n<h4 id=\"练习\"><a class=\"header-anchor\" href=\"#练习\">☆</a>练习</h4>\n<p>1. 要发送的数据是1101 0110 11，采用CRC校验，生成多项式是10011，那么最终发送的数据应该是(       1101 0110 1111 10    )</p>\n<p>2. 采用生成多项式x6+x4+x+1发送的报文到达接收方为101011000110，所接收的报文是否正确？试说明理由。<br>\n  多项式x6+x4+x+1对应的位串是1010011，用它来除接收到的报文，若能整除则所接收报文正确。<br>\n  能够整除，所以收到的报文是正确的。</p>\n<p>3. 一个准备发送的PPP帧的数据部分是<br>\n7E AB 15 7D 78 09 7E。试问进行字符填充后的数据是什么（用十六进制写出）</p>\n<p><strong>解</strong>：7D 5E AB 7D 35 7D 5D 78 7D 29 7D 5E</p>\n<p>4. 一个PPP帧的数据部分（用十六进制写出）是7D 5E FE 27 7D 5D 7D 23 44 7D 5E。试问真正的数据是什么（用十六进制写出）</p>\n<p><strong>解</strong>：7E FE 27 7D 03 44 7E</p>\n<p>5. PPP协议使用同步传输技术传送比特串01110 11111 11111 010，试问经过零比特填充后变成怎样的比特串？若接收端收到的PPP帧的数据部分是00011 10111 11011 11100 1010，问删除发送端加入的零比特后变成怎么样的比特串？</p>\n<p><strong>解</strong>：<br>\n  01110 11111 011111 0010<br>\n  00011 10111 11111 11010 10</p>\n<h4 id=\"概念复习-v4\"><a class=\"header-anchor\" href=\"#概念复习-v4\">☆</a>概念复习</h4>\n<ol>\n<li>\n<p>PPP帧如何解决透明传输问题</p>\n<ul>\n<li>当 PPP 用在同步传输链路时，协议规定采用硬件来完成比特填充（和 HDLC 的做法一样）。</li>\n<li>当 PPP 用在异步传输时，就使用一种特殊的字符填充法。\n<ul>\n<li>将信息字段中出现的每一个 0x7E 字节转变成为 2 字节序列 (0x7D, 0x5E)。</li>\n<li>若信息字段中出现一个 0x7D 的字节, 则将其转变成为 2 字节序列 (0x7D, 0x5D)。</li>\n<li>若信息字段中出现 ASCII 码的控制字符（即数值小于 0x20 的字符），则在该字符前面要加入一个 0x7D 字节，后面部分与0x20异或。<br>\n </li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>CSMA/CD协议的要点有哪些？P88<br>\n多点接入：总线型网络，许多计算机以多点接入的方式连接在一根总线上<br>\n载波监听：发送前检测信道是否空闲，空闲则发送，若忙则继续检测，直到空闲发送。<br>\n碰撞检测：边发送变检测；在发送过程中继续检测信道，若一直未检测到碰撞，就顺利把这个帧成功发送完毕。若检测到碰撞，则终止数据的发送，并发送人为的阻塞信号</p>\n</li>\n<li>\n<p>判对错：<br>\nCSMA/CD以太网是全双工通信。（错）<br>\n曼彻斯特编码是一种自同步编码。（对）<br>\n以太网中，小于64字节的帧是无效帧。（对）<br>\n循环冗余校验码的缩写为CRC。（对）</p>\n</li>\n</ol>\n<h4 id=\"练习-v2\"><a class=\"header-anchor\" href=\"#练习-v2\">☆</a>练习</h4>\n<p>1.CSMA/CD定义的冲突检测时间是（  A  ）<br>\n\tA.信号在最远两个端点之间往返传输的时间<br>\n\tB.信号从线路一端传输到另一端的时间<br>\n\tC.从发送开始到收到应答的时间<br>\n\tD.从发送完毕到收到应答的时间<br>\n2.CSMA/CD方法用来解决多结点如何共享共用总线传输介质的问题，在采用CSMA/CD的网络中(   A   ）<br>\n\tA.不存在集中控制的结点<br>\n\tB.存在一个集中控制的结点<br>\n\tC.存在多个集中控制的结点<br>\n\tD.可以有也可以没有集中控制的结点</p>\n<p>3.若10Mbps的CSMA/CD局域网的结点的最大距离为2.5km，信号在介质中的传播速度为2*108m/s。求该网的最短帧长。</p>\n<p>解：最短帧 =2*[(2.5*103m)/(2*108m/s)]*10*106bps=250bit</p>\n<p>4.在一个采用CSMA/CD协议的网络中，传输介质是一个完整的电缆，传输速率为1Gbps，电缆中的信号传播速度是200000km/s。若最小数据帧长度减少800比特，则最远的两个站点之间的距离至少需要（ D   ）<br>\nA.增加160m   B.增加80m   C.减少160m   D.减少80m<br>\n本题为2009年全国考研题</p>\n<h4 id=\"概念复习-v5\"><a class=\"header-anchor\" href=\"#概念复习-v5\">☆</a>概念复习</h4>\n<ol>\n<li>\n<p>MAC帧的格式是？</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/15/V2mac%E5%B8%A7%E6%A0%BC%E5%BC%8F.png\" alt=\" \"></p>\n</li>\n<li>\n<p>哪些属于无效的MAC帧？<br>\n帧的长度不是整数个字节；<br>\n用收到的帧检验序列 FCS 查出有差错；<br>\n数据字段的长度不在 46 ~ 1500 字节之间。</p>\n</li>\n<li>\n<p>网桥自学习和转发帧的步骤是？</p>\n<ul>\n<li>交换机收到一帧后先进行自学习。查找交换表中与收到帧的源地址有无相匹配的项目。\n<ul>\n<li>如没有，就在交换表中增加一个项目（源地址、进入的接口和有效时间）。</li>\n<li>如有，则把原有的项目进行更新（进入的接口或有效时间）。</li>\n</ul>\n</li>\n<li>转发帧。查找交换表中与收到帧的目的地址有无相匹配的项目。\n<ul>\n<li>如没有，则向所有其他接口（进入的接口除外）转发。</li>\n<li>如有，则按交换表中给出的接口进行转发。</li>\n<li>若交换表中给出的接口就是该帧进入交换机的接口，则应丢弃这个帧（因为这时不需要经过交换机进行转发）<br>\n </li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<ol start=\"4\">\n<li>数据链路层解决的三个问题<br>\n封装成帧、透明传输、差错检测</li>\n</ol>\n<h4 id=\"概念复习-v6\"><a class=\"header-anchor\" href=\"#概念复习-v6\">☆</a>概念复习</h4>\n<p>1.点对点协议PPP<br>\n满足的需求：</p>\n<ul>\n<li>简单</li>\n<li>封装成帧</li>\n<li>透明性</li>\n<li>多种网络层协议</li>\n<li>多种类型链路</li>\n<li>差错检测</li>\n<li>检测连接状态</li>\n<li>最大传送单元</li>\n<li>网络层地址协商</li>\n<li>数据压缩协商</li>\n</ul>\n<p>组成部分：</p>\n<ul>\n<li>一个将 IP 数据报封装到串行链路的方法。异步和同步</li>\n<li>链路控制协议LCP(Link Control Protocol)。一个用来建立、配置和测试数据链路连接的链路控制协议。</li>\n<li>网络控制协议 NCP (Network Control Protocol)。一套网络控制协议，其中的每一个协议支持不同的网络层协议。</li>\n</ul>\n<p>PPP帧格式：</p>\n<ul>\n<li>\n<p>标志字段 F = 0x7E  7E 的二进制表示是 01111110</p>\n</li>\n<li>\n<p>地址字段 A 只置为 0xFF（广播）。</p>\n</li>\n<li>\n<p>控制字段 C 通常置为 0x03（无序号的帧）。</p>\n</li>\n<li>\n<p>这两个字段实际上并不起作用。</p>\n</li>\n<li>\n<p>帧检验序列（FCS）：用CRC计算得到</p>\n</li>\n<li>\n<p>PPP 是面向字节的，所有的 PPP 帧的长度都是整数字节。</p>\n</li>\n<li>\n<p>PPP 有一个 2 个字节的协议字段。其值</p>\n<ul>\n<li>若为 0x0021，则信息字段就是 IP 数据报。</li>\n<li>若为 0x8021，则信息字段是网络控制数据。</li>\n<li>若为 0xC021，则信息字段是 PPP 链路控制数据。</li>\n<li>若为 0xC023，则信息字段是鉴别数据。</li>\n</ul>\n</li>\n</ul>\n<p>2.CSMA/CD协议（略）<br>\n3.MAC帧   <strong>P96</strong><br>\n4.扩展以太网(物理层、数据链路层、VLAN) <strong>P97</strong><br>\n\t三个基本概念：广播\t 广播域    冲突域<br>\n5.高速以太网 <strong>P103</strong></p>\n<p>课后复习题<br>\n3、7、8、9、10、14(1、2)</p>\n<h4 id=\"练习-v3\"><a class=\"header-anchor\" href=\"#练习-v3\">☆</a>练习</h4>\n<p>1.要发送的数据比特序列为10100 01101，CRC校验生成多项式为G(x)=x5+x4+x2+1，试计算CRC校验码<br>\n2、若构造一个CSMA/CD总线网，速率为100Mbit/s，信号在电缆中传播速度为2*105km/s，数据帧的最小长度为125B。试求总线电缆的最大长度（假设总线电缆中无中继器）</p>\n<p>答案：<br>\n1、01110<br>\n2、125*8 = 10<sup>8</sup>*t  --&gt;  t  =  10<sup>3</sup>/10<sup>8</sup>=10<sup>-5</sup><br>\nT=2s/v -&gt; s=t*v/2=10<sup>-5</sup>*2*10<sup>8</sup>/2=10<sup>3</sup></p>\n<p>3、通过IEEE802.3局域网传送ASCII码信息”Good morning!”，若封装成一个MAC帧，请问：<br>\n(1)、该帧的数据字段有效字节为多少？<br>\n(2)、需要填充多少个字节？<br>\n4、一个准备发送的PPP帧的数据部分是<br>\nEB 7E 5D 12 7D 21 5E 7E。试问进行字符填充后的数据是什么（用十六进制写出）</p>\n<p>答案：<br>\n3、13B、46-13=33B<br>\n4、EB 7D 5E 5D 7D 32 7D 5D 21 5E 7D 5E</p>\n\n    <div id=\"aplayer-rbmvWXWf\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1769883494\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h3 id=\"第四章-网络层\"><a class=\"header-anchor\" href=\"#第四章-网络层\">☆</a>第四章    网络层</h3>\n<p>4.1  网络层提供的两种服务 <br>\n4.2  网际协议 IP <br>\n4.3  划分子网和构造超网 <br>\n4.4  网际控制报文协议 ICMP <br>\n4.5  互联网的路由选择协议 <br>\n4.6  IPv6 <br>\n4.7  IP 多播 <br>\n4.8  虚拟专用网 VPN 和网络地址转换 NAT <br>\n4.9  多协议标记交换 MPLS</p>\n<h4 id=\"概念复习-v7\"><a class=\"header-anchor\" href=\"#概念复习-v7\">☆</a>概念复习</h4>\n<ol>\n<li>网络适配器的作用是什么？网络适配器工作在 哪一层？\n<ul>\n<li>进行数据串行传输和并行传输的转换包的装配和拆装网络存取控制数据缓存和网络信号。</li>\n<li>网络适配器工作在物理层。</li>\n</ul>\n</li>\n<li>循环冗余校验中某位变为0是否能检测出来？<br>\n·················</li>\n</ol>\n<p><strong>网际协议 IP</strong><br>\n与 IP 协议配套使用的还有三个协议：</p>\n<p>地址解析协议 ARP     (Address Resolution Protocol)<br>\n网际控制报文协议 ICMP    (Internet Control Message Protocol)<br>\n网际组管理协议 IGMP    (Internet Group Management Protocol)</p>\n<p><strong>局域网与局域网的互连</strong></p>\n<ul>\n<li>同种局域网互连\n<ul>\n<li>使用相同协议</li>\n<li>互连比较简单</li>\n<li>可使用中继器、集线器进行互连</li>\n</ul>\n</li>\n<li>异种局域网互连\n<ul>\n<li>使用不同协议</li>\n<li>可用网桥、交换机互连</li>\n<li>多个局域网可以用路由器进行互连</li>\n</ul>\n</li>\n</ul>\n<p><strong>IPv4地址分为A,B,C,D,E类:</strong></p>\n<pre><code>- A类:1.0.0.0~126.255.255.255,默认子网掩码/8,即255.0.0.0 (其中127.0.0.0~127.255.255.255为环回地址,用于本地环回测试等用途)；\n- B类:128.0.0.0~191.255.255.255,默认子网掩码/16,即255.255.0.0；\n- C类:192.0.0.0~223.255.255.255,默认子网掩码/24,即255.255.255.0；\n- D类:224.0.0.0~239.255.255.255,一般于用组播\n- E类:240.0.0.0~255.255.255.255(其中255.255.255.255为全网广播地址),E类地址一般用于研究用途..\n</code></pre>\n<ul>\n<li>\n<p>IPv4中还有一种私有地址,即比如内部局域网所用的地址,分别为:</p>\n<pre><code>10.0.0.0~10.255.255.255；\n172.16.0.0~172.31.0.0；\n192.168.0.0~192.168.255.255\n</code></pre>\n</li>\n</ul>\n<p>一般不指派的特殊IP地址 ：</p>\n<pre><code>\t- 主机号全0、全1不指派\n\t- 网络号：\n\t\t- A类(0…)  ——全0和127(01111111)不指派           \n\t\t- B类(10…) ——128.0不指派           \n\t\t-  C类(110…)——192.0.0不指派\n\t- 主机号全0——本主机所连接的单个网络地址    \n\t- 主机号全1——指定网络内的所有主机    \n\t- 网络号全0——本网络    \n\t- 网络号127——保留作为本地软件环回测试，即本主机进程之间通信时使用 \n</code></pre>\n<h4 id=\"练习-v4\"><a class=\"header-anchor\" href=\"#练习-v4\">☆</a>练习</h4>\n<ol>\n<li>\n<p>网络层的主要目的是(  C   )</p>\n<pre><code> A、在邻接结点间进行数据报传输 \n B、在邻接结点间进行数据报的可靠传输 \n C、在任意结点间进行数据报传输 \n D、在任意结点间进行数据报可靠传输 \n</code></pre>\n</li>\n<li>\n<p>以下协议都为网络层协议的是(  C   ) …</p>\n<pre><code>A、IP、ICMP、ARP、UDP  \nB、 TCP、ICMP、UDP、ARP   \nC、 IP、ICMP、ARP、RARP   \nD、UDP、 IP、ICMP、RARP \n</code></pre>\n</li>\n<li>\n<p>下列地址中，属于本地回路地址的是( D  )</p>\n<pre><code>A、10.10.10.1  \nB、 255.255.255.0  \nC、 192.168.24.59   \nD、127.0.0.1 \n</code></pre>\n</li>\n<li>\n<p>以下IP地址中可以作为互联网上的IP地址的是 （ C ）</p>\n<pre><code>A、192.46.10.0    \nB、127.0.0.1    \nC、110.47.10.0   \nD、211.60.256.21 \n</code></pre>\n</li>\n</ol>\n<h4 id=\"虚电路服务与数据报服务\"><a class=\"header-anchor\" href=\"#虚电路服务与数据报服务\">☆</a>虚电路服务与数据报服务</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/20/%E8%99%9A%E7%94%B5%E8%B7%AF%E4%B8%8E%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%9C%8D%E5%8A%A1.png\" alt title=\"虚电路与数据报服务\"></p>\n<h4 id=\"复习题\"><a class=\"header-anchor\" href=\"#复习题\">☆</a>复习题</h4>\n<ol>\n<li>网络层提供了哪两种服务，分别是？<br>\n虚电路服务和数据报服务</li>\n<li>分类的IP地址将IP地址分为几类？如何进行划分？</li>\n<li>下列IP地址分别是哪类IP地址。<br>\n193.52.3.6、 C<br>\n129.45.26.3、 B<br>\n10.2.3.5、 A<br>\n118.45.62.3、A<br>\n224.34.124.56  D</li>\n</ol>\n<h4 id=\"ip协议的特点\"><a class=\"header-anchor\" href=\"#ip协议的特点\">☆</a>IP协议的特点</h4>\n<ul>\n<li>不可靠的投递服务 :  IP协议无法保证数据报投递的结果</li>\n<li>无连接的投递服务  : 每个数据报都是独立处理和传输的，IP协议无法保证它们 能够按序到达接收方</li>\n<li>尽力的投递服务 :  IP协议不简单地丢弃数据报，有一线希望，就尽力向前投 递</li>\n</ul>\n<h4 id=\"练习-v5\"><a class=\"header-anchor\" href=\"#练习-v5\">☆</a>练习</h4>\n<ul>\n<li>  假设有一个IP数据报，头部长度为20B，数据部分长度为2000B。现该分组从源主机到目的主机需要经过两个网络，这两个网络所允许的最大传输单元MTU为1500B和576B。请问该数据报如何进行分片？</li>\n</ul>\n<p><strong>解：</strong></p>\n<pre><code>经过第一个网络时进行分片，分为2个分片 \n 分片1携带1480B的数据，大小为1500B；\n 分片2携带520B的数据，大小为540B；\n 经过第2个网络时，分片1需要进一步分片 \n 分片3携带556B数据，大小为576B \n 分片4携带556B数据，大小为576B \n 分片5携带368B数据，大小为388B \n 分片2大小为540B，因此无需分片 \n 目的主机将收到4个分片，即分片2、3、4、5 \n</code></pre>\n<ul>\n<li> 一个IPv4分组到达一个结点时，其头部信息（十六进制 表示）如下： 0x45 00 00 54 00 03 18 50 20 06 FF F0  7C 4E 03 02 B4 0E 0F 02 试问：</li>\n</ul>\n<ol>\n<li>分组在传输过程中是否已经被破坏</li>\n<li>该分组是否有选项</li>\n<li>该分组是否已经被分割（即原始分片中的一片）</li>\n<li>该分组数据域的大小如何</li>\n<li>根据分组头中的生成时间域判断，该分组还可以经过多 少个路由器</li>\n<li>分组的标识符是什么</li>\n<li>分组的服务类型是什么</li>\n<li>用点分十进制表示，分组的源地址和目的地址各是什么</li>\n</ol>\n<p><strong>解：</strong></p>\n<pre><code>1. 是，校验和为3F F1，与分组头中的检验和值不同 \n2. 没有，分组头长5，不包含选项部分 \n3. 已经被分割，偏移值不等于0\n4. 总长度84个字节(0x54)，头长20，因此数据域的长 度是64个字节 \n5. 32(0x20) \n6. 00 03(十六进制) \n7. 0x00 \n8. 源地址：124.78.3.2       目的地址：180.14.15.2 \n</code></pre>\n<ul>\n<li>\n<p> 在某个子网中给一共四台主机分配IP地址（子网 掩码均为255.255.255.224），其中一台因IP地 址分配不当存在通信故障，这一台主机IP地址是 （     A     ）</p>\n<pre><code>\t                          四个IP地址的最后一个字节为224---11100000\n\tA. 200.10.1.60         00111100\n\tB. 200.10.1.65         01000001\n\tC. 200.10.1.70         01000110            \n\tD. 200.10.1.75         01001011 \n</code></pre>\n</li>\n<li>\n<p>  例：将一个C类网络分成4个子网，若所用网络号为 192.9.200.0 ，则写出网络的子网掩码，并写出每个子网的IP地址范围</p>\n<pre><code> (1)求子网掩码       \n\t\t要划分4个子网，m=3       \n\t\t将11100000转换为十进制：224        \n\t\t子网掩码：255.255.255.224 \n(2)4个子网的IP地址范围(原网络号192.9.200.0) \n\t\t1)当子网号=001时，二进制范围为 \n\t\t\t\t\t11000000 00001001 11001000 00100001~11000000 00001001 11001000 00111110     \n\t\t\t\t\t相应十进制范围为：192.9.200.33~192.9.200.62\n\t    2)当子网号=010时，二进制范围为     \n\t\t\t\t   11000000 00001001 11001000 01000001 ~ 11000000 00001001 11001000 01011110 \n\t\t\t\t   相应十进制范围为：192.9.200.65~192.9.200.94 \n\t    3)当子网号=011时，二进制范围为     \n\t\t\t\t  11000000 00001001 11001000 01100001 ~ 11000000 00001001 11001000 01111110     \n\t\t\t\t  相应十进制范围为：192.9.200.97~192.9.200.126 \n\t    4)当子网号=100时，二进制范围为     \n\t\t\t\t  11000000 00001001 11001000 10000001 ~ 11000000 00001001 11001000 10011110 \n\t\t\t\t  相应十进制范围为：192.9.200.129~192.9.200.158\n</code></pre>\n</li>\n</ul>\n<p><strong>作业：</strong></p>\n<ul>\n<li>\n<p>  现有一个公司需要创建内部的网络，该公司包括工 程技术部、市场部、财务部和办公室4个部门，每个部门约 有20~30台计算机。试问：</p>\n<ul>\n<li>(1)若要将几个部门从网络上进行分开。如果分配该公    司使用的地址为一个C类地址，网络地址为192.168.    161.0，如何划分网络可以将几个部门分开？</li>\n<li>(2)确定各个部门的网络地址和子网掩码，并写出分配    给每个部门网络中的主机IP地址范围。</li>\n</ul>\n</li>\n<li>\n<p>  设某路由器建立了如下路由表：</p>\n</li>\n</ul>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/29/420%E9%A2%98%E7%9B%AE%E8%B7%AF%E7%94%B1%E8%A1%A8.png\" alt=\" \"><br>\n现共收到5个分组，其目的地址分别为：<br>\n\t\t1. 128.96.39.10<br>\n\t\t2. 128.96.40.12<br>\n\t\t3. 128.96.40.151<br>\n\t\t4. 192.4.153.17<br>\n\t\t5. 192.4.153.90<br>\n\t试分别计算其下一跳</p>\n<pre><code>\t\t1. 128.96.39.10   m0    \n\t\t2. 128.96.40.12   R2 \n\t\t3. 128.96.40.151   R4 \n\t\t4. 192.4.153.17   R3 \n\t\t5. 192.4.153.90   R4 \n</code></pre>\n<ul>\n<li>\n<p>  某单位分配到一个B类的IP地址，其Net-id为 129.250.0.0.该单位有4000台机器，分布在18个不同的网点，以后可能继续增大各网点的主机 数，试给出此网络的子网掩码。</p>\n<ul>\n<li>255.255.248.0</li>\n</ul>\n</li>\n<li>\n<p>  假如正在构建一个有22个子网的B类网络，但是 几个月后该网络将增加至80个子网。每个子网 要求支持至少300个主机，应该选择下面哪个子 网掩码（  B  ）</p>\n<pre><code>\tA  255.255.0.0 \n\tB  255.255.254.0 \n\tC  255.255.255.0 \n\tD  255.255.248.0 \n</code></pre>\n</li>\n<li>\n<p>   152.112.150.82/20所在地址块的最小最大地址 分别是？</p>\n<pre><code>\t 152.112.144.0 \n\t 152.112.159.255 \n</code></pre>\n</li>\n<li>\n<p>   有如下的4个/24地址块，试进行最大可能的聚合</p>\n<pre><code>\t212.56.132.0/24 \n\t212.56.133.0/24 \n\t212.56.134.0/24 \n\t212.56.135.0/24 \n</code></pre>\n</li>\n<li>\n<p>  已知地址块中的一个地址是140.120.84.24/20。试求这个地址块中最小地址和最大地址，地址掩码是什么？地址块中共有多少个地址？相当于多少 个C类地址</p>\n</li>\n</ul>\n<h4 id=\"练习-4-29\"><a class=\"header-anchor\" href=\"#练习-4-29\">☆</a>练习（4.29）</h4>\n<ul>\n<li> 一个自治系统有5个局域网，LAN2至LAN5上的 主机数分别为：91，150，3和15.该自治系统分 配到的IP地址块为30.138.118/23。试给出每一 个局域网的地址块（包括前缀）。</li>\n</ul>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/29/%E7%BB%83%E4%B9%A0%E9%A2%984291.png\" alt=\"  \"></p>\n<p>1.位于不同子网中的主机之间相互通信，下面说法中正确的 是（ C ）</p>\n<pre><code>\t\t\tA.路由器在转发IP数据报时，重新封装源IP地址和目的IP地址 \n\t\t\tB.路由器在转发IP数据报时，重新封装目的IP地址和目的硬件地址 \n\t\t\tC.路由器在转发IP数据报时，重新封装源硬件地址和目的硬件地址 \n\t\t\tD.路由器在转发IP数据报时，重新封装源IP地址和源硬件地址 \n</code></pre>\n<p>2.关于IP提供的服务，下列说法中正确的是（A ）</p>\n<pre><code>\tA.IP提供不可靠的数据报传送服务，因此数据报传送不能受到保障\n\tB.IP提供不可靠的数据报传送服务，因此它可以随意丢弃数据报 \n\tC.IP提供可靠的数据报传送服务，因此数据报传送可以受到保障 \n\tD.IP提供可靠的数据报传送服务，因此它不能随意丢弃数据报 \n</code></pre>\n<p>3.一个主机有两个IP地址，一个地址是192.168.11.25，另一 个地址可能是（C ）</p>\n<pre><code>\t\tA.192.168.11.0              B.192.168.11.26   \n\t\tC.192.168.13.25             D.192.168.11.24\n</code></pre>\n<p>4.下列地址中，属于子网86.32.0.0/12的地址是（A ）</p>\n<pre><code>\t A.86.33.224.123             B.86.79.65.126   \n\t C.86.79.65.216              D.86.68.206.154  \n</code></pre>\n<p>5.某单位分配了一个B类地址，计划将内部网络分成35个子网， 将来要增加16个子网，每个子网的主机数目接近800台，可 行的掩码方案是（ B  ）</p>\n<pre><code>\t\tA.255.255.248.0              B.255.255.252.0  \n\t\tC.255.255.254.0              D.255.255.255.0   \n</code></pre>\n<p>6.如果子网掩码是255.255.192.0，那么下列主机必须通过路 由器才能与主机129.23.144.16通信的是（B）</p>\n<pre><code>\t\tA.129.23.191.21        B.129.23.127.222  \n\t\tC.129.23.130.33        D.129.23.148.127 \n</code></pre>\n<p>7.在子网192.168.4.0/30中，能接收目的地址为192.168.4.3 的IP分组的最大主机数是（ C ）</p>\n<pre><code>\t\tA.0        B.1        C.2        D.4     \n\t\t本题为2011年全国考研题 \n</code></pre>\n<p>8.某一个网络地址块192.168.75.0中有5台主机A、B、   C、D和E，A主机的IP地址为192.168.75.18，B主机的    IP地址为192.168.75.146，C主机的IP地址为   192.168.75.158，D主机的IP地址为192.168.75.161，   E主机的IP地址为192.168.75.173，共同的子网掩码是   255.255.255.240。   请回答以下问题，并写出解答过程。<br>\n  (1)5台主机A、B、C、D、E分属几个网段？哪些主机位于    同一网段？主机D的网络地址为多少？<br>\n  (2)若要加入第6台主机F，使它能与主机A属于同一网    段，其IP地址范围是多少？<br>\n  (3)若在网络中另加入一台主机，其IP地址设为    192.168.75.164，它的广播地址是多少？哪些主机能     够收到？<br>\n<strong>解：</strong></p>\n<pre><code>\t(1)A主机网络地址：192.168.75.16   \n\t\t B主机网络地址：192.168.75.144    \n\t\t C主机网络地址：192.168.75.144   \n\t\t D主机网络地址：192.168.75.160    \n\t\t E主机网络地址：192.168.75.160    \n\t\t 5台主机A、B、C、D、E分属3个网段，B和C主机在一个网段，D和E主机在一个网段，A主机在一个网段。    \n\t\t D主机网络地址：192.168.75.160 \n\t(2)其IP地址范围是192.168.75.17~192.168.75.30之间，并且不能为192.168.75.18 \n\t(3)广播地址是：192.168.75.175    D和E可以收到\n</code></pre>\n<p>9.设路由器R的不完整路由表如下表所示(其中下一跳给出的 是路由器的端口)。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/6/29/R%E7%9A%84%E4%B8%8D%E5%AE%8C%E6%95%B4%E8%B7%AF%E7%94%B1%E8%A1%A8.png\" alt=\" \"><br>\n请回答下列问题：<br>\n(1) 表中序号1~4的目的网络属于哪类网络？它们是由什么网络划分出来的？<br>\n(2) 假如R1端口1和R2端口2的IP地址的host-id均为5(十进制)，请给出它们的IP地址。<br>\n(3) 到目的主机H1~H6的下一跳是什么(如果是直接交付，则请写出转发端口)？</p>\n<p>**解: **</p>\n<p>(1) 表中序号1~4的目的网络属于B类网络，它们是由166.111.0.0划分的子网<br>\n(2)R1端口1和R2端口2的IP地址分别连接在网络166.111.32.0和166.111.16.0上，它们的IP地址分别为：166.111.32.5和166.111.16.5<br>\n(3)到目的主机H1~H6的下一跳分别是：</p>\n<pre><code>\tH1:166.111.16.5\t\t\t H2:166.111.32.5    \n\tH3:直接交付，R的端口2   H4:直接交付，R的端口1    \n\tH5:直接交付，R的端口3   H6:166.111.16.5 \n</code></pre>\n\n    <div id=\"aplayer-YrpREBiM\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1769367394\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h3 id=\"第五章-传输层\"><a class=\"header-anchor\" href=\"#第五章-传输层\">☆</a>第五章  传输层</h3>\n<h4 id=\"概念复习-v8\"><a class=\"header-anchor\" href=\"#概念复习-v8\">☆</a>概念复习</h4>\n<ol>\n<li>传输层的作用是什么？<br>\n运输层的作用：屏蔽网络层在可靠性等性能上的差异，向应用层提供可靠、无误（差错检测）的数据传输，提供应用进程间的逻辑通信</li>\n</ol>\n<ol start=\"2\">\n<li>\n<p>传输层的主要协议有？<br>\n(1) 用户数据报协议 UDP (User Datagram Protocol)<br>\n(2) 传输控制协议 TCP (Transmission Control</p>\n<pre><code>UDP：一种无连接协议\n提供无连接服务。\n在传送数据之前不需要先建立连接。\n传送的数据单位协议是 UDP 报文或用户数据报。\n对方的运输层在收到 UDP 报文后，不需要给出任何确认。\n虽然 UDP 不提供可靠交付，但在某些情况下 UDP 是一种最有效的工作方式。\n\nTCP：一种面向连接的协议\n提供面向连接的服务。\n传送的数据单位协议是 TCP 报文段 (segment)。\nTCP 不提供广播或多播服务。\n由于 TCP 要提供可靠的、面向连接的运输服务，因此不可避免地增加了许多的开销。这不仅使协议数据单元的首部增大很多，还要占用许多的处理机资源。\n</code></pre>\n</li>\n<li>\n<p>端口号分为哪几类？<br>\n(1)熟知端口:数值一般为 0~1023<br>\n(2)登记端口号:数值为 1024~49151<br>\n(3)客户端口或短暂端口号，数值为 49152~65535</p>\n</li>\n<li>\n<p>套接字的表示方法？<br>\n套接字 = 主机IP地址：端口号<br>\n套接字实际是一个通信端点</p>\n</li>\n</ol>\n<h4 id=\"练习-v6\"><a class=\"header-anchor\" href=\"#练习-v6\">☆</a>练习</h4>\n<p>一个TCP首部的数据信息为：0x 0D 28 00 15 50 5F A9 06 00 00 00 00 70 02 40 00 C0 29 00 00.<br>\n请回答:<br>\n（1）源端口号和目的端口号是多少？<br>\n（2）发送的序列号是多少？确认号是多少？<br>\n（3）TCP首部的长度是多少？<br>\n（4）这是一个使用什么协议的TCP连接？该TCP连接的状态是什么？<br>\n<strong>解：</strong></p>\n<pre><code>\t\t（1）源端口号：3368，目的端口号：21\n\t\t（2）发送的序列号是50 5F A9 06，确认号：0\n\t\t（3）TCP首部的长度：28\n\t\t（4）这是一个使用FTP协议的TCP连接，该TCP连接的状态是建立连接状态\n</code></pre>\n<p>1.UDP数据报头部不包括(     )</p>\n<pre><code>\tA.UDP源端口号\t\tB.UDP检验和\n\tC.UDP目的端口号\t\tD.UDP数据报头部长度\n</code></pre>\n<p>2.在TCP/IP网络上，用来标识主机和在主机上的应用程序的是(     )</p>\n<pre><code>\tA.端口号 主机地址 \t\tB.主机地址 IP地址\n\tC.IP地址 主机地址\t\tD.IP 地址 端口号\n</code></pre>\n<p>3.TCP报文中，确认号为1000表示________</p>\n<h4 id=\"练习2\"><a class=\"header-anchor\" href=\"#练习2\">☆</a>练习2</h4>\n<ul>\n<li>  主机A向主机B连续发送了两个TCP报文段，其序号分别为70和100。试问：\n<ul>\n<li>第一个报文段携带了多少个字节的数据？</li>\n<li>主机B收到第一个报文段后发回的确认中的确认号应当是多少？</li>\n<li>如果主机B收到第二个报文段后发回的确认中的确认号是180，试问A发送的第二个报文段中的数据有多少字节？</li>\n<li>如果A发送的第一个报文段丢失了，但第二个报文段到达了B。B在第二个报文段到达后向A发送确认。试问这个确认号应为多少？</li>\n</ul>\n</li>\n</ul>\n<p><strong>解：</strong></p>\n<pre><code>（1）第一个报文段的数据序号是70到99，共30字节的数据。 \n（2）确认号应为100. \n（3）80字节。       \n（4）70 \n</code></pre>\n<p>课本练习题：<br>\n5-39</p>\n<h4 id=\"概念复习-v9\"><a class=\"header-anchor\" href=\"#概念复习-v9\">☆</a>概念复习</h4>\n<p>TCP如何解决对方发送零窗口通知而死锁的情况？</p>\n<pre><code>TCP 为每一个连接设有一个持续计时器  (persistence timer) 。\n只要 TCP 连接的一方收到对方的零窗口通知，就启动该持续计时器。\n若持续计时器设置的时间到期，就发送一个零窗口探测报文段（仅携带 1 字节的数据），而对方就在确认这个探测报文段时给出了现在的窗口值。\n若窗口仍然是零，则收到这个报文段的一方就重新设置持续计时器。\n若窗口不是零，则死锁的僵局就可以打破了。 \n</code></pre>\n<p>拥塞控制方法有哪些？</p>\n<pre><code>四种（ RFC 5681） ：\n\t慢开始 (slow-start)\n\t拥塞避免 (congestion avoidance)\n\t快重传 (fast retransmit)\n\t快恢复 (fast recovery)\n</code></pre>\n<p>UDP（特点、首部、校验）<br>\nTCP（特点、首部、连接管理、可靠传输机制、流量控制、拥塞方法）</p>\n<h4 id=\"练习题-v2\"><a class=\"header-anchor\" href=\"#练习题-v2\">☆</a>练习题</h4>\n<p>1.主机甲和乙建立了TCP连接，甲始终以MSS=1kb大小的段发送数据，并一直有数据发送；乙每收到一个数据段都会发送一个接收窗口为10KB的确认段。若甲在t时刻发生超时时拥塞窗口为8KB，则从t时刻起，不再发生超时的情况下，经过10个RTT后，甲的发送窗口是(  A     ) 。</p>\n<pre><code>   A. 10KB     B. 12KB \t C. 14KB \t D. 15KB\n</code></pre>\n<p>2.以下关于TCP报头格式的描述中，错误的是(    D  ) 。</p>\n<pre><code>   A.报头长度为20~60字节，其中固定部分为20字节\n   B.端口号字段依次表示源端口号和目的端口号 \n   C.报头长度总是4的倍数个字节\n   D. TCP校验和伪首部中IP分组头的协议字段为17\n</code></pre>\n<p>3.滑动窗口的作用是 (  A  ) 。</p>\n<pre><code>\tA.流量控制\n   B.拥塞控制\n   C.路由控制\n   D.差错控制\n</code></pre>\n<p>4.A和B之间建立了TCP连接，A向B发送了一个报文段，其中序号字段seq=200，确认号字段ACK=201，数据部分有2个字节，那么 在B对该报文段的确认报文段中(  C  ) 。</p>\n<pre><code>\t   A.seq=202，ack=200\n\t   B.seq=201，ack=201\n\t   C.seq=201，ack=202\n\t   D.seq=202，ack=201\n</code></pre>\n<p>5.TCP的通信双方，有一方发送了带有FIN标志的数据段后表示 (   B   ) 。</p>\n<pre><code>   A.将断开通信双方的TCP连接\n   B.单方面释放连接，表示本方已经无数据发送，但可以接收对方的数据\n   C.终止数据发送，双方都不能发送数据\n   D.连接被重新建立\n</code></pre>\n<p>6.主机甲和乙之间建立了一个TCP连接，主机甲向主机乙发送了两个连续的TCP段，分别包含300字节和500字节的有效载荷，第一个段的序号为200，主机乙正确收到这两个段后，发送给主机甲的确认序号是 (  D  ) 。</p>\n<pre><code>   A.500\n   B.700\n   C.800\n   D.1000\n</code></pre>\n<p>7.主机甲和乙之间建立了一个TCP连接，主机甲向主机乙发送了3个连续的TCP段，分别包含300字节400字节和500字节的有效载荷，第3个段的序号为900，若主机乙仅正确收到第1和第3个段，则主机乙发送给主机甲的确认序号是 (   B  ) 。</p>\n<pre><code>   A. \t300   B. 500   C. \t1200   D. 1400\n</code></pre>\n<p>8.主机甲向主机乙发送一个(SYN=1，seq=11220)的TCP段，期望与主机乙建立TCP连接，若主机乙接受该连接请求，则主机乙向主机甲发送的正确的TCP段可能是（ C ）</p>\n<pre><code>  A.(SYN=0,ACK=0,seq=11221,ack=11221)\n  B.(SYN=1,ACK=1,seq=11220,ack=11220)\n  C.(SYN=1,ACK=1,seq=11221,ack=11221)\n  D.(SYN=0,ACK=0,seq=11220,ack=11220)\n  注：本题为2011年全国考研题\n</code></pre>\n<ol start=\"9\">\n<li>\n<p>TCP报文段的长度必须适应于其下层IP数据报的长度，这样TCP报文段的数据部分最多为（  C ）个字节。</p>\n<pre><code>A.65535       B.65515        C. 65495       D.不确定\n</code></pre>\n</li>\n<li>\n<p>设TCP的拥塞窗口的慢开始门限值初始为8(单位为报文段)，当拥塞窗口上升到12时网络发生超时，TCP开始慢启动和拥塞避免，那么第13次传输时拥塞窗口大小为（  C  ）</p>\n<pre><code>A.4              B.6                C.7                 D.8\n提示：拥塞窗口变化为：1,2,4,8,9,10,11,12,1,2,4,6,7,8,9……\n</code></pre>\n</li>\n<li>\n<p>假设某应用程序每秒产生一个60B的数据块，每个数据块被封装在一个TCP报文中，然后在封装在一个IP数据报中，那么最后每个数据报所包含的应用数据所占的百分比是（注意：TCP和IP报文的首部没有附加字段）（   C  ）</p>\n<pre><code>A.20%       B.40%        C. 60%       D.80%\n</code></pre>\n</li>\n<li>\n<p>TCP协议中，发送方的窗口大小取决于（  C  ）</p>\n<pre><code>A.仅接收方允许的窗口              \nB.接收方允许的窗口和发送方允许的窗口                \nC.接收方允许的窗口和拥塞窗口                 \nD.发送方允许的窗口和拥塞窗口\n</code></pre>\n</li>\n<li>\n<p>TCP“三次握手”过程中，第二次握手时，发送的报文段中（  D ）标志位被置为1</p>\n<pre><code>A.SYN       B.ACK       C. ACK和RST       D.SYN和ACK\n</code></pre>\n</li>\n<li>\n<p>在一个TCP连接中，MSS为1KB，当拥塞窗口为34KB时收到了三个冗余ACK报文，如果在接下来的4个RTT内报文段传输都是成功的，那么当这些报文均得到确认后，拥塞窗口的大小是（  D  ）KB</p>\n<pre><code>A.   8  \t\tB. 16    \tC.   20  \tD.21\n</code></pre>\n</li>\n<li>\n<p>主机A基于TCP向主机B连续发送3个TCP报文段，第1个报文段的序号是90，第2个报文段的序号是120，第3个报文段的序号是150.</p>\n</li>\n</ol>\n<ul>\n<li>\n<p>(1)第1、2个报文段中有多少数据</p>\n</li>\n<li>\n<p>(2)假设第2个报文段丢失而其他两个报文段到达B，那么在主机B发往主机A的确认报文中，确认号是多少？</p>\n<pre><code>- (1)30、30\n- (2)120\n</code></pre>\n</li>\n</ul>\n<p>16.主机H通过快速以太网连接Internet，IP地址为192.168.0.8，服务器S的IP地址为211.68.71.80。H与S使用TCP通信时，在H上捕获的其中5个IP分组如下表所示。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/7/1/%E7%BB%83%E4%B9%A016.png\" alt=\"  \"></p>\n<p>(1)表1中的IP分组中，哪几个是由H发送的?哪几个完成了TCP连接建立过程?哪几个在通过快速以太网传输时进行了填充?<br>\n(2)根据表1中的IP分组，分析S已经收到的应用层数据字节数是多少？<br>\n(3)若表1中的某个IP分组在S发出时的前40个字节如表2所示，则该IP分组到达H时经过了多少个路由器？</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/7/1/%E7%BB%83%E4%B9%A0162.png\" alt=\" \"></p>\n<p><strong>解：</strong></p>\n<pre><code>(1)\t1、3、4由H发送的；\n\t1、2、3完成了TCP连接建立过程；\n\t3、5通过快速以太网传输时进行了填充.\n(2) 846b41d6H-846b41c5H=11H=17字节\n(3)S发出的IP分组的标识=6811H，所以对应5号分组，\tS发出时TTL=40H=64,5号分组的TTL=31H=49,\n\t64-49=15，\n\t所以该IP分组到达H时经过了15个路由器\n</code></pre>\n\n    <div id=\"aplayer-EvQcauOq\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1770780609\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h3 id=\"第六章\"><a class=\"header-anchor\" href=\"#第六章\">☆</a>第六章</h3>\n<p>6.1  域名系统 DNS<br>\n6.2  文件传送协议<br>\n6.3  远程终端协议 TELNET<br>\n6.4  万维网 WWW<br>\n6.5  电子邮件<br>\n6.6  动态主机配置协议 DHCP<br>\n6.7  简单网络管理协议 SNMP<br>\n6.8  应用进程跨越网络的通信<br>\n6.9  P2P 应用</p>\n<h4 id=\"概念复习-v10\"><a class=\"header-anchor\" href=\"#概念复习-v10\">☆</a>概念复习</h4>\n<ul>\n<li>DNS的作用？\n<ul>\n<li>为域名的命名定义一组规则</li>\n<li>完成域名到IP地址的转换</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>\n<p>在服务器端不考虑负责均衡的情况下：</p>\n<ul>\n<li>一个域名一个IP地址</li>\n<li>一个IP地址多个域名<br>\n原因：一台计算机提供多个服务，既作www服务器又作邮件服务器</li>\n</ul>\n</li>\n<li>\n<p>域名服务器的类型？</p>\n<ul>\n<li>根域名服务器</li>\n<li>顶级域名服务器</li>\n<li>权限域名服务器</li>\n<li>本地域名服务器</li>\n</ul>\n</li>\n<li>\n<p>域名的解析过程有哪些？</p>\n<ul>\n<li>主机向本地域名服务器的查询一般都是采用递归查询。</li>\n<li>本地域名服务器向根域名服务器的查询通常是采用迭代查询。</li>\n</ul>\n</li>\n<li>\n<p>FTP协议的两个连接分别是？</p>\n<ul>\n<li>\n<p>FTP使用的两种TCP连接：控制连接、数据连接</p>\n<pre><code>控制连接和数据连接的区别：\n控制连接连接的是客户端和服务器端的两个控制进程\n\t数据连接连接的是客户端和服务器端的两个数据传输进程\n控制连接传输的是FTP命令  端口号21\n\t数据连接传输的是文件  端口号22\n控制连接在整个会话期间一直打开——持久连接\n\t数据连接可能为每次传输文件重新打开一次，传输完该文件后关闭——非持久连接\n</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p>HTTP 的主要特点</p>\n<ul>\n<li>HTTP 是面向事务的客户服务器协议。</li>\n<li>HTTP 1.0 协议是无状态的 (stateless)。</li>\n<li>HTTP 协议本身也是无连接的，虽然它使用了面向连接的 TCP 向上提供的服务</li>\n</ul>\n</li>\n<li>\n<p>HTTP协议的两种连接方式是指？</p>\n<ul>\n<li>请求报文——从客户向服务器发送请求报文。</li>\n<li>响应报文——从服务器到客户的回答。</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>\n<p>DHCP 协议的工作过程</p>\n<pre><code>首先，DHCP客户端发送DHCP发现报文来发现DHCP服务器。DHCP服务器会选取一个未分配的IP地址，向DHCP客户端发送DHCP提供报文。此报文中包含分配给客户端的IP地址和其他配置信息。如果存在多个DHCP服务器，每个DHCP服务器都会响应。\n如果有多个DHCP服务器向DHCP客户端发送DHCP提供报文，DHCP客户端将会选择收到的第一个DHCP提供报文，然后发送DHCP请求报文，报文中包含请求的IP地址。收到DHCP请求报文后，提供该IP地址的DHCP服务器会向DHCP客户端发送一个DHCP确认报文，包含提供的IP地址和其他配置信息。DHCP客户端收到DHCP确认报文后，会发送免费ARP报文，检查网络中是否有其他主机使用分配的IP地址。如果指定时间内没有收到ARP应答，DHCP客户端会使用这个IP地址。如果有主机使用该IP地址，DHCP客户端会向DHCP服务器发送DHCP拒绝报文，通知服务器该IP地址已被占用。然后DHCP客户端会向服务器重新申请一个IP地址。\n</code></pre>\n</li>\n<li>\n<p>DHCP 协议需要配置的项目<br>\n(1) IP 地址<br>\n(2) 子网掩码<br>\n(3) 默认路由器的 IP 地址<br>\n(4) 域名服务器的 IP 地址</p>\n</li>\n</ul>\n<h4 id=\"练习-v7\"><a class=\"header-anchor\" href=\"#练习-v7\">☆</a>练习</h4>\n<ol>\n<li>\n<p>域名与(   D  )具有一一对应的关系</p>\n<pre><code>A. IP地址\nB. MAC地址\nC. 主机\nD. 以上都不是\n</code></pre>\n</li>\n<li>\n<p>下列说法错误的是(   A   ) 。</p>\n<pre><code>A. Internet上提供客户访问的主机一定要有域名\nB. 同一域名在不同时间可能解析出不同的IP地址\nC. 多个域名可以指向同一个主机IP地址\nD. IP子网中主机可以由不同的域名服务器来维护其映射\n</code></pre>\n</li>\n</ol>\n<p>3.FTP客户和服务器之间传递FTP命令时，使用的连接是 (  A  ) 。</p>\n<pre><code>   A. 建立在TCP之上的控制连接\t\n   B. 建立在TCP之上的数据连接\n   C. 建立在UDP之上的控制连接\n   D. 建立在UDP之上的数据连接\n</code></pre>\n<p>4.从协议分析的角度，WWW服务的第一步操作是浏览器对服务器的 (  C  ) 。</p>\n<pre><code>   A. 请求地址解析\n   B. 传输连接建立\n   C. 请求域名解析\n   D. 会话连接建立\n</code></pre>\n<p>5.万维网上每个页面都有一个唯一的地址，这些地址统称为 (  C   ) 。</p>\n<pre><code>   A. IP地址\n   B. 域名地址\n   C. 统一资源定位符 \t\n   D. WWW地址\t\t\t\t\t\t\t\t\t\t\t\t\t\n</code></pre>\n<p>6.使用浏览器访问某大学 Web网站主页时，不可能使用到的协议是(  D  ) 。</p>\n<pre><code>   A. PPP\n   B. ARP\n   C. UDP\n   D. SMTP\n</code></pre>\n<p>7.HTTP是一个无状态协议，然而Web站点经常希望能够识别用户，这时需要用到( B ) 。</p>\n<pre><code>   A. Web缓存\n   B. Cookie\n   C. 条件GET\n   D. 持久链接\n</code></pre>\n<p>8.WWW网页文件的编写语言及相应的支持协议分别为（   C  ）</p>\n<pre><code>A、HTML，HTPT                B、HTTL，HTTP \nC、HTML，HTTP                D、以上均不对\n</code></pre>\n<p>9.在因特网域名中，com通常表示（  A   ）</p>\n<pre><code>A、商业组织   B、教育机构  \nC、政府部门   D、军事部门\t\t\n</code></pre>\n\n    <div id=\"aplayer-kfXoaSIf\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1770780619\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<h3 id=\"第-9-章-无线网络和移动网络\"><a class=\"header-anchor\" href=\"#第-9-章-无线网络和移动网络\">☆</a>第 9 章  无线网络和移动网络</h3>\n<p>9.1  无线局域网 WLAN<br>\n9.2  无线个人区域网 WPAN<br>\n9.3  无线城域网 WMAN<br>\n9.4  蜂窝移动通信网<br>\n9.5  两种不同无线上网</p>\n<h4 id=\"无线局域网的组成\"><a class=\"header-anchor\" href=\"#无线局域网的组成\">☆</a>无线局域网的组成</h4>\n<ul>\n<li>\n<p>无线局域网 WLAN (Wireless Local Area Network) 可分为两大类：</p>\n<ul>\n<li>有固定基础设施的 WLAN</li>\n<li>无固定基础设施的 WLAN</li>\n</ul>\n</li>\n<li>\n<p>所谓“固定基础设施”是指预先建立起来的、能够覆盖一定地理范围的一批固定基站。</p>\n</li>\n<li>\n<p>固定接入 (fixed access)——在作为网络用户期间，用户设置的地理位置保持不变。</p>\n</li>\n<li>\n<p>移动接入 (mobility access)——用户设置能够以车辆速度移动时进行网络通信。当发生切换时，通信仍然是连续的。</p>\n</li>\n<li>\n<p>便携接入 (portable access)——在受限的网络覆盖面积中，用户设备能够在以步行速度移动时进行网络通信，提供有限的切换能力。</p>\n</li>\n<li>\n<p>游牧接入 (nomadic access)——用户设备的地理位置至少在进行网络通信时保持不变。如用户设备移动了位置，则再次进行通信时可能还要寻找最佳的基站。</p>\n</li>\n</ul>\n<h4 id=\"csma-ca-算法归纳\"><a class=\"header-anchor\" href=\"#csma-ca-算法归纳\">☆</a>CSMA/CA 算法归纳</h4>\n<p>(1) 若站点最初有数据要发送（而不是发送不成功再进行重传），且检测到信道空闲，在等待时间 DIFS 后，就发送整个数据帧。<br>\n(2) 否则，站点执行 CSMA/CA 协议的退避算法。一旦检测到信道忙，就冻结退避计时器。只要信道空闲，退避计时器就进行倒计时。<br>\n(3) 当退避计时器时间减少到零时（这时信道只可能是空闲的），站点就发送整个的帧并等待确认。<br>\n(4) 发送站若收到确认，就知道已发送的帧被目的站正确收到了。这时如果要发送第二帧，就要从上面的步骤 (2) 开始，执行 CSMA/CA 协议的退避算法，随机选定一段退避时间。若源站在规定时间内没有收到确认帧 ACK（由重传计时器控制这段时间），就必须重传此帧（再次使用 CSMA/CA 协议争用接入信道），直到收到确认为止，或者经过若干次的重传失败后放弃发送。</p>\n<h4 id=\"zigbee技术的技术特点\"><a class=\"header-anchor\" href=\"#zigbee技术的技术特点\">☆</a>ZigBee技术的技术特点</h4>\n<p>数据传输速率低：10KB/秒~250KB /秒，专注于低传输<br>\n成本低：模块成本低，ZifBee协议免专利费<br>\n功耗低：低功耗待机模式下，两节5号电池可用6~24个月<br>\n时延短：通常时延都在15ms~30ms<br>\n安全： ZigBee采用AES-128加密算法<br>\n有效范围小：传输距离在1-100m的范围内,但可以继续增加<br>\n工作频段灵活：使用频段为2.4GHz、868MHz（欧洲）和915MHz（美国），均为免执照（免费）的频段<br>\n网络容量大：65535个节点</p>\n<h4 id=\"无线个人区域网-wpan\"><a class=\"header-anchor\" href=\"#无线个人区域网-wpan\">☆</a>无线个人区域网 WPAN</h4>\n<p>无线个人区域网 WPAN (Wireless Personal Area Network) 就是在个人工作地方把属于个人使用的电子设备用无线技术连接起来自组网络，不需要使用接入点 AP。<br>\n整个网络的范围大约在 10 m左右。<br>\nWPAN可以是一个人使用，也可以是若干人共同使用。<br>\n无线个人区域网 WPAN 和个人区域网 PAN (Personal Area Network) 并不完全等同，因为 PAN 不一定都是使用无线连接的。</p>\n<ol>\n<li>\n<p>蓝牙系统 (Bluetooth)</p>\n<pre><code>最早使用的 WPAN 是 1994 年爱立信公司推出的蓝牙系统，其标准是 IEEE 802.15.1 。\n蓝牙的数据率为 720 kbit/s，通信范围在 10 米左右。\n蓝牙使用 TDM 方式和扩频跳频 FHSS 技术组成不用基站的皮可网 (piconet)。\n</code></pre>\n</li>\n<li>\n<p>低速 WPAN</p>\n<pre><code>低速 WPAN 主要用于工业监控组网、办公自动化与控制等领域，其速率是 2 ~ 250 kbit/s。\n低速 WPAN 的标准是 IEEE 802.15.4。最近新修订的标准是 IEEE 802.15.4-2006。\n低速 WPAN 中最重要的就是 ZigBee。\nZigBee 技术主要用于各种电子设备（固定的、便携的或移动的）之间的无线通信，其主要特点是通信距离短（10 ~ 80 m），传输数据速率低，并且成本低廉\n</code></pre>\n</li>\n<li>\n<p>高速 WPAN</p>\n<pre><code>高速 WPAN 用于在便携式多媒体装置之间传送数据，支持11 ~ 55 Mbit/s 的数据率，标准是 802.15.3。\nIEEE 802.15.3a 工作组还提出了更高数据率的物理层标准的超高速 WPAN，它使用超宽带 UWB 技术。\nUWB 技术工作在 3.1 ~ 10.6 GHz 微波频段，有非常高的信道带宽。超宽带信号的带宽应超过信号中心频率的 25% 以上，或信号的绝对带宽超过 500 MHz。\n超宽带技术使用了瞬间高速脉冲，可支持 100 ~ 400 Mbit/s 的数据率，可用于小范围内高速传送图像或 DVD 质量的多媒体视频文件。 \n</code></pre>\n</li>\n</ol>\n<h4 id=\"蜂窝无线通信技术简介\"><a class=\"header-anchor\" href=\"#蜂窝无线通信技术简介\">☆</a>蜂窝无线通信技术简介</h4>\n<pre><code>\t蜂窝移动网络的发展非常迅速，到目前为止，世界上先后已有超过了 30 种不同的标准。\n\t第一代（1G）蜂窝无线通信是为话音通信设计的模拟 FDM 系统。\n\t第二代（2G）蜂窝无线通信提供低速数字通信（短信服务），其代表性体制就是最流行的 GSM 系统。\n\t2.5G 技术是从 2G 向第三代（3G）过渡的衔接性技术，如 GPRS 和 EDGE 等。\n\t第三代（3G） 移动通信和计算机网络的关系非常密切，它使用 IP 的体系结构和混合的交换机制（电路交换和分组交换），能够提供移动宽带多媒体业务（话音、数据、视频等，可收发电子邮件，浏览网页，进行视频会议等），如 CDMA2000，WCDMA 和 TD-SCDMA。\n\t从 3G 开始以后的各代蜂窝移动通信都是以传输数据业务为主的通信系统，而且必须兼容 2G 的功能（即能够通电话和发送短信），这就是所谓的向后兼容。  \n\t第四代（4G）正式名称是 IMT-Advanced (International Mobile Telecommunications-Advanced)，意思是高级国际移动通信。\n\t4G的一个重要技术指标就是要实现更高的数据率。目标峰值数据率是：固定的和低速移动通信时应达到1 Gbit/s，在高速移动通信时（如在火车、汽车上）应达到100 Mbit/s。\n</code></pre>\n<ul>\n<li>\n<p>4G 现有两个国际标准：</p>\n<pre><code>LTE (Long-Term Evolution)： \n又分为时分双工 TD-LTE 和 频分双工 FDD-LTE 两种。\n把带宽增加到 20 MHz，采用了高阶调制 64QAM 和 MIMO 技术。\nLTE-A (LTE-Advanced)：\nLTE 的升级版，俗称为 3.9G。\n带宽高达 100 MHz。\n</code></pre>\n</li>\n</ul>\n<h4 id=\"练习-v8\"><a class=\"header-anchor\" href=\"#练习-v8\">☆</a>练习</h4>\n<p>1.IEEE802.11帧分为3种类型：控制帧、管理帧 和 数据帧<br>\n2.IEEE 802.11标准采用. CSMA/CA 机制，可在所有站支持竞争型异步业务，从而是信号冲突概率减少到最小。<br>\n3.无线局域网有两种类型的扫描：主动扫描 和 被动扫描</p>\n<p>4、以下不属于WPAN的是（  D  ）</p>\n<pre><code>A、Bluetooth      B、ZigBee        \nC、UWB       \tD、WiMAX\n</code></pre>\n<p>5、以下不属于第三代移动通信采用的标准体系的是（  D  ）</p>\n<pre><code>A、CDMA2000\t\tB、WCDMA \t\nC、 TD-SCDMA\t\tD、GPRS\n</code></pre>\n<center> <font color=\"yellowgreen\" size=\"20\">—— 全文完 ——</font> </center> \n"},{"title":"(转)80、90后是“失去庇护的一代人”| 深度：走亲戚送礼有什么“大用途”？","notshow":false,"copyright":false,"abbrlink":"29cebcea","date":"2018-02-26T12:47:08.000Z","password":null,"_content":"\n\n----------\n本文转载自： `KnowYourself`公众号\n\n----------\n\n![][2]\n\n礼物这个词，是很有意思的。在人类学和社会学家的眼睛里，它是一个重要的词语。在整个20世纪以及本世纪，人类学世界对于“礼物”的学术争论从未停止。\n\n礼物，顾名思义是一种承载了“礼”的“物”。“礼”，指的是从微观到宏观的社会规则与道德；礼是精神性的。礼物，就是这样一种包含了精神性的物品。它不同于商品（商品仅仅是一种经济价值可量化的物品）。\n\n商品，是完全独立于人的存在，**它具有一种可计算的经济价值，可以在各种人中遵循等价原则流转**。\n\n礼物的价值，却**只有一部分由它的商品价值所定义。礼物的另一部分价值，来自于人主观的附加，它包含一种商品价值之外的、无法量化的价值**。(甚至在以诸如求雨、求战胜为目的的祭祀活动中，送给天神的“牺牲品”，也可被看成礼物的一种，包含一种由人赋予的主观价值。) (阎云翔，2000)。\n\n1925年，法国人类学家莫斯（Marcel Mauss，大名鼎鼎的社会学家涂尔干的侄子，写出了第一本关于礼物交换的学术著作——《礼物》（the Gift）。\n\n书中，莫斯严格区分了“馈赠礼物”与“交换商品”两件事。并从一开始就提出了这样一个问题：**人为什么会习惯性回礼？**\n\n莫斯在对毛利社会的研究中发现，**毛利人认为每个人送出的礼物，都包含了送礼者自身的一部分精神力——这被称为“礼物之灵”**（毛利语为“hau”，意为the spirit of gift），**当我们接收到对方的这部分hau时，我们必须再把它（借由回礼）重新交还给送礼者。**否则，被我们留下的hau会给我们带来厄运。\n\n当我读到这部分时，我想起儿时曾听到见到过父母商量，“收了对方的礼物怎么办，一定要做出回礼”，也记起了自己对“接下大人的礼物”这件事的恐惧，父母会严厉呵斥我收下本不该收的礼物，仿佛是一件了不得的大事。\n\n然而，莫斯的这一理论，曾经在后来的几十年中受到人类学家们的持续批评。后来的大师们（例如马林诺夫斯基、列维斯特劳斯等）认为，**互惠原则才是人们收礼、回礼的核心。人们在送礼时渴望得到回报；而在回礼时，害怕自己的不作为会导致对方在未来停止付出**。学者们认为，人们对于“未来将收到某种不确定的好处”存在着普遍的期望。\n\n直到上世纪80年代，人类学家们互相吵啊吵啊，又把注意力重新集中在了莫斯提出的“礼物之灵”上。更年轻一代的人类学家们认为，**互惠原则不足以解释人类社会中的多种送礼行为**。比如，在印度种姓社会中，社会上层会向下层民众广泛送礼。这种举动并未期许获得任何“互惠”的回报；而是作为文化统治的一种手段，以期获取某种精神意义的“功德”。而在中国社会中，富人、统治者开粮仓、接济穷人，也是为了获得某种精神性的“声望”。\n\n美国人类学家韦纳（Annette Weiner，纽约大学教授，曾任美国人类学协会主席）提出，**有一部分礼物，本身就是无法被真正意义上“送掉”的，与其说是赠送，不如说是“借贷”，这些礼物从送出开始，就等待着有一天被收回**。例如，在老家（相对来说更为传统的中国社会），婚礼的份子钱，就是这样一种从送出开始就等待被收回的“礼”。\n\n![][3]\n\n![][4]\n \n 美国社会学家帕森斯提出，一个社会中，社会成员的行动受到他们内在的价值取向影响。为了衡量一个社会的价值取向，他提出了五组“模式变量（Pattern Variebles）” (Parsons,1937)。它们是：\n**1. 情感投入的 vs 情感中立的**\n&emsp; “情感投入”的互动方式是指在人与人的互动中，彼此带有较多情感色彩；“情感中立”的互动方式是指人与人的互动更加依靠理性。\n\n**2. 扩散式互动的 vs 专门式互动的** \n&emsp;“扩散式”的互动指的是，人和人的互动会设计多方面的目的，而不是单一的功能（例如在老家，医生可能和妈妈是好朋友，除了医患往来、平时还会一起逛街）；“专门式”的互动指的是，人和人的互动较多情况下有着专门的、单一的目的（大城市中往往与医生的互动只有看病）。\n\n**3. 特殊主义的 vs 普遍主义的**\n&emsp;“特殊主义”的互动方式中，“标准”是因人而异的、取决于人和人之间的亲疏关系（例如别人家的孩子在公共场合大哭是“熊孩子”，但如果是自己家的就是活泼可爱）；而“普遍主义”的互动方式中，“标准”是普世的、来自通行的规则（例如合同、法律、宗教信念等）。\n\n**4. 先天赋予的 vs 后天取得的**\n&emsp;在更看重“先天赋予”的互动方式中，人们的行动选择更注重对方的身份、与自己天然的关系；而在更看重“后天取得”的互动方式中，人们的行动选择更注重对方的行为表现、个人态度等。\n\n**5. 自我利益的 vs 公共利益的**\n&emsp;在更看重自我利益的社会中，人们的互动中会更注重谋取自身个体的利益，而在公共利益的社会中，人们的行动会更注重不伤害整体性的公共利益（例如相信只有保证了公平的公共利益才是对个人利益的更有效的保护）。\n\n帕森斯认为，这五组变量的前面半句，对应的是传统社会，而后面半句，对应的则是现代社会。他提出，**中国的社会，就是一种典型的“特殊主义”取向的社会类型。在现代的普遍主义社会中，更常见独立（independent）的个体；而在传统的特殊主义社会中，更常见（interdependent）（人际间）相互依赖的个体**。\n\n帕森斯说：\n&emsp;&emsp;**对于普遍主义社会来说，人们普遍认为，规则应该无差别地（平等地）用来约束每一个人。而在特殊主义的社会中，人们普遍知道，法律、规则，可以被调整用来适应一些特殊的关系、会有因人而异的变化。**\n\n![][5]\n\n我们很容易理解，在特殊主义的社会中，人们可以通过调整自己与他人之间的关系，收获不同的互动方式、互动规则、以及互动结果。北大社会学系郑也夫教授有过一段关于中国社会的精彩的描述：\n\n“ ‘朋友’ 关系的高度膨胀危害着一切制度化的秩序。从购物、交通到考学、择业、商业经营、法律裁决……一切要凭关系。货币与普遍主义标准（比如分数）的产生就是为了简化那个日益扩大化的、复杂的社会交换与社会生活。而我们却从这一文明的门坎内倒退出去。\n\n每个人都以为自己是合算的。通过特殊主义的、熟人间面对面的 ‘交易’得到了便利和好处。而这种个体的“理性”加在一起却构成了团体行为的“非理性” 。从此，我们没有了一般媒介物。我们做任何一件事都要找熟人，我们的杜会交换受阻、流通不畅，‘成本’激增”（郑也夫，1993）。\n\n（值得一提的是，郑也夫教授，并没有对特殊主义持有“一棍子打死”的绝对负面评价。相反他认为，特殊主义原则是不可取代的，有它独特的作用。比**如它能够带来普遍主义无法带来的情感价值，而在危机真正发生的时候，也只有那些特殊主义的关系会是个体“最后的守护者”**。因此他指出中国可以参照日本的发展路线，仍然维持特殊主义，但让普遍主义成为重要的组合。）\n\n郑也夫指出，**特殊主义与普遍主义，本质上只是“信任”产生的两种方式。特殊主义社会的信任发生于亲近的人际关系，人们彼此的信任是全面的**（例如信任你的工作能力也信任你在情感中的人品），**普遍主义的信任发生于标准化的、笼罩于每个人之上的规则，人们彼此之间的信任是单一的**（例如只信任你的工作能力，对你的情感生活无法了解也不会盲目信任）。前者能够产生小规模的信任系统，后者能够产生更大规模的信任系统（郑也夫，1993）。\n\n而送礼，在一个特殊主义的社会中，有着远比“表达祝福与情感”更复杂、更不可或缺也无法替代的目的和功能。\n\n社会学大师费孝通曾经指出，中国的社会结构是一种“差序格局”。怎么理解差序格局？费孝通说：中国人的“人伦”，是从自己推出去，在“和自己发生社会关系”的那一群人里，所发生的一轮轮波纹的差序。中国的社会结构，是一个一个以“己”为中心的结构。每个人以自己为核心, 然后扩散出去，就像石子投入水中, 和别人所联系成的社会关系就像水的波纹一样，一圈一圈向外荡漾，愈推愈远，也愈推愈薄。\n\n“中国的规则/道德，是有差等的次序。在差序社会里, 一切普遍的标准并不发生作用, 一定要问清了对象是谁, 和自己什么关系后, 才能决定拿出什么标准来。”郑也夫说，传统中国社会的这种差序格局完全体现了特殊主义的原则，是特殊主义的极致形式（郑也夫，1993）。\n\n礼物，在传统中国社会中，就是“关系”的一种象征性的凝聚。**通过礼物的互换，我们反复确认着彼此之间“关系”的存在（确认我们在其他人的“水轮波纹”中有着一席之地）；通过向比自己有着更高社会地位的人，赠送“贵重”（可能是商品价值高、也可能是赋予的私人价值很珍贵）的礼物，我们可以拉近自己与“在社会规则中享有更大豁免权”的人之间的距离——我们更加靠近他们的差序核心（也就是他们自己），从而通过调整亲疏、调整了施加在自己身上的规则和标准。**\n\n假如，收到礼物而不还礼，我们会有被他人的“水轮”排除在外的风险。**如此，我们在这个广大的社会中，会成为真正意义上“孤立无援”的人——因为特殊主义的社会并不平等地保护每一个人，甚至，某种意义上我们每个人都是他人利益对立的敌人。**\n\n![][6]\n\n![][7]\n\n不知道有多少同辈人，和我一样，曾经在人生的某个阶段收到过父母“要给领导送点东西”的“人生建议”。也不知道有多少人和我一样对这件事心怀抗拒。\n\n为什么年轻一代不再像我们的上一辈人一样，认为送礼是生存的必备技能？为什么我们会对送礼如此反感？真的只是因为我们比他们更加“清高”么？\n\n我们无法如此简单粗暴地总结一种价值取向，更不能如此片面地归因一种文化改变的发生。\n\n一种更加可能的解释是：\n当分工日渐精细化，人口大规模迁徙向大都市，当我们比我们的每一位父辈都更像一台巨大机器上的齿轮，我们的工作世界已经很大程度上走向了现代化。现代社会的特征是分工的精细和专业化，各种分工之间必须彼此合作、依存，无法自给自足。**旧的特殊主义的信任，在大都市中难以建立。**\n\n不必说路上擦身而过的陌生人，在大都市中，即便是同事、邻里、朋友之间，我们也很难了解到一个人的全貌。**我们只能够在非常小的范围内，基于人和人之间的全方面互动与情感性交往产生信任系统。这种信任系统可能达到的规模，远比在传统的小城市中（乡土与人情社会）还要更小，也要远远更为浅薄。**我们在大都市中遇到的大部分私人关系，都尚不足以成为我们“最后的守护者”。\n\n**礼品交换之所以能产生长期而深刻的社会功能，是基于背后持久稳定的人际关系网络。紧密、持续、稳定存在的关系网络，让人们通过赠送礼物这种方式，“预约”某种不用立即兑现的的远期回报（即“欠人情”）。**大都市中人际关系的脆弱和流动性，让我们更倾向于选择立刻、等价的“商品交换”。\n\n我们在大都市中感到孤独，而在老家春节的走亲串友、互赠礼物的过程中感到孤独感的减轻，是因为后者正是我们确认自己处于、并经营和维护着“承载我们的人际网络”的过程。在那个人际网络中每个人的**承诺度**，是大都市的“繁华热闹”永远无法给予的。\n\n与此同时，**那属于普遍主义社会的、凌驾于每个个体之上的、代表着公正与平等的庇护又还没有形成**（也不一定会形成，没有人知道，中国会不会走出自己独特的道路）。\n\n而我们与此同时也心知肚明，即便是大都市中，传统中国社会的一套也始终存在。只不过，在这个竞争更加激烈的场域里，我们既没有方法辨认、更无法接近到那些真正具有特权的“差序格局”的核心。没有人情引荐的“波纹”传递，我们要送礼给谁？\n\n![][8]\n\n当我们离开家乡，我们就真的成了浩瀚大海中的一叶扁舟。中国社会的矛盾之处在于：**特殊主义带来了人们对于“自身关系网络以外的人”的不诚实与不信任；但关系网络以内的、尤其是亲密的人之间的扶持与信靠，却也是无以伦比的。**（我们看到美国社会中拒绝赡养的情况远比中国常见，在中国，即便是给家庭带来很大伤害的老人也依然得到赡养）。\n\n清华大学社会学系教授渠敬东老师，曾在一篇访谈中说，“一个人总是渺小的，抵抗不住那么大的体制，也无法适应所有的变故。而在这里（指乡村），一个人遇到困难或者人生重要阶段的时候，总有神啊、鬼啊陪伴着你，**有祖先在那里守护着你，让你在生老病死中感到心安**。”（渠敬东，2017）\n\n有机会的时候，回一回老家吧。虽然某种程度上，年轻一代的我们都已经是文化上的边缘人——我们既无法真正被异乡接纳，也再也无法重新融入生我们养我们的故乡——**但老家仍有我们的“根”，它是危机时，对我们最后的承接与安放。**\n\n以上，送份热闹的礼，过个俗气的年，甚好。\n\n\n----------\n\nReferences:\nMauss,M. (2000). The gift: The form and reason for exchange in archaic societies.WW Norton & Company.\nParsons,T. (1937). The structure of social action. Sociology. Thought and Action, 1(1),32-46.\nWeber,M., & Gerth, H. H. (1953). The Religion of China, Confucianism and Taoism.\nWeiner,A. B. (1992). Inalienable possessions: the paradox of keeping-whilegiving. Univ of California Press.\n渠敬东. (2017). 渠敬东访谈：乡村是一个社会文化生态系统。\n阎云翔.(2000). 礼物的流动: 一个中国村庄的互惠原则与社会网络。\n郑也夫.(1993). 特殊主义与普遍主义. 社会学研究, (4),110-116。\n\n\n  [1]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%281%29.jpg\n  [2]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%281%29.jpg\n  [3]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%282%29.jpg\n  [4]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%283%29.jpg\n  [5]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%284%29.jpg\n  [6]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%285%29.jpg\n  [7]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%207.jpg \n  [8]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%286%29.jpg","source":"_posts/走亲戚送礼.md","raw":"---\ntitle: (转)80、90后是“失去庇护的一代人”| 深度：走亲戚送礼有什么“大用途”？\ncategories: 转载\nnotshow: false\ncopyright: false\nabbrlink: 29cebcea\ndate: 2018-02-26 20:47:08\ntags:\npassword:\n---\n\n\n----------\n本文转载自： `KnowYourself`公众号\n\n----------\n\n![][2]\n\n礼物这个词，是很有意思的。在人类学和社会学家的眼睛里，它是一个重要的词语。在整个20世纪以及本世纪，人类学世界对于“礼物”的学术争论从未停止。\n\n礼物，顾名思义是一种承载了“礼”的“物”。“礼”，指的是从微观到宏观的社会规则与道德；礼是精神性的。礼物，就是这样一种包含了精神性的物品。它不同于商品（商品仅仅是一种经济价值可量化的物品）。\n\n商品，是完全独立于人的存在，**它具有一种可计算的经济价值，可以在各种人中遵循等价原则流转**。\n\n礼物的价值，却**只有一部分由它的商品价值所定义。礼物的另一部分价值，来自于人主观的附加，它包含一种商品价值之外的、无法量化的价值**。(甚至在以诸如求雨、求战胜为目的的祭祀活动中，送给天神的“牺牲品”，也可被看成礼物的一种，包含一种由人赋予的主观价值。) (阎云翔，2000)。\n\n1925年，法国人类学家莫斯（Marcel Mauss，大名鼎鼎的社会学家涂尔干的侄子，写出了第一本关于礼物交换的学术著作——《礼物》（the Gift）。\n\n书中，莫斯严格区分了“馈赠礼物”与“交换商品”两件事。并从一开始就提出了这样一个问题：**人为什么会习惯性回礼？**\n\n莫斯在对毛利社会的研究中发现，**毛利人认为每个人送出的礼物，都包含了送礼者自身的一部分精神力——这被称为“礼物之灵”**（毛利语为“hau”，意为the spirit of gift），**当我们接收到对方的这部分hau时，我们必须再把它（借由回礼）重新交还给送礼者。**否则，被我们留下的hau会给我们带来厄运。\n\n当我读到这部分时，我想起儿时曾听到见到过父母商量，“收了对方的礼物怎么办，一定要做出回礼”，也记起了自己对“接下大人的礼物”这件事的恐惧，父母会严厉呵斥我收下本不该收的礼物，仿佛是一件了不得的大事。\n\n然而，莫斯的这一理论，曾经在后来的几十年中受到人类学家们的持续批评。后来的大师们（例如马林诺夫斯基、列维斯特劳斯等）认为，**互惠原则才是人们收礼、回礼的核心。人们在送礼时渴望得到回报；而在回礼时，害怕自己的不作为会导致对方在未来停止付出**。学者们认为，人们对于“未来将收到某种不确定的好处”存在着普遍的期望。\n\n直到上世纪80年代，人类学家们互相吵啊吵啊，又把注意力重新集中在了莫斯提出的“礼物之灵”上。更年轻一代的人类学家们认为，**互惠原则不足以解释人类社会中的多种送礼行为**。比如，在印度种姓社会中，社会上层会向下层民众广泛送礼。这种举动并未期许获得任何“互惠”的回报；而是作为文化统治的一种手段，以期获取某种精神意义的“功德”。而在中国社会中，富人、统治者开粮仓、接济穷人，也是为了获得某种精神性的“声望”。\n\n美国人类学家韦纳（Annette Weiner，纽约大学教授，曾任美国人类学协会主席）提出，**有一部分礼物，本身就是无法被真正意义上“送掉”的，与其说是赠送，不如说是“借贷”，这些礼物从送出开始，就等待着有一天被收回**。例如，在老家（相对来说更为传统的中国社会），婚礼的份子钱，就是这样一种从送出开始就等待被收回的“礼”。\n\n![][3]\n\n![][4]\n \n 美国社会学家帕森斯提出，一个社会中，社会成员的行动受到他们内在的价值取向影响。为了衡量一个社会的价值取向，他提出了五组“模式变量（Pattern Variebles）” (Parsons,1937)。它们是：\n**1. 情感投入的 vs 情感中立的**\n&emsp; “情感投入”的互动方式是指在人与人的互动中，彼此带有较多情感色彩；“情感中立”的互动方式是指人与人的互动更加依靠理性。\n\n**2. 扩散式互动的 vs 专门式互动的** \n&emsp;“扩散式”的互动指的是，人和人的互动会设计多方面的目的，而不是单一的功能（例如在老家，医生可能和妈妈是好朋友，除了医患往来、平时还会一起逛街）；“专门式”的互动指的是，人和人的互动较多情况下有着专门的、单一的目的（大城市中往往与医生的互动只有看病）。\n\n**3. 特殊主义的 vs 普遍主义的**\n&emsp;“特殊主义”的互动方式中，“标准”是因人而异的、取决于人和人之间的亲疏关系（例如别人家的孩子在公共场合大哭是“熊孩子”，但如果是自己家的就是活泼可爱）；而“普遍主义”的互动方式中，“标准”是普世的、来自通行的规则（例如合同、法律、宗教信念等）。\n\n**4. 先天赋予的 vs 后天取得的**\n&emsp;在更看重“先天赋予”的互动方式中，人们的行动选择更注重对方的身份、与自己天然的关系；而在更看重“后天取得”的互动方式中，人们的行动选择更注重对方的行为表现、个人态度等。\n\n**5. 自我利益的 vs 公共利益的**\n&emsp;在更看重自我利益的社会中，人们的互动中会更注重谋取自身个体的利益，而在公共利益的社会中，人们的行动会更注重不伤害整体性的公共利益（例如相信只有保证了公平的公共利益才是对个人利益的更有效的保护）。\n\n帕森斯认为，这五组变量的前面半句，对应的是传统社会，而后面半句，对应的则是现代社会。他提出，**中国的社会，就是一种典型的“特殊主义”取向的社会类型。在现代的普遍主义社会中，更常见独立（independent）的个体；而在传统的特殊主义社会中，更常见（interdependent）（人际间）相互依赖的个体**。\n\n帕森斯说：\n&emsp;&emsp;**对于普遍主义社会来说，人们普遍认为，规则应该无差别地（平等地）用来约束每一个人。而在特殊主义的社会中，人们普遍知道，法律、规则，可以被调整用来适应一些特殊的关系、会有因人而异的变化。**\n\n![][5]\n\n我们很容易理解，在特殊主义的社会中，人们可以通过调整自己与他人之间的关系，收获不同的互动方式、互动规则、以及互动结果。北大社会学系郑也夫教授有过一段关于中国社会的精彩的描述：\n\n“ ‘朋友’ 关系的高度膨胀危害着一切制度化的秩序。从购物、交通到考学、择业、商业经营、法律裁决……一切要凭关系。货币与普遍主义标准（比如分数）的产生就是为了简化那个日益扩大化的、复杂的社会交换与社会生活。而我们却从这一文明的门坎内倒退出去。\n\n每个人都以为自己是合算的。通过特殊主义的、熟人间面对面的 ‘交易’得到了便利和好处。而这种个体的“理性”加在一起却构成了团体行为的“非理性” 。从此，我们没有了一般媒介物。我们做任何一件事都要找熟人，我们的杜会交换受阻、流通不畅，‘成本’激增”（郑也夫，1993）。\n\n（值得一提的是，郑也夫教授，并没有对特殊主义持有“一棍子打死”的绝对负面评价。相反他认为，特殊主义原则是不可取代的，有它独特的作用。比**如它能够带来普遍主义无法带来的情感价值，而在危机真正发生的时候，也只有那些特殊主义的关系会是个体“最后的守护者”**。因此他指出中国可以参照日本的发展路线，仍然维持特殊主义，但让普遍主义成为重要的组合。）\n\n郑也夫指出，**特殊主义与普遍主义，本质上只是“信任”产生的两种方式。特殊主义社会的信任发生于亲近的人际关系，人们彼此的信任是全面的**（例如信任你的工作能力也信任你在情感中的人品），**普遍主义的信任发生于标准化的、笼罩于每个人之上的规则，人们彼此之间的信任是单一的**（例如只信任你的工作能力，对你的情感生活无法了解也不会盲目信任）。前者能够产生小规模的信任系统，后者能够产生更大规模的信任系统（郑也夫，1993）。\n\n而送礼，在一个特殊主义的社会中，有着远比“表达祝福与情感”更复杂、更不可或缺也无法替代的目的和功能。\n\n社会学大师费孝通曾经指出，中国的社会结构是一种“差序格局”。怎么理解差序格局？费孝通说：中国人的“人伦”，是从自己推出去，在“和自己发生社会关系”的那一群人里，所发生的一轮轮波纹的差序。中国的社会结构，是一个一个以“己”为中心的结构。每个人以自己为核心, 然后扩散出去，就像石子投入水中, 和别人所联系成的社会关系就像水的波纹一样，一圈一圈向外荡漾，愈推愈远，也愈推愈薄。\n\n“中国的规则/道德，是有差等的次序。在差序社会里, 一切普遍的标准并不发生作用, 一定要问清了对象是谁, 和自己什么关系后, 才能决定拿出什么标准来。”郑也夫说，传统中国社会的这种差序格局完全体现了特殊主义的原则，是特殊主义的极致形式（郑也夫，1993）。\n\n礼物，在传统中国社会中，就是“关系”的一种象征性的凝聚。**通过礼物的互换，我们反复确认着彼此之间“关系”的存在（确认我们在其他人的“水轮波纹”中有着一席之地）；通过向比自己有着更高社会地位的人，赠送“贵重”（可能是商品价值高、也可能是赋予的私人价值很珍贵）的礼物，我们可以拉近自己与“在社会规则中享有更大豁免权”的人之间的距离——我们更加靠近他们的差序核心（也就是他们自己），从而通过调整亲疏、调整了施加在自己身上的规则和标准。**\n\n假如，收到礼物而不还礼，我们会有被他人的“水轮”排除在外的风险。**如此，我们在这个广大的社会中，会成为真正意义上“孤立无援”的人——因为特殊主义的社会并不平等地保护每一个人，甚至，某种意义上我们每个人都是他人利益对立的敌人。**\n\n![][6]\n\n![][7]\n\n不知道有多少同辈人，和我一样，曾经在人生的某个阶段收到过父母“要给领导送点东西”的“人生建议”。也不知道有多少人和我一样对这件事心怀抗拒。\n\n为什么年轻一代不再像我们的上一辈人一样，认为送礼是生存的必备技能？为什么我们会对送礼如此反感？真的只是因为我们比他们更加“清高”么？\n\n我们无法如此简单粗暴地总结一种价值取向，更不能如此片面地归因一种文化改变的发生。\n\n一种更加可能的解释是：\n当分工日渐精细化，人口大规模迁徙向大都市，当我们比我们的每一位父辈都更像一台巨大机器上的齿轮，我们的工作世界已经很大程度上走向了现代化。现代社会的特征是分工的精细和专业化，各种分工之间必须彼此合作、依存，无法自给自足。**旧的特殊主义的信任，在大都市中难以建立。**\n\n不必说路上擦身而过的陌生人，在大都市中，即便是同事、邻里、朋友之间，我们也很难了解到一个人的全貌。**我们只能够在非常小的范围内，基于人和人之间的全方面互动与情感性交往产生信任系统。这种信任系统可能达到的规模，远比在传统的小城市中（乡土与人情社会）还要更小，也要远远更为浅薄。**我们在大都市中遇到的大部分私人关系，都尚不足以成为我们“最后的守护者”。\n\n**礼品交换之所以能产生长期而深刻的社会功能，是基于背后持久稳定的人际关系网络。紧密、持续、稳定存在的关系网络，让人们通过赠送礼物这种方式，“预约”某种不用立即兑现的的远期回报（即“欠人情”）。**大都市中人际关系的脆弱和流动性，让我们更倾向于选择立刻、等价的“商品交换”。\n\n我们在大都市中感到孤独，而在老家春节的走亲串友、互赠礼物的过程中感到孤独感的减轻，是因为后者正是我们确认自己处于、并经营和维护着“承载我们的人际网络”的过程。在那个人际网络中每个人的**承诺度**，是大都市的“繁华热闹”永远无法给予的。\n\n与此同时，**那属于普遍主义社会的、凌驾于每个个体之上的、代表着公正与平等的庇护又还没有形成**（也不一定会形成，没有人知道，中国会不会走出自己独特的道路）。\n\n而我们与此同时也心知肚明，即便是大都市中，传统中国社会的一套也始终存在。只不过，在这个竞争更加激烈的场域里，我们既没有方法辨认、更无法接近到那些真正具有特权的“差序格局”的核心。没有人情引荐的“波纹”传递，我们要送礼给谁？\n\n![][8]\n\n当我们离开家乡，我们就真的成了浩瀚大海中的一叶扁舟。中国社会的矛盾之处在于：**特殊主义带来了人们对于“自身关系网络以外的人”的不诚实与不信任；但关系网络以内的、尤其是亲密的人之间的扶持与信靠，却也是无以伦比的。**（我们看到美国社会中拒绝赡养的情况远比中国常见，在中国，即便是给家庭带来很大伤害的老人也依然得到赡养）。\n\n清华大学社会学系教授渠敬东老师，曾在一篇访谈中说，“一个人总是渺小的，抵抗不住那么大的体制，也无法适应所有的变故。而在这里（指乡村），一个人遇到困难或者人生重要阶段的时候，总有神啊、鬼啊陪伴着你，**有祖先在那里守护着你，让你在生老病死中感到心安**。”（渠敬东，2017）\n\n有机会的时候，回一回老家吧。虽然某种程度上，年轻一代的我们都已经是文化上的边缘人——我们既无法真正被异乡接纳，也再也无法重新融入生我们养我们的故乡——**但老家仍有我们的“根”，它是危机时，对我们最后的承接与安放。**\n\n以上，送份热闹的礼，过个俗气的年，甚好。\n\n\n----------\n\nReferences:\nMauss,M. (2000). The gift: The form and reason for exchange in archaic societies.WW Norton & Company.\nParsons,T. (1937). The structure of social action. Sociology. Thought and Action, 1(1),32-46.\nWeber,M., & Gerth, H. H. (1953). The Religion of China, Confucianism and Taoism.\nWeiner,A. B. (1992). Inalienable possessions: the paradox of keeping-whilegiving. Univ of California Press.\n渠敬东. (2017). 渠敬东访谈：乡村是一个社会文化生态系统。\n阎云翔.(2000). 礼物的流动: 一个中国村庄的互惠原则与社会网络。\n郑也夫.(1993). 特殊主义与普遍主义. 社会学研究, (4),110-116。\n\n\n  [1]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%281%29.jpg\n  [2]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%281%29.jpg\n  [3]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%282%29.jpg\n  [4]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%283%29.jpg\n  [5]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%284%29.jpg\n  [6]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%285%29.jpg\n  [7]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%207.jpg \n  [8]: https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%286%29.jpg","slug":"走亲戚送礼","published":1,"updated":"2020-02-20T06:06:59.433Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td44001ufkupjxezx9zb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><hr>\n<p>本文转载自： <code>KnowYourself</code>公众号</p>\n<hr>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%281%29.jpg\" alt></p>\n<p>礼物这个词，是很有意思的。在人类学和社会学家的眼睛里，它是一个重要的词语。在整个20世纪以及本世纪，人类学世界对于“礼物”的学术争论从未停止。</p>\n<p>礼物，顾名思义是一种承载了“礼”的“物”。“礼”，指的是从微观到宏观的社会规则与道德；礼是精神性的。礼物，就是这样一种包含了精神性的物品。它不同于商品（商品仅仅是一种经济价值可量化的物品）。</p>\n<p>商品，是完全独立于人的存在，<strong>它具有一种可计算的经济价值，可以在各种人中遵循等价原则流转</strong>。</p>\n<p>礼物的价值，却<strong>只有一部分由它的商品价值所定义。礼物的另一部分价值，来自于人主观的附加，它包含一种商品价值之外的、无法量化的价值</strong>。(甚至在以诸如求雨、求战胜为目的的祭祀活动中，送给天神的“牺牲品”，也可被看成礼物的一种，包含一种由人赋予的主观价值。) (阎云翔，2000)。</p>\n<p>1925年，法国人类学家莫斯（Marcel Mauss，大名鼎鼎的社会学家涂尔干的侄子，写出了第一本关于礼物交换的学术著作——《礼物》（the Gift）。</p>\n<p>书中，莫斯严格区分了“馈赠礼物”与“交换商品”两件事。并从一开始就提出了这样一个问题：<strong>人为什么会习惯性回礼？</strong></p>\n<p>莫斯在对毛利社会的研究中发现，<strong>毛利人认为每个人送出的礼物，都包含了送礼者自身的一部分精神力——这被称为“礼物之灵”</strong>（毛利语为“hau”，意为the spirit of gift），**当我们接收到对方的这部分hau时，我们必须再把它（借由回礼）重新交还给送礼者。**否则，被我们留下的hau会给我们带来厄运。</p>\n<p>当我读到这部分时，我想起儿时曾听到见到过父母商量，“收了对方的礼物怎么办，一定要做出回礼”，也记起了自己对“接下大人的礼物”这件事的恐惧，父母会严厉呵斥我收下本不该收的礼物，仿佛是一件了不得的大事。</p>\n<p>然而，莫斯的这一理论，曾经在后来的几十年中受到人类学家们的持续批评。后来的大师们（例如马林诺夫斯基、列维斯特劳斯等）认为，<strong>互惠原则才是人们收礼、回礼的核心。人们在送礼时渴望得到回报；而在回礼时，害怕自己的不作为会导致对方在未来停止付出</strong>。学者们认为，人们对于“未来将收到某种不确定的好处”存在着普遍的期望。</p>\n<p>直到上世纪80年代，人类学家们互相吵啊吵啊，又把注意力重新集中在了莫斯提出的“礼物之灵”上。更年轻一代的人类学家们认为，<strong>互惠原则不足以解释人类社会中的多种送礼行为</strong>。比如，在印度种姓社会中，社会上层会向下层民众广泛送礼。这种举动并未期许获得任何“互惠”的回报；而是作为文化统治的一种手段，以期获取某种精神意义的“功德”。而在中国社会中，富人、统治者开粮仓、接济穷人，也是为了获得某种精神性的“声望”。</p>\n<p>美国人类学家韦纳（Annette Weiner，纽约大学教授，曾任美国人类学协会主席）提出，<strong>有一部分礼物，本身就是无法被真正意义上“送掉”的，与其说是赠送，不如说是“借贷”，这些礼物从送出开始，就等待着有一天被收回</strong>。例如，在老家（相对来说更为传统的中国社会），婚礼的份子钱，就是这样一种从送出开始就等待被收回的“礼”。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%282%29.jpg\" alt></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%283%29.jpg\" alt></p>\n<p>美国社会学家帕森斯提出，一个社会中，社会成员的行动受到他们内在的价值取向影响。为了衡量一个社会的价值取向，他提出了五组“模式变量（Pattern Variebles）” (Parsons,1937)。它们是：<br>\n<strong>1. 情感投入的 vs 情感中立的</strong><br>\n  “情感投入”的互动方式是指在人与人的互动中，彼此带有较多情感色彩；“情感中立”的互动方式是指人与人的互动更加依靠理性。</p>\n<p><strong>2. 扩散式互动的 vs 专门式互动的</strong><br>\n “扩散式”的互动指的是，人和人的互动会设计多方面的目的，而不是单一的功能（例如在老家，医生可能和妈妈是好朋友，除了医患往来、平时还会一起逛街）；“专门式”的互动指的是，人和人的互动较多情况下有着专门的、单一的目的（大城市中往往与医生的互动只有看病）。</p>\n<p><strong>3. 特殊主义的 vs 普遍主义的</strong><br>\n “特殊主义”的互动方式中，“标准”是因人而异的、取决于人和人之间的亲疏关系（例如别人家的孩子在公共场合大哭是“熊孩子”，但如果是自己家的就是活泼可爱）；而“普遍主义”的互动方式中，“标准”是普世的、来自通行的规则（例如合同、法律、宗教信念等）。</p>\n<p><strong>4. 先天赋予的 vs 后天取得的</strong><br>\n 在更看重“先天赋予”的互动方式中，人们的行动选择更注重对方的身份、与自己天然的关系；而在更看重“后天取得”的互动方式中，人们的行动选择更注重对方的行为表现、个人态度等。</p>\n<p><strong>5. 自我利益的 vs 公共利益的</strong><br>\n 在更看重自我利益的社会中，人们的互动中会更注重谋取自身个体的利益，而在公共利益的社会中，人们的行动会更注重不伤害整体性的公共利益（例如相信只有保证了公平的公共利益才是对个人利益的更有效的保护）。</p>\n<p>帕森斯认为，这五组变量的前面半句，对应的是传统社会，而后面半句，对应的则是现代社会。他提出，<strong>中国的社会，就是一种典型的“特殊主义”取向的社会类型。在现代的普遍主义社会中，更常见独立（independent）的个体；而在传统的特殊主义社会中，更常见（interdependent）（人际间）相互依赖的个体</strong>。</p>\n<p>帕森斯说：<br>\n  <strong>对于普遍主义社会来说，人们普遍认为，规则应该无差别地（平等地）用来约束每一个人。而在特殊主义的社会中，人们普遍知道，法律、规则，可以被调整用来适应一些特殊的关系、会有因人而异的变化。</strong></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%284%29.jpg\" alt></p>\n<p>我们很容易理解，在特殊主义的社会中，人们可以通过调整自己与他人之间的关系，收获不同的互动方式、互动规则、以及互动结果。北大社会学系郑也夫教授有过一段关于中国社会的精彩的描述：</p>\n<p>“ ‘朋友’ 关系的高度膨胀危害着一切制度化的秩序。从购物、交通到考学、择业、商业经营、法律裁决……一切要凭关系。货币与普遍主义标准（比如分数）的产生就是为了简化那个日益扩大化的、复杂的社会交换与社会生活。而我们却从这一文明的门坎内倒退出去。</p>\n<p>每个人都以为自己是合算的。通过特殊主义的、熟人间面对面的 ‘交易’得到了便利和好处。而这种个体的“理性”加在一起却构成了团体行为的“非理性” 。从此，我们没有了一般媒介物。我们做任何一件事都要找熟人，我们的杜会交换受阻、流通不畅，‘成本’激增”（郑也夫，1993）。</p>\n<p>（值得一提的是，郑也夫教授，并没有对特殊主义持有“一棍子打死”的绝对负面评价。相反他认为，特殊主义原则是不可取代的，有它独特的作用。比<strong>如它能够带来普遍主义无法带来的情感价值，而在危机真正发生的时候，也只有那些特殊主义的关系会是个体“最后的守护者”</strong>。因此他指出中国可以参照日本的发展路线，仍然维持特殊主义，但让普遍主义成为重要的组合。）</p>\n<p>郑也夫指出，<strong>特殊主义与普遍主义，本质上只是“信任”产生的两种方式。特殊主义社会的信任发生于亲近的人际关系，人们彼此的信任是全面的</strong>（例如信任你的工作能力也信任你在情感中的人品），<strong>普遍主义的信任发生于标准化的、笼罩于每个人之上的规则，人们彼此之间的信任是单一的</strong>（例如只信任你的工作能力，对你的情感生活无法了解也不会盲目信任）。前者能够产生小规模的信任系统，后者能够产生更大规模的信任系统（郑也夫，1993）。</p>\n<p>而送礼，在一个特殊主义的社会中，有着远比“表达祝福与情感”更复杂、更不可或缺也无法替代的目的和功能。</p>\n<p>社会学大师费孝通曾经指出，中国的社会结构是一种“差序格局”。怎么理解差序格局？费孝通说：中国人的“人伦”，是从自己推出去，在“和自己发生社会关系”的那一群人里，所发生的一轮轮波纹的差序。中国的社会结构，是一个一个以“己”为中心的结构。每个人以自己为核心, 然后扩散出去，就像石子投入水中, 和别人所联系成的社会关系就像水的波纹一样，一圈一圈向外荡漾，愈推愈远，也愈推愈薄。</p>\n<p>“中国的规则/道德，是有差等的次序。在差序社会里, 一切普遍的标准并不发生作用, 一定要问清了对象是谁, 和自己什么关系后, 才能决定拿出什么标准来。”郑也夫说，传统中国社会的这种差序格局完全体现了特殊主义的原则，是特殊主义的极致形式（郑也夫，1993）。</p>\n<p>礼物，在传统中国社会中，就是“关系”的一种象征性的凝聚。<strong>通过礼物的互换，我们反复确认着彼此之间“关系”的存在（确认我们在其他人的“水轮波纹”中有着一席之地）；通过向比自己有着更高社会地位的人，赠送“贵重”（可能是商品价值高、也可能是赋予的私人价值很珍贵）的礼物，我们可以拉近自己与“在社会规则中享有更大豁免权”的人之间的距离——我们更加靠近他们的差序核心（也就是他们自己），从而通过调整亲疏、调整了施加在自己身上的规则和标准。</strong></p>\n<p>假如，收到礼物而不还礼，我们会有被他人的“水轮”排除在外的风险。<strong>如此，我们在这个广大的社会中，会成为真正意义上“孤立无援”的人——因为特殊主义的社会并不平等地保护每一个人，甚至，某种意义上我们每个人都是他人利益对立的敌人。</strong></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%285%29.jpg\" alt></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%207.jpg\" alt></p>\n<p>不知道有多少同辈人，和我一样，曾经在人生的某个阶段收到过父母“要给领导送点东西”的“人生建议”。也不知道有多少人和我一样对这件事心怀抗拒。</p>\n<p>为什么年轻一代不再像我们的上一辈人一样，认为送礼是生存的必备技能？为什么我们会对送礼如此反感？真的只是因为我们比他们更加“清高”么？</p>\n<p>我们无法如此简单粗暴地总结一种价值取向，更不能如此片面地归因一种文化改变的发生。</p>\n<p>一种更加可能的解释是：<br>\n当分工日渐精细化，人口大规模迁徙向大都市，当我们比我们的每一位父辈都更像一台巨大机器上的齿轮，我们的工作世界已经很大程度上走向了现代化。现代社会的特征是分工的精细和专业化，各种分工之间必须彼此合作、依存，无法自给自足。<strong>旧的特殊主义的信任，在大都市中难以建立。</strong></p>\n<p>不必说路上擦身而过的陌生人，在大都市中，即便是同事、邻里、朋友之间，我们也很难了解到一个人的全貌。**我们只能够在非常小的范围内，基于人和人之间的全方面互动与情感性交往产生信任系统。这种信任系统可能达到的规模，远比在传统的小城市中（乡土与人情社会）还要更小，也要远远更为浅薄。**我们在大都市中遇到的大部分私人关系，都尚不足以成为我们“最后的守护者”。</p>\n<p>**礼品交换之所以能产生长期而深刻的社会功能，是基于背后持久稳定的人际关系网络。紧密、持续、稳定存在的关系网络，让人们通过赠送礼物这种方式，“预约”某种不用立即兑现的的远期回报（即“欠人情”）。**大都市中人际关系的脆弱和流动性，让我们更倾向于选择立刻、等价的“商品交换”。</p>\n<p>我们在大都市中感到孤独，而在老家春节的走亲串友、互赠礼物的过程中感到孤独感的减轻，是因为后者正是我们确认自己处于、并经营和维护着“承载我们的人际网络”的过程。在那个人际网络中每个人的<strong>承诺度</strong>，是大都市的“繁华热闹”永远无法给予的。</p>\n<p>与此同时，<strong>那属于普遍主义社会的、凌驾于每个个体之上的、代表着公正与平等的庇护又还没有形成</strong>（也不一定会形成，没有人知道，中国会不会走出自己独特的道路）。</p>\n<p>而我们与此同时也心知肚明，即便是大都市中，传统中国社会的一套也始终存在。只不过，在这个竞争更加激烈的场域里，我们既没有方法辨认、更无法接近到那些真正具有特权的“差序格局”的核心。没有人情引荐的“波纹”传递，我们要送礼给谁？</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%286%29.jpg\" alt></p>\n<p>当我们离开家乡，我们就真的成了浩瀚大海中的一叶扁舟。中国社会的矛盾之处在于：<strong>特殊主义带来了人们对于“自身关系网络以外的人”的不诚实与不信任；但关系网络以内的、尤其是亲密的人之间的扶持与信靠，却也是无以伦比的。</strong>（我们看到美国社会中拒绝赡养的情况远比中国常见，在中国，即便是给家庭带来很大伤害的老人也依然得到赡养）。</p>\n<p>清华大学社会学系教授渠敬东老师，曾在一篇访谈中说，“一个人总是渺小的，抵抗不住那么大的体制，也无法适应所有的变故。而在这里（指乡村），一个人遇到困难或者人生重要阶段的时候，总有神啊、鬼啊陪伴着你，<strong>有祖先在那里守护着你，让你在生老病死中感到心安</strong>。”（渠敬东，2017）</p>\n<p>有机会的时候，回一回老家吧。虽然某种程度上，年轻一代的我们都已经是文化上的边缘人——我们既无法真正被异乡接纳，也再也无法重新融入生我们养我们的故乡——<strong>但老家仍有我们的“根”，它是危机时，对我们最后的承接与安放。</strong></p>\n<p>以上，送份热闹的礼，过个俗气的年，甚好。</p>\n<hr>\n<p>References:<br>\nMauss,M. (2000). The gift: The form and reason for exchange in archaic societies.WW Norton &amp; Company.<br>\nParsons,T. (1937). The structure of social action. Sociology. Thought and Action, 1(1),32-46.<br>\nWeber,M., &amp; Gerth, H. H. (1953). The Religion of China, Confucianism and Taoism.<br>\nWeiner,A. B. (1992). Inalienable possessions: the paradox of keeping-whilegiving. Univ of California Press.<br>\n渠敬东. (2017). 渠敬东访谈：乡村是一个社会文化生态系统。<br>\n阎云翔.(2000). 礼物的流动: 一个中国村庄的互惠原则与社会网络。<br>\n郑也夫.(1993). 特殊主义与普遍主义. 社会学研究, (4),110-116。</p>\n","site":{"data":{}},"length":5448,"excerpt":"","more":"<hr>\n<p>本文转载自： <code>KnowYourself</code>公众号</p>\n<hr>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%281%29.jpg\" alt></p>\n<p>礼物这个词，是很有意思的。在人类学和社会学家的眼睛里，它是一个重要的词语。在整个20世纪以及本世纪，人类学世界对于“礼物”的学术争论从未停止。</p>\n<p>礼物，顾名思义是一种承载了“礼”的“物”。“礼”，指的是从微观到宏观的社会规则与道德；礼是精神性的。礼物，就是这样一种包含了精神性的物品。它不同于商品（商品仅仅是一种经济价值可量化的物品）。</p>\n<p>商品，是完全独立于人的存在，<strong>它具有一种可计算的经济价值，可以在各种人中遵循等价原则流转</strong>。</p>\n<p>礼物的价值，却<strong>只有一部分由它的商品价值所定义。礼物的另一部分价值，来自于人主观的附加，它包含一种商品价值之外的、无法量化的价值</strong>。(甚至在以诸如求雨、求战胜为目的的祭祀活动中，送给天神的“牺牲品”，也可被看成礼物的一种，包含一种由人赋予的主观价值。) (阎云翔，2000)。</p>\n<p>1925年，法国人类学家莫斯（Marcel Mauss，大名鼎鼎的社会学家涂尔干的侄子，写出了第一本关于礼物交换的学术著作——《礼物》（the Gift）。</p>\n<p>书中，莫斯严格区分了“馈赠礼物”与“交换商品”两件事。并从一开始就提出了这样一个问题：<strong>人为什么会习惯性回礼？</strong></p>\n<p>莫斯在对毛利社会的研究中发现，<strong>毛利人认为每个人送出的礼物，都包含了送礼者自身的一部分精神力——这被称为“礼物之灵”</strong>（毛利语为“hau”，意为the spirit of gift），**当我们接收到对方的这部分hau时，我们必须再把它（借由回礼）重新交还给送礼者。**否则，被我们留下的hau会给我们带来厄运。</p>\n<p>当我读到这部分时，我想起儿时曾听到见到过父母商量，“收了对方的礼物怎么办，一定要做出回礼”，也记起了自己对“接下大人的礼物”这件事的恐惧，父母会严厉呵斥我收下本不该收的礼物，仿佛是一件了不得的大事。</p>\n<p>然而，莫斯的这一理论，曾经在后来的几十年中受到人类学家们的持续批评。后来的大师们（例如马林诺夫斯基、列维斯特劳斯等）认为，<strong>互惠原则才是人们收礼、回礼的核心。人们在送礼时渴望得到回报；而在回礼时，害怕自己的不作为会导致对方在未来停止付出</strong>。学者们认为，人们对于“未来将收到某种不确定的好处”存在着普遍的期望。</p>\n<p>直到上世纪80年代，人类学家们互相吵啊吵啊，又把注意力重新集中在了莫斯提出的“礼物之灵”上。更年轻一代的人类学家们认为，<strong>互惠原则不足以解释人类社会中的多种送礼行为</strong>。比如，在印度种姓社会中，社会上层会向下层民众广泛送礼。这种举动并未期许获得任何“互惠”的回报；而是作为文化统治的一种手段，以期获取某种精神意义的“功德”。而在中国社会中，富人、统治者开粮仓、接济穷人，也是为了获得某种精神性的“声望”。</p>\n<p>美国人类学家韦纳（Annette Weiner，纽约大学教授，曾任美国人类学协会主席）提出，<strong>有一部分礼物，本身就是无法被真正意义上“送掉”的，与其说是赠送，不如说是“借贷”，这些礼物从送出开始，就等待着有一天被收回</strong>。例如，在老家（相对来说更为传统的中国社会），婚礼的份子钱，就是这样一种从送出开始就等待被收回的“礼”。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%282%29.jpg\" alt></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%283%29.jpg\" alt></p>\n<p>美国社会学家帕森斯提出，一个社会中，社会成员的行动受到他们内在的价值取向影响。为了衡量一个社会的价值取向，他提出了五组“模式变量（Pattern Variebles）” (Parsons,1937)。它们是：<br>\n<strong>1. 情感投入的 vs 情感中立的</strong><br>\n  “情感投入”的互动方式是指在人与人的互动中，彼此带有较多情感色彩；“情感中立”的互动方式是指人与人的互动更加依靠理性。</p>\n<p><strong>2. 扩散式互动的 vs 专门式互动的</strong><br>\n “扩散式”的互动指的是，人和人的互动会设计多方面的目的，而不是单一的功能（例如在老家，医生可能和妈妈是好朋友，除了医患往来、平时还会一起逛街）；“专门式”的互动指的是，人和人的互动较多情况下有着专门的、单一的目的（大城市中往往与医生的互动只有看病）。</p>\n<p><strong>3. 特殊主义的 vs 普遍主义的</strong><br>\n “特殊主义”的互动方式中，“标准”是因人而异的、取决于人和人之间的亲疏关系（例如别人家的孩子在公共场合大哭是“熊孩子”，但如果是自己家的就是活泼可爱）；而“普遍主义”的互动方式中，“标准”是普世的、来自通行的规则（例如合同、法律、宗教信念等）。</p>\n<p><strong>4. 先天赋予的 vs 后天取得的</strong><br>\n 在更看重“先天赋予”的互动方式中，人们的行动选择更注重对方的身份、与自己天然的关系；而在更看重“后天取得”的互动方式中，人们的行动选择更注重对方的行为表现、个人态度等。</p>\n<p><strong>5. 自我利益的 vs 公共利益的</strong><br>\n 在更看重自我利益的社会中，人们的互动中会更注重谋取自身个体的利益，而在公共利益的社会中，人们的行动会更注重不伤害整体性的公共利益（例如相信只有保证了公平的公共利益才是对个人利益的更有效的保护）。</p>\n<p>帕森斯认为，这五组变量的前面半句，对应的是传统社会，而后面半句，对应的则是现代社会。他提出，<strong>中国的社会，就是一种典型的“特殊主义”取向的社会类型。在现代的普遍主义社会中，更常见独立（independent）的个体；而在传统的特殊主义社会中，更常见（interdependent）（人际间）相互依赖的个体</strong>。</p>\n<p>帕森斯说：<br>\n  <strong>对于普遍主义社会来说，人们普遍认为，规则应该无差别地（平等地）用来约束每一个人。而在特殊主义的社会中，人们普遍知道，法律、规则，可以被调整用来适应一些特殊的关系、会有因人而异的变化。</strong></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%284%29.jpg\" alt></p>\n<p>我们很容易理解，在特殊主义的社会中，人们可以通过调整自己与他人之间的关系，收获不同的互动方式、互动规则、以及互动结果。北大社会学系郑也夫教授有过一段关于中国社会的精彩的描述：</p>\n<p>“ ‘朋友’ 关系的高度膨胀危害着一切制度化的秩序。从购物、交通到考学、择业、商业经营、法律裁决……一切要凭关系。货币与普遍主义标准（比如分数）的产生就是为了简化那个日益扩大化的、复杂的社会交换与社会生活。而我们却从这一文明的门坎内倒退出去。</p>\n<p>每个人都以为自己是合算的。通过特殊主义的、熟人间面对面的 ‘交易’得到了便利和好处。而这种个体的“理性”加在一起却构成了团体行为的“非理性” 。从此，我们没有了一般媒介物。我们做任何一件事都要找熟人，我们的杜会交换受阻、流通不畅，‘成本’激增”（郑也夫，1993）。</p>\n<p>（值得一提的是，郑也夫教授，并没有对特殊主义持有“一棍子打死”的绝对负面评价。相反他认为，特殊主义原则是不可取代的，有它独特的作用。比<strong>如它能够带来普遍主义无法带来的情感价值，而在危机真正发生的时候，也只有那些特殊主义的关系会是个体“最后的守护者”</strong>。因此他指出中国可以参照日本的发展路线，仍然维持特殊主义，但让普遍主义成为重要的组合。）</p>\n<p>郑也夫指出，<strong>特殊主义与普遍主义，本质上只是“信任”产生的两种方式。特殊主义社会的信任发生于亲近的人际关系，人们彼此的信任是全面的</strong>（例如信任你的工作能力也信任你在情感中的人品），<strong>普遍主义的信任发生于标准化的、笼罩于每个人之上的规则，人们彼此之间的信任是单一的</strong>（例如只信任你的工作能力，对你的情感生活无法了解也不会盲目信任）。前者能够产生小规模的信任系统，后者能够产生更大规模的信任系统（郑也夫，1993）。</p>\n<p>而送礼，在一个特殊主义的社会中，有着远比“表达祝福与情感”更复杂、更不可或缺也无法替代的目的和功能。</p>\n<p>社会学大师费孝通曾经指出，中国的社会结构是一种“差序格局”。怎么理解差序格局？费孝通说：中国人的“人伦”，是从自己推出去，在“和自己发生社会关系”的那一群人里，所发生的一轮轮波纹的差序。中国的社会结构，是一个一个以“己”为中心的结构。每个人以自己为核心, 然后扩散出去，就像石子投入水中, 和别人所联系成的社会关系就像水的波纹一样，一圈一圈向外荡漾，愈推愈远，也愈推愈薄。</p>\n<p>“中国的规则/道德，是有差等的次序。在差序社会里, 一切普遍的标准并不发生作用, 一定要问清了对象是谁, 和自己什么关系后, 才能决定拿出什么标准来。”郑也夫说，传统中国社会的这种差序格局完全体现了特殊主义的原则，是特殊主义的极致形式（郑也夫，1993）。</p>\n<p>礼物，在传统中国社会中，就是“关系”的一种象征性的凝聚。<strong>通过礼物的互换，我们反复确认着彼此之间“关系”的存在（确认我们在其他人的“水轮波纹”中有着一席之地）；通过向比自己有着更高社会地位的人，赠送“贵重”（可能是商品价值高、也可能是赋予的私人价值很珍贵）的礼物，我们可以拉近自己与“在社会规则中享有更大豁免权”的人之间的距离——我们更加靠近他们的差序核心（也就是他们自己），从而通过调整亲疏、调整了施加在自己身上的规则和标准。</strong></p>\n<p>假如，收到礼物而不还礼，我们会有被他人的“水轮”排除在外的风险。<strong>如此，我们在这个广大的社会中，会成为真正意义上“孤立无援”的人——因为特殊主义的社会并不平等地保护每一个人，甚至，某种意义上我们每个人都是他人利益对立的敌人。</strong></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%285%29.jpg\" alt></p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%207.jpg\" alt></p>\n<p>不知道有多少同辈人，和我一样，曾经在人生的某个阶段收到过父母“要给领导送点东西”的“人生建议”。也不知道有多少人和我一样对这件事心怀抗拒。</p>\n<p>为什么年轻一代不再像我们的上一辈人一样，认为送礼是生存的必备技能？为什么我们会对送礼如此反感？真的只是因为我们比他们更加“清高”么？</p>\n<p>我们无法如此简单粗暴地总结一种价值取向，更不能如此片面地归因一种文化改变的发生。</p>\n<p>一种更加可能的解释是：<br>\n当分工日渐精细化，人口大规模迁徙向大都市，当我们比我们的每一位父辈都更像一台巨大机器上的齿轮，我们的工作世界已经很大程度上走向了现代化。现代社会的特征是分工的精细和专业化，各种分工之间必须彼此合作、依存，无法自给自足。<strong>旧的特殊主义的信任，在大都市中难以建立。</strong></p>\n<p>不必说路上擦身而过的陌生人，在大都市中，即便是同事、邻里、朋友之间，我们也很难了解到一个人的全貌。**我们只能够在非常小的范围内，基于人和人之间的全方面互动与情感性交往产生信任系统。这种信任系统可能达到的规模，远比在传统的小城市中（乡土与人情社会）还要更小，也要远远更为浅薄。**我们在大都市中遇到的大部分私人关系，都尚不足以成为我们“最后的守护者”。</p>\n<p>**礼品交换之所以能产生长期而深刻的社会功能，是基于背后持久稳定的人际关系网络。紧密、持续、稳定存在的关系网络，让人们通过赠送礼物这种方式，“预约”某种不用立即兑现的的远期回报（即“欠人情”）。**大都市中人际关系的脆弱和流动性，让我们更倾向于选择立刻、等价的“商品交换”。</p>\n<p>我们在大都市中感到孤独，而在老家春节的走亲串友、互赠礼物的过程中感到孤独感的减轻，是因为后者正是我们确认自己处于、并经营和维护着“承载我们的人际网络”的过程。在那个人际网络中每个人的<strong>承诺度</strong>，是大都市的“繁华热闹”永远无法给予的。</p>\n<p>与此同时，<strong>那属于普遍主义社会的、凌驾于每个个体之上的、代表着公正与平等的庇护又还没有形成</strong>（也不一定会形成，没有人知道，中国会不会走出自己独特的道路）。</p>\n<p>而我们与此同时也心知肚明，即便是大都市中，传统中国社会的一套也始终存在。只不过，在这个竞争更加激烈的场域里，我们既没有方法辨认、更无法接近到那些真正具有特权的“差序格局”的核心。没有人情引荐的“波纹”传递，我们要送礼给谁？</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/20182/%E8%B5%B0%E4%BA%B2%E6%88%9A%E9%80%81%E7%A4%BC%E6%9C%89%E4%BB%80%E4%B9%88%E2%80%9C%E5%A4%A7%E7%94%A8%E9%80%94%E2%80%9D%20%286%29.jpg\" alt></p>\n<p>当我们离开家乡，我们就真的成了浩瀚大海中的一叶扁舟。中国社会的矛盾之处在于：<strong>特殊主义带来了人们对于“自身关系网络以外的人”的不诚实与不信任；但关系网络以内的、尤其是亲密的人之间的扶持与信靠，却也是无以伦比的。</strong>（我们看到美国社会中拒绝赡养的情况远比中国常见，在中国，即便是给家庭带来很大伤害的老人也依然得到赡养）。</p>\n<p>清华大学社会学系教授渠敬东老师，曾在一篇访谈中说，“一个人总是渺小的，抵抗不住那么大的体制，也无法适应所有的变故。而在这里（指乡村），一个人遇到困难或者人生重要阶段的时候，总有神啊、鬼啊陪伴着你，<strong>有祖先在那里守护着你，让你在生老病死中感到心安</strong>。”（渠敬东，2017）</p>\n<p>有机会的时候，回一回老家吧。虽然某种程度上，年轻一代的我们都已经是文化上的边缘人——我们既无法真正被异乡接纳，也再也无法重新融入生我们养我们的故乡——<strong>但老家仍有我们的“根”，它是危机时，对我们最后的承接与安放。</strong></p>\n<p>以上，送份热闹的礼，过个俗气的年，甚好。</p>\n<hr>\n<p>References:<br>\nMauss,M. (2000). The gift: The form and reason for exchange in archaic societies.WW Norton &amp; Company.<br>\nParsons,T. (1937). The structure of social action. Sociology. Thought and Action, 1(1),32-46.<br>\nWeber,M., &amp; Gerth, H. H. (1953). The Religion of China, Confucianism and Taoism.<br>\nWeiner,A. B. (1992). Inalienable possessions: the paradox of keeping-whilegiving. Univ of California Press.<br>\n渠敬东. (2017). 渠敬东访谈：乡村是一个社会文化生态系统。<br>\n阎云翔.(2000). 礼物的流动: 一个中国村庄的互惠原则与社会网络。<br>\n郑也夫.(1993). 特殊主义与普遍主义. 社会学研究, (4),110-116。</p>\n"},{"title":"链圈 币圈 与 我们的信仰：比特币","copyright":false,"abbrlink":"47112e7a","date":"2018-03-10T12:47:08.000Z","password":null,"_content":"\n#### 一\n\n如果我们需要找一个我们熟悉的东西来类比比特币的话，应该是什么？\n\n在比特币刚出现并爆炒的时候，我的答案是：郁金香。\n\n一个看上去没什么实际用途的东西，被炒成那样，很难不想到当年的荷兰郁金香。\n\n但很快，我意识到这个类比可能是错的。\n\n我后来把比特币类比成钻石。\n\n直至今天，我依然没有改变这种类比。\n\n \n\n#### 二\n\n钻石这个东西，其实没什么用处。\n\n以前工业上可能还有点实际用处，但近来的发展，人们已经完全可以找到替代物：符合坚硬这种需求但成本低廉。\n\n今天的钻石，有两个特点：1、总量的增幅被严控，确保它的稀缺性；2、通过营销，让人们树立起一个观念：钻石=爱情的见证。从而，坐实需求。\n\n钻石非常像一个骗局，因为根本没有任何证据能够证明钻石是爱情的见证。\n\n但正如戈培尔所说，谎言重复一千遍就是真理。只要大部分人（女性为主）认同这一点，那这一点就成立。\n\n钻石，已然不再是一个骗局。\n\n \n\n#### 三\n\n比特币的总量是被控制的。\n\n挖矿越来越难，事实上也得到了一个结果：总量的增幅被限定。\n\n但比特币还需要一个说法，这个说法如果成立，比特币就成立。如果不成立…总量被严控的东西，有什么稀奇的。\n\n我们经常提及“挖矿”这两个字，这其实是一种比喻。所以，我们需要再想想：挖什么矿？\n\n还记得比特币刚出来的时候，是怎么说的么？\n\n利用计算机的冗余计算能力，一起来解决某些需要庞大算力的东西。你干了这事，不能白干，给你点网络积分吧。这个积分，就是比特币。\n\n所以，比特币其实是有一个很美好的想象的：利用闲置的某种资源，来解决一些问题——这个说法，今天已经很少有人提了。\n\n比特币真解决了什么了不得的问题了没？\n\n我没听说过。\n\n你有听说吗？\n\n \n\n#### 四\n\n比特币还代表了一种东西，这个东西可以称之为理念。\n\n只要能上升到理念，大抵都是高大上的。\n\n这个理念就是：去中心化。\n\n去中心化是一个非常高大上的词。这个词的高大上就在于：我们世界的现实是中心化的，但中心化总感觉和自由是矛盾的，于是，我们世界的期望是去中心化的。\n\n如果要说币圈链圈扯“信仰”两个字的话，去中心化大概是绝对绕不过去的。\n\n中本聪创造了比特币，他使用了一种叫区块链的技术。而这种技术，是去中心化的技术。\n\n正如钻石代表爱情一样。\n\n比特币代表一种理想。\n\n荷兰郁金香可没有这货。荷兰郁金香只有钱。只有钱，实际上又用处不大，这个局是撑不住的。\n\n所以有人嘲笑3点钟诸群不肯谈钱非要谈理想谈哲学谈历史，这种嘲笑是不对的。\n\n真的是卖肉出身，不晓得这里的厉害关系。\n\n \n\n#### 五\n\n但没有人会认为钻石是通货。\n\n没有任何一个国家会说，我们拥有多少多少钻石储备来显示国力。\n\n钻石就是一种可以变成财富的石头，仅此而已。档次还不够。\n\n而黄金，则不然。\n\n黄金不仅仅是可以变成财富的金属，它还是通货。黄金储备，这个词你肯定听说过。\n\n比特币需要迈向黄金这个级别，才是币圈中人的梦想。\n\n不要被“币”这个字眼迷惑。\n\n你叫它是币就是币了么？这不行。得人认同它是币，那它才是通货。\n\n想象一下，如果比特币被认为是通货了，持有比特币的人——而且是海量持有——那是什么？\n\n只是土豪么？\n\n才不仅仅是土豪。\n\n持有一万颗钻石的人，和持有一万吨黄金的人，根本不是谁更土豪的比较。\n\n前者，仅仅代表财富，你可以称呼他为土豪。后者，却代表了呼风唤雨的权力，你应该称他：国王陛下。\n\n#### 六\n\n![][1]\n\n这是我一个月前在维也纳市中心街头拍的照片。\n\n其实这没什么，无非就是一个商家接受比特币来买东西。\n\n商家也可以接受钻石来换东西的。\n\n不要以为有商家愿意接受比特币来购物，就说明比特币成为货币了。\n\n要成为通货，仅仅有那么几个商家是不够的。\n\n但比特币不是我上一篇文章里提及的ICO中的那些电子货币。你可以认为，比特币是元币，也就是说，这些ICO们，所发的币，你得拿比特币去买（或者你也可以拿一种叫以太币的东西，但以太币和比特币是有一个结算公式的），并不是人民币，或者美元。\n\n每一次发币，都在强化比特币作为元币的地位。这些ICO们，倒了九成都没关系。只要有一些能站住，比特币就受益。\n\n好了，你现在能理解委内瑞拉发石油币得到币圈欢呼的原因了：有一个国家，在开始认同比特币作为元币的地位了。\n\n至于中本聪的初衷：国家铸币不可信这种想法，已经不重要了。\n\n \n\n#### 七\n\n我们想象一下。\n\n大多数公司IPO，都用发币的方式来ICO，比特币作为最根本的结算单位，公司们最终价值的表现，你都可以算出一个比特币来。\n\n大多数国家，都认同比特币作为元币的地位。\n\n你很幸运，拥有2100万枚中的21万枚。\n\n万岁万岁万岁！我的国王陛下！\n\n \n\n#### 八\n\n奥地利人茨威格在他的名著《人类群星闪耀时》中写过一个故事。\n\n第一个在加利福尼亚州发现金子的人叫祖特尔（确切的说，是他手下一个农民）。\n\n这哥们当年从墨西哥驻加利福尼亚总督手上拿下了一块足以建立一个小小王国的土地。单枪匹马赤手空拳兴建农场勤劳致富。土地上有黄金消息传出去后，全球的冒险者蜂拥而至，践踏他的庄园，一夜之间祖特尔一贫如洗。\n\n但他不气馁，召集了三个儿子跑另外一块不那么产金的地方重整家业，又积累起一笔财富。很快，他可以打官司了。他控告在他以前的土地上的上万民农场主，要求他们滚蛋：这土地是我的！合众国法官判决如下：祖特尔对这片土地拥有完全合法和不可侵犯的权利。\n\n成千上万人愤怒了。他们洗劫了祖特尔的新家园，长子被逼自杀，次子惨遭杀害，幼子虽然逃走但淹死在归国途中。老头最终以不断上访的乞丐身份死于国会大厦的台阶上。\n\n这个故事相当的让人唏嘘不已。但茨威格可能有点小小搞错了。祖特尔的确一直在申诉他的权利，但他不是死在什么国会大厦的台阶上，而是死在一家旅店里。最重要的事，茨威格漏写了祖特尔的一个儿子（祖特尔一共有五个儿子）：小祖特尔。这哥们还是颇有建树的，是加利福尼亚州府萨克拉门托的建立者，比他老爸晚死十七年。\n\n只是，我们不知道，中本聪是什么样的终局故事。\n\n想必，他是不太会走上祖特尔的道路吧。\n\n \n\n—— 首发 扯氮集 ——\n\n版权声明\n\n作者执教于上海交通大学媒体与传播学院 天奇阿米巴创投基金管理合伙人​​​​\n\n\n  [1]: https://data.singlelovely.cn/xsj/20183/%E6%AF%94%E7%89%B9%E5%B8%81%E5%8C%BA%E5%9D%97%E9%93%BE.jpg","source":"_posts/链圈币圈与我们的信仰比特币.md","raw":"---\ntitle: 链圈 币圈 与 我们的信仰：比特币\ntags:\n  - 区块链\n  - 比特币\ncategories: 比特币\ncopyright: false\nabbrlink: 47112e7a\ndate: 2018-03-10 20:47:08\npassword:\n---\n\n#### 一\n\n如果我们需要找一个我们熟悉的东西来类比比特币的话，应该是什么？\n\n在比特币刚出现并爆炒的时候，我的答案是：郁金香。\n\n一个看上去没什么实际用途的东西，被炒成那样，很难不想到当年的荷兰郁金香。\n\n但很快，我意识到这个类比可能是错的。\n\n我后来把比特币类比成钻石。\n\n直至今天，我依然没有改变这种类比。\n\n \n\n#### 二\n\n钻石这个东西，其实没什么用处。\n\n以前工业上可能还有点实际用处，但近来的发展，人们已经完全可以找到替代物：符合坚硬这种需求但成本低廉。\n\n今天的钻石，有两个特点：1、总量的增幅被严控，确保它的稀缺性；2、通过营销，让人们树立起一个观念：钻石=爱情的见证。从而，坐实需求。\n\n钻石非常像一个骗局，因为根本没有任何证据能够证明钻石是爱情的见证。\n\n但正如戈培尔所说，谎言重复一千遍就是真理。只要大部分人（女性为主）认同这一点，那这一点就成立。\n\n钻石，已然不再是一个骗局。\n\n \n\n#### 三\n\n比特币的总量是被控制的。\n\n挖矿越来越难，事实上也得到了一个结果：总量的增幅被限定。\n\n但比特币还需要一个说法，这个说法如果成立，比特币就成立。如果不成立…总量被严控的东西，有什么稀奇的。\n\n我们经常提及“挖矿”这两个字，这其实是一种比喻。所以，我们需要再想想：挖什么矿？\n\n还记得比特币刚出来的时候，是怎么说的么？\n\n利用计算机的冗余计算能力，一起来解决某些需要庞大算力的东西。你干了这事，不能白干，给你点网络积分吧。这个积分，就是比特币。\n\n所以，比特币其实是有一个很美好的想象的：利用闲置的某种资源，来解决一些问题——这个说法，今天已经很少有人提了。\n\n比特币真解决了什么了不得的问题了没？\n\n我没听说过。\n\n你有听说吗？\n\n \n\n#### 四\n\n比特币还代表了一种东西，这个东西可以称之为理念。\n\n只要能上升到理念，大抵都是高大上的。\n\n这个理念就是：去中心化。\n\n去中心化是一个非常高大上的词。这个词的高大上就在于：我们世界的现实是中心化的，但中心化总感觉和自由是矛盾的，于是，我们世界的期望是去中心化的。\n\n如果要说币圈链圈扯“信仰”两个字的话，去中心化大概是绝对绕不过去的。\n\n中本聪创造了比特币，他使用了一种叫区块链的技术。而这种技术，是去中心化的技术。\n\n正如钻石代表爱情一样。\n\n比特币代表一种理想。\n\n荷兰郁金香可没有这货。荷兰郁金香只有钱。只有钱，实际上又用处不大，这个局是撑不住的。\n\n所以有人嘲笑3点钟诸群不肯谈钱非要谈理想谈哲学谈历史，这种嘲笑是不对的。\n\n真的是卖肉出身，不晓得这里的厉害关系。\n\n \n\n#### 五\n\n但没有人会认为钻石是通货。\n\n没有任何一个国家会说，我们拥有多少多少钻石储备来显示国力。\n\n钻石就是一种可以变成财富的石头，仅此而已。档次还不够。\n\n而黄金，则不然。\n\n黄金不仅仅是可以变成财富的金属，它还是通货。黄金储备，这个词你肯定听说过。\n\n比特币需要迈向黄金这个级别，才是币圈中人的梦想。\n\n不要被“币”这个字眼迷惑。\n\n你叫它是币就是币了么？这不行。得人认同它是币，那它才是通货。\n\n想象一下，如果比特币被认为是通货了，持有比特币的人——而且是海量持有——那是什么？\n\n只是土豪么？\n\n才不仅仅是土豪。\n\n持有一万颗钻石的人，和持有一万吨黄金的人，根本不是谁更土豪的比较。\n\n前者，仅仅代表财富，你可以称呼他为土豪。后者，却代表了呼风唤雨的权力，你应该称他：国王陛下。\n\n#### 六\n\n![][1]\n\n这是我一个月前在维也纳市中心街头拍的照片。\n\n其实这没什么，无非就是一个商家接受比特币来买东西。\n\n商家也可以接受钻石来换东西的。\n\n不要以为有商家愿意接受比特币来购物，就说明比特币成为货币了。\n\n要成为通货，仅仅有那么几个商家是不够的。\n\n但比特币不是我上一篇文章里提及的ICO中的那些电子货币。你可以认为，比特币是元币，也就是说，这些ICO们，所发的币，你得拿比特币去买（或者你也可以拿一种叫以太币的东西，但以太币和比特币是有一个结算公式的），并不是人民币，或者美元。\n\n每一次发币，都在强化比特币作为元币的地位。这些ICO们，倒了九成都没关系。只要有一些能站住，比特币就受益。\n\n好了，你现在能理解委内瑞拉发石油币得到币圈欢呼的原因了：有一个国家，在开始认同比特币作为元币的地位了。\n\n至于中本聪的初衷：国家铸币不可信这种想法，已经不重要了。\n\n \n\n#### 七\n\n我们想象一下。\n\n大多数公司IPO，都用发币的方式来ICO，比特币作为最根本的结算单位，公司们最终价值的表现，你都可以算出一个比特币来。\n\n大多数国家，都认同比特币作为元币的地位。\n\n你很幸运，拥有2100万枚中的21万枚。\n\n万岁万岁万岁！我的国王陛下！\n\n \n\n#### 八\n\n奥地利人茨威格在他的名著《人类群星闪耀时》中写过一个故事。\n\n第一个在加利福尼亚州发现金子的人叫祖特尔（确切的说，是他手下一个农民）。\n\n这哥们当年从墨西哥驻加利福尼亚总督手上拿下了一块足以建立一个小小王国的土地。单枪匹马赤手空拳兴建农场勤劳致富。土地上有黄金消息传出去后，全球的冒险者蜂拥而至，践踏他的庄园，一夜之间祖特尔一贫如洗。\n\n但他不气馁，召集了三个儿子跑另外一块不那么产金的地方重整家业，又积累起一笔财富。很快，他可以打官司了。他控告在他以前的土地上的上万民农场主，要求他们滚蛋：这土地是我的！合众国法官判决如下：祖特尔对这片土地拥有完全合法和不可侵犯的权利。\n\n成千上万人愤怒了。他们洗劫了祖特尔的新家园，长子被逼自杀，次子惨遭杀害，幼子虽然逃走但淹死在归国途中。老头最终以不断上访的乞丐身份死于国会大厦的台阶上。\n\n这个故事相当的让人唏嘘不已。但茨威格可能有点小小搞错了。祖特尔的确一直在申诉他的权利，但他不是死在什么国会大厦的台阶上，而是死在一家旅店里。最重要的事，茨威格漏写了祖特尔的一个儿子（祖特尔一共有五个儿子）：小祖特尔。这哥们还是颇有建树的，是加利福尼亚州府萨克拉门托的建立者，比他老爸晚死十七年。\n\n只是，我们不知道，中本聪是什么样的终局故事。\n\n想必，他是不太会走上祖特尔的道路吧。\n\n \n\n—— 首发 扯氮集 ——\n\n版权声明\n\n作者执教于上海交通大学媒体与传播学院 天奇阿米巴创投基金管理合伙人​​​​\n\n\n  [1]: https://data.singlelovely.cn/xsj/20183/%E6%AF%94%E7%89%B9%E5%B8%81%E5%8C%BA%E5%9D%97%E9%93%BE.jpg","slug":"链圈币圈与我们的信仰比特币","published":1,"updated":"2020-02-20T06:06:59.434Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td45001vfkup62eec3ss","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h4 id=\"一\"><a class=\"header-anchor\" href=\"#一\">☆</a>一</h4>\n<p>如果我们需要找一个我们熟悉的东西来类比比特币的话，应该是什么？</p>\n<p>在比特币刚出现并爆炒的时候，我的答案是：郁金香。</p>\n<p>一个看上去没什么实际用途的东西，被炒成那样，很难不想到当年的荷兰郁金香。</p>\n<p>但很快，我意识到这个类比可能是错的。</p>\n<p>我后来把比特币类比成钻石。</p>\n<p>直至今天，我依然没有改变这种类比。</p>\n<h4 id=\"二\"><a class=\"header-anchor\" href=\"#二\">☆</a>二</h4>\n<p>钻石这个东西，其实没什么用处。</p>\n<p>以前工业上可能还有点实际用处，但近来的发展，人们已经完全可以找到替代物：符合坚硬这种需求但成本低廉。</p>\n<p>今天的钻石，有两个特点：1、总量的增幅被严控，确保它的稀缺性；2、通过营销，让人们树立起一个观念：钻石=爱情的见证。从而，坐实需求。</p>\n<p>钻石非常像一个骗局，因为根本没有任何证据能够证明钻石是爱情的见证。</p>\n<p>但正如戈培尔所说，谎言重复一千遍就是真理。只要大部分人（女性为主）认同这一点，那这一点就成立。</p>\n<p>钻石，已然不再是一个骗局。</p>\n<h4 id=\"三\"><a class=\"header-anchor\" href=\"#三\">☆</a>三</h4>\n<p>比特币的总量是被控制的。</p>\n<p>挖矿越来越难，事实上也得到了一个结果：总量的增幅被限定。</p>\n<p>但比特币还需要一个说法，这个说法如果成立，比特币就成立。如果不成立…总量被严控的东西，有什么稀奇的。</p>\n<p>我们经常提及“挖矿”这两个字，这其实是一种比喻。所以，我们需要再想想：挖什么矿？</p>\n<p>还记得比特币刚出来的时候，是怎么说的么？</p>\n<p>利用计算机的冗余计算能力，一起来解决某些需要庞大算力的东西。你干了这事，不能白干，给你点网络积分吧。这个积分，就是比特币。</p>\n<p>所以，比特币其实是有一个很美好的想象的：利用闲置的某种资源，来解决一些问题——这个说法，今天已经很少有人提了。</p>\n<p>比特币真解决了什么了不得的问题了没？</p>\n<p>我没听说过。</p>\n<p>你有听说吗？</p>\n<h4 id=\"四\"><a class=\"header-anchor\" href=\"#四\">☆</a>四</h4>\n<p>比特币还代表了一种东西，这个东西可以称之为理念。</p>\n<p>只要能上升到理念，大抵都是高大上的。</p>\n<p>这个理念就是：去中心化。</p>\n<p>去中心化是一个非常高大上的词。这个词的高大上就在于：我们世界的现实是中心化的，但中心化总感觉和自由是矛盾的，于是，我们世界的期望是去中心化的。</p>\n<p>如果要说币圈链圈扯“信仰”两个字的话，去中心化大概是绝对绕不过去的。</p>\n<p>中本聪创造了比特币，他使用了一种叫区块链的技术。而这种技术，是去中心化的技术。</p>\n<p>正如钻石代表爱情一样。</p>\n<p>比特币代表一种理想。</p>\n<p>荷兰郁金香可没有这货。荷兰郁金香只有钱。只有钱，实际上又用处不大，这个局是撑不住的。</p>\n<p>所以有人嘲笑3点钟诸群不肯谈钱非要谈理想谈哲学谈历史，这种嘲笑是不对的。</p>\n<p>真的是卖肉出身，不晓得这里的厉害关系。</p>\n<h4 id=\"五\"><a class=\"header-anchor\" href=\"#五\">☆</a>五</h4>\n<p>但没有人会认为钻石是通货。</p>\n<p>没有任何一个国家会说，我们拥有多少多少钻石储备来显示国力。</p>\n<p>钻石就是一种可以变成财富的石头，仅此而已。档次还不够。</p>\n<p>而黄金，则不然。</p>\n<p>黄金不仅仅是可以变成财富的金属，它还是通货。黄金储备，这个词你肯定听说过。</p>\n<p>比特币需要迈向黄金这个级别，才是币圈中人的梦想。</p>\n<p>不要被“币”这个字眼迷惑。</p>\n<p>你叫它是币就是币了么？这不行。得人认同它是币，那它才是通货。</p>\n<p>想象一下，如果比特币被认为是通货了，持有比特币的人——而且是海量持有——那是什么？</p>\n<p>只是土豪么？</p>\n<p>才不仅仅是土豪。</p>\n<p>持有一万颗钻石的人，和持有一万吨黄金的人，根本不是谁更土豪的比较。</p>\n<p>前者，仅仅代表财富，你可以称呼他为土豪。后者，却代表了呼风唤雨的权力，你应该称他：国王陛下。</p>\n<h4 id=\"六\"><a class=\"header-anchor\" href=\"#六\">☆</a>六</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/20183/%E6%AF%94%E7%89%B9%E5%B8%81%E5%8C%BA%E5%9D%97%E9%93%BE.jpg\" alt></p>\n<p>这是我一个月前在维也纳市中心街头拍的照片。</p>\n<p>其实这没什么，无非就是一个商家接受比特币来买东西。</p>\n<p>商家也可以接受钻石来换东西的。</p>\n<p>不要以为有商家愿意接受比特币来购物，就说明比特币成为货币了。</p>\n<p>要成为通货，仅仅有那么几个商家是不够的。</p>\n<p>但比特币不是我上一篇文章里提及的ICO中的那些电子货币。你可以认为，比特币是元币，也就是说，这些ICO们，所发的币，你得拿比特币去买（或者你也可以拿一种叫以太币的东西，但以太币和比特币是有一个结算公式的），并不是人民币，或者美元。</p>\n<p>每一次发币，都在强化比特币作为元币的地位。这些ICO们，倒了九成都没关系。只要有一些能站住，比特币就受益。</p>\n<p>好了，你现在能理解委内瑞拉发石油币得到币圈欢呼的原因了：有一个国家，在开始认同比特币作为元币的地位了。</p>\n<p>至于中本聪的初衷：国家铸币不可信这种想法，已经不重要了。</p>\n<h4 id=\"七\"><a class=\"header-anchor\" href=\"#七\">☆</a>七</h4>\n<p>我们想象一下。</p>\n<p>大多数公司IPO，都用发币的方式来ICO，比特币作为最根本的结算单位，公司们最终价值的表现，你都可以算出一个比特币来。</p>\n<p>大多数国家，都认同比特币作为元币的地位。</p>\n<p>你很幸运，拥有2100万枚中的21万枚。</p>\n<p>万岁万岁万岁！我的国王陛下！</p>\n<h4 id=\"八\"><a class=\"header-anchor\" href=\"#八\">☆</a>八</h4>\n<p>奥地利人茨威格在他的名著《人类群星闪耀时》中写过一个故事。</p>\n<p>第一个在加利福尼亚州发现金子的人叫祖特尔（确切的说，是他手下一个农民）。</p>\n<p>这哥们当年从墨西哥驻加利福尼亚总督手上拿下了一块足以建立一个小小王国的土地。单枪匹马赤手空拳兴建农场勤劳致富。土地上有黄金消息传出去后，全球的冒险者蜂拥而至，践踏他的庄园，一夜之间祖特尔一贫如洗。</p>\n<p>但他不气馁，召集了三个儿子跑另外一块不那么产金的地方重整家业，又积累起一笔财富。很快，他可以打官司了。他控告在他以前的土地上的上万民农场主，要求他们滚蛋：这土地是我的！合众国法官判决如下：祖特尔对这片土地拥有完全合法和不可侵犯的权利。</p>\n<p>成千上万人愤怒了。他们洗劫了祖特尔的新家园，长子被逼自杀，次子惨遭杀害，幼子虽然逃走但淹死在归国途中。老头最终以不断上访的乞丐身份死于国会大厦的台阶上。</p>\n<p>这个故事相当的让人唏嘘不已。但茨威格可能有点小小搞错了。祖特尔的确一直在申诉他的权利，但他不是死在什么国会大厦的台阶上，而是死在一家旅店里。最重要的事，茨威格漏写了祖特尔的一个儿子（祖特尔一共有五个儿子）：小祖特尔。这哥们还是颇有建树的，是加利福尼亚州府萨克拉门托的建立者，比他老爸晚死十七年。</p>\n<p>只是，我们不知道，中本聪是什么样的终局故事。</p>\n<p>想必，他是不太会走上祖特尔的道路吧。</p>\n<p>—— 首发 扯氮集 ——</p>\n<p>版权声明</p>\n<p>作者执教于上海交通大学媒体与传播学院 天奇阿米巴创投基金管理合伙人​​​​</p>\n","site":{"data":{}},"length":2380,"excerpt":"","more":"<h4 id=\"一\"><a class=\"header-anchor\" href=\"#一\">☆</a>一</h4>\n<p>如果我们需要找一个我们熟悉的东西来类比比特币的话，应该是什么？</p>\n<p>在比特币刚出现并爆炒的时候，我的答案是：郁金香。</p>\n<p>一个看上去没什么实际用途的东西，被炒成那样，很难不想到当年的荷兰郁金香。</p>\n<p>但很快，我意识到这个类比可能是错的。</p>\n<p>我后来把比特币类比成钻石。</p>\n<p>直至今天，我依然没有改变这种类比。</p>\n<h4 id=\"二\"><a class=\"header-anchor\" href=\"#二\">☆</a>二</h4>\n<p>钻石这个东西，其实没什么用处。</p>\n<p>以前工业上可能还有点实际用处，但近来的发展，人们已经完全可以找到替代物：符合坚硬这种需求但成本低廉。</p>\n<p>今天的钻石，有两个特点：1、总量的增幅被严控，确保它的稀缺性；2、通过营销，让人们树立起一个观念：钻石=爱情的见证。从而，坐实需求。</p>\n<p>钻石非常像一个骗局，因为根本没有任何证据能够证明钻石是爱情的见证。</p>\n<p>但正如戈培尔所说，谎言重复一千遍就是真理。只要大部分人（女性为主）认同这一点，那这一点就成立。</p>\n<p>钻石，已然不再是一个骗局。</p>\n<h4 id=\"三\"><a class=\"header-anchor\" href=\"#三\">☆</a>三</h4>\n<p>比特币的总量是被控制的。</p>\n<p>挖矿越来越难，事实上也得到了一个结果：总量的增幅被限定。</p>\n<p>但比特币还需要一个说法，这个说法如果成立，比特币就成立。如果不成立…总量被严控的东西，有什么稀奇的。</p>\n<p>我们经常提及“挖矿”这两个字，这其实是一种比喻。所以，我们需要再想想：挖什么矿？</p>\n<p>还记得比特币刚出来的时候，是怎么说的么？</p>\n<p>利用计算机的冗余计算能力，一起来解决某些需要庞大算力的东西。你干了这事，不能白干，给你点网络积分吧。这个积分，就是比特币。</p>\n<p>所以，比特币其实是有一个很美好的想象的：利用闲置的某种资源，来解决一些问题——这个说法，今天已经很少有人提了。</p>\n<p>比特币真解决了什么了不得的问题了没？</p>\n<p>我没听说过。</p>\n<p>你有听说吗？</p>\n<h4 id=\"四\"><a class=\"header-anchor\" href=\"#四\">☆</a>四</h4>\n<p>比特币还代表了一种东西，这个东西可以称之为理念。</p>\n<p>只要能上升到理念，大抵都是高大上的。</p>\n<p>这个理念就是：去中心化。</p>\n<p>去中心化是一个非常高大上的词。这个词的高大上就在于：我们世界的现实是中心化的，但中心化总感觉和自由是矛盾的，于是，我们世界的期望是去中心化的。</p>\n<p>如果要说币圈链圈扯“信仰”两个字的话，去中心化大概是绝对绕不过去的。</p>\n<p>中本聪创造了比特币，他使用了一种叫区块链的技术。而这种技术，是去中心化的技术。</p>\n<p>正如钻石代表爱情一样。</p>\n<p>比特币代表一种理想。</p>\n<p>荷兰郁金香可没有这货。荷兰郁金香只有钱。只有钱，实际上又用处不大，这个局是撑不住的。</p>\n<p>所以有人嘲笑3点钟诸群不肯谈钱非要谈理想谈哲学谈历史，这种嘲笑是不对的。</p>\n<p>真的是卖肉出身，不晓得这里的厉害关系。</p>\n<h4 id=\"五\"><a class=\"header-anchor\" href=\"#五\">☆</a>五</h4>\n<p>但没有人会认为钻石是通货。</p>\n<p>没有任何一个国家会说，我们拥有多少多少钻石储备来显示国力。</p>\n<p>钻石就是一种可以变成财富的石头，仅此而已。档次还不够。</p>\n<p>而黄金，则不然。</p>\n<p>黄金不仅仅是可以变成财富的金属，它还是通货。黄金储备，这个词你肯定听说过。</p>\n<p>比特币需要迈向黄金这个级别，才是币圈中人的梦想。</p>\n<p>不要被“币”这个字眼迷惑。</p>\n<p>你叫它是币就是币了么？这不行。得人认同它是币，那它才是通货。</p>\n<p>想象一下，如果比特币被认为是通货了，持有比特币的人——而且是海量持有——那是什么？</p>\n<p>只是土豪么？</p>\n<p>才不仅仅是土豪。</p>\n<p>持有一万颗钻石的人，和持有一万吨黄金的人，根本不是谁更土豪的比较。</p>\n<p>前者，仅仅代表财富，你可以称呼他为土豪。后者，却代表了呼风唤雨的权力，你应该称他：国王陛下。</p>\n<h4 id=\"六\"><a class=\"header-anchor\" href=\"#六\">☆</a>六</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/20183/%E6%AF%94%E7%89%B9%E5%B8%81%E5%8C%BA%E5%9D%97%E9%93%BE.jpg\" alt></p>\n<p>这是我一个月前在维也纳市中心街头拍的照片。</p>\n<p>其实这没什么，无非就是一个商家接受比特币来买东西。</p>\n<p>商家也可以接受钻石来换东西的。</p>\n<p>不要以为有商家愿意接受比特币来购物，就说明比特币成为货币了。</p>\n<p>要成为通货，仅仅有那么几个商家是不够的。</p>\n<p>但比特币不是我上一篇文章里提及的ICO中的那些电子货币。你可以认为，比特币是元币，也就是说，这些ICO们，所发的币，你得拿比特币去买（或者你也可以拿一种叫以太币的东西，但以太币和比特币是有一个结算公式的），并不是人民币，或者美元。</p>\n<p>每一次发币，都在强化比特币作为元币的地位。这些ICO们，倒了九成都没关系。只要有一些能站住，比特币就受益。</p>\n<p>好了，你现在能理解委内瑞拉发石油币得到币圈欢呼的原因了：有一个国家，在开始认同比特币作为元币的地位了。</p>\n<p>至于中本聪的初衷：国家铸币不可信这种想法，已经不重要了。</p>\n<h4 id=\"七\"><a class=\"header-anchor\" href=\"#七\">☆</a>七</h4>\n<p>我们想象一下。</p>\n<p>大多数公司IPO，都用发币的方式来ICO，比特币作为最根本的结算单位，公司们最终价值的表现，你都可以算出一个比特币来。</p>\n<p>大多数国家，都认同比特币作为元币的地位。</p>\n<p>你很幸运，拥有2100万枚中的21万枚。</p>\n<p>万岁万岁万岁！我的国王陛下！</p>\n<h4 id=\"八\"><a class=\"header-anchor\" href=\"#八\">☆</a>八</h4>\n<p>奥地利人茨威格在他的名著《人类群星闪耀时》中写过一个故事。</p>\n<p>第一个在加利福尼亚州发现金子的人叫祖特尔（确切的说，是他手下一个农民）。</p>\n<p>这哥们当年从墨西哥驻加利福尼亚总督手上拿下了一块足以建立一个小小王国的土地。单枪匹马赤手空拳兴建农场勤劳致富。土地上有黄金消息传出去后，全球的冒险者蜂拥而至，践踏他的庄园，一夜之间祖特尔一贫如洗。</p>\n<p>但他不气馁，召集了三个儿子跑另外一块不那么产金的地方重整家业，又积累起一笔财富。很快，他可以打官司了。他控告在他以前的土地上的上万民农场主，要求他们滚蛋：这土地是我的！合众国法官判决如下：祖特尔对这片土地拥有完全合法和不可侵犯的权利。</p>\n<p>成千上万人愤怒了。他们洗劫了祖特尔的新家园，长子被逼自杀，次子惨遭杀害，幼子虽然逃走但淹死在归国途中。老头最终以不断上访的乞丐身份死于国会大厦的台阶上。</p>\n<p>这个故事相当的让人唏嘘不已。但茨威格可能有点小小搞错了。祖特尔的确一直在申诉他的权利，但他不是死在什么国会大厦的台阶上，而是死在一家旅店里。最重要的事，茨威格漏写了祖特尔的一个儿子（祖特尔一共有五个儿子）：小祖特尔。这哥们还是颇有建树的，是加利福尼亚州府萨克拉门托的建立者，比他老爸晚死十七年。</p>\n<p>只是，我们不知道，中本聪是什么样的终局故事。</p>\n<p>想必，他是不太会走上祖特尔的道路吧。</p>\n<p>—— 首发 扯氮集 ——</p>\n<p>版权声明</p>\n<p>作者执教于上海交通大学媒体与传播学院 天奇阿米巴创投基金管理合伙人​​​​</p>\n"},{"title":"记录一下买过的课","copyright":true,"abbrlink":"5239bbb3","notshow":true,"description":"为了便宜，买的或者领取的课程平台太多，记录一下，用以备忘","password":null,"date":"2020-08-07T03:35:00.000Z","image":null,"photos":[],"sticky":null,"_content":"\n以下仅记录付费课\n\n- [极客时间](https://time.geekbang.org/)\n  - 算法面试通关40讲 <span id=\"inline-blue\">视频课</span>\n  - Python核心技术与实战 <span id=\"inline-purple\">专栏</span>\n  - 小马哥讲Spring核心编程思想 <span id=\"inline-blue\">视频课</span>\n\n- [慕课网](https://www.imooc.com/)\n  - Linux命令行与Shell脚本编程大全 <span id=\"inline-purple\">专栏</span>\n  - 面试官系统精讲Java源码及大厂真题 <span id=\"inline-purple\">专栏</span>\n\n- [网易云课堂](https://study.163.com/)\n  - 带你重新认识Redis <span id=\"inline-blue\">视频课</span>\n\n- [九章算法](https://www.jiuzhang.com/)\n  - 国内大厂高频动规题详解 <span id=\"inline-green\">互动课</span>\n\n- [拉勾教育](https://edu.lagou.com/learn)\n <div class=\"note primary\"><p>以下均为专栏</p></div>\n\n  - 分布式链路实战\n  - 数据挖掘思维与实战 24 讲\n  - Dubbo源码解读与实战\n  - 52讲轻松搞定网络爬虫\n  - 微服务质量保障 20 讲\n  - Java 性能优化实战 21 讲\n  - Go 微服务实战 38 讲\n  - Vue.js 3.0 核心源码解析\n  - 300分钟搞定数据结构与算法\n  - 腾讯敏捷项目管理实战\n  - ShardingSphere 核心原理精讲\n  - Flutter快学快用24讲\n  - 大数据运维实战\n  - 数据分析思维与实战 23 讲\n  - 重学数据结构与算法\n  - 前端高手进阶\n  - ZooKeeper源码分析与实战\n  - 云原生微服务架构实战精讲\n  - 42讲轻松通关 Flink\n  - 即学即用的Spark实战44讲\n  - Java 源码剖析 34 讲\n  - 分布式技术原理与实战45讲\n","source":"_posts/记录一下这些年买的课.md","raw":"---\ntitle: 记录一下买过的课\ncopyright: true\nabbrlink: 5239bbb3\nnotshow: true\ndescription: 为了便宜，买的或者领取的课程平台太多，记录一下，用以备忘\npassword:\ndate: 2020-08-07 11:35:00\nimage:\ntags:\ncategories:\nphotos:\nsticky:\n---\n\n以下仅记录付费课\n\n- [极客时间](https://time.geekbang.org/)\n  - 算法面试通关40讲 <span id=\"inline-blue\">视频课</span>\n  - Python核心技术与实战 <span id=\"inline-purple\">专栏</span>\n  - 小马哥讲Spring核心编程思想 <span id=\"inline-blue\">视频课</span>\n\n- [慕课网](https://www.imooc.com/)\n  - Linux命令行与Shell脚本编程大全 <span id=\"inline-purple\">专栏</span>\n  - 面试官系统精讲Java源码及大厂真题 <span id=\"inline-purple\">专栏</span>\n\n- [网易云课堂](https://study.163.com/)\n  - 带你重新认识Redis <span id=\"inline-blue\">视频课</span>\n\n- [九章算法](https://www.jiuzhang.com/)\n  - 国内大厂高频动规题详解 <span id=\"inline-green\">互动课</span>\n\n- [拉勾教育](https://edu.lagou.com/learn)\n <div class=\"note primary\"><p>以下均为专栏</p></div>\n\n  - 分布式链路实战\n  - 数据挖掘思维与实战 24 讲\n  - Dubbo源码解读与实战\n  - 52讲轻松搞定网络爬虫\n  - 微服务质量保障 20 讲\n  - Java 性能优化实战 21 讲\n  - Go 微服务实战 38 讲\n  - Vue.js 3.0 核心源码解析\n  - 300分钟搞定数据结构与算法\n  - 腾讯敏捷项目管理实战\n  - ShardingSphere 核心原理精讲\n  - Flutter快学快用24讲\n  - 大数据运维实战\n  - 数据分析思维与实战 23 讲\n  - 重学数据结构与算法\n  - 前端高手进阶\n  - ZooKeeper源码分析与实战\n  - 云原生微服务架构实战精讲\n  - 42讲轻松通关 Flink\n  - 即学即用的Spark实战44讲\n  - Java 源码剖析 34 讲\n  - 分布式技术原理与实战45讲\n","slug":"记录一下这些年买的课","published":1,"updated":"2020-08-08T03:33:39.507Z","comments":1,"layout":"post","link":"","_id":"ckec2td46001wfkupg04q0fqr","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><p>以下仅记录付费课</p>\n<ul>\n<li>\n<p><a href=\"https://time.geekbang.org/\" target=\"_blank\" rel=\"noopener\">极客时间</a></p>\n<ul>\n<li>算法面试通关40讲 <span id=\"inline-blue\">视频课</span></li>\n<li>Python核心技术与实战 <span id=\"inline-purple\">专栏</span></li>\n<li>小马哥讲Spring核心编程思想 <span id=\"inline-blue\">视频课</span></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://www.imooc.com/\" target=\"_blank\" rel=\"noopener\">慕课网</a></p>\n<ul>\n<li>Linux命令行与Shell脚本编程大全 <span id=\"inline-purple\">专栏</span></li>\n<li>面试官系统精讲Java源码及大厂真题 <span id=\"inline-purple\">专栏</span></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://study.163.com/\" target=\"_blank\" rel=\"noopener\">网易云课堂</a></p>\n<ul>\n<li>带你重新认识Redis <span id=\"inline-blue\">视频课</span></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://www.jiuzhang.com/\" target=\"_blank\" rel=\"noopener\">九章算法</a></p>\n<ul>\n<li>国内大厂高频动规题详解 <span id=\"inline-green\">互动课</span></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://edu.lagou.com/learn\" target=\"_blank\" rel=\"noopener\">拉勾教育</a></p>\n</li>\n</ul>\n <div class=\"note primary\"><p>以下均为专栏</p></div>\n<ul>\n<li>分布式链路实战</li>\n<li>数据挖掘思维与实战 24 讲</li>\n<li>Dubbo源码解读与实战</li>\n<li>52讲轻松搞定网络爬虫</li>\n<li>微服务质量保障 20 讲</li>\n<li>Java 性能优化实战 21 讲</li>\n<li>Go 微服务实战 38 讲</li>\n<li>Vue.js 3.0 核心源码解析</li>\n<li>300分钟搞定数据结构与算法</li>\n<li>腾讯敏捷项目管理实战</li>\n<li>ShardingSphere 核心原理精讲</li>\n<li>Flutter快学快用24讲</li>\n<li>大数据运维实战</li>\n<li>数据分析思维与实战 23 讲</li>\n<li>重学数据结构与算法</li>\n<li>前端高手进阶</li>\n<li>ZooKeeper源码分析与实战</li>\n<li>云原生微服务架构实战精讲</li>\n<li>42讲轻松通关 Flink</li>\n<li>即学即用的Spark实战44讲</li>\n<li>Java 源码剖析 34 讲</li>\n<li>分布式技术原理与实战45讲</li>\n</ul>\n","site":{"data":{}},"length":438,"excerpt":"","more":"<p>以下仅记录付费课</p>\n<ul>\n<li>\n<p><a href=\"https://time.geekbang.org/\" target=\"_blank\" rel=\"noopener\">极客时间</a></p>\n<ul>\n<li>算法面试通关40讲 <span id=\"inline-blue\">视频课</span></li>\n<li>Python核心技术与实战 <span id=\"inline-purple\">专栏</span></li>\n<li>小马哥讲Spring核心编程思想 <span id=\"inline-blue\">视频课</span></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://www.imooc.com/\" target=\"_blank\" rel=\"noopener\">慕课网</a></p>\n<ul>\n<li>Linux命令行与Shell脚本编程大全 <span id=\"inline-purple\">专栏</span></li>\n<li>面试官系统精讲Java源码及大厂真题 <span id=\"inline-purple\">专栏</span></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://study.163.com/\" target=\"_blank\" rel=\"noopener\">网易云课堂</a></p>\n<ul>\n<li>带你重新认识Redis <span id=\"inline-blue\">视频课</span></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://www.jiuzhang.com/\" target=\"_blank\" rel=\"noopener\">九章算法</a></p>\n<ul>\n<li>国内大厂高频动规题详解 <span id=\"inline-green\">互动课</span></li>\n</ul>\n</li>\n<li>\n<p><a href=\"https://edu.lagou.com/learn\" target=\"_blank\" rel=\"noopener\">拉勾教育</a></p>\n</li>\n</ul>\n <div class=\"note primary\"><p>以下均为专栏</p></div>\n<ul>\n<li>分布式链路实战</li>\n<li>数据挖掘思维与实战 24 讲</li>\n<li>Dubbo源码解读与实战</li>\n<li>52讲轻松搞定网络爬虫</li>\n<li>微服务质量保障 20 讲</li>\n<li>Java 性能优化实战 21 讲</li>\n<li>Go 微服务实战 38 讲</li>\n<li>Vue.js 3.0 核心源码解析</li>\n<li>300分钟搞定数据结构与算法</li>\n<li>腾讯敏捷项目管理实战</li>\n<li>ShardingSphere 核心原理精讲</li>\n<li>Flutter快学快用24讲</li>\n<li>大数据运维实战</li>\n<li>数据分析思维与实战 23 讲</li>\n<li>重学数据结构与算法</li>\n<li>前端高手进阶</li>\n<li>ZooKeeper源码分析与实战</li>\n<li>云原生微服务架构实战精讲</li>\n<li>42讲轻松通关 Flink</li>\n<li>即学即用的Spark实战44讲</li>\n<li>Java 源码剖析 34 讲</li>\n<li>分布式技术原理与实战45讲</li>\n</ul>\n"},{"title":"走迷宫游戏","copyright":true,"abbrlink":"60a25379","date":"2018-03-25T14:58:15.000Z","password":null,"_content":"\n### 问题描述与需求分析\n#### 问题描述\n  程序开始运行时显示一个迷宫地图，迷宫中央有一只老鼠，迷宫的右下方有一个粮仓。游戏的任务是使用键盘上的方向键操纵老鼠在规定的时间内走到粮仓处。\n 要求：\n1)\t老鼠形象可辨认，可用键盘操纵老鼠上下左右移动；\n2)\t迷宫的墙足够结实，老鼠不能穿墙而过；\n3)\t正确检测结果，若老鼠在规定时间内走到粮仓处，提示成功，否则提示失败；\n4)\t添加编辑迷宫功能，可修改当前迷宫，修改内容：墙变路、路变墙；\n5)\t找出走出迷宫的所有路径，以及最短路径。\n6) 利用序列化功能实现迷宫地图文件的存盘和读出等功能\n#### 功能需求分析\n1) 迷宫地图的构建\n2) 键盘输入值的获取及实现对应的功能\n3) 结果的检测，初始位置的实现\n4) 文件的读取与保存，读取存档，修改存档\n5) 倒计时的实现\n\n\n### 概要设计\n#### 总体设计思路\n\n   通过菜单调用不同的函数组合实现不同的功能，将各个功能需求单独以一个函数实现，在实现复杂功能时，使用不同的函数进行组合，通过合理的调用实现所有的功能。\n   ![整体流程图][1]\n\n#### 模块简介\n本程序主要分为3个功能模块，一个执行模块，还有几个服务支持模块。\n##### 主要功能模块为：\n1、\t随机地图生成\n2、\t存档地图的修改\n3、\t存档地图的编辑\n##### 执行模块为： \n游戏的运行   地图的打印\n##### 服务支持模块为：\n1、\t文件的读取与保存\n2、\t设备输入值的获取（接收按键）\n3、\t坐标的移动（老鼠的移动）\n4、\t光标输入符的隐藏\n5、\t倒计时的实现\n6、\t地图编辑模块\n7、\t随机数生成模块与地图初始化模块\n\n### 详细设计\n#### 数据结构设计\n迷宫地图的存储使用二维数组实现，在数组中使用1表示迷宫的墙，使用0表示道路；文件信息的存取，使用结构体实现，其他常用的全局量，使用#define进行数据类型定义。\n```\n\tint map[Height + 2][Width + 2];   //存储地图数据\n\t\tstruct _finddata_t fileinfo;      //存储文件信息  \n```\n####  算法分析与实现\n程序主要函数如下：\n```\n\t\t/*执行模块函数*/\nvoid paint(int x, int y);  //画迷宫\nvoid paint2();\nvoid start();\t\t\t   //游戏开始\nint edit_map_read();       //修改地图读取存档\n\n/*服务支持模块类函数*/\nint countdown();           //倒计时\nvoid gotoxy(int x, int y); //移动坐标\nvoid hidden();\t\t\t   //光标隐藏\nint file_list_reading();   //文件列表读取\nvoid create(int x, int y); //随机数组生成\nvoid map_Initialization(); //地图初始化\nint file_write();          /*文件读写*/\nint file_read();\nint get_key();             //接收按键\nvoid game();               //游戏运行\nvoid edit_map();           //地图编辑\nint edit_map_read();       //修改地图读取存档\n\n/*功能模块类函数，菜单直接调用，多为函数组合*/\nvoid Random_map_generation();  //随机地图\nvoid Read_archive_map();\t   //读取存档\nvoid Map_editing();            //地图编辑\n```\n\n#### 主要功能函数实现流程图：\n\nvoid create(int x, int y);函数作用：生成随机数组\n\n![ ][2]\n\nvoid map_Initialization();函数作用：通过调用create(int x, int y)生成的随机数组，初始化地图，并存储在map数组中\n\n![ ][3]\n\nvoid paint(int x, int y);  void paint2();函数作用：打印地图\n\n![ ][4]\n\nint file_read();函数功能：读取存档。类似函数：void Read_archive_map();\n\n![ ][5]\n\nint file_write();函数功能：写入存档，保存地图。\n\n![ ][6]\n\nvoid edit_map();  函数功能：编辑地图。\n\n![ ][7]\n\nvoid game();   函数功能：游戏执行。\n\n![ ][8]\n\nint file_list_reading();函数功能：读取文件列表，显示在屏幕上。\n\n![ ][9]\n\n### 运行结果和调试分析\n\n程序主界面：\n![ ][10]\n生成随机地图并保存\n![ ][11]\n游戏运行地图：\n![ ][12]\n存档地图读取\n![ ][13]\n修改存档地图：\n![ ][14]\n\n\n### 总结体会\n&emsp;&emsp;本次课程设计，巩固和加深了对数据结构的理解，提高综合运用本课程所学知识的能力；培养了我上网查找资料，查阅手册及文献资料的能力；培养独立思考，深入研究，分析问题、解决问题的能力。\n&emsp;&emsp;通过实际编译系统的分析设计、编程调试，在文件的存档读取时遇到了严重的问题，查阅了各种资料，大概在一天后解决问题。\n\n根据我在实习中遇到得问题，我将在以后的学习过程中注意以下几点：\n1、认真上好专业实验课，多在实践中锻炼自己。\n2、写程序的过程中要考虑周到，严密。\n3、在做设计的时候要有信心，有耐心，切勿浮躁。\n4、认真的学习课本知识，掌握课本中的知识点，并在此基础上学会灵活运用。\n5、在课余时间里多写程序，熟练掌握在调试程序的过程中所遇到的常见错误，以便能节省调试程序的时间。\n\n### 参考文献\n[1]严蔚敏，吴伟民编著．《数据结构》（C语言版）．清华大学出版社。\n[2] http://blog.csdn.net/cflys/article/details/45895737\n[3] http://blog.csdn.net/cflys/article/details/45895737\n[4] http://blog.csdn.net/AllenLee1993/article/details/44814919\n[5] http://blog.csdn.net/hanhailong18/article/details/16907295\n[6] http://codebus.easyx.cn/krissi/post/maze-game\n\n### 附\n点击：[下载源码][15]\n\n\n  [1]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB01.png\n  [2]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB02.png\n  [3]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB03.png\n  [4]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB04.png\n  [5]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB05.png\n  [6]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB06.png\n  [7]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB07.png\n  [8]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB08.png\n  [9]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB09.png\n  [10]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB10.png\n  [11]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB11.png\n  [12]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB12.png\n  [13]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB13.png\n  [14]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB14.png\n  [15]: https://data.singlelovely.cn/%E8%BF%B7%E5%AE%AB-%E6%9C%80%E7%BB%88%E7%89%88.rar","source":"_posts/走迷宫游戏.md","raw":"---\ntitle: 走迷宫游戏\ntags:\n  - 课程设计\n  - C/C++\ncategories: C/C++\ncopyright: true\nabbrlink: 60a25379\ndate: 2018-03-25 22:58:15\npassword:\n---\n\n### 问题描述与需求分析\n#### 问题描述\n  程序开始运行时显示一个迷宫地图，迷宫中央有一只老鼠，迷宫的右下方有一个粮仓。游戏的任务是使用键盘上的方向键操纵老鼠在规定的时间内走到粮仓处。\n 要求：\n1)\t老鼠形象可辨认，可用键盘操纵老鼠上下左右移动；\n2)\t迷宫的墙足够结实，老鼠不能穿墙而过；\n3)\t正确检测结果，若老鼠在规定时间内走到粮仓处，提示成功，否则提示失败；\n4)\t添加编辑迷宫功能，可修改当前迷宫，修改内容：墙变路、路变墙；\n5)\t找出走出迷宫的所有路径，以及最短路径。\n6) 利用序列化功能实现迷宫地图文件的存盘和读出等功能\n#### 功能需求分析\n1) 迷宫地图的构建\n2) 键盘输入值的获取及实现对应的功能\n3) 结果的检测，初始位置的实现\n4) 文件的读取与保存，读取存档，修改存档\n5) 倒计时的实现\n\n\n### 概要设计\n#### 总体设计思路\n\n   通过菜单调用不同的函数组合实现不同的功能，将各个功能需求单独以一个函数实现，在实现复杂功能时，使用不同的函数进行组合，通过合理的调用实现所有的功能。\n   ![整体流程图][1]\n\n#### 模块简介\n本程序主要分为3个功能模块，一个执行模块，还有几个服务支持模块。\n##### 主要功能模块为：\n1、\t随机地图生成\n2、\t存档地图的修改\n3、\t存档地图的编辑\n##### 执行模块为： \n游戏的运行   地图的打印\n##### 服务支持模块为：\n1、\t文件的读取与保存\n2、\t设备输入值的获取（接收按键）\n3、\t坐标的移动（老鼠的移动）\n4、\t光标输入符的隐藏\n5、\t倒计时的实现\n6、\t地图编辑模块\n7、\t随机数生成模块与地图初始化模块\n\n### 详细设计\n#### 数据结构设计\n迷宫地图的存储使用二维数组实现，在数组中使用1表示迷宫的墙，使用0表示道路；文件信息的存取，使用结构体实现，其他常用的全局量，使用#define进行数据类型定义。\n```\n\tint map[Height + 2][Width + 2];   //存储地图数据\n\t\tstruct _finddata_t fileinfo;      //存储文件信息  \n```\n####  算法分析与实现\n程序主要函数如下：\n```\n\t\t/*执行模块函数*/\nvoid paint(int x, int y);  //画迷宫\nvoid paint2();\nvoid start();\t\t\t   //游戏开始\nint edit_map_read();       //修改地图读取存档\n\n/*服务支持模块类函数*/\nint countdown();           //倒计时\nvoid gotoxy(int x, int y); //移动坐标\nvoid hidden();\t\t\t   //光标隐藏\nint file_list_reading();   //文件列表读取\nvoid create(int x, int y); //随机数组生成\nvoid map_Initialization(); //地图初始化\nint file_write();          /*文件读写*/\nint file_read();\nint get_key();             //接收按键\nvoid game();               //游戏运行\nvoid edit_map();           //地图编辑\nint edit_map_read();       //修改地图读取存档\n\n/*功能模块类函数，菜单直接调用，多为函数组合*/\nvoid Random_map_generation();  //随机地图\nvoid Read_archive_map();\t   //读取存档\nvoid Map_editing();            //地图编辑\n```\n\n#### 主要功能函数实现流程图：\n\nvoid create(int x, int y);函数作用：生成随机数组\n\n![ ][2]\n\nvoid map_Initialization();函数作用：通过调用create(int x, int y)生成的随机数组，初始化地图，并存储在map数组中\n\n![ ][3]\n\nvoid paint(int x, int y);  void paint2();函数作用：打印地图\n\n![ ][4]\n\nint file_read();函数功能：读取存档。类似函数：void Read_archive_map();\n\n![ ][5]\n\nint file_write();函数功能：写入存档，保存地图。\n\n![ ][6]\n\nvoid edit_map();  函数功能：编辑地图。\n\n![ ][7]\n\nvoid game();   函数功能：游戏执行。\n\n![ ][8]\n\nint file_list_reading();函数功能：读取文件列表，显示在屏幕上。\n\n![ ][9]\n\n### 运行结果和调试分析\n\n程序主界面：\n![ ][10]\n生成随机地图并保存\n![ ][11]\n游戏运行地图：\n![ ][12]\n存档地图读取\n![ ][13]\n修改存档地图：\n![ ][14]\n\n\n### 总结体会\n&emsp;&emsp;本次课程设计，巩固和加深了对数据结构的理解，提高综合运用本课程所学知识的能力；培养了我上网查找资料，查阅手册及文献资料的能力；培养独立思考，深入研究，分析问题、解决问题的能力。\n&emsp;&emsp;通过实际编译系统的分析设计、编程调试，在文件的存档读取时遇到了严重的问题，查阅了各种资料，大概在一天后解决问题。\n\n根据我在实习中遇到得问题，我将在以后的学习过程中注意以下几点：\n1、认真上好专业实验课，多在实践中锻炼自己。\n2、写程序的过程中要考虑周到，严密。\n3、在做设计的时候要有信心，有耐心，切勿浮躁。\n4、认真的学习课本知识，掌握课本中的知识点，并在此基础上学会灵活运用。\n5、在课余时间里多写程序，熟练掌握在调试程序的过程中所遇到的常见错误，以便能节省调试程序的时间。\n\n### 参考文献\n[1]严蔚敏，吴伟民编著．《数据结构》（C语言版）．清华大学出版社。\n[2] http://blog.csdn.net/cflys/article/details/45895737\n[3] http://blog.csdn.net/cflys/article/details/45895737\n[4] http://blog.csdn.net/AllenLee1993/article/details/44814919\n[5] http://blog.csdn.net/hanhailong18/article/details/16907295\n[6] http://codebus.easyx.cn/krissi/post/maze-game\n\n### 附\n点击：[下载源码][15]\n\n\n  [1]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB01.png\n  [2]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB02.png\n  [3]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB03.png\n  [4]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB04.png\n  [5]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB05.png\n  [6]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB06.png\n  [7]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB07.png\n  [8]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB08.png\n  [9]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB09.png\n  [10]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB10.png\n  [11]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB11.png\n  [12]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB12.png\n  [13]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB13.png\n  [14]: https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB14.png\n  [15]: https://data.singlelovely.cn/%E8%BF%B7%E5%AE%AB-%E6%9C%80%E7%BB%88%E7%89%88.rar","slug":"走迷宫游戏","published":1,"updated":"2020-02-20T06:06:59.434Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td46001xfkuptmy4dlai","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h3 id=\"问题描述与需求分析\"><a class=\"header-anchor\" href=\"#问题描述与需求分析\">☆</a>问题描述与需求分析</h3>\n<h4 id=\"问题描述\"><a class=\"header-anchor\" href=\"#问题描述\">☆</a>问题描述</h4>\n<p>程序开始运行时显示一个迷宫地图，迷宫中央有一只老鼠，迷宫的右下方有一个粮仓。游戏的任务是使用键盘上的方向键操纵老鼠在规定的时间内走到粮仓处。<br>\n要求：</p>\n<ol>\n<li>老鼠形象可辨认，可用键盘操纵老鼠上下左右移动；</li>\n<li>迷宫的墙足够结实，老鼠不能穿墙而过；</li>\n<li>正确检测结果，若老鼠在规定时间内走到粮仓处，提示成功，否则提示失败；</li>\n<li>添加编辑迷宫功能，可修改当前迷宫，修改内容：墙变路、路变墙；</li>\n<li>找出走出迷宫的所有路径，以及最短路径。</li>\n<li>利用序列化功能实现迷宫地图文件的存盘和读出等功能</li>\n</ol>\n<h4 id=\"功能需求分析\"><a class=\"header-anchor\" href=\"#功能需求分析\">☆</a>功能需求分析</h4>\n<ol>\n<li>迷宫地图的构建</li>\n<li>键盘输入值的获取及实现对应的功能</li>\n<li>结果的检测，初始位置的实现</li>\n<li>文件的读取与保存，读取存档，修改存档</li>\n<li>倒计时的实现</li>\n</ol>\n<h3 id=\"概要设计\"><a class=\"header-anchor\" href=\"#概要设计\">☆</a>概要设计</h3>\n<h4 id=\"总体设计思路\"><a class=\"header-anchor\" href=\"#总体设计思路\">☆</a>总体设计思路</h4>\n<p>通过菜单调用不同的函数组合实现不同的功能，将各个功能需求单独以一个函数实现，在实现复杂功能时，使用不同的函数进行组合，通过合理的调用实现所有的功能。<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB01.png\" alt=\"整体流程图\"></p>\n<h4 id=\"模块简介\"><a class=\"header-anchor\" href=\"#模块简介\">☆</a>模块简介</h4>\n<p>本程序主要分为3个功能模块，一个执行模块，还有几个服务支持模块。</p>\n<h5 id=\"主要功能模块为：\"><a class=\"header-anchor\" href=\"#主要功能模块为：\">☆</a>主要功能模块为：</h5>\n<p>1、\t随机地图生成<br>\n2、\t存档地图的修改<br>\n3、\t存档地图的编辑</p>\n<h5 id=\"执行模块为：\"><a class=\"header-anchor\" href=\"#执行模块为：\">☆</a>执行模块为：</h5>\n<p>游戏的运行   地图的打印</p>\n<h5 id=\"服务支持模块为：\"><a class=\"header-anchor\" href=\"#服务支持模块为：\">☆</a>服务支持模块为：</h5>\n<p>1、\t文件的读取与保存<br>\n2、\t设备输入值的获取（接收按键）<br>\n3、\t坐标的移动（老鼠的移动）<br>\n4、\t光标输入符的隐藏<br>\n5、\t倒计时的实现<br>\n6、\t地图编辑模块<br>\n7、\t随机数生成模块与地图初始化模块</p>\n<h3 id=\"详细设计\"><a class=\"header-anchor\" href=\"#详细设计\">☆</a>详细设计</h3>\n<h4 id=\"数据结构设计\"><a class=\"header-anchor\" href=\"#数据结构设计\">☆</a>数据结构设计</h4>\n<p>迷宫地图的存储使用二维数组实现，在数组中使用1表示迷宫的墙，使用0表示道路；文件信息的存取，使用结构体实现，其他常用的全局量，使用#define进行数据类型定义。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int map[Height + 2][Width + 2];   //存储地图数据</span><br><span class=\"line\">\tstruct _finddata_t fileinfo;      //存储文件信息</span><br></pre></td></tr></table></figure>\n<h4 id=\"算法分析与实现\"><a class=\"header-anchor\" href=\"#算法分析与实现\">☆</a>算法分析与实现</h4>\n<p>程序主要函数如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t/*执行模块函数*/</span><br><span class=\"line\">void paint(int x, int y);  //画迷宫</span><br><span class=\"line\">void paint2();</span><br><span class=\"line\">void start();\t\t\t   //游戏开始</span><br><span class=\"line\">int edit_map_read();       //修改地图读取存档</span><br><span class=\"line\"></span><br><span class=\"line\">/*服务支持模块类函数*/</span><br><span class=\"line\">int countdown();           //倒计时</span><br><span class=\"line\">void gotoxy(int x, int y); //移动坐标</span><br><span class=\"line\">void hidden();\t\t\t   //光标隐藏</span><br><span class=\"line\">int file_list_reading();   //文件列表读取</span><br><span class=\"line\">void create(int x, int y); //随机数组生成</span><br><span class=\"line\">void map_Initialization(); //地图初始化</span><br><span class=\"line\">int file_write();          /*文件读写*/</span><br><span class=\"line\">int file_read();</span><br><span class=\"line\">int get_key();             //接收按键</span><br><span class=\"line\">void game();               //游戏运行</span><br><span class=\"line\">void edit_map();           //地图编辑</span><br><span class=\"line\">int edit_map_read();       //修改地图读取存档</span><br><span class=\"line\"></span><br><span class=\"line\">/*功能模块类函数，菜单直接调用，多为函数组合*/</span><br><span class=\"line\">void Random_map_generation();  //随机地图</span><br><span class=\"line\">void Read_archive_map();\t   //读取存档</span><br><span class=\"line\">void Map_editing();            //地图编辑</span><br></pre></td></tr></table></figure>\n<h4 id=\"主要功能函数实现流程图：\"><a class=\"header-anchor\" href=\"#主要功能函数实现流程图：\">☆</a>主要功能函数实现流程图：</h4>\n<p>void create(int x, int y);函数作用：生成随机数组</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB02.png\" alt=\" \"></p>\n<p>void map_Initialization();函数作用：通过调用create(int x, int y)生成的随机数组，初始化地图，并存储在map数组中</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB03.png\" alt=\" \"></p>\n<p>void paint(int x, int y);  void paint2();函数作用：打印地图</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB04.png\" alt=\" \"></p>\n<p>int file_read();函数功能：读取存档。类似函数：void Read_archive_map();</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB05.png\" alt=\" \"></p>\n<p>int file_write();函数功能：写入存档，保存地图。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB06.png\" alt=\" \"></p>\n<p>void edit_map();  函数功能：编辑地图。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB07.png\" alt=\" \"></p>\n<p>void game();   函数功能：游戏执行。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB08.png\" alt=\" \"></p>\n<p>int file_list_reading();函数功能：读取文件列表，显示在屏幕上。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB09.png\" alt=\" \"></p>\n<h3 id=\"运行结果和调试分析\"><a class=\"header-anchor\" href=\"#运行结果和调试分析\">☆</a>运行结果和调试分析</h3>\n<p>程序主界面：<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB10.png\" alt=\" \"><br>\n生成随机地图并保存<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB11.png\" alt=\" \"><br>\n游戏运行地图：<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB12.png\" alt=\" \"><br>\n存档地图读取<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB13.png\" alt=\" \"><br>\n修改存档地图：<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB14.png\" alt=\" \"></p>\n<h3 id=\"总结体会\"><a class=\"header-anchor\" href=\"#总结体会\">☆</a>总结体会</h3>\n<p>  本次课程设计，巩固和加深了对数据结构的理解，提高综合运用本课程所学知识的能力；培养了我上网查找资料，查阅手册及文献资料的能力；培养独立思考，深入研究，分析问题、解决问题的能力。<br>\n  通过实际编译系统的分析设计、编程调试，在文件的存档读取时遇到了严重的问题，查阅了各种资料，大概在一天后解决问题。</p>\n<p>根据我在实习中遇到得问题，我将在以后的学习过程中注意以下几点：<br>\n1、认真上好专业实验课，多在实践中锻炼自己。<br>\n2、写程序的过程中要考虑周到，严密。<br>\n3、在做设计的时候要有信心，有耐心，切勿浮躁。<br>\n4、认真的学习课本知识，掌握课本中的知识点，并在此基础上学会灵活运用。<br>\n5、在课余时间里多写程序，熟练掌握在调试程序的过程中所遇到的常见错误，以便能节省调试程序的时间。</p>\n<h3 id=\"参考文献\"><a class=\"header-anchor\" href=\"#参考文献\">☆</a>参考文献</h3>\n<p><a href=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB01.png\" target=\"_blank\" rel=\"noopener\">1</a>严蔚敏，吴伟民编著．《数据结构》（C语言版）．清华大学出版社。<br>\n<a href=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB02.png\" target=\"_blank\" rel=\"noopener\">2</a> <a href=\"http://blog.csdn.net/cflys/article/details/45895737\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/cflys/article/details/45895737</a><br>\n<a href=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB03.png\" target=\"_blank\" rel=\"noopener\">3</a> <a href=\"http://blog.csdn.net/cflys/article/details/45895737\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/cflys/article/details/45895737</a><br>\n<a href=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB04.png\" target=\"_blank\" rel=\"noopener\">4</a> <a href=\"http://blog.csdn.net/AllenLee1993/article/details/44814919\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/AllenLee1993/article/details/44814919</a><br>\n<a href=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB05.png\" target=\"_blank\" rel=\"noopener\">5</a> <a href=\"http://blog.csdn.net/hanhailong18/article/details/16907295\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/hanhailong18/article/details/16907295</a><br>\n<a href=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB06.png\" target=\"_blank\" rel=\"noopener\">6</a> <a href=\"http://codebus.easyx.cn/krissi/post/maze-game\" target=\"_blank\" rel=\"noopener\">http://codebus.easyx.cn/krissi/post/maze-game</a></p>\n<h3 id=\"附\"><a class=\"header-anchor\" href=\"#附\">☆</a>附</h3>\n<p>点击：<a href=\"https://data.singlelovely.cn/%E8%BF%B7%E5%AE%AB-%E6%9C%80%E7%BB%88%E7%89%88.rar\" target=\"_blank\" rel=\"noopener\">下载源码</a></p>\n","site":{"data":{}},"length":2523,"excerpt":"","more":"<h3 id=\"问题描述与需求分析\"><a class=\"header-anchor\" href=\"#问题描述与需求分析\">☆</a>问题描述与需求分析</h3>\n<h4 id=\"问题描述\"><a class=\"header-anchor\" href=\"#问题描述\">☆</a>问题描述</h4>\n<p>程序开始运行时显示一个迷宫地图，迷宫中央有一只老鼠，迷宫的右下方有一个粮仓。游戏的任务是使用键盘上的方向键操纵老鼠在规定的时间内走到粮仓处。<br>\n要求：</p>\n<ol>\n<li>老鼠形象可辨认，可用键盘操纵老鼠上下左右移动；</li>\n<li>迷宫的墙足够结实，老鼠不能穿墙而过；</li>\n<li>正确检测结果，若老鼠在规定时间内走到粮仓处，提示成功，否则提示失败；</li>\n<li>添加编辑迷宫功能，可修改当前迷宫，修改内容：墙变路、路变墙；</li>\n<li>找出走出迷宫的所有路径，以及最短路径。</li>\n<li>利用序列化功能实现迷宫地图文件的存盘和读出等功能</li>\n</ol>\n<h4 id=\"功能需求分析\"><a class=\"header-anchor\" href=\"#功能需求分析\">☆</a>功能需求分析</h4>\n<ol>\n<li>迷宫地图的构建</li>\n<li>键盘输入值的获取及实现对应的功能</li>\n<li>结果的检测，初始位置的实现</li>\n<li>文件的读取与保存，读取存档，修改存档</li>\n<li>倒计时的实现</li>\n</ol>\n<h3 id=\"概要设计\"><a class=\"header-anchor\" href=\"#概要设计\">☆</a>概要设计</h3>\n<h4 id=\"总体设计思路\"><a class=\"header-anchor\" href=\"#总体设计思路\">☆</a>总体设计思路</h4>\n<p>通过菜单调用不同的函数组合实现不同的功能，将各个功能需求单独以一个函数实现，在实现复杂功能时，使用不同的函数进行组合，通过合理的调用实现所有的功能。<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB01.png\" alt=\"整体流程图\"></p>\n<h4 id=\"模块简介\"><a class=\"header-anchor\" href=\"#模块简介\">☆</a>模块简介</h4>\n<p>本程序主要分为3个功能模块，一个执行模块，还有几个服务支持模块。</p>\n<h5 id=\"主要功能模块为：\"><a class=\"header-anchor\" href=\"#主要功能模块为：\">☆</a>主要功能模块为：</h5>\n<p>1、\t随机地图生成<br>\n2、\t存档地图的修改<br>\n3、\t存档地图的编辑</p>\n<h5 id=\"执行模块为：\"><a class=\"header-anchor\" href=\"#执行模块为：\">☆</a>执行模块为：</h5>\n<p>游戏的运行   地图的打印</p>\n<h5 id=\"服务支持模块为：\"><a class=\"header-anchor\" href=\"#服务支持模块为：\">☆</a>服务支持模块为：</h5>\n<p>1、\t文件的读取与保存<br>\n2、\t设备输入值的获取（接收按键）<br>\n3、\t坐标的移动（老鼠的移动）<br>\n4、\t光标输入符的隐藏<br>\n5、\t倒计时的实现<br>\n6、\t地图编辑模块<br>\n7、\t随机数生成模块与地图初始化模块</p>\n<h3 id=\"详细设计\"><a class=\"header-anchor\" href=\"#详细设计\">☆</a>详细设计</h3>\n<h4 id=\"数据结构设计\"><a class=\"header-anchor\" href=\"#数据结构设计\">☆</a>数据结构设计</h4>\n<p>迷宫地图的存储使用二维数组实现，在数组中使用1表示迷宫的墙，使用0表示道路；文件信息的存取，使用结构体实现，其他常用的全局量，使用#define进行数据类型定义。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int map[Height + 2][Width + 2];   //存储地图数据</span><br><span class=\"line\">\tstruct _finddata_t fileinfo;      //存储文件信息</span><br></pre></td></tr></table></figure>\n<h4 id=\"算法分析与实现\"><a class=\"header-anchor\" href=\"#算法分析与实现\">☆</a>算法分析与实现</h4>\n<p>程序主要函数如下：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t\t/*执行模块函数*/</span><br><span class=\"line\">void paint(int x, int y);  //画迷宫</span><br><span class=\"line\">void paint2();</span><br><span class=\"line\">void start();\t\t\t   //游戏开始</span><br><span class=\"line\">int edit_map_read();       //修改地图读取存档</span><br><span class=\"line\"></span><br><span class=\"line\">/*服务支持模块类函数*/</span><br><span class=\"line\">int countdown();           //倒计时</span><br><span class=\"line\">void gotoxy(int x, int y); //移动坐标</span><br><span class=\"line\">void hidden();\t\t\t   //光标隐藏</span><br><span class=\"line\">int file_list_reading();   //文件列表读取</span><br><span class=\"line\">void create(int x, int y); //随机数组生成</span><br><span class=\"line\">void map_Initialization(); //地图初始化</span><br><span class=\"line\">int file_write();          /*文件读写*/</span><br><span class=\"line\">int file_read();</span><br><span class=\"line\">int get_key();             //接收按键</span><br><span class=\"line\">void game();               //游戏运行</span><br><span class=\"line\">void edit_map();           //地图编辑</span><br><span class=\"line\">int edit_map_read();       //修改地图读取存档</span><br><span class=\"line\"></span><br><span class=\"line\">/*功能模块类函数，菜单直接调用，多为函数组合*/</span><br><span class=\"line\">void Random_map_generation();  //随机地图</span><br><span class=\"line\">void Read_archive_map();\t   //读取存档</span><br><span class=\"line\">void Map_editing();            //地图编辑</span><br></pre></td></tr></table></figure>\n<h4 id=\"主要功能函数实现流程图：\"><a class=\"header-anchor\" href=\"#主要功能函数实现流程图：\">☆</a>主要功能函数实现流程图：</h4>\n<p>void create(int x, int y);函数作用：生成随机数组</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB02.png\" alt=\" \"></p>\n<p>void map_Initialization();函数作用：通过调用create(int x, int y)生成的随机数组，初始化地图，并存储在map数组中</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB03.png\" alt=\" \"></p>\n<p>void paint(int x, int y);  void paint2();函数作用：打印地图</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB04.png\" alt=\" \"></p>\n<p>int file_read();函数功能：读取存档。类似函数：void Read_archive_map();</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB05.png\" alt=\" \"></p>\n<p>int file_write();函数功能：写入存档，保存地图。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB06.png\" alt=\" \"></p>\n<p>void edit_map();  函数功能：编辑地图。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB07.png\" alt=\" \"></p>\n<p>void game();   函数功能：游戏执行。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB08.png\" alt=\" \"></p>\n<p>int file_list_reading();函数功能：读取文件列表，显示在屏幕上。</p>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB09.png\" alt=\" \"></p>\n<h3 id=\"运行结果和调试分析\"><a class=\"header-anchor\" href=\"#运行结果和调试分析\">☆</a>运行结果和调试分析</h3>\n<p>程序主界面：<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB10.png\" alt=\" \"><br>\n生成随机地图并保存<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB11.png\" alt=\" \"><br>\n游戏运行地图：<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB12.png\" alt=\" \"><br>\n存档地图读取<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB13.png\" alt=\" \"><br>\n修改存档地图：<br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB14.png\" alt=\" \"></p>\n<h3 id=\"总结体会\"><a class=\"header-anchor\" href=\"#总结体会\">☆</a>总结体会</h3>\n<p>  本次课程设计，巩固和加深了对数据结构的理解，提高综合运用本课程所学知识的能力；培养了我上网查找资料，查阅手册及文献资料的能力；培养独立思考，深入研究，分析问题、解决问题的能力。<br>\n  通过实际编译系统的分析设计、编程调试，在文件的存档读取时遇到了严重的问题，查阅了各种资料，大概在一天后解决问题。</p>\n<p>根据我在实习中遇到得问题，我将在以后的学习过程中注意以下几点：<br>\n1、认真上好专业实验课，多在实践中锻炼自己。<br>\n2、写程序的过程中要考虑周到，严密。<br>\n3、在做设计的时候要有信心，有耐心，切勿浮躁。<br>\n4、认真的学习课本知识，掌握课本中的知识点，并在此基础上学会灵活运用。<br>\n5、在课余时间里多写程序，熟练掌握在调试程序的过程中所遇到的常见错误，以便能节省调试程序的时间。</p>\n<h3 id=\"参考文献\"><a class=\"header-anchor\" href=\"#参考文献\">☆</a>参考文献</h3>\n<p><a href=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB01.png\" target=\"_blank\" rel=\"noopener\">1</a>严蔚敏，吴伟民编著．《数据结构》（C语言版）．清华大学出版社。<br>\n<a href=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB02.png\" target=\"_blank\" rel=\"noopener\">2</a> <a href=\"http://blog.csdn.net/cflys/article/details/45895737\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/cflys/article/details/45895737</a><br>\n<a href=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB03.png\" target=\"_blank\" rel=\"noopener\">3</a> <a href=\"http://blog.csdn.net/cflys/article/details/45895737\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/cflys/article/details/45895737</a><br>\n<a href=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB04.png\" target=\"_blank\" rel=\"noopener\">4</a> <a href=\"http://blog.csdn.net/AllenLee1993/article/details/44814919\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/AllenLee1993/article/details/44814919</a><br>\n<a href=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB05.png\" target=\"_blank\" rel=\"noopener\">5</a> <a href=\"http://blog.csdn.net/hanhailong18/article/details/16907295\" target=\"_blank\" rel=\"noopener\">http://blog.csdn.net/hanhailong18/article/details/16907295</a><br>\n<a href=\"https://data.singlelovely.cn/xsj/2018/3/25/%E8%B5%B0%E8%BF%B7%E5%AE%AB06.png\" target=\"_blank\" rel=\"noopener\">6</a> <a href=\"http://codebus.easyx.cn/krissi/post/maze-game\" target=\"_blank\" rel=\"noopener\">http://codebus.easyx.cn/krissi/post/maze-game</a></p>\n<h3 id=\"附\"><a class=\"header-anchor\" href=\"#附\">☆</a>附</h3>\n<p>点击：<a href=\"https://data.singlelovely.cn/%E8%BF%B7%E5%AE%AB-%E6%9C%80%E7%BB%88%E7%89%88.rar\" target=\"_blank\" rel=\"noopener\">下载源码</a></p>\n"},{"title":"闲语","abbrlink":"72dd6893","password":313699168,"date":"2018-01-12T16:00:00.000Z","copyright":null,"notshow":true,"description":"如果你偶然发现了这个帖子，欢迎找我询问密码，加密是页面前端验证的，破解是很容易的哦","_content":"\n{% meting \"1803215799\" \"xiami\" \"song\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n如果你偶然发现了这个帖子，欢迎找我询问密码\n加密是页面前端验证的，破解是很容易的哦\n\n．．↖．．↖．．↑．．↗．．↗．．↖．．↖．．↑．．↗．．↗．．\n．　　　．　　／█＼　　　　　　　　　　　　／█＼．　　．\n　．　　　　／｜█｜＼　　灌水太多了吗　　／｜█｜＼．　．　．\n．　．　．／｜｜█｜｜＼　　　盖座桥　　／｜｜█｜｜＼　　．\n　．　．／｜｜｜█｜｜｜＼　方便些　　／｜｜｜█｜｜｜＼．　．\n．　．／｜｜｜｜█｜｜｜｜＼　　　　／｜｜｜｜█｜｜｜｜＼　　．\n████████████████████████████████████████████\n　█　　　　　　　　　　　　　█　　　　　　　　　　　　　　　█\n\n\n也曾鲜衣怒马少年时，一日看尽长安花。\n\n有人为你做点什么并不是他图你什么，仅仅是因为他愿意。\n\n\n我纯情过，遍体鳞伤，才觉得一无是处。\n也看开过，不断去爱，到头来一无所得。\n\n相信刚毕业那一段时间对于大多人都是不尽人意的，不满意的工作和不够稳定生活环境，天各一方又看不清未来的恋人，毕业多年，当年的那些人终究被生活推着向前，至于好坏，每每问起不过是一句还行。\n轰轰烈烈是电影主角身上的桥段，海枯石烂不过是年轻的心对于爱情的一种期待；平平淡淡、琐琐碎碎才是生活和爱情的本质所在\n\n欲做诸佛龙象,先做众生牛马\n\n当他们来抓犹太人时，我保持沉默，因为我不是犹太人；\n当他们来抓天主教徒时，我保持沉默，因为我不是天主教徒；\n当他们来抓我时，已无人替我说话了。\n  \n我深深地理解，耗费了多少时间，战胜了多少困难，你才取得眼前的成绩。请你相信，在你追求、拼搏和奋斗的过程中，我将永远面带微笑地站在你的身旁。\n\n\n\n1、你好，能不能借一生说话。\n\n2、承蒙你出现，够我欢喜好几年。\n\n3、第一次见到你，我就知道我栽了。\n\n4、白茶清欢无别事，我在等风也等你。\n\n5、海底月是天上月，眼前人是心上人。\n\n6、遇见你的那天，我就没想过要分开。\n\n7、山有木兮卿有意，昨夜星辰恰似你。\n\n8、你是无意穿堂风，偏偏孤倨因山洪。\n\n9、为你遇见你，竟花光了我所有的运气。\n\n10、好像突然有了铠甲，也突然有了软肋。\n\n11、你不用分清东南西北，只需要走向有我的方向。\n\n12、说不清为什么爱你，但你就是我不爱别人的理由。\n\n13、简约不是少，而是没有多余，足够也不是多，而是刚好你在。\n\n14、听到一些事，明明不相干的，也会在心中拐好几个弯想到你。\n\n15、我能对你做的最好的事，就是让你知道，世界虽然坏，你却被爱着。\n\n16、草在结它的种子，风在摇它的叶子。我们站着，不说话，就十分美好。\n\n17、我一点都不遗憾没有在最好的时光遇见你，因为遇见你之后最好的时光才开始。\n\n18、写尽千山落笔是你，望尽星辰美丽是你，书尽泛黄 扉页是你，千山万水归处是你，铁马是你冰河也是你。\n\n19、从小就听过冰山坚不可摧，可谁知道冰山也有想在某个人手里变成冰淇淋的一天。\n\n20、遇见你之前，我没有想过结婚，遇见你之后，结婚我没想过别人。\n\n生活每一次磨难，都是一笔金子般的财富。\n\n在最无能为力的年纪碰到了想种爱一生的姑娘\n\n喜欢的女孩最终成为了别人的女朋友    ---18.10.27","source":"_posts/闲语.md","raw":"---\ntitle: 闲语\nabbrlink: 72dd6893\npassword: 313699168\ndate: 2018-01-13 00:00:00\ncopyright:\ntags:\ncategories:\nnotshow: true\ndescription: 如果你偶然发现了这个帖子，欢迎找我询问密码，加密是页面前端验证的，破解是很容易的哦\n---\n\n{% meting \"1803215799\" \"xiami\" \"song\"  \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n如果你偶然发现了这个帖子，欢迎找我询问密码\n加密是页面前端验证的，破解是很容易的哦\n\n．．↖．．↖．．↑．．↗．．↗．．↖．．↖．．↑．．↗．．↗．．\n．　　　．　　／█＼　　　　　　　　　　　　／█＼．　　．\n　．　　　　／｜█｜＼　　灌水太多了吗　　／｜█｜＼．　．　．\n．　．　．／｜｜█｜｜＼　　　盖座桥　　／｜｜█｜｜＼　　．\n　．　．／｜｜｜█｜｜｜＼　方便些　　／｜｜｜█｜｜｜＼．　．\n．　．／｜｜｜｜█｜｜｜｜＼　　　　／｜｜｜｜█｜｜｜｜＼　　．\n████████████████████████████████████████████\n　█　　　　　　　　　　　　　█　　　　　　　　　　　　　　　█\n\n\n也曾鲜衣怒马少年时，一日看尽长安花。\n\n有人为你做点什么并不是他图你什么，仅仅是因为他愿意。\n\n\n我纯情过，遍体鳞伤，才觉得一无是处。\n也看开过，不断去爱，到头来一无所得。\n\n相信刚毕业那一段时间对于大多人都是不尽人意的，不满意的工作和不够稳定生活环境，天各一方又看不清未来的恋人，毕业多年，当年的那些人终究被生活推着向前，至于好坏，每每问起不过是一句还行。\n轰轰烈烈是电影主角身上的桥段，海枯石烂不过是年轻的心对于爱情的一种期待；平平淡淡、琐琐碎碎才是生活和爱情的本质所在\n\n欲做诸佛龙象,先做众生牛马\n\n当他们来抓犹太人时，我保持沉默，因为我不是犹太人；\n当他们来抓天主教徒时，我保持沉默，因为我不是天主教徒；\n当他们来抓我时，已无人替我说话了。\n  \n我深深地理解，耗费了多少时间，战胜了多少困难，你才取得眼前的成绩。请你相信，在你追求、拼搏和奋斗的过程中，我将永远面带微笑地站在你的身旁。\n\n\n\n1、你好，能不能借一生说话。\n\n2、承蒙你出现，够我欢喜好几年。\n\n3、第一次见到你，我就知道我栽了。\n\n4、白茶清欢无别事，我在等风也等你。\n\n5、海底月是天上月，眼前人是心上人。\n\n6、遇见你的那天，我就没想过要分开。\n\n7、山有木兮卿有意，昨夜星辰恰似你。\n\n8、你是无意穿堂风，偏偏孤倨因山洪。\n\n9、为你遇见你，竟花光了我所有的运气。\n\n10、好像突然有了铠甲，也突然有了软肋。\n\n11、你不用分清东南西北，只需要走向有我的方向。\n\n12、说不清为什么爱你，但你就是我不爱别人的理由。\n\n13、简约不是少，而是没有多余，足够也不是多，而是刚好你在。\n\n14、听到一些事，明明不相干的，也会在心中拐好几个弯想到你。\n\n15、我能对你做的最好的事，就是让你知道，世界虽然坏，你却被爱着。\n\n16、草在结它的种子，风在摇它的叶子。我们站着，不说话，就十分美好。\n\n17、我一点都不遗憾没有在最好的时光遇见你，因为遇见你之后最好的时光才开始。\n\n18、写尽千山落笔是你，望尽星辰美丽是你，书尽泛黄 扉页是你，千山万水归处是你，铁马是你冰河也是你。\n\n19、从小就听过冰山坚不可摧，可谁知道冰山也有想在某个人手里变成冰淇淋的一天。\n\n20、遇见你之前，我没有想过结婚，遇见你之后，结婚我没想过别人。\n\n生活每一次磨难，都是一笔金子般的财富。\n\n在最无能为力的年纪碰到了想种爱一生的姑娘\n\n喜欢的女孩最终成为了别人的女朋友    ---18.10.27","slug":"闲语","published":1,"updated":"2020-02-20T06:06:59.436Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td48001yfkupoaihyz77","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><script src=\"https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js\"></script>\n<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"Please enter the password to read the blog.\" />\n    <label for=\"pass\">Please enter the password to read the blog.</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\\n</div>\n<script src=\"/lib/crypto-js.js\"></script><script src=\"/lib/blog-encrypt.js\"></script><link href=\"/css/blog-encrypt.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{}},"length":1263,"excerpt":"The article has been encrypted, please enter your password to view.<br>","more":"The article has been encrypted, please enter your password to view.<br>","origin":"\n    <div id=\"aplayer-yrrnALhu\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"1803215799\" data-server=\"xiami\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div>\n<p>如果你偶然发现了这个帖子，欢迎找我询问密码<br>\n加密是页面前端验证的，破解是很容易的哦</p>\n<p>．．↖．．↖．．↑．．↗．．↗．．↖．．↖．．↑．．↗．．↗．．<br>\n．　　　．　　／█＼　　　　　　　　　　　　／█＼．　　．<br>\n　．　　　　／｜█｜＼　　灌水太多了吗　　／｜█｜＼．　．　．<br>\n．　．　．／｜｜█｜｜＼　　　盖座桥　　／｜｜█｜｜＼　　．<br>\n　．　．／｜｜｜█｜｜｜＼　方便些　　／｜｜｜█｜｜｜＼．　．<br>\n．　．／｜｜｜｜█｜｜｜｜＼　　　　／｜｜｜｜█｜｜｜｜＼　　．<br>\n████████████████████████████████████████████<br>\n　█　　　　　　　　　　　　　█　　　　　　　　　　　　　　　█</p>\n<p>也曾鲜衣怒马少年时，一日看尽长安花。</p>\n<p>有人为你做点什么并不是他图你什么，仅仅是因为他愿意。</p>\n<p>我纯情过，遍体鳞伤，才觉得一无是处。<br>\n也看开过，不断去爱，到头来一无所得。</p>\n<p>相信刚毕业那一段时间对于大多人都是不尽人意的，不满意的工作和不够稳定生活环境，天各一方又看不清未来的恋人，毕业多年，当年的那些人终究被生活推着向前，至于好坏，每每问起不过是一句还行。<br>\n轰轰烈烈是电影主角身上的桥段，海枯石烂不过是年轻的心对于爱情的一种期待；平平淡淡、琐琐碎碎才是生活和爱情的本质所在</p>\n<p>欲做诸佛龙象,先做众生牛马</p>\n<p>当他们来抓犹太人时，我保持沉默，因为我不是犹太人；<br>\n当他们来抓天主教徒时，我保持沉默，因为我不是天主教徒；<br>\n当他们来抓我时，已无人替我说话了。</p>\n<p>我深深地理解，耗费了多少时间，战胜了多少困难，你才取得眼前的成绩。请你相信，在你追求、拼搏和奋斗的过程中，我将永远面带微笑地站在你的身旁。</p>\n<p>1、你好，能不能借一生说话。</p>\n<p>2、承蒙你出现，够我欢喜好几年。</p>\n<p>3、第一次见到你，我就知道我栽了。</p>\n<p>4、白茶清欢无别事，我在等风也等你。</p>\n<p>5、海底月是天上月，眼前人是心上人。</p>\n<p>6、遇见你的那天，我就没想过要分开。</p>\n<p>7、山有木兮卿有意，昨夜星辰恰似你。</p>\n<p>8、你是无意穿堂风，偏偏孤倨因山洪。</p>\n<p>9、为你遇见你，竟花光了我所有的运气。</p>\n<p>10、好像突然有了铠甲，也突然有了软肋。</p>\n<p>11、你不用分清东南西北，只需要走向有我的方向。</p>\n<p>12、说不清为什么爱你，但你就是我不爱别人的理由。</p>\n<p>13、简约不是少，而是没有多余，足够也不是多，而是刚好你在。</p>\n<p>14、听到一些事，明明不相干的，也会在心中拐好几个弯想到你。</p>\n<p>15、我能对你做的最好的事，就是让你知道，世界虽然坏，你却被爱着。</p>\n<p>16、草在结它的种子，风在摇它的叶子。我们站着，不说话，就十分美好。</p>\n<p>17、我一点都不遗憾没有在最好的时光遇见你，因为遇见你之后最好的时光才开始。</p>\n<p>18、写尽千山落笔是你，望尽星辰美丽是你，书尽泛黄 扉页是你，千山万水归处是你，铁马是你冰河也是你。</p>\n<p>19、从小就听过冰山坚不可摧，可谁知道冰山也有想在某个人手里变成冰淇淋的一天。</p>\n<p>20、遇见你之前，我没有想过结婚，遇见你之后，结婚我没想过别人。</p>\n<p>生活每一次磨难，都是一笔金子般的财富。</p>\n<p>在最无能为力的年纪碰到了想种爱一生的姑娘</p>\n<p>喜欢的女孩最终成为了别人的女朋友    —18.10.27</p>\n","encrypt":true,"abstract":"The article has been encrypted, please enter your password to view.<br>","template":"<script src=\"https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js\"></script>\n<div id=\"hbe-security\">\n  <div class=\"hbe-input-container\">\n  <input type=\"password\" class=\"hbe-form-control\" id=\"pass\" placeholder=\"Please enter the password to read the blog.\" />\n    <label for=\"pass\">Please enter the password to read the blog.</label>\n    <div class=\"bottom-line\"></div>\n  </div>\n</div>\n<div id=\"decryptionError\" style=\"display: none;\">Incorrect Password!</div>\n<div id=\"noContentError\" style=\"display: none;\">No content to display!</div>\n<div id=\"encrypt-blog\" style=\"display:none\">\\n</div>\n","message":"Please enter the password to read the blog.","decryptionError":"Incorrect Password!","noContentError":"No content to display!"},{"title":"防火墙控制不同网段通信并访问外网（实验）","copyright":true,"abbrlink":"12acf01b","date":"2018-04-01T15:41:15.000Z","password":null,"_content":"\n### 实验目标\n\n+ 利用防火墙控制不同网端间的互连，并控制内网设备访问外网\n+ 1.0网段可以访问2.0网段但是不可以访问3.0网段\n+ 1.0 2.0  3.0网段都可以访问外网设备\n+ 访问外网用EASY IP 方式\n\n### 实验工具\n\neNSP模拟器（510版）\n\n### 网络拓扑图\n![拓扑图][1]\n\n### 主要配置\n#### R1\n![R1][2]\n#### R2\n![R2  1][3]\n![R2  2][4]\n#### R3\n![R3  1][5]\n![R3  2][6]\n#### LW1\n![FW1][7]\n![FW2][8]\n![FW3][9]\n![FW4][10]\n\n### 效果测试\n![pc1][11]\n![pc2][12]\n![pc3][13]\n\n### 配置脚本下载\n点击下载脚本：[点我下载][14]\n\n\n  [1]:https://data.singlelovely.cn/xsj/2018/4/1/%E9%98%B2%E7%81%AB%E5%A2%99%E6%8B%93%E6%89%91%E5%9B%BE.png\n  [2]: https://data.singlelovely.cn/xsj/2018/4/1/R1.png\n  [3]: https://data.singlelovely.cn/xsj/2018/4/1/R2%20%201.png\n  [4]: https://data.singlelovely.cn/xsj/2018/4/1/R2%20%202.png\n  [5]: https://data.singlelovely.cn/xsj/2018/4/1/R3%20%201.png\n  [6]: https://data.singlelovely.cn/xsj/2018/4/1/R3%20%202.png\n  [7]: https://data.singlelovely.cn/xsj/2018/4/1/FW1.png\n  [8]: https://data.singlelovely.cn/xsj/2018/4/2/FW2.png\n  [9]: https://data.singlelovely.cn/xsj/2018/4/2/FW3.png\n  [10]: https://data.singlelovely.cn/xsj/2018/4/2/FW4.png\n  [11]: https://data.singlelovely.cn/xsj/2018/4/2/pc1.png\n  [12]: https://data.singlelovely.cn/xsj/2018/4/2/pc2.png\n  [13]: https://data.singlelovely.cn/xsj/2018/4/2/pc3.png\n  [14]: https://data.singlelovely.cn/%E9%98%B2%E7%81%AB%E5%A2%9901ensp.rar","source":"_posts/防火墙控制不同网段通信并访问外网.md","raw":"---\ntitle: 防火墙控制不同网段通信并访问外网（实验）\ntags:\n  - 数据通信\n  - eNSP\n  - ICT\ncategories: 网络\ncopyright: true\nabbrlink: 12acf01b\ndate: 2018-04-01 23:41:15\npassword:\n---\n\n### 实验目标\n\n+ 利用防火墙控制不同网端间的互连，并控制内网设备访问外网\n+ 1.0网段可以访问2.0网段但是不可以访问3.0网段\n+ 1.0 2.0  3.0网段都可以访问外网设备\n+ 访问外网用EASY IP 方式\n\n### 实验工具\n\neNSP模拟器（510版）\n\n### 网络拓扑图\n![拓扑图][1]\n\n### 主要配置\n#### R1\n![R1][2]\n#### R2\n![R2  1][3]\n![R2  2][4]\n#### R3\n![R3  1][5]\n![R3  2][6]\n#### LW1\n![FW1][7]\n![FW2][8]\n![FW3][9]\n![FW4][10]\n\n### 效果测试\n![pc1][11]\n![pc2][12]\n![pc3][13]\n\n### 配置脚本下载\n点击下载脚本：[点我下载][14]\n\n\n  [1]:https://data.singlelovely.cn/xsj/2018/4/1/%E9%98%B2%E7%81%AB%E5%A2%99%E6%8B%93%E6%89%91%E5%9B%BE.png\n  [2]: https://data.singlelovely.cn/xsj/2018/4/1/R1.png\n  [3]: https://data.singlelovely.cn/xsj/2018/4/1/R2%20%201.png\n  [4]: https://data.singlelovely.cn/xsj/2018/4/1/R2%20%202.png\n  [5]: https://data.singlelovely.cn/xsj/2018/4/1/R3%20%201.png\n  [6]: https://data.singlelovely.cn/xsj/2018/4/1/R3%20%202.png\n  [7]: https://data.singlelovely.cn/xsj/2018/4/1/FW1.png\n  [8]: https://data.singlelovely.cn/xsj/2018/4/2/FW2.png\n  [9]: https://data.singlelovely.cn/xsj/2018/4/2/FW3.png\n  [10]: https://data.singlelovely.cn/xsj/2018/4/2/FW4.png\n  [11]: https://data.singlelovely.cn/xsj/2018/4/2/pc1.png\n  [12]: https://data.singlelovely.cn/xsj/2018/4/2/pc2.png\n  [13]: https://data.singlelovely.cn/xsj/2018/4/2/pc3.png\n  [14]: https://data.singlelovely.cn/%E9%98%B2%E7%81%AB%E5%A2%9901ensp.rar","slug":"防火墙控制不同网段通信并访问外网","published":1,"updated":"2020-02-20T06:06:59.437Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckec2td49001zfkuphakfcicj","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h3 id=\"实验目标\"><a class=\"header-anchor\" href=\"#实验目标\">☆</a>实验目标</h3>\n<ul>\n<li>利用防火墙控制不同网端间的互连，并控制内网设备访问外网</li>\n<li>1.0网段可以访问2.0网段但是不可以访问3.0网段</li>\n<li>1.0 2.0  3.0网段都可以访问外网设备</li>\n<li>访问外网用EASY IP 方式</li>\n</ul>\n<h3 id=\"实验工具\"><a class=\"header-anchor\" href=\"#实验工具\">☆</a>实验工具</h3>\n<p>eNSP模拟器（510版）</p>\n<h3 id=\"网络拓扑图\"><a class=\"header-anchor\" href=\"#网络拓扑图\">☆</a>网络拓扑图</h3>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/1/%E9%98%B2%E7%81%AB%E5%A2%99%E6%8B%93%E6%89%91%E5%9B%BE.png\" alt=\"拓扑图\"></p>\n<h3 id=\"主要配置\"><a class=\"header-anchor\" href=\"#主要配置\">☆</a>主要配置</h3>\n<h4 id=\"r1\"><a class=\"header-anchor\" href=\"#r1\">☆</a>R1</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/1/R1.png\" alt=\"R1\"></p>\n<h4 id=\"r2\"><a class=\"header-anchor\" href=\"#r2\">☆</a>R2</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/1/R2%20%201.png\" alt=\"R2  1\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/1/R2%20%202.png\" alt=\"R2  2\"></p>\n<h4 id=\"r3\"><a class=\"header-anchor\" href=\"#r3\">☆</a>R3</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/1/R3%20%201.png\" alt=\"R3  1\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/1/R3%20%202.png\" alt=\"R3  2\"></p>\n<h4 id=\"lw1\"><a class=\"header-anchor\" href=\"#lw1\">☆</a>LW1</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/1/FW1.png\" alt=\"FW1\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/2/FW2.png\" alt=\"FW2\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/2/FW3.png\" alt=\"FW3\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/2/FW4.png\" alt=\"FW4\"></p>\n<h3 id=\"效果测试\"><a class=\"header-anchor\" href=\"#效果测试\">☆</a>效果测试</h3>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/2/pc1.png\" alt=\"pc1\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/2/pc2.png\" alt=\"pc2\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/2/pc3.png\" alt=\"pc3\"></p>\n<h3 id=\"配置脚本下载\"><a class=\"header-anchor\" href=\"#配置脚本下载\">☆</a>配置脚本下载</h3>\n<p>点击下载脚本：<a href=\"https://data.singlelovely.cn/%E9%98%B2%E7%81%AB%E5%A2%9901ensp.rar\" target=\"_blank\" rel=\"noopener\">点我下载</a></p>\n","site":{"data":{}},"length":161,"excerpt":"","more":"<h3 id=\"实验目标\"><a class=\"header-anchor\" href=\"#实验目标\">☆</a>实验目标</h3>\n<ul>\n<li>利用防火墙控制不同网端间的互连，并控制内网设备访问外网</li>\n<li>1.0网段可以访问2.0网段但是不可以访问3.0网段</li>\n<li>1.0 2.0  3.0网段都可以访问外网设备</li>\n<li>访问外网用EASY IP 方式</li>\n</ul>\n<h3 id=\"实验工具\"><a class=\"header-anchor\" href=\"#实验工具\">☆</a>实验工具</h3>\n<p>eNSP模拟器（510版）</p>\n<h3 id=\"网络拓扑图\"><a class=\"header-anchor\" href=\"#网络拓扑图\">☆</a>网络拓扑图</h3>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/1/%E9%98%B2%E7%81%AB%E5%A2%99%E6%8B%93%E6%89%91%E5%9B%BE.png\" alt=\"拓扑图\"></p>\n<h3 id=\"主要配置\"><a class=\"header-anchor\" href=\"#主要配置\">☆</a>主要配置</h3>\n<h4 id=\"r1\"><a class=\"header-anchor\" href=\"#r1\">☆</a>R1</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/1/R1.png\" alt=\"R1\"></p>\n<h4 id=\"r2\"><a class=\"header-anchor\" href=\"#r2\">☆</a>R2</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/1/R2%20%201.png\" alt=\"R2  1\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/1/R2%20%202.png\" alt=\"R2  2\"></p>\n<h4 id=\"r3\"><a class=\"header-anchor\" href=\"#r3\">☆</a>R3</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/1/R3%20%201.png\" alt=\"R3  1\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/1/R3%20%202.png\" alt=\"R3  2\"></p>\n<h4 id=\"lw1\"><a class=\"header-anchor\" href=\"#lw1\">☆</a>LW1</h4>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/1/FW1.png\" alt=\"FW1\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/2/FW2.png\" alt=\"FW2\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/2/FW3.png\" alt=\"FW3\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/2/FW4.png\" alt=\"FW4\"></p>\n<h3 id=\"效果测试\"><a class=\"header-anchor\" href=\"#效果测试\">☆</a>效果测试</h3>\n<p><img src=\"https://data.singlelovely.cn/xsj/2018/4/2/pc1.png\" alt=\"pc1\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/2/pc2.png\" alt=\"pc2\"><br>\n<img src=\"https://data.singlelovely.cn/xsj/2018/4/2/pc3.png\" alt=\"pc3\"></p>\n<h3 id=\"配置脚本下载\"><a class=\"header-anchor\" href=\"#配置脚本下载\">☆</a>配置脚本下载</h3>\n<p>点击下载脚本：<a href=\"https://data.singlelovely.cn/%E9%98%B2%E7%81%AB%E5%A2%9901ensp.rar\" target=\"_blank\" rel=\"noopener\">点我下载</a></p>\n"},{"title":"面试知识点","copyright":true,"abbrlink":"ed6658a4","notshow":false,"description":"人,生而有崖,学而无涯","image":["https://data.singlelovely.cn/CoverPicture/ed6658a4.svg!CoverPicture"],"date":"2020-03-27T06:08:00.000Z","password":null,"photos":[],"sticky":null,"_content":"\n## 操作系统\n\n### 基础\n\n- ★★★ 进程与线程的本质区别、以及各自的使用场景\n\n1. 进程是资源分配的基本单位，线程是调度的基本单位。\n2. 同一进程的线程，对共享，栈私有，共享地址空间。\n3. 线程间可以直接通信，进程间需要经过IPC。\n4. 多进程：编程容易，不用考虑锁和同步资源问题，容错性强，数据隔离\n5. 多线程：创建快，数据共享，切换快，非均质服务\n\n- ★★★ 进程调度算法的特点以及使用场景\n\n1. FCFS（先来先服务）：有利于长作业，不利于短作业，非抢占\n2. SJF（短作业优先）：估计最短运行时间调度，长作业可能会被饿死，非抢占\n3. SRTN（最短剩余时间优先）：最短作业优先的抢占式，按剩余运行时间调度\n\n- ★★★ 进程通信方法的特点以及使用场景★\n\n1. 管道（无名管道）：半双工，父子、兄弟进程间使用，pipe()\n2. FIFO（命名管道、有名管道）：客户服务器间应用，fifo()\n3. 消息队列：独立于读写进程、避免了同步阻塞、有选择性接受\n4. 信号量：控制多进程访问共享数据\n5. 共享存储：速度最快\n6. 套接字：不同机器间进程通信\n\n- ★★★ 死锁问题\n\n原因：系统资源不足、进程运行推进的顺序不合适、资源分配不当等\n\n1. 必要条件：互斥、请求保持、不可抢占、环路等待\n2. 检测：- 每种类型一个资源：对访问过的节点进行标记 - 每种类型多个资源：资源总量进行计算\n3. 解决：剥夺资源、撤销进程、利用抢占、回滚、杀死进程恢复\n4. 预防：破坏四个必要条件\n5. 避免：安全状态检测、银行家算法\n\n数据库中解决死锁：\n\n1. 按同一顺序访问对象。\n2. 避免事务中的用户交互。\n3. 保持事务简短并在一个批处理中。\n4. 使用低隔离级别。\n5. 使用绑定连接。\n6. 用存储过程查出引起死锁的进程和SQL语句。\n\n- ★★★ 虚拟内存的作用，分页系统实现虚拟内存原理\n\n1. 让物理内存扩充成更大的逻辑内存，从而让程序获得更多的可用内存\n2. 分页地址映射、内存管理单元（MMU）\n3. 虚拟地址：页面号、偏移量\n\n- ★★★ 页面置换算法的原理\n\n1. 最近最久未使用（LRU）非常重要\n2. 最近未使用（NRU）：使用链表实现，在Redis上作为缓存置换算法\n3. 先进先出（FIFO）\n4. 第二次机会：读写时R = 1，替换时R若为1，则改为0放在尾端，不换出\n5. 时钟\n\n- ★★★ 比较分页与分段的区别\n\n1. 分页透明、分段需要程序员划分\n2. 分页为一维地址空间、分段为二维\n3. 页大小不变、段大小可变\n4. 分页：虚拟内存，分段：程序和数据在逻辑上独立、有利于共享和保护\n\n- ★★★ 分析静态链接的不足，以及动态链接的特点★\n\n1. 不足：静态库更新时那么整个程序都要重新进行链接，对于 printf 这种标准函数库，如果每个程序都要有代码，这会极大浪费资源\n2. 动态：给定的文件系统中一个库只有一个文件，一个副本可以被不同的正在运行的进程共享\n\n- ★★☆ 常见进程同步问题★\n\n1. 哲学家进餐\n2. 读者-写者\n\n- ★★☆ 协程的作用\n\n1. 协程是单进程单线程的超越函数的调度机制，它通过一定的调度手段进行调度\n2. 可重入能力，类似与函数\n3. 用来控制过程输出状态的那些输入状态的管理工作\n\n- 协程的优势，协程的轻量性体现在哪里？\n    - 用户自己控制切换时机，不需要陷入内核态\n    - 没有线程切换的开销\n    - 不需要多线程锁机制，只要一个线程\n\n- 线程与堆栈的关系\n  - 栈是线程私有的（局部变量、操作数、动态链接）\n  - 堆是线程共享的（对象的实例和数组）\n  - 方法区也是线程共享的\n\n\n- ★☆☆ 进程状态\n    - 就绪：经调度算法可以转为运行\n    - 运行：cpu时间片用完后转为就绪\n    - 阻塞：缺少资源\n\n- ★☆☆ 线程实现的方式（Java），优劣\n\n    - 继承Thread类，并重写其run()方法\n    - 实现Runnable接口，并实现其run()方法\n    - 实现Callable接口，并实现其call()方法\n    - 实现接口会更好一些：Java 不支持多重继承，因此继承了 Thread 类就无法继承其它类，但是可以实现多个接口\n\n### Linux\n\n- ★★★ 硬链接与软链接的区别\n\n1. 硬链接：文件1 和 文件2 直接指向内存 `ln file1 file2`\n2. 软链接：指向另外一个文件 `ln -s file1 file2`\n\n- ★★★ 僵尸进程与孤儿进程的区别，从 SIGCHLD 分析产生僵尸进程的原因\n\n1. 僵尸进程：子进程退出后，父进程未调用wait()waitpid()，进程描述符未释放\n2. 孤儿进程：父进程退出，子进程运行，会被init进程收养，没有危害\n3. 杀死僵尸进程的父进程，僵尸进程变为孤儿进程\n\n- ★★☆ 文件系统的原理，特别是 inode 和 block。数据恢复原理\n\n1. inode：一个文件占用一个 inode，记录文件的属性，同时记录此文件的内容所在的 block 编号；\n2. block：记录文件的内容，文件太大时，会占用多个 block\n3. superblock：记录文件系统的整体信息，包括 inode 和 block 的总量、使用量、剩余量，以及文件系统的格式与相关信息等\n4. block bitmap：记录 block 是否被使用的位图\n\n- Linux启动时调用那些文件★\n\n1. 开启电源 --> BIOS开机自检 --> 引导程序lilo或grub --> 内核的引导（kernel boot）--> 执行init（rc.sysinit、rc）--> mingetty(建立终端) --> shell\n2. /etc/profile --> ~/.bash_profile --> ~/.bash_login --> ~/.profile\n\n- 什么是linux的daemon进程？和一般进程有什么区别？\n\n    - 守护进程，随系统启动和关闭，不与客户端交互，独立于终端。\n    - 使用ps axj命令查看进程时，其终端名(TTY)显示为？，ID显示为-1\n\n- 通过free命令查看内存时，看到的buffer和cache各表示什么含义？\n\n    - 使用内存、剩余内存\n    - Cache：缓存区，是高速缓存，是文件系统的cache\n    - Buffer：缓冲区，传输数据，是块设备的读写缓冲区\n\n- apache和nginx这两个web服务器有哪些区别？\n\n    - apache 是同步多进程模型，一个连接对应一个进程，而 nginx 是异步的，多个连接（万级别）可以对应一个进程\n    - nginx轻量级，处理静态文件好，\n    - apache 稳定，处理动态请求有优势\n\n## 网络\n\n### 基础\n\n- ★★★ **各层的作用，TCP/IP 协议的特点**\n\n1. 应用层 ：为特定应用程序提供数据传输服务，例如 HTTP、DNS 等协议。数据单位为报文。\n2. 传输层 ：为进程提供通用数据传输服务。由于应用层协议很多，定义通用的传输层协议就可以支持不断增多的应用层协议。运输层包括两种协议：传输控制协议 TCP，提供面向连接、可靠的数据传输服务，数据单位为报文段；用户数据报协议 UDP，提供无连接、尽最大努力的数据传输服务，数据单位为用户数据报。TCP 主要提供完整性服务，UDP 主要提供及时性服务。\n3. 网络层 ：为主机提供数据传输服务。而传输层协议是为主机中的进程提供数据传输服务。网络层把传输层传递下来的报文段或者用户数据报封装成分组。\n4. 数据链路层 ：网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，链路层协议就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。\n5. 物理层 ：考虑的是怎样在传输媒体上传输数据比特流，而不是指具体的传输媒体。物理层的作用是尽可能屏蔽传输媒体和通信手段的差异，使数据链路层感觉不到这些差异\n6. 表示层 ：数据压缩、加密以及数据描述，这使得应用程序不必关心在各台主机中数据内部格式不同的问题。\n7. 会话层 ：建立及管理会话。\n\n8. TCP/IP ： 只有四层，数据链路层和物理层合并为网络接口层\n\n- ★★★ **三次握手以及四次挥手具体过程、原因、TIME_WAIT**\n\n- ★★★ **可靠传输原理，并设计可靠 UDP 协议**\n\n1. TCP 可靠传输：超时重传\n2. 可靠 UDP 协议：应用层实现确认机制、重传机制、窗口确认机制：RUDP、RTP、UDT\n\n- ★★★ **UDP 与 TCP 比较，分析上层协议应该使用 UDP 还是 TCP**\n\n1. UDP：无连接、尽最大可能交付、一对一、多对多、多对一\n2. TCP：面向连接、可靠交付、全双工、流量拥塞控制、字节流、一对一、确认机制、重传机制、滑动窗口\n\n- ★★☆ **路由选择协议及特点**\n\n    - RIP：距离向量、15跳、固定时间交换路由表、3分钟超时\n    - OSPF：开放最短路径优先、洪泛发送信息、链路状态发生变化时发送信息\n    - BGP：比较好不是最佳，TCP，发言人制度\n\n- ★★☆ **DNS 的端口号；TCP 还是 UDP；作为缓存、负载均衡**\n\n1. 端口：53，UDP\n2. 使用TCP的情况：数据大于512字节，区域传送\n\n- ★★☆ **TCP 拥塞控制、四种方法、理解具体原理**★\n\n1. 慢开始，拥塞避免，快重传，快恢复\n2. 防止过多的数据注入到网络当中，这样可以使网络中的路由器或链路不致过载\n\n- ★★☆ **浏览器访问页面（输入网址后发生了什么）**\n\n    - DHCP配置主机信息（可略过）\n        - DHCP 请求报文，UDP，255.255.255.255:67,0.0.0.0:68\n        - DHCP 服务器: DHCP ACK 报文:IP 地址、DNS 服务器的 IP 地址、默认网关路由器的 IP 地址和子网掩码\n    - ARP 解析 MAC 地址(获取路由网关地址)\n    - DNS解析域名\n    - HTTP 请求页面\n\n- ★★☆ **集线器、交换机、路由器的作用，以及所属的层次**\n    - 集线器：物理层、比特\n    - 交换机：链路层、自学习、按mac地址存储转发\n    - 路由器：网络层、IP地址转发\n\n- ★★☆ **以太网的特点，以及帧结构**\n    - 星型结构\n    - 帧结构：目的地址、源地址、类型、IP数据报、FCS\n\n### HTTP\n\n- ★★★ GET 与 POST 比较：作用、参数、安全性、幂等性、可缓存\n    - POST 主要用来传输数据，而 GET 主要用来获取资源\n    - GET参数：ASCII码\n    - GET安全、幂等，POST不安全不幂等\n    - GET、HEAD可缓存，PUT、DELETE、POST不可缓存\n\n- ★★★ Cookie 作用、安全性问题、和 Session 的比较\n    - 保存状态信息（会话管理、行为跟踪），cookie最大4kb\n    - 作用域：默认为当前文档的主机\n    - Cookie可利用Session存在服务器端\n    - Cookie 只能存储 ASCII 码字符串，而 Session 则可以存储任何类型的数据\n\n- ★★★ 长连接与短连接原理以及使用场景，流水线\n    - 长连接：建立一个TCP多次进行HTTP通信\n    - 流水线：同一条长连接上连续发出请求\n\n- ★★★ HTTP 存在的安全性问题，以及 HTTPs 的加密、认证和完整性保护作用\n    - 明文进行通信，不验证身份，无法证明报文的完整性\n    - 使用了SSL隧道进行通信\n    - 使用非对称密钥加密方式，传输对称密钥加密方式所需要的 Secret Key\n    - 获取到 Secret Key 后，再使用对称密钥加密方式进行通信\n    - SSL 提供报文摘要功能来进行完整性保护、MD5\n\n- ★★☆ 缓存 的Cache-Control 字段、Expires 和 max-age 的区别、ETag 验证原理\n    - 缓解服务器压力，降低客户端获取资源的延迟\n    - no-store：禁止，no-cache：强制确认，private：私有，public：公共\n    - ETag ： 资源唯一标识\n\n- ★★★ HTTP/1.1 的特性\n    - 默认是长连接\n    - 支持流水线\n    - 支持同时打开多个 TCP 连接\n    - 支持虚拟主机\n    - 新增状态码 100：表示正常\n    - 支持分块传输编码\n    - 新增缓存处理指令 max-age\n\n- ★★☆ HTTP/1.x 的缺陷，以及 HTTP/2 的特点\n    - 缺陷：多个连接才能实现并发和缩短延迟、不会压缩请求和响应首部浪费流量、没有优先级支持\n    - 二进制帧分层、服务端推送、首部压缩\n\n- ★★☆ HTTP 与 FTP 的比较\n- ★☆☆ 状态码\n\n- http协议中的keeplive是做什么的？它的适应场景是什么？\n    - 让多个http请求共享一个Tcp连接，避免每个http新建tcp连接\n    - 定时发送心跳包\n\n- http请求有多少种？\n    - 8种\n    - opions：返回服务器针对特定资源所支持的HTML请求方法、get、post、put：向指定资源位置上上传其最新内容\n    - head：查看某个页面的状态、delete、trace：回显服务器收到的请求、connect\n\n- 查看linux系统中tcp连接的状态和连接数量统计\n    - `netstat -an | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'`\n\n- bash shell 里`$0.$?.$$`各表示什么含义\n    - \\$$ Shell本身的PID（ProcessID）\n    - $! Shell最后运行的后台Process的PID\n    - $? 最后运行的命令的结束代码（返回值）\n    - $# 是传给脚本的参数个数\n    - $0 是脚本本身的名字\n    - $1 是传递给该shell脚本的第一个参数\n    - $2 是传递给该shell脚本的第二个参数\n    - $@ 是传给脚本的所有参数的列表\n\n### Socket\n\n- ★★★ select、poll、epoll 的原理、比较、以及使用场景；epoll 的水平触发与边缘触发\n    - 都是多路复用的具体实现\n    - select 会修改描述符，而 poll 不会\n    - select 的描述符类型使用数组实现\n    - poll 提供了更多的事件类型，并且对描述符的重复利用上比 select 高\n    - 如果一个线程对某个描述符调用了 select 或者 poll，另一个线程关闭了该描述符，会导致调用结果不确定\n    - select 和 poll 速度都比较慢\n\n- ★★☆ 五种 IO 模型的特点以及比较\n    - 阻塞式I/O：阻塞应用，内核缓存-->应用缓存（数据复制），复制完返回\n    - 非阻塞式I/O：进程调用、返回错误码、继续执行、不断询问io（轮询），CPU利用率低\n    - I/O复用：单进程处理多IO，无进程创建切换，系统开销小\n    - 信号驱动I/O：进程使用 sigaction 系统调用，内核立即返回，进程继续执行，数据到达时内核向应用发送 SIGIO 信号，进程调用 recvfrom 复制数据，CPU利用率高\n    - 异步I/O：进程执行 aio_read 系统调用会立即返回，进程继续执行，不被阻塞，内核在操作完成后向进程发送信号\n    - 比较\n        - 同步 I/O：将数据从内核缓冲区复制到应用进程缓冲区的阶段（第二阶段），应用进程会阻塞\n        - 异步 I/O：第二阶段应用进程不会阻塞\n\n- 多路复用\n\n- Java NIO\n\n## 数据库\n\n- 数据库范式\n  - 第一范式：属性的原子性\n  - 第二范式：属性完全依赖于主键\n  - 第三范式：一个数据库表中不包含已经在其它表中包含的非主键关键字信息。\n\n\n### SQL\n\n- ★★☆ 手写 SQL 语句，特别是连接查询与分组查询\n\n- ★★☆ 连接查询与子查询的比较\n\n- ★★☆ drop、delete、truncate 比较\n    - 作用\n        - DELETE 删除表中 WHERE 语句指定的数据。\n        - TRUNCATE 清空表，相当于删除表中的所有数据。\n        - DROP 删除表结构\n    - 事务\n        - DELETE 会被放到日志中以便进行回滚；\n        - TRUNCATE 和 DROP 立即生效，不会放到日志中，也就不支持回滚。\n    - 删除空间\n        - DELETE 不会减少表和索引占用的空间；\n        - TRUNCATE 会将表和索引占用的空间恢复到初始值；\n        - DROP 会将表和索引占用的空间释放。\n    - 耗时\n        - DELETE < TRUNCATE < DROP\n\n- ★★☆ 视图的作用，以及何时能更新视图\n    - 虚拟表\n    - 简化复杂操作、保证数据安全性\n    - 更改数据格式和表示\n\n- ★☆☆ 理解存储过程、触发器等作用\n    - 存储过程可以看成是对一系列 SQL 操作的批处理\n        - 优点：封装、提高安全性，代码复用，高性能\n        - 赋值用 select into ，每次只能给一个变量赋值，不支持集合的操作\n    - 触发器会在某个表执行以下语句时而自动执行：DELETE、INSERT、UPDATE\n        - 必须指定在语句执行之前还是之后自动执行（前：BEFORE，后：AFTER）\n\n### MySQL\n\n1. MySQL主键\n    - 其值能唯一地标识表中的每一行\n\n2. 事务\n   - 用于处理操作量大，复杂度高的数据\n   - 只有InnoDB支持事务\n   - ACID\n\n## 其他\n\n- new和malloc区别\n\n1. malloc和new都是在堆上开辟内存的\n2. malloc只负责开辟内存，没有初始化功能\n3. new不但开辟内存，还可以进行初始化\n4. malloc是函数，开辟内存需要传入字节数\n5. malloc开辟内存失败返回NULL，new开辟内存失败抛出bad_alloc类型的异常\n6. malloc开辟的内存永远是通过free来释放的；而new单个元素内存，用的是delete，如果new[\\]数组，用的是delete[]来释放内存\n7. malloc开辟内存只有一种方式，而new有四种分别是普通的new（内存开辟失败抛出bad_alloc异常）, nothrow版本的new，const new以及定位new\n\n- 闭包\n    - 闭包函数：声明一个在函数中的函数\n    - 内部函数总是可以访问其所在的外部函数中声明的参数和变量，即使在其外部函数被返回（寿命终结）了之后。\n    - 特点：\n        - 外部函数访问内部变量成为可能\n        - 局部变量常驻内存\n        - 避免使用全局变量、防止全局变量污染\n        - 会造成内存泄漏\n    - 每次外部函数执行的时候，外部函数的引用地址不同，都会重新创建一个新的地址\n\n## python\n\n- 如何在Python中实现多线程？\n1. 答： Python有一个multi-threading包，但是如果你想让multi-thread加速你的代码，那么使用它通常不是一个好主意。\n\n2. Python有一个名为Global Interpreter Lock(GIL)的结构。 GIL确保只有一个“线程”可以在任何时候执行。一个线程获取GIL，做一点工作，然后将GIL传递到下一个线程。\n\n3. 这种情况很快发生，因此对于人眼看来，您的线程似乎并行执行，但它们实际上只是轮流使用相同的CPU核心。\n\n4. 所有这些GIL传递都增加了执行的开销。这意味着如果您想让代码运行得更快，那么使用线程包通常不是一个好主意。\n\n- 这是什么意思： *args，**kwargs？我们为什么要用呢？\n\n我们用`*args`当我们不确定将多少个参数传递给函数时，或者我们是否要将存储的列表或参数元组传递给函数时。`**kwargs`当我们不知道将多少关键字参数传递给函数时，或者它可以用于将字典的值作为关键字参数传递时使用。标识符args和kwargs是一个约定，你也可以使用`*bob`和`**billy`，但这不是明智之举.\n\n- 计算出从你生日之日起到今天一共过了多少天？（python、go、shell均可）\n\n- 逆序输出偶数的平方 [1,2,3,4,5,6,7,8,9]\n```python\n#列表切片\nlist[i:j]\nlist[i:j:2] #取i到j，步长为2\n#取奇数位\nlist[::2]\n#取偶数位\nlist[1::2]\n```\n## 面向对象\n\n### 思想\n1. ★★★ 面向对象三大特性\n    - 继承：父类指向子类时为向上转型\n    - 封装：减少耦合、减轻维护负担、提高可重用性、减少重构风险\n    - 多态：编译时多态与运行时多态\n        - 运行时多态：继承、覆盖（重写）、向上转型\n2. ★☆☆ 设计原则\n    - 单一责任原则SRP\n    - 开放封闭原则OCP\n    - 李氏替换原则LSP\n    - 接口分离原则ISP\n    - 依赖倒置原则DIP\n### 设计模式\n\n\n## Java\n\n### 基础\n1. 基本类型与包装类型\n    - byte/8 char/16 short/16 int/32 float/32 double/64 long/64 boolean/~\n2. 缓存池、new Integer(123) 与 Integer.valueOf(123) 的区别\n    - Integer 缓存池的大小默认为 -128~127\n3. String不可变的原因、好处\n    - final 声明、不可被继承\n    - Java8 中使用 char 存储、Java9 后使用byte数组存储\n    - 可以缓存hash值、String Pool的需要、提高安全性（参数不变）、线程安全\n    - 注意：StringBuffer可变、线程安全，StringBuilder可变、线程不安全\n4. 参数传递的方式、类型转换、switch\n    - 值传递、地址值\n    - 不能隐式向下转型、`+=` 或者 `++` 运算符会执行隐式类型转换\n    - switch 不支持 long\n5. Java类的初始化顺序\n    - 静态成员和`static块` -> 普通成员和非`static`块 -> 构造函数\n    - 父类静态 -> 子类静态 -> 父类普通 -> 父类构造 -> 子类普通 -> 子类构造\n6. `equal()` 与 `==` 的区别\n    - 对于基本类型，== 判断两个值是否相等，基本类型没有 equals() 方法\n    - 对于引用类型，== 判断两个变量是否引用同一个对象，而 equals() 判断引用的对象是否等价\n7. 在覆盖 equals() 方法时应当总是覆盖 hashCode() 方法，保证等价的两个对象哈希值也相等\n8. clone()、浅拷贝、深拷贝\n    - clone() 是 Object 的 protected 方法、需要显式重写\n    - 浅拷贝对象和原始对象的引用类型引用同一个对象\n    - 深拷贝对象和原始对象的引用类型引用不同对象\n    - clone替代：拷贝构造函数、拷贝工厂\n9. 反射的优缺点\n    - 定义：允许运行中的 Java 程序获取自身的信息，并且可以操作类或对象的内部属性\n    - 优点：可扩展性、类浏览器和可视化开发环境、调试器和测试工具\n    - 缺点：性能开销高、安全限制、内部暴露\n10. Java与c++的区别\n    - Java面向对象，c++兼容c、可以面向过程\n    - Java跨平台\n    - Java无指针、自动垃圾回收\n    - Java不支持多重继承，c++可以\n    - Java不支持操作符重载\n    - c++可以使用goto\n11. 泛形相关\n    - 允许在定义类、接口、方法时使用类型形参，在声明变量、创建对象、调用方法时再传入实际类型参数\n    - 好处：编译时检查类型安全、隐式强制转换\n    - 工作方式：通过类型擦除实现\n    - 限定通配符：<? extends T> <? super T> 非限定通配符：<?>\n\n### 容器（集合）\n\n- [HashMap 相关面试题及其解答](https://www.jianshu.com/p/75adf47958a7)\n\n\n\n","source":"_posts/面试知识点.md","raw":"---\ntitle: 面试知识点\ncopyright: true\nabbrlink: ed6658a4\nnotshow: false\ndescription: '人,生而有崖,学而无涯'\nimage:\n  - 'https://data.singlelovely.cn/CoverPicture/ed6658a4.svg!CoverPicture'\ntags:\n  - 学习\ncategories: 学习\ndate: 2020-03-27 14:08:00\npassword:\nphotos:\nsticky:\n---\n\n## 操作系统\n\n### 基础\n\n- ★★★ 进程与线程的本质区别、以及各自的使用场景\n\n1. 进程是资源分配的基本单位，线程是调度的基本单位。\n2. 同一进程的线程，对共享，栈私有，共享地址空间。\n3. 线程间可以直接通信，进程间需要经过IPC。\n4. 多进程：编程容易，不用考虑锁和同步资源问题，容错性强，数据隔离\n5. 多线程：创建快，数据共享，切换快，非均质服务\n\n- ★★★ 进程调度算法的特点以及使用场景\n\n1. FCFS（先来先服务）：有利于长作业，不利于短作业，非抢占\n2. SJF（短作业优先）：估计最短运行时间调度，长作业可能会被饿死，非抢占\n3. SRTN（最短剩余时间优先）：最短作业优先的抢占式，按剩余运行时间调度\n\n- ★★★ 进程通信方法的特点以及使用场景★\n\n1. 管道（无名管道）：半双工，父子、兄弟进程间使用，pipe()\n2. FIFO（命名管道、有名管道）：客户服务器间应用，fifo()\n3. 消息队列：独立于读写进程、避免了同步阻塞、有选择性接受\n4. 信号量：控制多进程访问共享数据\n5. 共享存储：速度最快\n6. 套接字：不同机器间进程通信\n\n- ★★★ 死锁问题\n\n原因：系统资源不足、进程运行推进的顺序不合适、资源分配不当等\n\n1. 必要条件：互斥、请求保持、不可抢占、环路等待\n2. 检测：- 每种类型一个资源：对访问过的节点进行标记 - 每种类型多个资源：资源总量进行计算\n3. 解决：剥夺资源、撤销进程、利用抢占、回滚、杀死进程恢复\n4. 预防：破坏四个必要条件\n5. 避免：安全状态检测、银行家算法\n\n数据库中解决死锁：\n\n1. 按同一顺序访问对象。\n2. 避免事务中的用户交互。\n3. 保持事务简短并在一个批处理中。\n4. 使用低隔离级别。\n5. 使用绑定连接。\n6. 用存储过程查出引起死锁的进程和SQL语句。\n\n- ★★★ 虚拟内存的作用，分页系统实现虚拟内存原理\n\n1. 让物理内存扩充成更大的逻辑内存，从而让程序获得更多的可用内存\n2. 分页地址映射、内存管理单元（MMU）\n3. 虚拟地址：页面号、偏移量\n\n- ★★★ 页面置换算法的原理\n\n1. 最近最久未使用（LRU）非常重要\n2. 最近未使用（NRU）：使用链表实现，在Redis上作为缓存置换算法\n3. 先进先出（FIFO）\n4. 第二次机会：读写时R = 1，替换时R若为1，则改为0放在尾端，不换出\n5. 时钟\n\n- ★★★ 比较分页与分段的区别\n\n1. 分页透明、分段需要程序员划分\n2. 分页为一维地址空间、分段为二维\n3. 页大小不变、段大小可变\n4. 分页：虚拟内存，分段：程序和数据在逻辑上独立、有利于共享和保护\n\n- ★★★ 分析静态链接的不足，以及动态链接的特点★\n\n1. 不足：静态库更新时那么整个程序都要重新进行链接，对于 printf 这种标准函数库，如果每个程序都要有代码，这会极大浪费资源\n2. 动态：给定的文件系统中一个库只有一个文件，一个副本可以被不同的正在运行的进程共享\n\n- ★★☆ 常见进程同步问题★\n\n1. 哲学家进餐\n2. 读者-写者\n\n- ★★☆ 协程的作用\n\n1. 协程是单进程单线程的超越函数的调度机制，它通过一定的调度手段进行调度\n2. 可重入能力，类似与函数\n3. 用来控制过程输出状态的那些输入状态的管理工作\n\n- 协程的优势，协程的轻量性体现在哪里？\n    - 用户自己控制切换时机，不需要陷入内核态\n    - 没有线程切换的开销\n    - 不需要多线程锁机制，只要一个线程\n\n- 线程与堆栈的关系\n  - 栈是线程私有的（局部变量、操作数、动态链接）\n  - 堆是线程共享的（对象的实例和数组）\n  - 方法区也是线程共享的\n\n\n- ★☆☆ 进程状态\n    - 就绪：经调度算法可以转为运行\n    - 运行：cpu时间片用完后转为就绪\n    - 阻塞：缺少资源\n\n- ★☆☆ 线程实现的方式（Java），优劣\n\n    - 继承Thread类，并重写其run()方法\n    - 实现Runnable接口，并实现其run()方法\n    - 实现Callable接口，并实现其call()方法\n    - 实现接口会更好一些：Java 不支持多重继承，因此继承了 Thread 类就无法继承其它类，但是可以实现多个接口\n\n### Linux\n\n- ★★★ 硬链接与软链接的区别\n\n1. 硬链接：文件1 和 文件2 直接指向内存 `ln file1 file2`\n2. 软链接：指向另外一个文件 `ln -s file1 file2`\n\n- ★★★ 僵尸进程与孤儿进程的区别，从 SIGCHLD 分析产生僵尸进程的原因\n\n1. 僵尸进程：子进程退出后，父进程未调用wait()waitpid()，进程描述符未释放\n2. 孤儿进程：父进程退出，子进程运行，会被init进程收养，没有危害\n3. 杀死僵尸进程的父进程，僵尸进程变为孤儿进程\n\n- ★★☆ 文件系统的原理，特别是 inode 和 block。数据恢复原理\n\n1. inode：一个文件占用一个 inode，记录文件的属性，同时记录此文件的内容所在的 block 编号；\n2. block：记录文件的内容，文件太大时，会占用多个 block\n3. superblock：记录文件系统的整体信息，包括 inode 和 block 的总量、使用量、剩余量，以及文件系统的格式与相关信息等\n4. block bitmap：记录 block 是否被使用的位图\n\n- Linux启动时调用那些文件★\n\n1. 开启电源 --> BIOS开机自检 --> 引导程序lilo或grub --> 内核的引导（kernel boot）--> 执行init（rc.sysinit、rc）--> mingetty(建立终端) --> shell\n2. /etc/profile --> ~/.bash_profile --> ~/.bash_login --> ~/.profile\n\n- 什么是linux的daemon进程？和一般进程有什么区别？\n\n    - 守护进程，随系统启动和关闭，不与客户端交互，独立于终端。\n    - 使用ps axj命令查看进程时，其终端名(TTY)显示为？，ID显示为-1\n\n- 通过free命令查看内存时，看到的buffer和cache各表示什么含义？\n\n    - 使用内存、剩余内存\n    - Cache：缓存区，是高速缓存，是文件系统的cache\n    - Buffer：缓冲区，传输数据，是块设备的读写缓冲区\n\n- apache和nginx这两个web服务器有哪些区别？\n\n    - apache 是同步多进程模型，一个连接对应一个进程，而 nginx 是异步的，多个连接（万级别）可以对应一个进程\n    - nginx轻量级，处理静态文件好，\n    - apache 稳定，处理动态请求有优势\n\n## 网络\n\n### 基础\n\n- ★★★ **各层的作用，TCP/IP 协议的特点**\n\n1. 应用层 ：为特定应用程序提供数据传输服务，例如 HTTP、DNS 等协议。数据单位为报文。\n2. 传输层 ：为进程提供通用数据传输服务。由于应用层协议很多，定义通用的传输层协议就可以支持不断增多的应用层协议。运输层包括两种协议：传输控制协议 TCP，提供面向连接、可靠的数据传输服务，数据单位为报文段；用户数据报协议 UDP，提供无连接、尽最大努力的数据传输服务，数据单位为用户数据报。TCP 主要提供完整性服务，UDP 主要提供及时性服务。\n3. 网络层 ：为主机提供数据传输服务。而传输层协议是为主机中的进程提供数据传输服务。网络层把传输层传递下来的报文段或者用户数据报封装成分组。\n4. 数据链路层 ：网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，链路层协议就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。\n5. 物理层 ：考虑的是怎样在传输媒体上传输数据比特流，而不是指具体的传输媒体。物理层的作用是尽可能屏蔽传输媒体和通信手段的差异，使数据链路层感觉不到这些差异\n6. 表示层 ：数据压缩、加密以及数据描述，这使得应用程序不必关心在各台主机中数据内部格式不同的问题。\n7. 会话层 ：建立及管理会话。\n\n8. TCP/IP ： 只有四层，数据链路层和物理层合并为网络接口层\n\n- ★★★ **三次握手以及四次挥手具体过程、原因、TIME_WAIT**\n\n- ★★★ **可靠传输原理，并设计可靠 UDP 协议**\n\n1. TCP 可靠传输：超时重传\n2. 可靠 UDP 协议：应用层实现确认机制、重传机制、窗口确认机制：RUDP、RTP、UDT\n\n- ★★★ **UDP 与 TCP 比较，分析上层协议应该使用 UDP 还是 TCP**\n\n1. UDP：无连接、尽最大可能交付、一对一、多对多、多对一\n2. TCP：面向连接、可靠交付、全双工、流量拥塞控制、字节流、一对一、确认机制、重传机制、滑动窗口\n\n- ★★☆ **路由选择协议及特点**\n\n    - RIP：距离向量、15跳、固定时间交换路由表、3分钟超时\n    - OSPF：开放最短路径优先、洪泛发送信息、链路状态发生变化时发送信息\n    - BGP：比较好不是最佳，TCP，发言人制度\n\n- ★★☆ **DNS 的端口号；TCP 还是 UDP；作为缓存、负载均衡**\n\n1. 端口：53，UDP\n2. 使用TCP的情况：数据大于512字节，区域传送\n\n- ★★☆ **TCP 拥塞控制、四种方法、理解具体原理**★\n\n1. 慢开始，拥塞避免，快重传，快恢复\n2. 防止过多的数据注入到网络当中，这样可以使网络中的路由器或链路不致过载\n\n- ★★☆ **浏览器访问页面（输入网址后发生了什么）**\n\n    - DHCP配置主机信息（可略过）\n        - DHCP 请求报文，UDP，255.255.255.255:67,0.0.0.0:68\n        - DHCP 服务器: DHCP ACK 报文:IP 地址、DNS 服务器的 IP 地址、默认网关路由器的 IP 地址和子网掩码\n    - ARP 解析 MAC 地址(获取路由网关地址)\n    - DNS解析域名\n    - HTTP 请求页面\n\n- ★★☆ **集线器、交换机、路由器的作用，以及所属的层次**\n    - 集线器：物理层、比特\n    - 交换机：链路层、自学习、按mac地址存储转发\n    - 路由器：网络层、IP地址转发\n\n- ★★☆ **以太网的特点，以及帧结构**\n    - 星型结构\n    - 帧结构：目的地址、源地址、类型、IP数据报、FCS\n\n### HTTP\n\n- ★★★ GET 与 POST 比较：作用、参数、安全性、幂等性、可缓存\n    - POST 主要用来传输数据，而 GET 主要用来获取资源\n    - GET参数：ASCII码\n    - GET安全、幂等，POST不安全不幂等\n    - GET、HEAD可缓存，PUT、DELETE、POST不可缓存\n\n- ★★★ Cookie 作用、安全性问题、和 Session 的比较\n    - 保存状态信息（会话管理、行为跟踪），cookie最大4kb\n    - 作用域：默认为当前文档的主机\n    - Cookie可利用Session存在服务器端\n    - Cookie 只能存储 ASCII 码字符串，而 Session 则可以存储任何类型的数据\n\n- ★★★ 长连接与短连接原理以及使用场景，流水线\n    - 长连接：建立一个TCP多次进行HTTP通信\n    - 流水线：同一条长连接上连续发出请求\n\n- ★★★ HTTP 存在的安全性问题，以及 HTTPs 的加密、认证和完整性保护作用\n    - 明文进行通信，不验证身份，无法证明报文的完整性\n    - 使用了SSL隧道进行通信\n    - 使用非对称密钥加密方式，传输对称密钥加密方式所需要的 Secret Key\n    - 获取到 Secret Key 后，再使用对称密钥加密方式进行通信\n    - SSL 提供报文摘要功能来进行完整性保护、MD5\n\n- ★★☆ 缓存 的Cache-Control 字段、Expires 和 max-age 的区别、ETag 验证原理\n    - 缓解服务器压力，降低客户端获取资源的延迟\n    - no-store：禁止，no-cache：强制确认，private：私有，public：公共\n    - ETag ： 资源唯一标识\n\n- ★★★ HTTP/1.1 的特性\n    - 默认是长连接\n    - 支持流水线\n    - 支持同时打开多个 TCP 连接\n    - 支持虚拟主机\n    - 新增状态码 100：表示正常\n    - 支持分块传输编码\n    - 新增缓存处理指令 max-age\n\n- ★★☆ HTTP/1.x 的缺陷，以及 HTTP/2 的特点\n    - 缺陷：多个连接才能实现并发和缩短延迟、不会压缩请求和响应首部浪费流量、没有优先级支持\n    - 二进制帧分层、服务端推送、首部压缩\n\n- ★★☆ HTTP 与 FTP 的比较\n- ★☆☆ 状态码\n\n- http协议中的keeplive是做什么的？它的适应场景是什么？\n    - 让多个http请求共享一个Tcp连接，避免每个http新建tcp连接\n    - 定时发送心跳包\n\n- http请求有多少种？\n    - 8种\n    - opions：返回服务器针对特定资源所支持的HTML请求方法、get、post、put：向指定资源位置上上传其最新内容\n    - head：查看某个页面的状态、delete、trace：回显服务器收到的请求、connect\n\n- 查看linux系统中tcp连接的状态和连接数量统计\n    - `netstat -an | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'`\n\n- bash shell 里`$0.$?.$$`各表示什么含义\n    - \\$$ Shell本身的PID（ProcessID）\n    - $! Shell最后运行的后台Process的PID\n    - $? 最后运行的命令的结束代码（返回值）\n    - $# 是传给脚本的参数个数\n    - $0 是脚本本身的名字\n    - $1 是传递给该shell脚本的第一个参数\n    - $2 是传递给该shell脚本的第二个参数\n    - $@ 是传给脚本的所有参数的列表\n\n### Socket\n\n- ★★★ select、poll、epoll 的原理、比较、以及使用场景；epoll 的水平触发与边缘触发\n    - 都是多路复用的具体实现\n    - select 会修改描述符，而 poll 不会\n    - select 的描述符类型使用数组实现\n    - poll 提供了更多的事件类型，并且对描述符的重复利用上比 select 高\n    - 如果一个线程对某个描述符调用了 select 或者 poll，另一个线程关闭了该描述符，会导致调用结果不确定\n    - select 和 poll 速度都比较慢\n\n- ★★☆ 五种 IO 模型的特点以及比较\n    - 阻塞式I/O：阻塞应用，内核缓存-->应用缓存（数据复制），复制完返回\n    - 非阻塞式I/O：进程调用、返回错误码、继续执行、不断询问io（轮询），CPU利用率低\n    - I/O复用：单进程处理多IO，无进程创建切换，系统开销小\n    - 信号驱动I/O：进程使用 sigaction 系统调用，内核立即返回，进程继续执行，数据到达时内核向应用发送 SIGIO 信号，进程调用 recvfrom 复制数据，CPU利用率高\n    - 异步I/O：进程执行 aio_read 系统调用会立即返回，进程继续执行，不被阻塞，内核在操作完成后向进程发送信号\n    - 比较\n        - 同步 I/O：将数据从内核缓冲区复制到应用进程缓冲区的阶段（第二阶段），应用进程会阻塞\n        - 异步 I/O：第二阶段应用进程不会阻塞\n\n- 多路复用\n\n- Java NIO\n\n## 数据库\n\n- 数据库范式\n  - 第一范式：属性的原子性\n  - 第二范式：属性完全依赖于主键\n  - 第三范式：一个数据库表中不包含已经在其它表中包含的非主键关键字信息。\n\n\n### SQL\n\n- ★★☆ 手写 SQL 语句，特别是连接查询与分组查询\n\n- ★★☆ 连接查询与子查询的比较\n\n- ★★☆ drop、delete、truncate 比较\n    - 作用\n        - DELETE 删除表中 WHERE 语句指定的数据。\n        - TRUNCATE 清空表，相当于删除表中的所有数据。\n        - DROP 删除表结构\n    - 事务\n        - DELETE 会被放到日志中以便进行回滚；\n        - TRUNCATE 和 DROP 立即生效，不会放到日志中，也就不支持回滚。\n    - 删除空间\n        - DELETE 不会减少表和索引占用的空间；\n        - TRUNCATE 会将表和索引占用的空间恢复到初始值；\n        - DROP 会将表和索引占用的空间释放。\n    - 耗时\n        - DELETE < TRUNCATE < DROP\n\n- ★★☆ 视图的作用，以及何时能更新视图\n    - 虚拟表\n    - 简化复杂操作、保证数据安全性\n    - 更改数据格式和表示\n\n- ★☆☆ 理解存储过程、触发器等作用\n    - 存储过程可以看成是对一系列 SQL 操作的批处理\n        - 优点：封装、提高安全性，代码复用，高性能\n        - 赋值用 select into ，每次只能给一个变量赋值，不支持集合的操作\n    - 触发器会在某个表执行以下语句时而自动执行：DELETE、INSERT、UPDATE\n        - 必须指定在语句执行之前还是之后自动执行（前：BEFORE，后：AFTER）\n\n### MySQL\n\n1. MySQL主键\n    - 其值能唯一地标识表中的每一行\n\n2. 事务\n   - 用于处理操作量大，复杂度高的数据\n   - 只有InnoDB支持事务\n   - ACID\n\n## 其他\n\n- new和malloc区别\n\n1. malloc和new都是在堆上开辟内存的\n2. malloc只负责开辟内存，没有初始化功能\n3. new不但开辟内存，还可以进行初始化\n4. malloc是函数，开辟内存需要传入字节数\n5. malloc开辟内存失败返回NULL，new开辟内存失败抛出bad_alloc类型的异常\n6. malloc开辟的内存永远是通过free来释放的；而new单个元素内存，用的是delete，如果new[\\]数组，用的是delete[]来释放内存\n7. malloc开辟内存只有一种方式，而new有四种分别是普通的new（内存开辟失败抛出bad_alloc异常）, nothrow版本的new，const new以及定位new\n\n- 闭包\n    - 闭包函数：声明一个在函数中的函数\n    - 内部函数总是可以访问其所在的外部函数中声明的参数和变量，即使在其外部函数被返回（寿命终结）了之后。\n    - 特点：\n        - 外部函数访问内部变量成为可能\n        - 局部变量常驻内存\n        - 避免使用全局变量、防止全局变量污染\n        - 会造成内存泄漏\n    - 每次外部函数执行的时候，外部函数的引用地址不同，都会重新创建一个新的地址\n\n## python\n\n- 如何在Python中实现多线程？\n1. 答： Python有一个multi-threading包，但是如果你想让multi-thread加速你的代码，那么使用它通常不是一个好主意。\n\n2. Python有一个名为Global Interpreter Lock(GIL)的结构。 GIL确保只有一个“线程”可以在任何时候执行。一个线程获取GIL，做一点工作，然后将GIL传递到下一个线程。\n\n3. 这种情况很快发生，因此对于人眼看来，您的线程似乎并行执行，但它们实际上只是轮流使用相同的CPU核心。\n\n4. 所有这些GIL传递都增加了执行的开销。这意味着如果您想让代码运行得更快，那么使用线程包通常不是一个好主意。\n\n- 这是什么意思： *args，**kwargs？我们为什么要用呢？\n\n我们用`*args`当我们不确定将多少个参数传递给函数时，或者我们是否要将存储的列表或参数元组传递给函数时。`**kwargs`当我们不知道将多少关键字参数传递给函数时，或者它可以用于将字典的值作为关键字参数传递时使用。标识符args和kwargs是一个约定，你也可以使用`*bob`和`**billy`，但这不是明智之举.\n\n- 计算出从你生日之日起到今天一共过了多少天？（python、go、shell均可）\n\n- 逆序输出偶数的平方 [1,2,3,4,5,6,7,8,9]\n```python\n#列表切片\nlist[i:j]\nlist[i:j:2] #取i到j，步长为2\n#取奇数位\nlist[::2]\n#取偶数位\nlist[1::2]\n```\n## 面向对象\n\n### 思想\n1. ★★★ 面向对象三大特性\n    - 继承：父类指向子类时为向上转型\n    - 封装：减少耦合、减轻维护负担、提高可重用性、减少重构风险\n    - 多态：编译时多态与运行时多态\n        - 运行时多态：继承、覆盖（重写）、向上转型\n2. ★☆☆ 设计原则\n    - 单一责任原则SRP\n    - 开放封闭原则OCP\n    - 李氏替换原则LSP\n    - 接口分离原则ISP\n    - 依赖倒置原则DIP\n### 设计模式\n\n\n## Java\n\n### 基础\n1. 基本类型与包装类型\n    - byte/8 char/16 short/16 int/32 float/32 double/64 long/64 boolean/~\n2. 缓存池、new Integer(123) 与 Integer.valueOf(123) 的区别\n    - Integer 缓存池的大小默认为 -128~127\n3. String不可变的原因、好处\n    - final 声明、不可被继承\n    - Java8 中使用 char 存储、Java9 后使用byte数组存储\n    - 可以缓存hash值、String Pool的需要、提高安全性（参数不变）、线程安全\n    - 注意：StringBuffer可变、线程安全，StringBuilder可变、线程不安全\n4. 参数传递的方式、类型转换、switch\n    - 值传递、地址值\n    - 不能隐式向下转型、`+=` 或者 `++` 运算符会执行隐式类型转换\n    - switch 不支持 long\n5. Java类的初始化顺序\n    - 静态成员和`static块` -> 普通成员和非`static`块 -> 构造函数\n    - 父类静态 -> 子类静态 -> 父类普通 -> 父类构造 -> 子类普通 -> 子类构造\n6. `equal()` 与 `==` 的区别\n    - 对于基本类型，== 判断两个值是否相等，基本类型没有 equals() 方法\n    - 对于引用类型，== 判断两个变量是否引用同一个对象，而 equals() 判断引用的对象是否等价\n7. 在覆盖 equals() 方法时应当总是覆盖 hashCode() 方法，保证等价的两个对象哈希值也相等\n8. clone()、浅拷贝、深拷贝\n    - clone() 是 Object 的 protected 方法、需要显式重写\n    - 浅拷贝对象和原始对象的引用类型引用同一个对象\n    - 深拷贝对象和原始对象的引用类型引用不同对象\n    - clone替代：拷贝构造函数、拷贝工厂\n9. 反射的优缺点\n    - 定义：允许运行中的 Java 程序获取自身的信息，并且可以操作类或对象的内部属性\n    - 优点：可扩展性、类浏览器和可视化开发环境、调试器和测试工具\n    - 缺点：性能开销高、安全限制、内部暴露\n10. Java与c++的区别\n    - Java面向对象，c++兼容c、可以面向过程\n    - Java跨平台\n    - Java无指针、自动垃圾回收\n    - Java不支持多重继承，c++可以\n    - Java不支持操作符重载\n    - c++可以使用goto\n11. 泛形相关\n    - 允许在定义类、接口、方法时使用类型形参，在声明变量、创建对象、调用方法时再传入实际类型参数\n    - 好处：编译时检查类型安全、隐式强制转换\n    - 工作方式：通过类型擦除实现\n    - 限定通配符：<? extends T> <? super T> 非限定通配符：<?>\n\n### 容器（集合）\n\n- [HashMap 相关面试题及其解答](https://www.jianshu.com/p/75adf47958a7)\n\n\n\n","slug":"面试知识点","published":1,"updated":"2020-08-24T06:10:49.681Z","comments":1,"layout":"post","link":"","_id":"ckec2td4a0020fkupyzj5ic2s","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"操作系统\"><a class=\"header-anchor\" href=\"#操作系统\">☆</a>操作系统</h2>\n<h3 id=\"基础\"><a class=\"header-anchor\" href=\"#基础\">☆</a>基础</h3>\n<ul>\n<li>★★★ 进程与线程的本质区别、以及各自的使用场景</li>\n</ul>\n<ol>\n<li>进程是资源分配的基本单位，线程是调度的基本单位。</li>\n<li>同一进程的线程，对共享，栈私有，共享地址空间。</li>\n<li>线程间可以直接通信，进程间需要经过IPC。</li>\n<li>多进程：编程容易，不用考虑锁和同步资源问题，容错性强，数据隔离</li>\n<li>多线程：创建快，数据共享，切换快，非均质服务</li>\n</ol>\n<ul>\n<li>★★★ 进程调度算法的特点以及使用场景</li>\n</ul>\n<ol>\n<li>FCFS（先来先服务）：有利于长作业，不利于短作业，非抢占</li>\n<li>SJF（短作业优先）：估计最短运行时间调度，长作业可能会被饿死，非抢占</li>\n<li>SRTN（最短剩余时间优先）：最短作业优先的抢占式，按剩余运行时间调度</li>\n</ol>\n<ul>\n<li>★★★ 进程通信方法的特点以及使用场景★</li>\n</ul>\n<ol>\n<li>管道（无名管道）：半双工，父子、兄弟进程间使用，pipe()</li>\n<li>FIFO（命名管道、有名管道）：客户服务器间应用，fifo()</li>\n<li>消息队列：独立于读写进程、避免了同步阻塞、有选择性接受</li>\n<li>信号量：控制多进程访问共享数据</li>\n<li>共享存储：速度最快</li>\n<li>套接字：不同机器间进程通信</li>\n</ol>\n<ul>\n<li>★★★ 死锁问题</li>\n</ul>\n<p>原因：系统资源不足、进程运行推进的顺序不合适、资源分配不当等</p>\n<ol>\n<li>必要条件：互斥、请求保持、不可抢占、环路等待</li>\n<li>检测：- 每种类型一个资源：对访问过的节点进行标记 - 每种类型多个资源：资源总量进行计算</li>\n<li>解决：剥夺资源、撤销进程、利用抢占、回滚、杀死进程恢复</li>\n<li>预防：破坏四个必要条件</li>\n<li>避免：安全状态检测、银行家算法</li>\n</ol>\n<p>数据库中解决死锁：</p>\n<ol>\n<li>按同一顺序访问对象。</li>\n<li>避免事务中的用户交互。</li>\n<li>保持事务简短并在一个批处理中。</li>\n<li>使用低隔离级别。</li>\n<li>使用绑定连接。</li>\n<li>用存储过程查出引起死锁的进程和SQL语句。</li>\n</ol>\n<ul>\n<li>★★★ 虚拟内存的作用，分页系统实现虚拟内存原理</li>\n</ul>\n<ol>\n<li>让物理内存扩充成更大的逻辑内存，从而让程序获得更多的可用内存</li>\n<li>分页地址映射、内存管理单元（MMU）</li>\n<li>虚拟地址：页面号、偏移量</li>\n</ol>\n<ul>\n<li>★★★ 页面置换算法的原理</li>\n</ul>\n<ol>\n<li>最近最久未使用（LRU）非常重要</li>\n<li>最近未使用（NRU）：使用链表实现，在Redis上作为缓存置换算法</li>\n<li>先进先出（FIFO）</li>\n<li>第二次机会：读写时R = 1，替换时R若为1，则改为0放在尾端，不换出</li>\n<li>时钟</li>\n</ol>\n<ul>\n<li>★★★ 比较分页与分段的区别</li>\n</ul>\n<ol>\n<li>分页透明、分段需要程序员划分</li>\n<li>分页为一维地址空间、分段为二维</li>\n<li>页大小不变、段大小可变</li>\n<li>分页：虚拟内存，分段：程序和数据在逻辑上独立、有利于共享和保护</li>\n</ol>\n<ul>\n<li>★★★ 分析静态链接的不足，以及动态链接的特点★</li>\n</ul>\n<ol>\n<li>不足：静态库更新时那么整个程序都要重新进行链接，对于 printf 这种标准函数库，如果每个程序都要有代码，这会极大浪费资源</li>\n<li>动态：给定的文件系统中一个库只有一个文件，一个副本可以被不同的正在运行的进程共享</li>\n</ol>\n<ul>\n<li>★★☆ 常见进程同步问题★</li>\n</ul>\n<ol>\n<li>哲学家进餐</li>\n<li>读者-写者</li>\n</ol>\n<ul>\n<li>★★☆ 协程的作用</li>\n</ul>\n<ol>\n<li>协程是单进程单线程的超越函数的调度机制，它通过一定的调度手段进行调度</li>\n<li>可重入能力，类似与函数</li>\n<li>用来控制过程输出状态的那些输入状态的管理工作</li>\n</ol>\n<ul>\n<li>\n<p>协程的优势，协程的轻量性体现在哪里？</p>\n<ul>\n<li>用户自己控制切换时机，不需要陷入内核态</li>\n<li>没有线程切换的开销</li>\n<li>不需要多线程锁机制，只要一个线程</li>\n</ul>\n</li>\n<li>\n<p>线程与堆栈的关系</p>\n<ul>\n<li>栈是线程私有的（局部变量、操作数、动态链接）</li>\n<li>堆是线程共享的（对象的实例和数组）</li>\n<li>方法区也是线程共享的</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>\n<p>★☆☆ 进程状态</p>\n<ul>\n<li>就绪：经调度算法可以转为运行</li>\n<li>运行：cpu时间片用完后转为就绪</li>\n<li>阻塞：缺少资源</li>\n</ul>\n</li>\n<li>\n<p>★☆☆ 线程实现的方式（Java），优劣</p>\n<ul>\n<li>继承Thread类，并重写其run()方法</li>\n<li>实现Runnable接口，并实现其run()方法</li>\n<li>实现Callable接口，并实现其call()方法</li>\n<li>实现接口会更好一些：Java 不支持多重继承，因此继承了 Thread 类就无法继承其它类，但是可以实现多个接口</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"linux\"><a class=\"header-anchor\" href=\"#linux\">☆</a>Linux</h3>\n<ul>\n<li>★★★ 硬链接与软链接的区别</li>\n</ul>\n<ol>\n<li>硬链接：文件1 和 文件2 直接指向内存 <code>ln file1 file2</code></li>\n<li>软链接：指向另外一个文件 <code>ln -s file1 file2</code></li>\n</ol>\n<ul>\n<li>★★★ 僵尸进程与孤儿进程的区别，从 SIGCHLD 分析产生僵尸进程的原因</li>\n</ul>\n<ol>\n<li>僵尸进程：子进程退出后，父进程未调用wait()waitpid()，进程描述符未释放</li>\n<li>孤儿进程：父进程退出，子进程运行，会被init进程收养，没有危害</li>\n<li>杀死僵尸进程的父进程，僵尸进程变为孤儿进程</li>\n</ol>\n<ul>\n<li>★★☆ 文件系统的原理，特别是 inode 和 block。数据恢复原理</li>\n</ul>\n<ol>\n<li>inode：一个文件占用一个 inode，记录文件的属性，同时记录此文件的内容所在的 block 编号；</li>\n<li>block：记录文件的内容，文件太大时，会占用多个 block</li>\n<li>superblock：记录文件系统的整体信息，包括 inode 和 block 的总量、使用量、剩余量，以及文件系统的格式与相关信息等</li>\n<li>block bitmap：记录 block 是否被使用的位图</li>\n</ol>\n<ul>\n<li>Linux启动时调用那些文件★</li>\n</ul>\n<ol>\n<li>开启电源 --&gt; BIOS开机自检 --&gt; 引导程序lilo或grub --&gt; 内核的引导（kernel boot）–&gt; 执行init（rc.sysinit、rc）–&gt; mingetty(建立终端) --&gt; shell</li>\n<li>/etc/profile --&gt; ~/.bash_profile --&gt; ~/.bash_login --&gt; ~/.profile</li>\n</ol>\n<ul>\n<li>\n<p>什么是linux的daemon进程？和一般进程有什么区别？</p>\n<ul>\n<li>守护进程，随系统启动和关闭，不与客户端交互，独立于终端。</li>\n<li>使用ps axj命令查看进程时，其终端名(TTY)显示为？，ID显示为-1</li>\n</ul>\n</li>\n<li>\n<p>通过free命令查看内存时，看到的buffer和cache各表示什么含义？</p>\n<ul>\n<li>使用内存、剩余内存</li>\n<li>Cache：缓存区，是高速缓存，是文件系统的cache</li>\n<li>Buffer：缓冲区，传输数据，是块设备的读写缓冲区</li>\n</ul>\n</li>\n<li>\n<p>apache和nginx这两个web服务器有哪些区别？</p>\n<ul>\n<li>apache 是同步多进程模型，一个连接对应一个进程，而 nginx 是异步的，多个连接（万级别）可以对应一个进程</li>\n<li>nginx轻量级，处理静态文件好，</li>\n<li>apache 稳定，处理动态请求有优势</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"网络\"><a class=\"header-anchor\" href=\"#网络\">☆</a>网络</h2>\n<h3 id=\"基础-v2\"><a class=\"header-anchor\" href=\"#基础-v2\">☆</a>基础</h3>\n<ul>\n<li>★★★ <strong>各层的作用，TCP/IP 协议的特点</strong></li>\n</ul>\n<ol>\n<li>\n<p>应用层 ：为特定应用程序提供数据传输服务，例如 HTTP、DNS 等协议。数据单位为报文。</p>\n</li>\n<li>\n<p>传输层 ：为进程提供通用数据传输服务。由于应用层协议很多，定义通用的传输层协议就可以支持不断增多的应用层协议。运输层包括两种协议：传输控制协议 TCP，提供面向连接、可靠的数据传输服务，数据单位为报文段；用户数据报协议 UDP，提供无连接、尽最大努力的数据传输服务，数据单位为用户数据报。TCP 主要提供完整性服务，UDP 主要提供及时性服务。</p>\n</li>\n<li>\n<p>网络层 ：为主机提供数据传输服务。而传输层协议是为主机中的进程提供数据传输服务。网络层把传输层传递下来的报文段或者用户数据报封装成分组。</p>\n</li>\n<li>\n<p>数据链路层 ：网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，链路层协议就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。</p>\n</li>\n<li>\n<p>物理层 ：考虑的是怎样在传输媒体上传输数据比特流，而不是指具体的传输媒体。物理层的作用是尽可能屏蔽传输媒体和通信手段的差异，使数据链路层感觉不到这些差异</p>\n</li>\n<li>\n<p>表示层 ：数据压缩、加密以及数据描述，这使得应用程序不必关心在各台主机中数据内部格式不同的问题。</p>\n</li>\n<li>\n<p>会话层 ：建立及管理会话。</p>\n</li>\n<li>\n<p>TCP/IP ： 只有四层，数据链路层和物理层合并为网络接口层</p>\n</li>\n</ol>\n<ul>\n<li>\n<p>★★★ <strong>三次握手以及四次挥手具体过程、原因、TIME_WAIT</strong></p>\n</li>\n<li>\n<p>★★★ <strong>可靠传输原理，并设计可靠 UDP 协议</strong></p>\n</li>\n</ul>\n<ol>\n<li>TCP 可靠传输：超时重传</li>\n<li>可靠 UDP 协议：应用层实现确认机制、重传机制、窗口确认机制：RUDP、RTP、UDT</li>\n</ol>\n<ul>\n<li>★★★ <strong>UDP 与 TCP 比较，分析上层协议应该使用 UDP 还是 TCP</strong></li>\n</ul>\n<ol>\n<li>UDP：无连接、尽最大可能交付、一对一、多对多、多对一</li>\n<li>TCP：面向连接、可靠交付、全双工、流量拥塞控制、字节流、一对一、确认机制、重传机制、滑动窗口</li>\n</ol>\n<ul>\n<li>\n<p>★★☆ <strong>路由选择协议及特点</strong></p>\n<ul>\n<li>RIP：距离向量、15跳、固定时间交换路由表、3分钟超时</li>\n<li>OSPF：开放最短路径优先、洪泛发送信息、链路状态发生变化时发送信息</li>\n<li>BGP：比较好不是最佳，TCP，发言人制度</li>\n</ul>\n</li>\n<li>\n<p>★★☆ <strong>DNS 的端口号；TCP 还是 UDP；作为缓存、负载均衡</strong></p>\n</li>\n</ul>\n<ol>\n<li>端口：53，UDP</li>\n<li>使用TCP的情况：数据大于512字节，区域传送</li>\n</ol>\n<ul>\n<li>★★☆ <strong>TCP 拥塞控制、四种方法、理解具体原理</strong>★</li>\n</ul>\n<ol>\n<li>慢开始，拥塞避免，快重传，快恢复</li>\n<li>防止过多的数据注入到网络当中，这样可以使网络中的路由器或链路不致过载</li>\n</ol>\n<ul>\n<li>\n<p>★★☆ <strong>浏览器访问页面（输入网址后发生了什么）</strong></p>\n<ul>\n<li>DHCP配置主机信息（可略过）\n<ul>\n<li>DHCP 请求报文，UDP，255.255.255.255:67,0.0.0.0:68</li>\n<li>DHCP 服务器: DHCP ACK 报文:IP 地址、DNS 服务器的 IP 地址、默认网关路由器的 IP 地址和子网掩码</li>\n</ul>\n</li>\n<li>ARP 解析 MAC 地址(获取路由网关地址)</li>\n<li>DNS解析域名</li>\n<li>HTTP 请求页面</li>\n</ul>\n</li>\n<li>\n<p>★★☆ <strong>集线器、交换机、路由器的作用，以及所属的层次</strong></p>\n<ul>\n<li>集线器：物理层、比特</li>\n<li>交换机：链路层、自学习、按mac地址存储转发</li>\n<li>路由器：网络层、IP地址转发</li>\n</ul>\n</li>\n<li>\n<p>★★☆ <strong>以太网的特点，以及帧结构</strong></p>\n<ul>\n<li>星型结构</li>\n<li>帧结构：目的地址、源地址、类型、IP数据报、FCS</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"http\"><a class=\"header-anchor\" href=\"#http\">☆</a>HTTP</h3>\n<ul>\n<li>\n<p>★★★ GET 与 POST 比较：作用、参数、安全性、幂等性、可缓存</p>\n<ul>\n<li>POST 主要用来传输数据，而 GET 主要用来获取资源</li>\n<li>GET参数：ASCII码</li>\n<li>GET安全、幂等，POST不安全不幂等</li>\n<li>GET、HEAD可缓存，PUT、DELETE、POST不可缓存</li>\n</ul>\n</li>\n<li>\n<p>★★★ Cookie 作用、安全性问题、和 Session 的比较</p>\n<ul>\n<li>保存状态信息（会话管理、行为跟踪），cookie最大4kb</li>\n<li>作用域：默认为当前文档的主机</li>\n<li>Cookie可利用Session存在服务器端</li>\n<li>Cookie 只能存储 ASCII 码字符串，而 Session 则可以存储任何类型的数据</li>\n</ul>\n</li>\n<li>\n<p>★★★ 长连接与短连接原理以及使用场景，流水线</p>\n<ul>\n<li>长连接：建立一个TCP多次进行HTTP通信</li>\n<li>流水线：同一条长连接上连续发出请求</li>\n</ul>\n</li>\n<li>\n<p>★★★ HTTP 存在的安全性问题，以及 HTTPs 的加密、认证和完整性保护作用</p>\n<ul>\n<li>明文进行通信，不验证身份，无法证明报文的完整性</li>\n<li>使用了SSL隧道进行通信</li>\n<li>使用非对称密钥加密方式，传输对称密钥加密方式所需要的 Secret Key</li>\n<li>获取到 Secret Key 后，再使用对称密钥加密方式进行通信</li>\n<li>SSL 提供报文摘要功能来进行完整性保护、MD5</li>\n</ul>\n</li>\n<li>\n<p>★★☆ 缓存 的Cache-Control 字段、Expires 和 max-age 的区别、ETag 验证原理</p>\n<ul>\n<li>缓解服务器压力，降低客户端获取资源的延迟</li>\n<li>no-store：禁止，no-cache：强制确认，private：私有，public：公共</li>\n<li>ETag ： 资源唯一标识</li>\n</ul>\n</li>\n<li>\n<p>★★★ HTTP/1.1 的特性</p>\n<ul>\n<li>默认是长连接</li>\n<li>支持流水线</li>\n<li>支持同时打开多个 TCP 连接</li>\n<li>支持虚拟主机</li>\n<li>新增状态码 100：表示正常</li>\n<li>支持分块传输编码</li>\n<li>新增缓存处理指令 max-age</li>\n</ul>\n</li>\n<li>\n<p>★★☆ HTTP/1.x 的缺陷，以及 HTTP/2 的特点</p>\n<ul>\n<li>缺陷：多个连接才能实现并发和缩短延迟、不会压缩请求和响应首部浪费流量、没有优先级支持</li>\n<li>二进制帧分层、服务端推送、首部压缩</li>\n</ul>\n</li>\n<li>\n<p>★★☆ HTTP 与 FTP 的比较</p>\n</li>\n<li>\n<p>★☆☆ 状态码</p>\n</li>\n<li>\n<p>http协议中的keeplive是做什么的？它的适应场景是什么？</p>\n<ul>\n<li>让多个http请求共享一个Tcp连接，避免每个http新建tcp连接</li>\n<li>定时发送心跳包</li>\n</ul>\n</li>\n<li>\n<p>http请求有多少种？</p>\n<ul>\n<li>8种</li>\n<li>opions：返回服务器针对特定资源所支持的HTML请求方法、get、post、put：向指定资源位置上上传其最新内容</li>\n<li>head：查看某个页面的状态、delete、trace：回显服务器收到的请求、connect</li>\n</ul>\n</li>\n<li>\n<p>查看linux系统中tcp连接的状态和连接数量统计</p>\n<ul>\n<li><code>netstat -an | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'</code></li>\n</ul>\n</li>\n<li>\n<p>bash shell 里<code>$0.$?.$$</code>各表示什么含义</p>\n<ul>\n<li>$$ Shell本身的PID（ProcessID）</li>\n<li>$! Shell最后运行的后台Process的PID</li>\n<li>$? 最后运行的命令的结束代码（返回值）</li>\n<li>$# 是传给脚本的参数个数</li>\n<li>$0 是脚本本身的名字</li>\n<li>$1 是传递给该shell脚本的第一个参数</li>\n<li>$2 是传递给该shell脚本的第二个参数</li>\n<li>$@ 是传给脚本的所有参数的列表</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"socket\"><a class=\"header-anchor\" href=\"#socket\">☆</a>Socket</h3>\n<ul>\n<li>\n<p>★★★ select、poll、epoll 的原理、比较、以及使用场景；epoll 的水平触发与边缘触发</p>\n<ul>\n<li>都是多路复用的具体实现</li>\n<li>select 会修改描述符，而 poll 不会</li>\n<li>select 的描述符类型使用数组实现</li>\n<li>poll 提供了更多的事件类型，并且对描述符的重复利用上比 select 高</li>\n<li>如果一个线程对某个描述符调用了 select 或者 poll，另一个线程关闭了该描述符，会导致调用结果不确定</li>\n<li>select 和 poll 速度都比较慢</li>\n</ul>\n</li>\n<li>\n<p>★★☆ 五种 IO 模型的特点以及比较</p>\n<ul>\n<li>阻塞式I/O：阻塞应用，内核缓存–&gt;应用缓存（数据复制），复制完返回</li>\n<li>非阻塞式I/O：进程调用、返回错误码、继续执行、不断询问io（轮询），CPU利用率低</li>\n<li>I/O复用：单进程处理多IO，无进程创建切换，系统开销小</li>\n<li>信号驱动I/O：进程使用 sigaction 系统调用，内核立即返回，进程继续执行，数据到达时内核向应用发送 SIGIO 信号，进程调用 recvfrom 复制数据，CPU利用率高</li>\n<li>异步I/O：进程执行 aio_read 系统调用会立即返回，进程继续执行，不被阻塞，内核在操作完成后向进程发送信号</li>\n<li>比较\n<ul>\n<li>同步 I/O：将数据从内核缓冲区复制到应用进程缓冲区的阶段（第二阶段），应用进程会阻塞</li>\n<li>异步 I/O：第二阶段应用进程不会阻塞</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>多路复用</p>\n</li>\n<li>\n<p>Java NIO</p>\n</li>\n</ul>\n<h2 id=\"数据库\"><a class=\"header-anchor\" href=\"#数据库\">☆</a>数据库</h2>\n<ul>\n<li>数据库范式\n<ul>\n<li>第一范式：属性的原子性</li>\n<li>第二范式：属性完全依赖于主键</li>\n<li>第三范式：一个数据库表中不包含已经在其它表中包含的非主键关键字信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"sql\"><a class=\"header-anchor\" href=\"#sql\">☆</a>SQL</h3>\n<ul>\n<li>\n<p>★★☆ 手写 SQL 语句，特别是连接查询与分组查询</p>\n</li>\n<li>\n<p>★★☆ 连接查询与子查询的比较</p>\n</li>\n<li>\n<p>★★☆ drop、delete、truncate 比较</p>\n<ul>\n<li>作用\n<ul>\n<li>DELETE 删除表中 WHERE 语句指定的数据。</li>\n<li>TRUNCATE 清空表，相当于删除表中的所有数据。</li>\n<li>DROP 删除表结构</li>\n</ul>\n</li>\n<li>事务\n<ul>\n<li>DELETE 会被放到日志中以便进行回滚；</li>\n<li>TRUNCATE 和 DROP 立即生效，不会放到日志中，也就不支持回滚。</li>\n</ul>\n</li>\n<li>删除空间\n<ul>\n<li>DELETE 不会减少表和索引占用的空间；</li>\n<li>TRUNCATE 会将表和索引占用的空间恢复到初始值；</li>\n<li>DROP 会将表和索引占用的空间释放。</li>\n</ul>\n</li>\n<li>耗时\n<ul>\n<li>DELETE &lt; TRUNCATE &lt; DROP</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>★★☆ 视图的作用，以及何时能更新视图</p>\n<ul>\n<li>虚拟表</li>\n<li>简化复杂操作、保证数据安全性</li>\n<li>更改数据格式和表示</li>\n</ul>\n</li>\n<li>\n<p>★☆☆ 理解存储过程、触发器等作用</p>\n<ul>\n<li>存储过程可以看成是对一系列 SQL 操作的批处理\n<ul>\n<li>优点：封装、提高安全性，代码复用，高性能</li>\n<li>赋值用 select into ，每次只能给一个变量赋值，不支持集合的操作</li>\n</ul>\n</li>\n<li>触发器会在某个表执行以下语句时而自动执行：DELETE、INSERT、UPDATE\n<ul>\n<li>必须指定在语句执行之前还是之后自动执行（前：BEFORE，后：AFTER）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"mysql\"><a class=\"header-anchor\" href=\"#mysql\">☆</a>MySQL</h3>\n<ol>\n<li>\n<p>MySQL主键</p>\n<ul>\n<li>其值能唯一地标识表中的每一行</li>\n</ul>\n</li>\n<li>\n<p>事务</p>\n<ul>\n<li>用于处理操作量大，复杂度高的数据</li>\n<li>只有InnoDB支持事务</li>\n<li>ACID</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"其他\"><a class=\"header-anchor\" href=\"#其他\">☆</a>其他</h2>\n<ul>\n<li>new和malloc区别</li>\n</ul>\n<ol>\n<li>malloc和new都是在堆上开辟内存的</li>\n<li>malloc只负责开辟内存，没有初始化功能</li>\n<li>new不但开辟内存，还可以进行初始化</li>\n<li>malloc是函数，开辟内存需要传入字节数</li>\n<li>malloc开辟内存失败返回NULL，new开辟内存失败抛出bad_alloc类型的异常</li>\n<li>malloc开辟的内存永远是通过free来释放的；而new单个元素内存，用的是delete，如果new[]数组，用的是delete[]来释放内存</li>\n<li>malloc开辟内存只有一种方式，而new有四种分别是普通的new（内存开辟失败抛出bad_alloc异常）, nothrow版本的new，const new以及定位new</li>\n</ol>\n<ul>\n<li>闭包\n<ul>\n<li>闭包函数：声明一个在函数中的函数</li>\n<li>内部函数总是可以访问其所在的外部函数中声明的参数和变量，即使在其外部函数被返回（寿命终结）了之后。</li>\n<li>特点：\n<ul>\n<li>外部函数访问内部变量成为可能</li>\n<li>局部变量常驻内存</li>\n<li>避免使用全局变量、防止全局变量污染</li>\n<li>会造成内存泄漏</li>\n</ul>\n</li>\n<li>每次外部函数执行的时候，外部函数的引用地址不同，都会重新创建一个新的地址</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"python\"><a class=\"header-anchor\" href=\"#python\">☆</a>python</h2>\n<ul>\n<li>如何在Python中实现多线程？</li>\n</ul>\n<ol>\n<li>\n<p>答： Python有一个multi-threading包，但是如果你想让multi-thread加速你的代码，那么使用它通常不是一个好主意。</p>\n</li>\n<li>\n<p>Python有一个名为Global Interpreter Lock(GIL)的结构。 GIL确保只有一个“线程”可以在任何时候执行。一个线程获取GIL，做一点工作，然后将GIL传递到下一个线程。</p>\n</li>\n<li>\n<p>这种情况很快发生，因此对于人眼看来，您的线程似乎并行执行，但它们实际上只是轮流使用相同的CPU核心。</p>\n</li>\n<li>\n<p>所有这些GIL传递都增加了执行的开销。这意味着如果您想让代码运行得更快，那么使用线程包通常不是一个好主意。</p>\n</li>\n</ol>\n<ul>\n<li>这是什么意思： *args，**kwargs？我们为什么要用呢？</li>\n</ul>\n<p>我们用<code>*args</code>当我们不确定将多少个参数传递给函数时，或者我们是否要将存储的列表或参数元组传递给函数时。<code>**kwargs</code>当我们不知道将多少关键字参数传递给函数时，或者它可以用于将字典的值作为关键字参数传递时使用。标识符args和kwargs是一个约定，你也可以使用<code>*bob</code>和<code>**billy</code>，但这不是明智之举.</p>\n<ul>\n<li>\n<p>计算出从你生日之日起到今天一共过了多少天？（python、go、shell均可）</p>\n</li>\n<li>\n<p>逆序输出偶数的平方 [1,2,3,4,5,6,7,8,9]</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#列表切片</span></span><br><span class=\"line\">list[i:j]</span><br><span class=\"line\">list[i:j:<span class=\"number\">2</span>] <span class=\"comment\">#取i到j，步长为2</span></span><br><span class=\"line\"><span class=\"comment\">#取奇数位</span></span><br><span class=\"line\">list[::<span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"comment\">#取偶数位</span></span><br><span class=\"line\">list[<span class=\"number\">1</span>::<span class=\"number\">2</span>]</span><br></pre></td></tr></table></figure>\n<h2 id=\"面向对象\"><a class=\"header-anchor\" href=\"#面向对象\">☆</a>面向对象</h2>\n<h3 id=\"思想\"><a class=\"header-anchor\" href=\"#思想\">☆</a>思想</h3>\n<ol>\n<li>★★★ 面向对象三大特性\n<ul>\n<li>继承：父类指向子类时为向上转型</li>\n<li>封装：减少耦合、减轻维护负担、提高可重用性、减少重构风险</li>\n<li>多态：编译时多态与运行时多态\n<ul>\n<li>运行时多态：继承、覆盖（重写）、向上转型</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>★☆☆ 设计原则\n<ul>\n<li>单一责任原则SRP</li>\n<li>开放封闭原则OCP</li>\n<li>李氏替换原则LSP</li>\n<li>接口分离原则ISP</li>\n<li>依赖倒置原则DIP</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"设计模式\"><a class=\"header-anchor\" href=\"#设计模式\">☆</a>设计模式</h3>\n<h2 id=\"java\"><a class=\"header-anchor\" href=\"#java\">☆</a>Java</h2>\n<h3 id=\"基础-v3\"><a class=\"header-anchor\" href=\"#基础-v3\">☆</a>基础</h3>\n<ol>\n<li>基本类型与包装类型\n<ul>\n<li>byte/8 char/16 short/16 int/32 float/32 double/64 long/64 boolean/~</li>\n</ul>\n</li>\n<li>缓存池、new Integer(123) 与 Integer.valueOf(123) 的区别\n<ul>\n<li>Integer 缓存池的大小默认为 -128~127</li>\n</ul>\n</li>\n<li>String不可变的原因、好处\n<ul>\n<li>final 声明、不可被继承</li>\n<li>Java8 中使用 char 存储、Java9 后使用byte数组存储</li>\n<li>可以缓存hash值、String Pool的需要、提高安全性（参数不变）、线程安全</li>\n<li>注意：StringBuffer可变、线程安全，StringBuilder可变、线程不安全</li>\n</ul>\n</li>\n<li>参数传递的方式、类型转换、switch\n<ul>\n<li>值传递、地址值</li>\n<li>不能隐式向下转型、<code>+=</code> 或者 <code>++</code> 运算符会执行隐式类型转换</li>\n<li>switch 不支持 long</li>\n</ul>\n</li>\n<li>Java类的初始化顺序\n<ul>\n<li>静态成员和<code>static块</code> -&gt; 普通成员和非<code>static</code>块 -&gt; 构造函数</li>\n<li>父类静态 -&gt; 子类静态 -&gt; 父类普通 -&gt; 父类构造 -&gt; 子类普通 -&gt; 子类构造</li>\n</ul>\n</li>\n<li><code>equal()</code> 与 <code>==</code> 的区别\n<ul>\n<li>对于基本类型，== 判断两个值是否相等，基本类型没有 equals() 方法</li>\n<li>对于引用类型，== 判断两个变量是否引用同一个对象，而 equals() 判断引用的对象是否等价</li>\n</ul>\n</li>\n<li>在覆盖 equals() 方法时应当总是覆盖 hashCode() 方法，保证等价的两个对象哈希值也相等</li>\n<li>clone()、浅拷贝、深拷贝\n<ul>\n<li>clone() 是 Object 的 protected 方法、需要显式重写</li>\n<li>浅拷贝对象和原始对象的引用类型引用同一个对象</li>\n<li>深拷贝对象和原始对象的引用类型引用不同对象</li>\n<li>clone替代：拷贝构造函数、拷贝工厂</li>\n</ul>\n</li>\n<li>反射的优缺点\n<ul>\n<li>定义：允许运行中的 Java 程序获取自身的信息，并且可以操作类或对象的内部属性</li>\n<li>优点：可扩展性、类浏览器和可视化开发环境、调试器和测试工具</li>\n<li>缺点：性能开销高、安全限制、内部暴露</li>\n</ul>\n</li>\n<li>Java与c++的区别\n<ul>\n<li>Java面向对象，c++兼容c、可以面向过程</li>\n<li>Java跨平台</li>\n<li>Java无指针、自动垃圾回收</li>\n<li>Java不支持多重继承，c++可以</li>\n<li>Java不支持操作符重载</li>\n<li>c++可以使用goto</li>\n</ul>\n</li>\n<li>泛形相关\n<ul>\n<li>允许在定义类、接口、方法时使用类型形参，在声明变量、创建对象、调用方法时再传入实际类型参数</li>\n<li>好处：编译时检查类型安全、隐式强制转换</li>\n<li>工作方式：通过类型擦除实现</li>\n<li>限定通配符：<? extends T> <? super T> 非限定通配符：<?></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"容器-集合\"><a class=\"header-anchor\" href=\"#容器-集合\">☆</a>容器（集合）</h3>\n<ul>\n<li><a href=\"https://www.jianshu.com/p/75adf47958a7\" target=\"_blank\" rel=\"noopener\">HashMap 相关面试题及其解答</a></li>\n</ul>\n","site":{"data":{}},"length":8570,"excerpt":"","more":"<h2 id=\"操作系统\"><a class=\"header-anchor\" href=\"#操作系统\">☆</a>操作系统</h2>\n<h3 id=\"基础\"><a class=\"header-anchor\" href=\"#基础\">☆</a>基础</h3>\n<ul>\n<li>★★★ 进程与线程的本质区别、以及各自的使用场景</li>\n</ul>\n<ol>\n<li>进程是资源分配的基本单位，线程是调度的基本单位。</li>\n<li>同一进程的线程，对共享，栈私有，共享地址空间。</li>\n<li>线程间可以直接通信，进程间需要经过IPC。</li>\n<li>多进程：编程容易，不用考虑锁和同步资源问题，容错性强，数据隔离</li>\n<li>多线程：创建快，数据共享，切换快，非均质服务</li>\n</ol>\n<ul>\n<li>★★★ 进程调度算法的特点以及使用场景</li>\n</ul>\n<ol>\n<li>FCFS（先来先服务）：有利于长作业，不利于短作业，非抢占</li>\n<li>SJF（短作业优先）：估计最短运行时间调度，长作业可能会被饿死，非抢占</li>\n<li>SRTN（最短剩余时间优先）：最短作业优先的抢占式，按剩余运行时间调度</li>\n</ol>\n<ul>\n<li>★★★ 进程通信方法的特点以及使用场景★</li>\n</ul>\n<ol>\n<li>管道（无名管道）：半双工，父子、兄弟进程间使用，pipe()</li>\n<li>FIFO（命名管道、有名管道）：客户服务器间应用，fifo()</li>\n<li>消息队列：独立于读写进程、避免了同步阻塞、有选择性接受</li>\n<li>信号量：控制多进程访问共享数据</li>\n<li>共享存储：速度最快</li>\n<li>套接字：不同机器间进程通信</li>\n</ol>\n<ul>\n<li>★★★ 死锁问题</li>\n</ul>\n<p>原因：系统资源不足、进程运行推进的顺序不合适、资源分配不当等</p>\n<ol>\n<li>必要条件：互斥、请求保持、不可抢占、环路等待</li>\n<li>检测：- 每种类型一个资源：对访问过的节点进行标记 - 每种类型多个资源：资源总量进行计算</li>\n<li>解决：剥夺资源、撤销进程、利用抢占、回滚、杀死进程恢复</li>\n<li>预防：破坏四个必要条件</li>\n<li>避免：安全状态检测、银行家算法</li>\n</ol>\n<p>数据库中解决死锁：</p>\n<ol>\n<li>按同一顺序访问对象。</li>\n<li>避免事务中的用户交互。</li>\n<li>保持事务简短并在一个批处理中。</li>\n<li>使用低隔离级别。</li>\n<li>使用绑定连接。</li>\n<li>用存储过程查出引起死锁的进程和SQL语句。</li>\n</ol>\n<ul>\n<li>★★★ 虚拟内存的作用，分页系统实现虚拟内存原理</li>\n</ul>\n<ol>\n<li>让物理内存扩充成更大的逻辑内存，从而让程序获得更多的可用内存</li>\n<li>分页地址映射、内存管理单元（MMU）</li>\n<li>虚拟地址：页面号、偏移量</li>\n</ol>\n<ul>\n<li>★★★ 页面置换算法的原理</li>\n</ul>\n<ol>\n<li>最近最久未使用（LRU）非常重要</li>\n<li>最近未使用（NRU）：使用链表实现，在Redis上作为缓存置换算法</li>\n<li>先进先出（FIFO）</li>\n<li>第二次机会：读写时R = 1，替换时R若为1，则改为0放在尾端，不换出</li>\n<li>时钟</li>\n</ol>\n<ul>\n<li>★★★ 比较分页与分段的区别</li>\n</ul>\n<ol>\n<li>分页透明、分段需要程序员划分</li>\n<li>分页为一维地址空间、分段为二维</li>\n<li>页大小不变、段大小可变</li>\n<li>分页：虚拟内存，分段：程序和数据在逻辑上独立、有利于共享和保护</li>\n</ol>\n<ul>\n<li>★★★ 分析静态链接的不足，以及动态链接的特点★</li>\n</ul>\n<ol>\n<li>不足：静态库更新时那么整个程序都要重新进行链接，对于 printf 这种标准函数库，如果每个程序都要有代码，这会极大浪费资源</li>\n<li>动态：给定的文件系统中一个库只有一个文件，一个副本可以被不同的正在运行的进程共享</li>\n</ol>\n<ul>\n<li>★★☆ 常见进程同步问题★</li>\n</ul>\n<ol>\n<li>哲学家进餐</li>\n<li>读者-写者</li>\n</ol>\n<ul>\n<li>★★☆ 协程的作用</li>\n</ul>\n<ol>\n<li>协程是单进程单线程的超越函数的调度机制，它通过一定的调度手段进行调度</li>\n<li>可重入能力，类似与函数</li>\n<li>用来控制过程输出状态的那些输入状态的管理工作</li>\n</ol>\n<ul>\n<li>\n<p>协程的优势，协程的轻量性体现在哪里？</p>\n<ul>\n<li>用户自己控制切换时机，不需要陷入内核态</li>\n<li>没有线程切换的开销</li>\n<li>不需要多线程锁机制，只要一个线程</li>\n</ul>\n</li>\n<li>\n<p>线程与堆栈的关系</p>\n<ul>\n<li>栈是线程私有的（局部变量、操作数、动态链接）</li>\n<li>堆是线程共享的（对象的实例和数组）</li>\n<li>方法区也是线程共享的</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>\n<p>★☆☆ 进程状态</p>\n<ul>\n<li>就绪：经调度算法可以转为运行</li>\n<li>运行：cpu时间片用完后转为就绪</li>\n<li>阻塞：缺少资源</li>\n</ul>\n</li>\n<li>\n<p>★☆☆ 线程实现的方式（Java），优劣</p>\n<ul>\n<li>继承Thread类，并重写其run()方法</li>\n<li>实现Runnable接口，并实现其run()方法</li>\n<li>实现Callable接口，并实现其call()方法</li>\n<li>实现接口会更好一些：Java 不支持多重继承，因此继承了 Thread 类就无法继承其它类，但是可以实现多个接口</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"linux\"><a class=\"header-anchor\" href=\"#linux\">☆</a>Linux</h3>\n<ul>\n<li>★★★ 硬链接与软链接的区别</li>\n</ul>\n<ol>\n<li>硬链接：文件1 和 文件2 直接指向内存 <code>ln file1 file2</code></li>\n<li>软链接：指向另外一个文件 <code>ln -s file1 file2</code></li>\n</ol>\n<ul>\n<li>★★★ 僵尸进程与孤儿进程的区别，从 SIGCHLD 分析产生僵尸进程的原因</li>\n</ul>\n<ol>\n<li>僵尸进程：子进程退出后，父进程未调用wait()waitpid()，进程描述符未释放</li>\n<li>孤儿进程：父进程退出，子进程运行，会被init进程收养，没有危害</li>\n<li>杀死僵尸进程的父进程，僵尸进程变为孤儿进程</li>\n</ol>\n<ul>\n<li>★★☆ 文件系统的原理，特别是 inode 和 block。数据恢复原理</li>\n</ul>\n<ol>\n<li>inode：一个文件占用一个 inode，记录文件的属性，同时记录此文件的内容所在的 block 编号；</li>\n<li>block：记录文件的内容，文件太大时，会占用多个 block</li>\n<li>superblock：记录文件系统的整体信息，包括 inode 和 block 的总量、使用量、剩余量，以及文件系统的格式与相关信息等</li>\n<li>block bitmap：记录 block 是否被使用的位图</li>\n</ol>\n<ul>\n<li>Linux启动时调用那些文件★</li>\n</ul>\n<ol>\n<li>开启电源 --&gt; BIOS开机自检 --&gt; 引导程序lilo或grub --&gt; 内核的引导（kernel boot）–&gt; 执行init（rc.sysinit、rc）–&gt; mingetty(建立终端) --&gt; shell</li>\n<li>/etc/profile --&gt; ~/.bash_profile --&gt; ~/.bash_login --&gt; ~/.profile</li>\n</ol>\n<ul>\n<li>\n<p>什么是linux的daemon进程？和一般进程有什么区别？</p>\n<ul>\n<li>守护进程，随系统启动和关闭，不与客户端交互，独立于终端。</li>\n<li>使用ps axj命令查看进程时，其终端名(TTY)显示为？，ID显示为-1</li>\n</ul>\n</li>\n<li>\n<p>通过free命令查看内存时，看到的buffer和cache各表示什么含义？</p>\n<ul>\n<li>使用内存、剩余内存</li>\n<li>Cache：缓存区，是高速缓存，是文件系统的cache</li>\n<li>Buffer：缓冲区，传输数据，是块设备的读写缓冲区</li>\n</ul>\n</li>\n<li>\n<p>apache和nginx这两个web服务器有哪些区别？</p>\n<ul>\n<li>apache 是同步多进程模型，一个连接对应一个进程，而 nginx 是异步的，多个连接（万级别）可以对应一个进程</li>\n<li>nginx轻量级，处理静态文件好，</li>\n<li>apache 稳定，处理动态请求有优势</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"网络\"><a class=\"header-anchor\" href=\"#网络\">☆</a>网络</h2>\n<h3 id=\"基础-v2\"><a class=\"header-anchor\" href=\"#基础-v2\">☆</a>基础</h3>\n<ul>\n<li>★★★ <strong>各层的作用，TCP/IP 协议的特点</strong></li>\n</ul>\n<ol>\n<li>\n<p>应用层 ：为特定应用程序提供数据传输服务，例如 HTTP、DNS 等协议。数据单位为报文。</p>\n</li>\n<li>\n<p>传输层 ：为进程提供通用数据传输服务。由于应用层协议很多，定义通用的传输层协议就可以支持不断增多的应用层协议。运输层包括两种协议：传输控制协议 TCP，提供面向连接、可靠的数据传输服务，数据单位为报文段；用户数据报协议 UDP，提供无连接、尽最大努力的数据传输服务，数据单位为用户数据报。TCP 主要提供完整性服务，UDP 主要提供及时性服务。</p>\n</li>\n<li>\n<p>网络层 ：为主机提供数据传输服务。而传输层协议是为主机中的进程提供数据传输服务。网络层把传输层传递下来的报文段或者用户数据报封装成分组。</p>\n</li>\n<li>\n<p>数据链路层 ：网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，链路层协议就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。</p>\n</li>\n<li>\n<p>物理层 ：考虑的是怎样在传输媒体上传输数据比特流，而不是指具体的传输媒体。物理层的作用是尽可能屏蔽传输媒体和通信手段的差异，使数据链路层感觉不到这些差异</p>\n</li>\n<li>\n<p>表示层 ：数据压缩、加密以及数据描述，这使得应用程序不必关心在各台主机中数据内部格式不同的问题。</p>\n</li>\n<li>\n<p>会话层 ：建立及管理会话。</p>\n</li>\n<li>\n<p>TCP/IP ： 只有四层，数据链路层和物理层合并为网络接口层</p>\n</li>\n</ol>\n<ul>\n<li>\n<p>★★★ <strong>三次握手以及四次挥手具体过程、原因、TIME_WAIT</strong></p>\n</li>\n<li>\n<p>★★★ <strong>可靠传输原理，并设计可靠 UDP 协议</strong></p>\n</li>\n</ul>\n<ol>\n<li>TCP 可靠传输：超时重传</li>\n<li>可靠 UDP 协议：应用层实现确认机制、重传机制、窗口确认机制：RUDP、RTP、UDT</li>\n</ol>\n<ul>\n<li>★★★ <strong>UDP 与 TCP 比较，分析上层协议应该使用 UDP 还是 TCP</strong></li>\n</ul>\n<ol>\n<li>UDP：无连接、尽最大可能交付、一对一、多对多、多对一</li>\n<li>TCP：面向连接、可靠交付、全双工、流量拥塞控制、字节流、一对一、确认机制、重传机制、滑动窗口</li>\n</ol>\n<ul>\n<li>\n<p>★★☆ <strong>路由选择协议及特点</strong></p>\n<ul>\n<li>RIP：距离向量、15跳、固定时间交换路由表、3分钟超时</li>\n<li>OSPF：开放最短路径优先、洪泛发送信息、链路状态发生变化时发送信息</li>\n<li>BGP：比较好不是最佳，TCP，发言人制度</li>\n</ul>\n</li>\n<li>\n<p>★★☆ <strong>DNS 的端口号；TCP 还是 UDP；作为缓存、负载均衡</strong></p>\n</li>\n</ul>\n<ol>\n<li>端口：53，UDP</li>\n<li>使用TCP的情况：数据大于512字节，区域传送</li>\n</ol>\n<ul>\n<li>★★☆ <strong>TCP 拥塞控制、四种方法、理解具体原理</strong>★</li>\n</ul>\n<ol>\n<li>慢开始，拥塞避免，快重传，快恢复</li>\n<li>防止过多的数据注入到网络当中，这样可以使网络中的路由器或链路不致过载</li>\n</ol>\n<ul>\n<li>\n<p>★★☆ <strong>浏览器访问页面（输入网址后发生了什么）</strong></p>\n<ul>\n<li>DHCP配置主机信息（可略过）\n<ul>\n<li>DHCP 请求报文，UDP，255.255.255.255:67,0.0.0.0:68</li>\n<li>DHCP 服务器: DHCP ACK 报文:IP 地址、DNS 服务器的 IP 地址、默认网关路由器的 IP 地址和子网掩码</li>\n</ul>\n</li>\n<li>ARP 解析 MAC 地址(获取路由网关地址)</li>\n<li>DNS解析域名</li>\n<li>HTTP 请求页面</li>\n</ul>\n</li>\n<li>\n<p>★★☆ <strong>集线器、交换机、路由器的作用，以及所属的层次</strong></p>\n<ul>\n<li>集线器：物理层、比特</li>\n<li>交换机：链路层、自学习、按mac地址存储转发</li>\n<li>路由器：网络层、IP地址转发</li>\n</ul>\n</li>\n<li>\n<p>★★☆ <strong>以太网的特点，以及帧结构</strong></p>\n<ul>\n<li>星型结构</li>\n<li>帧结构：目的地址、源地址、类型、IP数据报、FCS</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"http\"><a class=\"header-anchor\" href=\"#http\">☆</a>HTTP</h3>\n<ul>\n<li>\n<p>★★★ GET 与 POST 比较：作用、参数、安全性、幂等性、可缓存</p>\n<ul>\n<li>POST 主要用来传输数据，而 GET 主要用来获取资源</li>\n<li>GET参数：ASCII码</li>\n<li>GET安全、幂等，POST不安全不幂等</li>\n<li>GET、HEAD可缓存，PUT、DELETE、POST不可缓存</li>\n</ul>\n</li>\n<li>\n<p>★★★ Cookie 作用、安全性问题、和 Session 的比较</p>\n<ul>\n<li>保存状态信息（会话管理、行为跟踪），cookie最大4kb</li>\n<li>作用域：默认为当前文档的主机</li>\n<li>Cookie可利用Session存在服务器端</li>\n<li>Cookie 只能存储 ASCII 码字符串，而 Session 则可以存储任何类型的数据</li>\n</ul>\n</li>\n<li>\n<p>★★★ 长连接与短连接原理以及使用场景，流水线</p>\n<ul>\n<li>长连接：建立一个TCP多次进行HTTP通信</li>\n<li>流水线：同一条长连接上连续发出请求</li>\n</ul>\n</li>\n<li>\n<p>★★★ HTTP 存在的安全性问题，以及 HTTPs 的加密、认证和完整性保护作用</p>\n<ul>\n<li>明文进行通信，不验证身份，无法证明报文的完整性</li>\n<li>使用了SSL隧道进行通信</li>\n<li>使用非对称密钥加密方式，传输对称密钥加密方式所需要的 Secret Key</li>\n<li>获取到 Secret Key 后，再使用对称密钥加密方式进行通信</li>\n<li>SSL 提供报文摘要功能来进行完整性保护、MD5</li>\n</ul>\n</li>\n<li>\n<p>★★☆ 缓存 的Cache-Control 字段、Expires 和 max-age 的区别、ETag 验证原理</p>\n<ul>\n<li>缓解服务器压力，降低客户端获取资源的延迟</li>\n<li>no-store：禁止，no-cache：强制确认，private：私有，public：公共</li>\n<li>ETag ： 资源唯一标识</li>\n</ul>\n</li>\n<li>\n<p>★★★ HTTP/1.1 的特性</p>\n<ul>\n<li>默认是长连接</li>\n<li>支持流水线</li>\n<li>支持同时打开多个 TCP 连接</li>\n<li>支持虚拟主机</li>\n<li>新增状态码 100：表示正常</li>\n<li>支持分块传输编码</li>\n<li>新增缓存处理指令 max-age</li>\n</ul>\n</li>\n<li>\n<p>★★☆ HTTP/1.x 的缺陷，以及 HTTP/2 的特点</p>\n<ul>\n<li>缺陷：多个连接才能实现并发和缩短延迟、不会压缩请求和响应首部浪费流量、没有优先级支持</li>\n<li>二进制帧分层、服务端推送、首部压缩</li>\n</ul>\n</li>\n<li>\n<p>★★☆ HTTP 与 FTP 的比较</p>\n</li>\n<li>\n<p>★☆☆ 状态码</p>\n</li>\n<li>\n<p>http协议中的keeplive是做什么的？它的适应场景是什么？</p>\n<ul>\n<li>让多个http请求共享一个Tcp连接，避免每个http新建tcp连接</li>\n<li>定时发送心跳包</li>\n</ul>\n</li>\n<li>\n<p>http请求有多少种？</p>\n<ul>\n<li>8种</li>\n<li>opions：返回服务器针对特定资源所支持的HTML请求方法、get、post、put：向指定资源位置上上传其最新内容</li>\n<li>head：查看某个页面的状态、delete、trace：回显服务器收到的请求、connect</li>\n</ul>\n</li>\n<li>\n<p>查看linux系统中tcp连接的状态和连接数量统计</p>\n<ul>\n<li><code>netstat -an | awk '/^tcp/ {++S[$NF]} END {for(a in S) print a, S[a]}'</code></li>\n</ul>\n</li>\n<li>\n<p>bash shell 里<code>$0.$?.$$</code>各表示什么含义</p>\n<ul>\n<li>$$ Shell本身的PID（ProcessID）</li>\n<li>$! Shell最后运行的后台Process的PID</li>\n<li>$? 最后运行的命令的结束代码（返回值）</li>\n<li>$# 是传给脚本的参数个数</li>\n<li>$0 是脚本本身的名字</li>\n<li>$1 是传递给该shell脚本的第一个参数</li>\n<li>$2 是传递给该shell脚本的第二个参数</li>\n<li>$@ 是传给脚本的所有参数的列表</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"socket\"><a class=\"header-anchor\" href=\"#socket\">☆</a>Socket</h3>\n<ul>\n<li>\n<p>★★★ select、poll、epoll 的原理、比较、以及使用场景；epoll 的水平触发与边缘触发</p>\n<ul>\n<li>都是多路复用的具体实现</li>\n<li>select 会修改描述符，而 poll 不会</li>\n<li>select 的描述符类型使用数组实现</li>\n<li>poll 提供了更多的事件类型，并且对描述符的重复利用上比 select 高</li>\n<li>如果一个线程对某个描述符调用了 select 或者 poll，另一个线程关闭了该描述符，会导致调用结果不确定</li>\n<li>select 和 poll 速度都比较慢</li>\n</ul>\n</li>\n<li>\n<p>★★☆ 五种 IO 模型的特点以及比较</p>\n<ul>\n<li>阻塞式I/O：阻塞应用，内核缓存–&gt;应用缓存（数据复制），复制完返回</li>\n<li>非阻塞式I/O：进程调用、返回错误码、继续执行、不断询问io（轮询），CPU利用率低</li>\n<li>I/O复用：单进程处理多IO，无进程创建切换，系统开销小</li>\n<li>信号驱动I/O：进程使用 sigaction 系统调用，内核立即返回，进程继续执行，数据到达时内核向应用发送 SIGIO 信号，进程调用 recvfrom 复制数据，CPU利用率高</li>\n<li>异步I/O：进程执行 aio_read 系统调用会立即返回，进程继续执行，不被阻塞，内核在操作完成后向进程发送信号</li>\n<li>比较\n<ul>\n<li>同步 I/O：将数据从内核缓冲区复制到应用进程缓冲区的阶段（第二阶段），应用进程会阻塞</li>\n<li>异步 I/O：第二阶段应用进程不会阻塞</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>多路复用</p>\n</li>\n<li>\n<p>Java NIO</p>\n</li>\n</ul>\n<h2 id=\"数据库\"><a class=\"header-anchor\" href=\"#数据库\">☆</a>数据库</h2>\n<ul>\n<li>数据库范式\n<ul>\n<li>第一范式：属性的原子性</li>\n<li>第二范式：属性完全依赖于主键</li>\n<li>第三范式：一个数据库表中不包含已经在其它表中包含的非主键关键字信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"sql\"><a class=\"header-anchor\" href=\"#sql\">☆</a>SQL</h3>\n<ul>\n<li>\n<p>★★☆ 手写 SQL 语句，特别是连接查询与分组查询</p>\n</li>\n<li>\n<p>★★☆ 连接查询与子查询的比较</p>\n</li>\n<li>\n<p>★★☆ drop、delete、truncate 比较</p>\n<ul>\n<li>作用\n<ul>\n<li>DELETE 删除表中 WHERE 语句指定的数据。</li>\n<li>TRUNCATE 清空表，相当于删除表中的所有数据。</li>\n<li>DROP 删除表结构</li>\n</ul>\n</li>\n<li>事务\n<ul>\n<li>DELETE 会被放到日志中以便进行回滚；</li>\n<li>TRUNCATE 和 DROP 立即生效，不会放到日志中，也就不支持回滚。</li>\n</ul>\n</li>\n<li>删除空间\n<ul>\n<li>DELETE 不会减少表和索引占用的空间；</li>\n<li>TRUNCATE 会将表和索引占用的空间恢复到初始值；</li>\n<li>DROP 会将表和索引占用的空间释放。</li>\n</ul>\n</li>\n<li>耗时\n<ul>\n<li>DELETE &lt; TRUNCATE &lt; DROP</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>★★☆ 视图的作用，以及何时能更新视图</p>\n<ul>\n<li>虚拟表</li>\n<li>简化复杂操作、保证数据安全性</li>\n<li>更改数据格式和表示</li>\n</ul>\n</li>\n<li>\n<p>★☆☆ 理解存储过程、触发器等作用</p>\n<ul>\n<li>存储过程可以看成是对一系列 SQL 操作的批处理\n<ul>\n<li>优点：封装、提高安全性，代码复用，高性能</li>\n<li>赋值用 select into ，每次只能给一个变量赋值，不支持集合的操作</li>\n</ul>\n</li>\n<li>触发器会在某个表执行以下语句时而自动执行：DELETE、INSERT、UPDATE\n<ul>\n<li>必须指定在语句执行之前还是之后自动执行（前：BEFORE，后：AFTER）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"mysql\"><a class=\"header-anchor\" href=\"#mysql\">☆</a>MySQL</h3>\n<ol>\n<li>\n<p>MySQL主键</p>\n<ul>\n<li>其值能唯一地标识表中的每一行</li>\n</ul>\n</li>\n<li>\n<p>事务</p>\n<ul>\n<li>用于处理操作量大，复杂度高的数据</li>\n<li>只有InnoDB支持事务</li>\n<li>ACID</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"其他\"><a class=\"header-anchor\" href=\"#其他\">☆</a>其他</h2>\n<ul>\n<li>new和malloc区别</li>\n</ul>\n<ol>\n<li>malloc和new都是在堆上开辟内存的</li>\n<li>malloc只负责开辟内存，没有初始化功能</li>\n<li>new不但开辟内存，还可以进行初始化</li>\n<li>malloc是函数，开辟内存需要传入字节数</li>\n<li>malloc开辟内存失败返回NULL，new开辟内存失败抛出bad_alloc类型的异常</li>\n<li>malloc开辟的内存永远是通过free来释放的；而new单个元素内存，用的是delete，如果new[]数组，用的是delete[]来释放内存</li>\n<li>malloc开辟内存只有一种方式，而new有四种分别是普通的new（内存开辟失败抛出bad_alloc异常）, nothrow版本的new，const new以及定位new</li>\n</ol>\n<ul>\n<li>闭包\n<ul>\n<li>闭包函数：声明一个在函数中的函数</li>\n<li>内部函数总是可以访问其所在的外部函数中声明的参数和变量，即使在其外部函数被返回（寿命终结）了之后。</li>\n<li>特点：\n<ul>\n<li>外部函数访问内部变量成为可能</li>\n<li>局部变量常驻内存</li>\n<li>避免使用全局变量、防止全局变量污染</li>\n<li>会造成内存泄漏</li>\n</ul>\n</li>\n<li>每次外部函数执行的时候，外部函数的引用地址不同，都会重新创建一个新的地址</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"python\"><a class=\"header-anchor\" href=\"#python\">☆</a>python</h2>\n<ul>\n<li>如何在Python中实现多线程？</li>\n</ul>\n<ol>\n<li>\n<p>答： Python有一个multi-threading包，但是如果你想让multi-thread加速你的代码，那么使用它通常不是一个好主意。</p>\n</li>\n<li>\n<p>Python有一个名为Global Interpreter Lock(GIL)的结构。 GIL确保只有一个“线程”可以在任何时候执行。一个线程获取GIL，做一点工作，然后将GIL传递到下一个线程。</p>\n</li>\n<li>\n<p>这种情况很快发生，因此对于人眼看来，您的线程似乎并行执行，但它们实际上只是轮流使用相同的CPU核心。</p>\n</li>\n<li>\n<p>所有这些GIL传递都增加了执行的开销。这意味着如果您想让代码运行得更快，那么使用线程包通常不是一个好主意。</p>\n</li>\n</ol>\n<ul>\n<li>这是什么意思： *args，**kwargs？我们为什么要用呢？</li>\n</ul>\n<p>我们用<code>*args</code>当我们不确定将多少个参数传递给函数时，或者我们是否要将存储的列表或参数元组传递给函数时。<code>**kwargs</code>当我们不知道将多少关键字参数传递给函数时，或者它可以用于将字典的值作为关键字参数传递时使用。标识符args和kwargs是一个约定，你也可以使用<code>*bob</code>和<code>**billy</code>，但这不是明智之举.</p>\n<ul>\n<li>\n<p>计算出从你生日之日起到今天一共过了多少天？（python、go、shell均可）</p>\n</li>\n<li>\n<p>逆序输出偶数的平方 [1,2,3,4,5,6,7,8,9]</p>\n</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#列表切片</span></span><br><span class=\"line\">list[i:j]</span><br><span class=\"line\">list[i:j:<span class=\"number\">2</span>] <span class=\"comment\">#取i到j，步长为2</span></span><br><span class=\"line\"><span class=\"comment\">#取奇数位</span></span><br><span class=\"line\">list[::<span class=\"number\">2</span>]</span><br><span class=\"line\"><span class=\"comment\">#取偶数位</span></span><br><span class=\"line\">list[<span class=\"number\">1</span>::<span class=\"number\">2</span>]</span><br></pre></td></tr></table></figure>\n<h2 id=\"面向对象\"><a class=\"header-anchor\" href=\"#面向对象\">☆</a>面向对象</h2>\n<h3 id=\"思想\"><a class=\"header-anchor\" href=\"#思想\">☆</a>思想</h3>\n<ol>\n<li>★★★ 面向对象三大特性\n<ul>\n<li>继承：父类指向子类时为向上转型</li>\n<li>封装：减少耦合、减轻维护负担、提高可重用性、减少重构风险</li>\n<li>多态：编译时多态与运行时多态\n<ul>\n<li>运行时多态：继承、覆盖（重写）、向上转型</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>★☆☆ 设计原则\n<ul>\n<li>单一责任原则SRP</li>\n<li>开放封闭原则OCP</li>\n<li>李氏替换原则LSP</li>\n<li>接口分离原则ISP</li>\n<li>依赖倒置原则DIP</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"设计模式\"><a class=\"header-anchor\" href=\"#设计模式\">☆</a>设计模式</h3>\n<h2 id=\"java\"><a class=\"header-anchor\" href=\"#java\">☆</a>Java</h2>\n<h3 id=\"基础-v3\"><a class=\"header-anchor\" href=\"#基础-v3\">☆</a>基础</h3>\n<ol>\n<li>基本类型与包装类型\n<ul>\n<li>byte/8 char/16 short/16 int/32 float/32 double/64 long/64 boolean/~</li>\n</ul>\n</li>\n<li>缓存池、new Integer(123) 与 Integer.valueOf(123) 的区别\n<ul>\n<li>Integer 缓存池的大小默认为 -128~127</li>\n</ul>\n</li>\n<li>String不可变的原因、好处\n<ul>\n<li>final 声明、不可被继承</li>\n<li>Java8 中使用 char 存储、Java9 后使用byte数组存储</li>\n<li>可以缓存hash值、String Pool的需要、提高安全性（参数不变）、线程安全</li>\n<li>注意：StringBuffer可变、线程安全，StringBuilder可变、线程不安全</li>\n</ul>\n</li>\n<li>参数传递的方式、类型转换、switch\n<ul>\n<li>值传递、地址值</li>\n<li>不能隐式向下转型、<code>+=</code> 或者 <code>++</code> 运算符会执行隐式类型转换</li>\n<li>switch 不支持 long</li>\n</ul>\n</li>\n<li>Java类的初始化顺序\n<ul>\n<li>静态成员和<code>static块</code> -&gt; 普通成员和非<code>static</code>块 -&gt; 构造函数</li>\n<li>父类静态 -&gt; 子类静态 -&gt; 父类普通 -&gt; 父类构造 -&gt; 子类普通 -&gt; 子类构造</li>\n</ul>\n</li>\n<li><code>equal()</code> 与 <code>==</code> 的区别\n<ul>\n<li>对于基本类型，== 判断两个值是否相等，基本类型没有 equals() 方法</li>\n<li>对于引用类型，== 判断两个变量是否引用同一个对象，而 equals() 判断引用的对象是否等价</li>\n</ul>\n</li>\n<li>在覆盖 equals() 方法时应当总是覆盖 hashCode() 方法，保证等价的两个对象哈希值也相等</li>\n<li>clone()、浅拷贝、深拷贝\n<ul>\n<li>clone() 是 Object 的 protected 方法、需要显式重写</li>\n<li>浅拷贝对象和原始对象的引用类型引用同一个对象</li>\n<li>深拷贝对象和原始对象的引用类型引用不同对象</li>\n<li>clone替代：拷贝构造函数、拷贝工厂</li>\n</ul>\n</li>\n<li>反射的优缺点\n<ul>\n<li>定义：允许运行中的 Java 程序获取自身的信息，并且可以操作类或对象的内部属性</li>\n<li>优点：可扩展性、类浏览器和可视化开发环境、调试器和测试工具</li>\n<li>缺点：性能开销高、安全限制、内部暴露</li>\n</ul>\n</li>\n<li>Java与c++的区别\n<ul>\n<li>Java面向对象，c++兼容c、可以面向过程</li>\n<li>Java跨平台</li>\n<li>Java无指针、自动垃圾回收</li>\n<li>Java不支持多重继承，c++可以</li>\n<li>Java不支持操作符重载</li>\n<li>c++可以使用goto</li>\n</ul>\n</li>\n<li>泛形相关\n<ul>\n<li>允许在定义类、接口、方法时使用类型形参，在声明变量、创建对象、调用方法时再传入实际类型参数</li>\n<li>好处：编译时检查类型安全、隐式强制转换</li>\n<li>工作方式：通过类型擦除实现</li>\n<li>限定通配符：<? extends T> <? super T> 非限定通配符：<?></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"容器-集合\"><a class=\"header-anchor\" href=\"#容器-集合\">☆</a>容器（集合）</h3>\n<ul>\n<li><a href=\"https://www.jianshu.com/p/75adf47958a7\" target=\"_blank\" rel=\"noopener\">HashMap 相关面试题及其解答</a></li>\n</ul>\n"},{"title":"前端vue项目配置与运行","copyright":false,"abbrlink":"ead1bac9","notshow":false,"description":"简单说明一下配置运行过程，及其中的坑","date":"2020-08-27T00:18:00.000Z","password":null,"image":null,"photos":[],"sticky":null,"_content":"\n\n## 环境依赖\n\n- 必需：\n    - Node.js\n    - npm\n    - vue-cli \n\n- 可选：\n    - IntelliJ IDEA （建议安装）\n        - 必须安装 `Ultimate` 版， `Community` 版不支持 web 相关功能。\n        > tips: 教育网邮箱可以官网申请一年 Ultimate 激活码\n\n## 软件安装\n\n1. Node.js\n    - 下载地址 ： https://nodejs.org/dist\n    - 建议安装 v10 ~ v12 间的版本，版本过低或者过高都会出现一些奇怪的问题：见下文。\n2. npm \n    - node.js 中集成\n3. vue-cli\n    - 打开命令行执行 `npm install vue-cli`\n\n## 项目运行\n\n### 使用命令行运行\n\n1. 克隆项目到本地，新建分支并切换\n\n```git\ngit clone http://222.129.11.38/Waver/vue.git\n\ncd vue\n\ngit checkout -b run_dev\n```\n\n2. 安装依赖包（以admin为例）\n\n```git\ncd admin\n\nnpm install\n```\n\n3. 启动项目并运行\n\n    - 首先查看一下 `package.json` 中 scripts 下面配置的启动项\n    - ![](https://data.singlelovely.cn/images/20200826220010.png)\n    - 根据启动项执行不同的命令，如在本例中就是： `npm run dev` 启动项目\n    - 如未报错的话，则会看到以下内容\n    - ![](https://data.singlelovely.cn/images/20200826215832.png)\n\n### IntelliJ IDEA 中运行\n\n1. 安装 `vue.js` 插件\n    - ![](https://data.singlelovely.cn/images/20200826220135.png)\n\n2. 导入项目\n    - File -> Open -> 选中vue文件夹 -> 点击ok\n    - ![](https://data.singlelovely.cn/images/20200826220049.png)\n\n3. 安装依赖项\n    - 根据弹出的提升点击 `npm install`\n    - ![](https://data.singlelovely.cn/images/20200826220215.png)\n    - 如未弹出，则手动在命令行进入当前目录后执行 `npm install`\n\n4. 配置运行环境\n    - 点击上方工具栏的 `Edit Configurations`\n    - ![](https://data.singlelovely.cn/images/20200826220251.png)\n    - 添加一个 npm 运行环境\n    - ![](https://data.singlelovely.cn/images/20200826220443.png)\n    - 配置运行参数\n    - ![](https://data.singlelovely.cn/images/20200826220502.png)\n    - 然后点击运行即可\n\n## 连接后端服务\n\n> 需要修改的文件有 `baseurl.config.js` 与 `vue.config.js`\n\n配置相关内容，可以参考 webpack [官方文档](https://www.webpackjs.com/configuration/)\n\n主要内容如下：\n\n```javascript baseurl.config.js\nexports.BASE_URL = {\n  'development': 'http://platform.imch.com.cn/',  // 本地环境\n  'production': {\n    '127.0.0.1': 'http://platform.imch.com.cn/', // 本地打包请求地址\n    '192.168.1.200': 'http://192.168.1.200:8093/', // 200测试机请求接口地址\n    '220.249.8.102': 'http://220.249.8.102:22334/', // 潞电外网请求接口地址\n    'localhost': 'http://yjzx.lddq.com:8285',  // 潞电外网请求接口地址\n    '192.168.0.155': 'http://192.168.0.155:8285' // 潞电内网请求接口地址\n  },\n}\nexports.IMG_URL = {\n  //'localhost': 'http://file.imch.com.cn', // 本地环境\n  //'127.0.0.1': 'http://file.imch.com.cn', // 本地环境\n  //'192.168.1.200': 'http://192.168.1.200:6003', // 200测试机\n  'localhost': 'http://yjzx.lddq.com:22333', // 潞电外网地址\n  //'192.168.0.155': 'http://192.168.0.155:22333' // 潞电内网地址\n}\n```\n\n```javascript vue.config.js\ndevServer: {\n        /* 自动打开浏览器 */\n        open: true,\n        /* 设置为0.0.0.0则所有的地址均能访问 */\n        // host: 'localhost',\n        host: '0.0.0.0',\n        port: 8081,\n        https: false,\n        hotOnly: false,\n        /* 使用代理 */\n        proxy: {\n            '/api': {\n                /* 目标代理服务器地址 */\n                // target: 'http://192.168.1.200:8093',\n                // target: 'http://192.168.1.84:8081',\n                //target: target,\n                target: \"http://yjzx.lddq.com:8285\",\n                /* 允许跨域 */\n                changeOrigin: true,\n                pathRewrite: {\n                    '^/api': ''\n                }\n            },\n        },\n    },\n\n```\n\n## 一些问题的解决\n\n### 运行时报错：cannot find module @babel/compat-data/corejs3-shipped-proposals\n\n![](https://data.singlelovely.cn/images/20200826220807.png)\n\nNode.js 版本兼容问题导致，详细问题可查看：[issues](https://github.com/storybookjs/storybook/issues/10477)、[stackoverflow](https://stackoverflow.com/questions/61238650/i-am-having-an-issue-with-babel-building-angular-app-for-production)\n\n解决方法：\n1. 更换 node 版本\n2. 编辑 `package.json` 文件，在 `\"devDependencies\"` 下添加一行，然后执行`npm install`\n```json\n\"@babel/compat-data\": \"7.9.0\"\n```\n3. 控制台执行以下命令\n```\nnpm install -D babel-loader @babel/core @babel/preset-env webpack\n```\n\n### 页面控制台报错：Cross-Origin Read Blocking\n\n`baseurl.config.js` 文件中配置的地址冲突所造成的跨域问题，将不需要的地址注释掉即可\n\n详细问题原因可以查看：[stackoverflow](https://stackoverflow.com/questions/61238650/i-am-having-an-issue-with-babel-building-angular-app-for-production)\n\n### 运行是无法编译\n\n偶发性问题，可以根据报错参数，具体查询 nodejs 的[文档](https://nodejs.org/api/errors.html#errors_common_system_errors)\n\n\n\n&ensp;\n&ensp;\n&ensp;\n\n> 写的比较仓促，有问题请及时反馈。\n\n\n\n","source":"_posts/前端vue项目配置与运行.md","raw":"---\ntitle: 前端vue项目配置与运行\ncopyright: false\nabbrlink: ead1bac9\nnotshow: false\ndescription: 简单说明一下配置运行过程，及其中的坑\ndate: 2020-08-27 08:18:00\ntags:\ncategories:\npassword:\nimage:\nphotos:\nsticky:\n---\n\n\n## 环境依赖\n\n- 必需：\n    - Node.js\n    - npm\n    - vue-cli \n\n- 可选：\n    - IntelliJ IDEA （建议安装）\n        - 必须安装 `Ultimate` 版， `Community` 版不支持 web 相关功能。\n        > tips: 教育网邮箱可以官网申请一年 Ultimate 激活码\n\n## 软件安装\n\n1. Node.js\n    - 下载地址 ： https://nodejs.org/dist\n    - 建议安装 v10 ~ v12 间的版本，版本过低或者过高都会出现一些奇怪的问题：见下文。\n2. npm \n    - node.js 中集成\n3. vue-cli\n    - 打开命令行执行 `npm install vue-cli`\n\n## 项目运行\n\n### 使用命令行运行\n\n1. 克隆项目到本地，新建分支并切换\n\n```git\ngit clone http://222.129.11.38/Waver/vue.git\n\ncd vue\n\ngit checkout -b run_dev\n```\n\n2. 安装依赖包（以admin为例）\n\n```git\ncd admin\n\nnpm install\n```\n\n3. 启动项目并运行\n\n    - 首先查看一下 `package.json` 中 scripts 下面配置的启动项\n    - ![](https://data.singlelovely.cn/images/20200826220010.png)\n    - 根据启动项执行不同的命令，如在本例中就是： `npm run dev` 启动项目\n    - 如未报错的话，则会看到以下内容\n    - ![](https://data.singlelovely.cn/images/20200826215832.png)\n\n### IntelliJ IDEA 中运行\n\n1. 安装 `vue.js` 插件\n    - ![](https://data.singlelovely.cn/images/20200826220135.png)\n\n2. 导入项目\n    - File -> Open -> 选中vue文件夹 -> 点击ok\n    - ![](https://data.singlelovely.cn/images/20200826220049.png)\n\n3. 安装依赖项\n    - 根据弹出的提升点击 `npm install`\n    - ![](https://data.singlelovely.cn/images/20200826220215.png)\n    - 如未弹出，则手动在命令行进入当前目录后执行 `npm install`\n\n4. 配置运行环境\n    - 点击上方工具栏的 `Edit Configurations`\n    - ![](https://data.singlelovely.cn/images/20200826220251.png)\n    - 添加一个 npm 运行环境\n    - ![](https://data.singlelovely.cn/images/20200826220443.png)\n    - 配置运行参数\n    - ![](https://data.singlelovely.cn/images/20200826220502.png)\n    - 然后点击运行即可\n\n## 连接后端服务\n\n> 需要修改的文件有 `baseurl.config.js` 与 `vue.config.js`\n\n配置相关内容，可以参考 webpack [官方文档](https://www.webpackjs.com/configuration/)\n\n主要内容如下：\n\n```javascript baseurl.config.js\nexports.BASE_URL = {\n  'development': 'http://platform.imch.com.cn/',  // 本地环境\n  'production': {\n    '127.0.0.1': 'http://platform.imch.com.cn/', // 本地打包请求地址\n    '192.168.1.200': 'http://192.168.1.200:8093/', // 200测试机请求接口地址\n    '220.249.8.102': 'http://220.249.8.102:22334/', // 潞电外网请求接口地址\n    'localhost': 'http://yjzx.lddq.com:8285',  // 潞电外网请求接口地址\n    '192.168.0.155': 'http://192.168.0.155:8285' // 潞电内网请求接口地址\n  },\n}\nexports.IMG_URL = {\n  //'localhost': 'http://file.imch.com.cn', // 本地环境\n  //'127.0.0.1': 'http://file.imch.com.cn', // 本地环境\n  //'192.168.1.200': 'http://192.168.1.200:6003', // 200测试机\n  'localhost': 'http://yjzx.lddq.com:22333', // 潞电外网地址\n  //'192.168.0.155': 'http://192.168.0.155:22333' // 潞电内网地址\n}\n```\n\n```javascript vue.config.js\ndevServer: {\n        /* 自动打开浏览器 */\n        open: true,\n        /* 设置为0.0.0.0则所有的地址均能访问 */\n        // host: 'localhost',\n        host: '0.0.0.0',\n        port: 8081,\n        https: false,\n        hotOnly: false,\n        /* 使用代理 */\n        proxy: {\n            '/api': {\n                /* 目标代理服务器地址 */\n                // target: 'http://192.168.1.200:8093',\n                // target: 'http://192.168.1.84:8081',\n                //target: target,\n                target: \"http://yjzx.lddq.com:8285\",\n                /* 允许跨域 */\n                changeOrigin: true,\n                pathRewrite: {\n                    '^/api': ''\n                }\n            },\n        },\n    },\n\n```\n\n## 一些问题的解决\n\n### 运行时报错：cannot find module @babel/compat-data/corejs3-shipped-proposals\n\n![](https://data.singlelovely.cn/images/20200826220807.png)\n\nNode.js 版本兼容问题导致，详细问题可查看：[issues](https://github.com/storybookjs/storybook/issues/10477)、[stackoverflow](https://stackoverflow.com/questions/61238650/i-am-having-an-issue-with-babel-building-angular-app-for-production)\n\n解决方法：\n1. 更换 node 版本\n2. 编辑 `package.json` 文件，在 `\"devDependencies\"` 下添加一行，然后执行`npm install`\n```json\n\"@babel/compat-data\": \"7.9.0\"\n```\n3. 控制台执行以下命令\n```\nnpm install -D babel-loader @babel/core @babel/preset-env webpack\n```\n\n### 页面控制台报错：Cross-Origin Read Blocking\n\n`baseurl.config.js` 文件中配置的地址冲突所造成的跨域问题，将不需要的地址注释掉即可\n\n详细问题原因可以查看：[stackoverflow](https://stackoverflow.com/questions/61238650/i-am-having-an-issue-with-babel-building-angular-app-for-production)\n\n### 运行是无法编译\n\n偶发性问题，可以根据报错参数，具体查询 nodejs 的[文档](https://nodejs.org/api/errors.html#errors_common_system_errors)\n\n\n\n&ensp;\n&ensp;\n&ensp;\n\n> 写的比较仓促，有问题请及时反馈。\n\n\n\n","slug":"前端vue项目配置与运行","published":1,"updated":"2020-08-27T00:36:54.971Z","_id":"ckec2ukvm000050upzlunneex","comments":1,"layout":"post","link":"","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"\\assets\\js\\Meting.min.js\"></script><h2 id=\"环境依赖\"><a class=\"header-anchor\" href=\"#环境依赖\">☆</a>环境依赖</h2>\n<ul>\n<li>\n<p>必需：</p>\n<ul>\n<li>Node.js</li>\n<li>npm</li>\n<li>vue-cli</li>\n</ul>\n</li>\n<li>\n<p>可选：</p>\n<ul>\n<li>IntelliJ IDEA （建议安装）\n<ul>\n<li>必须安装 <code>Ultimate</code> 版， <code>Community</code> 版不支持 web 相关功能。</li>\n</ul>\n<blockquote>\n<p>tips: 教育网邮箱可以官网申请一年 Ultimate 激活码</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"软件安装\"><a class=\"header-anchor\" href=\"#软件安装\">☆</a>软件安装</h2>\n<ol>\n<li>Node.js\n<ul>\n<li>下载地址 ： <a href=\"https://nodejs.org/dist\" target=\"_blank\" rel=\"noopener\">https://nodejs.org/dist</a></li>\n<li>建议安装 v10 ~ v12 间的版本，版本过低或者过高都会出现一些奇怪的问题：见下文。</li>\n</ul>\n</li>\n<li>npm\n<ul>\n<li>node.js 中集成</li>\n</ul>\n</li>\n<li>vue-cli\n<ul>\n<li>打开命令行执行 <code>npm install vue-cli</code></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"项目运行\"><a class=\"header-anchor\" href=\"#项目运行\">☆</a>项目运行</h2>\n<h3 id=\"使用命令行运行\"><a class=\"header-anchor\" href=\"#使用命令行运行\">☆</a>使用命令行运行</h3>\n<ol>\n<li>克隆项目到本地，新建分支并切换</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone http://222.129.11.38/Waver/vue.git</span><br><span class=\"line\"></span><br><span class=\"line\">cd vue</span><br><span class=\"line\"></span><br><span class=\"line\">git checkout -b run_dev</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装依赖包（以admin为例）</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd admin</span><br><span class=\"line\"></span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>\n<p>启动项目并运行</p>\n<ul>\n<li>首先查看一下 <code>package.json</code> 中 scripts 下面配置的启动项</li>\n<li><img src=\"https://data.singlelovely.cn/images/20200826220010.png\" alt></li>\n<li>根据启动项执行不同的命令，如在本例中就是： <code>npm run dev</code> 启动项目</li>\n<li>如未报错的话，则会看到以下内容</li>\n<li><img src=\"https://data.singlelovely.cn/images/20200826215832.png\" alt></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"intellij-idea-中运行\"><a class=\"header-anchor\" href=\"#intellij-idea-中运行\">☆</a>IntelliJ IDEA 中运行</h3>\n<ol>\n<li>\n<p>安装 <code>vue.js</code> 插件</p>\n<ul>\n<li><img src=\"https://data.singlelovely.cn/images/20200826220135.png\" alt></li>\n</ul>\n</li>\n<li>\n<p>导入项目</p>\n<ul>\n<li>File -&gt; Open -&gt; 选中vue文件夹 -&gt; 点击ok</li>\n<li><img src=\"https://data.singlelovely.cn/images/20200826220049.png\" alt></li>\n</ul>\n</li>\n<li>\n<p>安装依赖项</p>\n<ul>\n<li>根据弹出的提升点击 <code>npm install</code></li>\n<li><img src=\"https://data.singlelovely.cn/images/20200826220215.png\" alt></li>\n<li>如未弹出，则手动在命令行进入当前目录后执行 <code>npm install</code></li>\n</ul>\n</li>\n<li>\n<p>配置运行环境</p>\n<ul>\n<li>点击上方工具栏的 <code>Edit Configurations</code></li>\n<li><img src=\"https://data.singlelovely.cn/images/20200826220251.png\" alt></li>\n<li>添加一个 npm 运行环境</li>\n<li><img src=\"https://data.singlelovely.cn/images/20200826220443.png\" alt></li>\n<li>配置运行参数</li>\n<li><img src=\"https://data.singlelovely.cn/images/20200826220502.png\" alt></li>\n<li>然后点击运行即可</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"连接后端服务\"><a class=\"header-anchor\" href=\"#连接后端服务\">☆</a>连接后端服务</h2>\n<blockquote>\n<p>需要修改的文件有 <code>baseurl.config.js</code> 与 <code>vue.config.js</code></p>\n</blockquote>\n<p>配置相关内容，可以参考 webpack <a href=\"https://www.webpackjs.com/configuration/\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p>主要内容如下：</p>\n<figure class=\"highlight javascript\"><figcaption><span>baseurl.config.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exports.BASE_URL = &#123;</span><br><span class=\"line\">  <span class=\"string\">'development'</span>: <span class=\"string\">'http://platform.imch.com.cn/'</span>,  <span class=\"comment\">// 本地环境</span></span><br><span class=\"line\">  <span class=\"string\">'production'</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">'127.0.0.1'</span>: <span class=\"string\">'http://platform.imch.com.cn/'</span>, <span class=\"comment\">// 本地打包请求地址</span></span><br><span class=\"line\">    <span class=\"string\">'192.168.1.200'</span>: <span class=\"string\">'http://192.168.1.200:8093/'</span>, <span class=\"comment\">// 200测试机请求接口地址</span></span><br><span class=\"line\">    <span class=\"string\">'220.249.8.102'</span>: <span class=\"string\">'http://220.249.8.102:22334/'</span>, <span class=\"comment\">// 潞电外网请求接口地址</span></span><br><span class=\"line\">    <span class=\"string\">'localhost'</span>: <span class=\"string\">'http://yjzx.lddq.com:8285'</span>,  <span class=\"comment\">// 潞电外网请求接口地址</span></span><br><span class=\"line\">    <span class=\"string\">'192.168.0.155'</span>: <span class=\"string\">'http://192.168.0.155:8285'</span> <span class=\"comment\">// 潞电内网请求接口地址</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.IMG_URL = &#123;</span><br><span class=\"line\">  <span class=\"comment\">//'localhost': 'http://file.imch.com.cn', // 本地环境</span></span><br><span class=\"line\">  <span class=\"comment\">//'127.0.0.1': 'http://file.imch.com.cn', // 本地环境</span></span><br><span class=\"line\">  <span class=\"comment\">//'192.168.1.200': 'http://192.168.1.200:6003', // 200测试机</span></span><br><span class=\"line\">  <span class=\"string\">'localhost'</span>: <span class=\"string\">'http://yjzx.lddq.com:22333'</span>, <span class=\"comment\">// 潞电外网地址</span></span><br><span class=\"line\">  <span class=\"comment\">//'192.168.0.155': 'http://192.168.0.155:22333' // 潞电内网地址</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><figcaption><span>vue.config.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">devServer: &#123;</span><br><span class=\"line\">        <span class=\"comment\">/* 自动打开浏览器 */</span></span><br><span class=\"line\">        open: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"comment\">/* 设置为0.0.0.0则所有的地址均能访问 */</span></span><br><span class=\"line\">        <span class=\"comment\">// host: 'localhost',</span></span><br><span class=\"line\">        host: <span class=\"string\">'0.0.0.0'</span>,</span><br><span class=\"line\">        port: <span class=\"number\">8081</span>,</span><br><span class=\"line\">        https: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        hotOnly: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"comment\">/* 使用代理 */</span></span><br><span class=\"line\">        proxy: &#123;</span><br><span class=\"line\">            <span class=\"string\">'/api'</span>: &#123;</span><br><span class=\"line\">                <span class=\"comment\">/* 目标代理服务器地址 */</span></span><br><span class=\"line\">                <span class=\"comment\">// target: 'http://192.168.1.200:8093',</span></span><br><span class=\"line\">                <span class=\"comment\">// target: 'http://192.168.1.84:8081',</span></span><br><span class=\"line\">                <span class=\"comment\">//target: target,</span></span><br><span class=\"line\">                target: <span class=\"string\">\"http://yjzx.lddq.com:8285\"</span>,</span><br><span class=\"line\">                <span class=\"comment\">/* 允许跨域 */</span></span><br><span class=\"line\">                changeOrigin: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                pathRewrite: &#123;</span><br><span class=\"line\">                    <span class=\"string\">'^/api'</span>: <span class=\"string\">''</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"一些问题的解决\"><a class=\"header-anchor\" href=\"#一些问题的解决\">☆</a>一些问题的解决</h2>\n<h3 id=\"运行时报错：cannot-find-module-babel-compat-data-corejs3-shipped-proposals\"><a class=\"header-anchor\" href=\"#运行时报错：cannot-find-module-babel-compat-data-corejs3-shipped-proposals\">☆</a>运行时报错：cannot find module @babel/compat-data/corejs3-shipped-proposals</h3>\n<p><img src=\"https://data.singlelovely.cn/images/20200826220807.png\" alt></p>\n<p>Node.js 版本兼容问题导致，详细问题可查看：<a href=\"https://github.com/storybookjs/storybook/issues/10477\" target=\"_blank\" rel=\"noopener\">issues</a>、<a href=\"https://stackoverflow.com/questions/61238650/i-am-having-an-issue-with-babel-building-angular-app-for-production\" target=\"_blank\" rel=\"noopener\">stackoverflow</a></p>\n<p>解决方法：</p>\n<ol>\n<li>更换 node 版本</li>\n<li>编辑 <code>package.json</code> 文件，在 <code>&quot;devDependencies&quot;</code> 下添加一行，然后执行<code>npm install</code></li>\n</ol>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"@babel/compat-data\": \"7.9.0\"</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>控制台执行以下命令</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -D babel-loader @babel/core @babel/preset-env webpack</span><br></pre></td></tr></table></figure>\n<h3 id=\"页面控制台报错：cross-origin-read-blocking\"><a class=\"header-anchor\" href=\"#页面控制台报错：cross-origin-read-blocking\">☆</a>页面控制台报错：Cross-Origin Read Blocking</h3>\n<p><code>baseurl.config.js</code> 文件中配置的地址冲突所造成的跨域问题，将不需要的地址注释掉即可</p>\n<p>详细问题原因可以查看：<a href=\"https://stackoverflow.com/questions/61238650/i-am-having-an-issue-with-babel-building-angular-app-for-production\" target=\"_blank\" rel=\"noopener\">stackoverflow</a></p>\n<h3 id=\"运行是无法编译\"><a class=\"header-anchor\" href=\"#运行是无法编译\">☆</a>运行是无法编译</h3>\n<p>偶发性问题，可以根据报错参数，具体查询 nodejs 的<a href=\"https://nodejs.org/api/errors.html#errors_common_system_errors\" target=\"_blank\" rel=\"noopener\">文档</a></p>\n<p> <br>\n <br>\n </p>\n<blockquote>\n<p>写的比较仓促，有问题请及时反馈。</p>\n</blockquote>\n","site":{"data":{}},"length":2772,"excerpt":"","more":"<h2 id=\"环境依赖\"><a class=\"header-anchor\" href=\"#环境依赖\">☆</a>环境依赖</h2>\n<ul>\n<li>\n<p>必需：</p>\n<ul>\n<li>Node.js</li>\n<li>npm</li>\n<li>vue-cli</li>\n</ul>\n</li>\n<li>\n<p>可选：</p>\n<ul>\n<li>IntelliJ IDEA （建议安装）\n<ul>\n<li>必须安装 <code>Ultimate</code> 版， <code>Community</code> 版不支持 web 相关功能。</li>\n</ul>\n<blockquote>\n<p>tips: 教育网邮箱可以官网申请一年 Ultimate 激活码</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"软件安装\"><a class=\"header-anchor\" href=\"#软件安装\">☆</a>软件安装</h2>\n<ol>\n<li>Node.js\n<ul>\n<li>下载地址 ： <a href=\"https://nodejs.org/dist\" target=\"_blank\" rel=\"noopener\">https://nodejs.org/dist</a></li>\n<li>建议安装 v10 ~ v12 间的版本，版本过低或者过高都会出现一些奇怪的问题：见下文。</li>\n</ul>\n</li>\n<li>npm\n<ul>\n<li>node.js 中集成</li>\n</ul>\n</li>\n<li>vue-cli\n<ul>\n<li>打开命令行执行 <code>npm install vue-cli</code></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"项目运行\"><a class=\"header-anchor\" href=\"#项目运行\">☆</a>项目运行</h2>\n<h3 id=\"使用命令行运行\"><a class=\"header-anchor\" href=\"#使用命令行运行\">☆</a>使用命令行运行</h3>\n<ol>\n<li>克隆项目到本地，新建分支并切换</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone http://222.129.11.38/Waver/vue.git</span><br><span class=\"line\"></span><br><span class=\"line\">cd vue</span><br><span class=\"line\"></span><br><span class=\"line\">git checkout -b run_dev</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装依赖包（以admin为例）</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd admin</span><br><span class=\"line\"></span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>\n<p>启动项目并运行</p>\n<ul>\n<li>首先查看一下 <code>package.json</code> 中 scripts 下面配置的启动项</li>\n<li><img src=\"https://data.singlelovely.cn/images/20200826220010.png\" alt></li>\n<li>根据启动项执行不同的命令，如在本例中就是： <code>npm run dev</code> 启动项目</li>\n<li>如未报错的话，则会看到以下内容</li>\n<li><img src=\"https://data.singlelovely.cn/images/20200826215832.png\" alt></li>\n</ul>\n</li>\n</ol>\n<h3 id=\"intellij-idea-中运行\"><a class=\"header-anchor\" href=\"#intellij-idea-中运行\">☆</a>IntelliJ IDEA 中运行</h3>\n<ol>\n<li>\n<p>安装 <code>vue.js</code> 插件</p>\n<ul>\n<li><img src=\"https://data.singlelovely.cn/images/20200826220135.png\" alt></li>\n</ul>\n</li>\n<li>\n<p>导入项目</p>\n<ul>\n<li>File -&gt; Open -&gt; 选中vue文件夹 -&gt; 点击ok</li>\n<li><img src=\"https://data.singlelovely.cn/images/20200826220049.png\" alt></li>\n</ul>\n</li>\n<li>\n<p>安装依赖项</p>\n<ul>\n<li>根据弹出的提升点击 <code>npm install</code></li>\n<li><img src=\"https://data.singlelovely.cn/images/20200826220215.png\" alt></li>\n<li>如未弹出，则手动在命令行进入当前目录后执行 <code>npm install</code></li>\n</ul>\n</li>\n<li>\n<p>配置运行环境</p>\n<ul>\n<li>点击上方工具栏的 <code>Edit Configurations</code></li>\n<li><img src=\"https://data.singlelovely.cn/images/20200826220251.png\" alt></li>\n<li>添加一个 npm 运行环境</li>\n<li><img src=\"https://data.singlelovely.cn/images/20200826220443.png\" alt></li>\n<li>配置运行参数</li>\n<li><img src=\"https://data.singlelovely.cn/images/20200826220502.png\" alt></li>\n<li>然后点击运行即可</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"连接后端服务\"><a class=\"header-anchor\" href=\"#连接后端服务\">☆</a>连接后端服务</h2>\n<blockquote>\n<p>需要修改的文件有 <code>baseurl.config.js</code> 与 <code>vue.config.js</code></p>\n</blockquote>\n<p>配置相关内容，可以参考 webpack <a href=\"https://www.webpackjs.com/configuration/\" target=\"_blank\" rel=\"noopener\">官方文档</a></p>\n<p>主要内容如下：</p>\n<figure class=\"highlight javascript\"><figcaption><span>baseurl.config.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exports.BASE_URL = &#123;</span><br><span class=\"line\">  <span class=\"string\">'development'</span>: <span class=\"string\">'http://platform.imch.com.cn/'</span>,  <span class=\"comment\">// 本地环境</span></span><br><span class=\"line\">  <span class=\"string\">'production'</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">'127.0.0.1'</span>: <span class=\"string\">'http://platform.imch.com.cn/'</span>, <span class=\"comment\">// 本地打包请求地址</span></span><br><span class=\"line\">    <span class=\"string\">'192.168.1.200'</span>: <span class=\"string\">'http://192.168.1.200:8093/'</span>, <span class=\"comment\">// 200测试机请求接口地址</span></span><br><span class=\"line\">    <span class=\"string\">'220.249.8.102'</span>: <span class=\"string\">'http://220.249.8.102:22334/'</span>, <span class=\"comment\">// 潞电外网请求接口地址</span></span><br><span class=\"line\">    <span class=\"string\">'localhost'</span>: <span class=\"string\">'http://yjzx.lddq.com:8285'</span>,  <span class=\"comment\">// 潞电外网请求接口地址</span></span><br><span class=\"line\">    <span class=\"string\">'192.168.0.155'</span>: <span class=\"string\">'http://192.168.0.155:8285'</span> <span class=\"comment\">// 潞电内网请求接口地址</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exports.IMG_URL = &#123;</span><br><span class=\"line\">  <span class=\"comment\">//'localhost': 'http://file.imch.com.cn', // 本地环境</span></span><br><span class=\"line\">  <span class=\"comment\">//'127.0.0.1': 'http://file.imch.com.cn', // 本地环境</span></span><br><span class=\"line\">  <span class=\"comment\">//'192.168.1.200': 'http://192.168.1.200:6003', // 200测试机</span></span><br><span class=\"line\">  <span class=\"string\">'localhost'</span>: <span class=\"string\">'http://yjzx.lddq.com:22333'</span>, <span class=\"comment\">// 潞电外网地址</span></span><br><span class=\"line\">  <span class=\"comment\">//'192.168.0.155': 'http://192.168.0.155:22333' // 潞电内网地址</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><figcaption><span>vue.config.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">devServer: &#123;</span><br><span class=\"line\">        <span class=\"comment\">/* 自动打开浏览器 */</span></span><br><span class=\"line\">        open: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"comment\">/* 设置为0.0.0.0则所有的地址均能访问 */</span></span><br><span class=\"line\">        <span class=\"comment\">// host: 'localhost',</span></span><br><span class=\"line\">        host: <span class=\"string\">'0.0.0.0'</span>,</span><br><span class=\"line\">        port: <span class=\"number\">8081</span>,</span><br><span class=\"line\">        https: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        hotOnly: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"comment\">/* 使用代理 */</span></span><br><span class=\"line\">        proxy: &#123;</span><br><span class=\"line\">            <span class=\"string\">'/api'</span>: &#123;</span><br><span class=\"line\">                <span class=\"comment\">/* 目标代理服务器地址 */</span></span><br><span class=\"line\">                <span class=\"comment\">// target: 'http://192.168.1.200:8093',</span></span><br><span class=\"line\">                <span class=\"comment\">// target: 'http://192.168.1.84:8081',</span></span><br><span class=\"line\">                <span class=\"comment\">//target: target,</span></span><br><span class=\"line\">                target: <span class=\"string\">\"http://yjzx.lddq.com:8285\"</span>,</span><br><span class=\"line\">                <span class=\"comment\">/* 允许跨域 */</span></span><br><span class=\"line\">                changeOrigin: <span class=\"literal\">true</span>,</span><br><span class=\"line\">                pathRewrite: &#123;</span><br><span class=\"line\">                    <span class=\"string\">'^/api'</span>: <span class=\"string\">''</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">    &#125;,</span><br></pre></td></tr></table></figure>\n<h2 id=\"一些问题的解决\"><a class=\"header-anchor\" href=\"#一些问题的解决\">☆</a>一些问题的解决</h2>\n<h3 id=\"运行时报错：cannot-find-module-babel-compat-data-corejs3-shipped-proposals\"><a class=\"header-anchor\" href=\"#运行时报错：cannot-find-module-babel-compat-data-corejs3-shipped-proposals\">☆</a>运行时报错：cannot find module @babel/compat-data/corejs3-shipped-proposals</h3>\n<p><img src=\"https://data.singlelovely.cn/images/20200826220807.png\" alt></p>\n<p>Node.js 版本兼容问题导致，详细问题可查看：<a href=\"https://github.com/storybookjs/storybook/issues/10477\" target=\"_blank\" rel=\"noopener\">issues</a>、<a href=\"https://stackoverflow.com/questions/61238650/i-am-having-an-issue-with-babel-building-angular-app-for-production\" target=\"_blank\" rel=\"noopener\">stackoverflow</a></p>\n<p>解决方法：</p>\n<ol>\n<li>更换 node 版本</li>\n<li>编辑 <code>package.json</code> 文件，在 <code>&quot;devDependencies&quot;</code> 下添加一行，然后执行<code>npm install</code></li>\n</ol>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\"@babel/compat-data\": \"7.9.0\"</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>控制台执行以下命令</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -D babel-loader @babel/core @babel/preset-env webpack</span><br></pre></td></tr></table></figure>\n<h3 id=\"页面控制台报错：cross-origin-read-blocking\"><a class=\"header-anchor\" href=\"#页面控制台报错：cross-origin-read-blocking\">☆</a>页面控制台报错：Cross-Origin Read Blocking</h3>\n<p><code>baseurl.config.js</code> 文件中配置的地址冲突所造成的跨域问题，将不需要的地址注释掉即可</p>\n<p>详细问题原因可以查看：<a href=\"https://stackoverflow.com/questions/61238650/i-am-having-an-issue-with-babel-building-angular-app-for-production\" target=\"_blank\" rel=\"noopener\">stackoverflow</a></p>\n<h3 id=\"运行是无法编译\"><a class=\"header-anchor\" href=\"#运行是无法编译\">☆</a>运行是无法编译</h3>\n<p>偶发性问题，可以根据报错参数，具体查询 nodejs 的<a href=\"https://nodejs.org/api/errors.html#errors_common_system_errors\" target=\"_blank\" rel=\"noopener\">文档</a></p>\n<p> <br>\n <br>\n </p>\n<blockquote>\n<p>写的比较仓促，有问题请及时反馈。</p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckec2td1j0001fkupz6ichc1p","category_id":"ckec2tdad0021fkup0amm5aaa","_id":"ckec2tdhd0066fkupu6lqhcch"},{"post_id":"ckec2td1u0003fkuprfsutbaa","category_id":"ckec2tdav0023fkup6qv7gfv5","_id":"ckec2tdhe0068fkupzprgon7e"},{"post_id":"ckec2td1z0005fkupah8ch8pn","category_id":"ckec2tdad0021fkup0amm5aaa","_id":"ckec2tdhf006afkupfkei2f2a"},{"post_id":"ckec2td230007fkupjhhqgq18","category_id":"ckec2tday0027fkup51jn5soq","_id":"ckec2tdhf006cfkuplwnytsxj"},{"post_id":"ckec2td240008fkup9lzk3h5b","category_id":"ckec2tdaz0029fkup5wa4n3d3","_id":"ckec2tdhf006efkup5m1gs9de"},{"post_id":"ckec2td260009fkupijda8kt6","category_id":"ckec2tdaz0029fkup5wa4n3d3","_id":"ckec2tdhg006gfkupy6z8digk"},{"post_id":"ckec2td28000afkuptovvpo7c","category_id":"ckec2tdaz0029fkup5wa4n3d3","_id":"ckec2tdhh006ifkupr0t7x2w4"},{"post_id":"ckec2td29000bfkup0tssz4tw","category_id":"ckec2tdaz0029fkup5wa4n3d3","_id":"ckec2tdhh006kfkup7t58mlu5"},{"post_id":"ckec2td2a000cfkupx1evx561","category_id":"ckec2tdaz0029fkup5wa4n3d3","_id":"ckec2tdhi006mfkup2s6t5p7n"},{"post_id":"ckec2td2c000dfkupbyatng7p","category_id":"ckec2tdaz0029fkup5wa4n3d3","_id":"ckec2tdhj006ofkupgebkz9xb"},{"post_id":"ckec2td2d000efkupbxb95k2e","category_id":"ckec2tdaz0029fkup5wa4n3d3","_id":"ckec2tdhk006qfkupl6vzbndr"},{"post_id":"ckec2td2e000ffkup5lcszwon","category_id":"ckec2tdaz0029fkup5wa4n3d3","_id":"ckec2tdhk006sfkupt7nfx4d1"},{"post_id":"ckec2td2g000gfkuptewcjuc7","category_id":"ckec2tdaz0029fkup5wa4n3d3","_id":"ckec2tdhl006ufkupaq74eph1"},{"post_id":"ckec2td2h000hfkup58nawfgt","category_id":"ckec2tdaz0029fkup5wa4n3d3","_id":"ckec2tdhm006wfkupu0j321w6"},{"post_id":"ckec2td2j000ifkupp9813unb","category_id":"ckec2tdaz0029fkup5wa4n3d3","_id":"ckec2tdhm006yfkupih8ry0cu"},{"post_id":"ckec2td2l000jfkupyk6m5slv","category_id":"ckec2tdbe002vfkupyt7r7a62","_id":"ckec2tdhn0070fkuptjzkfbam"},{"post_id":"ckec2td2m000kfkup25v6vj8v","category_id":"ckec2tdaz0029fkup5wa4n3d3","_id":"ckec2tdho0072fkupq2d04anj"},{"post_id":"ckec2td2n000lfkupt5i031b6","category_id":"ckec2tdaz0029fkup5wa4n3d3","_id":"ckec2tdhp0074fkuph70mlxcy"},{"post_id":"ckec2td2p000mfkupo0ox2q09","category_id":"ckec2tdbi0031fkup3odp7av7","_id":"ckec2tdhq0076fkuphunhbyxn"},{"post_id":"ckec2td2r000nfkupssc4hw69","category_id":"ckec2tdbj0033fkup7kvl2t3n","_id":"ckec2tdhq0078fkuph19u3fra"},{"post_id":"ckec2td2t000ofkupcc7yiqml","category_id":"ckec2tdbk0035fkupqlj37tvt","_id":"ckec2tdhr007afkup6dnb66ob"},{"post_id":"ckec2td2v000pfkupd5tpv53x","category_id":"ckec2tday0027fkup51jn5soq","_id":"ckec2tdhs007cfkup4v5l4czh"},{"post_id":"ckec2td2x000qfkupljngm763","category_id":"ckec2tdav0023fkup6qv7gfv5","_id":"ckec2tdht007efkupgb6zl151"},{"post_id":"ckec2td2y000rfkupg9gycglf","category_id":"ckec2tday0027fkup51jn5soq","_id":"ckec2tdhu007gfkup793nl2m4"},{"post_id":"ckec2td32000tfkupogws8svy","category_id":"ckec2tdbo003dfkupkn2daz00","_id":"ckec2tdhv007ifkupeco7vg3h"},{"post_id":"ckec2td34000ufkupknnmttoo","category_id":"ckec2tdbj0033fkup7kvl2t3n","_id":"ckec2tdhv007kfkup06b8uzzl"},{"post_id":"ckec2td36000vfkup4quxiwmq","category_id":"ckec2tday0027fkup51jn5soq","_id":"ckec2tdhw007mfkupnwevt3v8"},{"post_id":"ckec2td37000wfkupjg1cvv4c","category_id":"ckec2tday0027fkup51jn5soq","_id":"ckec2tdhx007ofkupnflwjhtm"},{"post_id":"ckec2td38000xfkupty9l91be","category_id":"ckec2tday0027fkup51jn5soq","_id":"ckec2tdhx007qfkupb1n3e971"},{"post_id":"ckec2td39000yfkupxsc2qpvw","category_id":"ckec2tdbx003nfkupdk0gsm3d","_id":"ckec2tdhy007sfkupyi42p8jt"},{"post_id":"ckec2td3b000zfkupc2soz335","category_id":"ckec2tdbx003nfkupdk0gsm3d","_id":"ckec2tdhz007ufkuplfrb6t0b"},{"post_id":"ckec2td3c0010fkup68b4uskn","category_id":"ckec2tdc0003rfkup8sraa7b3","_id":"ckec2tdhz007wfkuphbx4epbp"},{"post_id":"ckec2td3d0011fkupyfb39jks","category_id":"ckec2tdbx003nfkupdk0gsm3d","_id":"ckec2tdi1007yfkupl1j68u02"},{"post_id":"ckec2td3e0012fkup44b16a5j","category_id":"ckec2tday0027fkup51jn5soq","_id":"ckec2tdi20080fkupungrzje4"},{"post_id":"ckec2td3f0013fkupnl0mmgjm","category_id":"ckec2tday0027fkup51jn5soq","_id":"ckec2tdi20082fkupigd6075v"},{"post_id":"ckec2td3j0017fkupyde1fd26","category_id":"ckec2tdbk0035fkupqlj37tvt","_id":"ckec2tdi30084fkup1ffwiji7"},{"post_id":"ckec2td3k0018fkupxt3fx5rz","category_id":"ckec2tdc70041fkup3z0hd21w","_id":"ckec2tdi40086fkupe8ofkxr6"},{"post_id":"ckec2td3m001afkupadwucidu","category_id":"ckec2tdbk0035fkupqlj37tvt","_id":"ckec2tdi60088fkup2n6ttbig"},{"post_id":"ckec2td3n001bfkuphmswtf02","category_id":"ckec2tdc90045fkupozjnsk69","_id":"ckec2tdi7008afkupsx24751u"},{"post_id":"ckec2td3p001cfkupvdcttcmi","category_id":"ckec2tdc90045fkupozjnsk69","_id":"ckec2tdi8008cfkupt2ana3yu"},{"post_id":"ckec2td3q001dfkupp5nl7yka","category_id":"ckec2tdaz0029fkup5wa4n3d3","_id":"ckec2tdi8008efkupislqupnk"},{"post_id":"ckec2td3r001efkuph6kf4mii","category_id":"ckec2tdc90045fkupozjnsk69","_id":"ckec2tdi9008gfkupnulnp2rl"},{"post_id":"ckec2td3s001ffkupx73e919x","category_id":"ckec2tdad0021fkup0amm5aaa","_id":"ckec2tdia008ifkup1lnf91aq"},{"post_id":"ckec2td3t001gfkupg9monokd","category_id":"ckec2tdbk0035fkupqlj37tvt","_id":"ckec2tdia008kfkupncu615lr"},{"post_id":"ckec2td3v001jfkupi11td5pr","category_id":"ckec2tdbj0033fkup7kvl2t3n","_id":"ckec2tdib008mfkupwwo1l4ac"},{"post_id":"ckec2td3w001kfkupfmwo9cie","category_id":"ckec2tdci004jfkupdq8wq1r6","_id":"ckec2tdic008ofkupa4mk7yzk"},{"post_id":"ckec2td3w001lfkup1bx6ujg1","category_id":"ckec2tdbj0033fkup7kvl2t3n","_id":"ckec2tdic008qfkup60fwar6k"},{"post_id":"ckec2td3x001mfkupjj1ziq3n","category_id":"ckec2tdci004jfkupdq8wq1r6","_id":"ckec2tdid008sfkup8tccfui9"},{"post_id":"ckec2td3y001nfkupr08tmi30","category_id":"ckec2tdc70041fkup3z0hd21w","_id":"ckec2tdie008ufkupdk3cusma"},{"post_id":"ckec2td3z001ofkupsr9zw27b","category_id":"ckec2tdc90045fkupozjnsk69","_id":"ckec2tdie008wfkup2v7df7dj"},{"post_id":"ckec2td41001rfkupttpqa900","category_id":"ckec2tdc90045fkupozjnsk69","_id":"ckec2tdif008yfkupxk1ni5op"},{"post_id":"ckec2td42001sfkupebon9y4p","category_id":"ckec2tdc90045fkupozjnsk69","_id":"ckec2tdif0090fkupo3tydg0x"},{"post_id":"ckec2td43001tfkup4hk6kc9x","category_id":"ckec2tdc90045fkupozjnsk69","_id":"ckec2tdig0092fkupxg1z9iom"},{"post_id":"ckec2td44001ufkupjxezx9zb","category_id":"ckec2tdcq004zfkupte0ix9j1","_id":"ckec2tdig0094fkupc3m8dhff"},{"post_id":"ckec2td45001vfkup62eec3ss","category_id":"ckec2tdcr0051fkupm06vsm1z","_id":"ckec2tdii0096fkupbzspv64i"},{"post_id":"ckec2td46001xfkuptmy4dlai","category_id":"ckec2tdcs0053fkupiwwkbdfw","_id":"ckec2tdii0098fkupyt1yx7f5"},{"post_id":"ckec2td49001zfkuphakfcicj","category_id":"ckec2tdc90045fkupozjnsk69","_id":"ckec2tdij009afkup8ju0eh1o"},{"post_id":"ckec2td4a0020fkupyzj5ic2s","category_id":"ckec2tdav0023fkup6qv7gfv5","_id":"ckec2tdij009cfkup21f8fl3n"}],"PostTag":[{"post_id":"ckec2td1j0001fkupz6ichc1p","tag_id":"ckec2tdat0022fkuprshd4ecg","_id":"ckec2tdhd0065fkup2xt5xc63"},{"post_id":"ckec2td1j0001fkupz6ichc1p","tag_id":"ckec2tdav0024fkupjn4mep45","_id":"ckec2tdhe0067fkupsf4lx4jr"},{"post_id":"ckec2td1z0005fkupah8ch8pn","tag_id":"ckec2tdat0022fkuprshd4ecg","_id":"ckec2tdhe0069fkuppmc4903g"},{"post_id":"ckec2td230007fkupjhhqgq18","tag_id":"ckec2tdaz0028fkupnmetw8ek","_id":"ckec2tdhf006bfkupegsx2pwc"},{"post_id":"ckec2td240008fkup9lzk3h5b","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdhf006dfkup6iomhte7"},{"post_id":"ckec2td260009fkupijda8kt6","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdhg006ffkupg89fmh7n"},{"post_id":"ckec2td28000afkuptovvpo7c","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdhg006hfkupr4i3555p"},{"post_id":"ckec2td29000bfkup0tssz4tw","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdhh006jfkuplrocxb97"},{"post_id":"ckec2td2a000cfkupx1evx561","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdhi006lfkupf5o2r082"},{"post_id":"ckec2td2c000dfkupbyatng7p","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdhj006nfkupt1t7bdwq"},{"post_id":"ckec2td2d000efkupbxb95k2e","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdhj006pfkup99sfvaz4"},{"post_id":"ckec2td2e000ffkup5lcszwon","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdhk006rfkupqfz1350w"},{"post_id":"ckec2td2g000gfkuptewcjuc7","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdhl006tfkupalqdbh9x"},{"post_id":"ckec2td2h000hfkup58nawfgt","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdhm006vfkup6jcvflgv"},{"post_id":"ckec2td2h000hfkup58nawfgt","tag_id":"ckec2tdbd002ufkupx3nnflrv","_id":"ckec2tdhm006xfkupht8w3iqz"},{"post_id":"ckec2td2j000ifkupp9813unb","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdhn006zfkup2qk7syzl"},{"post_id":"ckec2td2l000jfkupyk6m5slv","tag_id":"ckec2tdbf002yfkupez0tgmba","_id":"ckec2tdho0071fkupyiu8f5t3"},{"post_id":"ckec2td2l000jfkupyk6m5slv","tag_id":"ckec2tdbh0030fkupv7cr2rvv","_id":"ckec2tdhp0073fkupl4divf46"},{"post_id":"ckec2td2m000kfkup25v6vj8v","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdhp0075fkup4igx6p82"},{"post_id":"ckec2td2m000kfkup25v6vj8v","tag_id":"ckec2tdbk0034fkupzrw2npbz","_id":"ckec2tdhq0077fkupqkraq6vw"},{"post_id":"ckec2td2n000lfkupt5i031b6","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdhr0079fkupyb92i2bf"},{"post_id":"ckec2td2n000lfkupt5i031b6","tag_id":"ckec2tdav0024fkupjn4mep45","_id":"ckec2tdhs007bfkup87zl78nm"},{"post_id":"ckec2td2r000nfkupssc4hw69","tag_id":"ckec2tdbn003afkupogx40hz5","_id":"ckec2tdht007dfkup5k0hnz89"},{"post_id":"ckec2td2t000ofkupcc7yiqml","tag_id":"ckec2tdbo003cfkupswne2p09","_id":"ckec2tdht007ffkupjlzpdxtj"},{"post_id":"ckec2td2t000ofkupcc7yiqml","tag_id":"ckec2tdbp003efkupit2knvzx","_id":"ckec2tdhu007hfkupgoitduw4"},{"post_id":"ckec2td2t000ofkupcc7yiqml","tag_id":"ckec2tdbr003gfkupt7divdaw","_id":"ckec2tdhv007jfkupt2arfsln"},{"post_id":"ckec2td2v000pfkupd5tpv53x","tag_id":"ckec2tdaz0028fkupnmetw8ek","_id":"ckec2tdhw007lfkupbg4bzohm"},{"post_id":"ckec2td2x000qfkupljngm763","tag_id":"ckec2tdbv003kfkupw7lwlfw3","_id":"ckec2tdhw007nfkup5sfu0f3h"},{"post_id":"ckec2td2x000qfkupljngm763","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdhx007pfkupytvdjbn7"},{"post_id":"ckec2td2y000rfkupg9gycglf","tag_id":"ckec2tdaz0028fkupnmetw8ek","_id":"ckec2tdhy007rfkupwgwlio8q"},{"post_id":"ckec2td30000sfkupkyq5ok5z","tag_id":"ckec2tdbz003qfkupuciu7447","_id":"ckec2tdhy007tfkupatyjls8l"},{"post_id":"ckec2td32000tfkupogws8svy","tag_id":"ckec2tdc0003sfkup3cejwbgt","_id":"ckec2tdhz007vfkup6rfrxeqb"},{"post_id":"ckec2td34000ufkupknnmttoo","tag_id":"ckec2tdbn003afkupogx40hz5","_id":"ckec2tdi0007xfkupi5vo1p3p"},{"post_id":"ckec2td36000vfkup4quxiwmq","tag_id":"ckec2tdaz0028fkupnmetw8ek","_id":"ckec2tdi1007zfkup8zxxof91"},{"post_id":"ckec2td37000wfkupjg1cvv4c","tag_id":"ckec2tdaz0028fkupnmetw8ek","_id":"ckec2tdi20081fkupw6ulxuqm"},{"post_id":"ckec2td38000xfkupty9l91be","tag_id":"ckec2tdaz0028fkupnmetw8ek","_id":"ckec2tdi30083fkup965f9b9n"},{"post_id":"ckec2td39000yfkupxsc2qpvw","tag_id":"ckec2tdbp003efkupit2knvzx","_id":"ckec2tdi40085fkupwnukeaxa"},{"post_id":"ckec2td39000yfkupxsc2qpvw","tag_id":"ckec2tdav0024fkupjn4mep45","_id":"ckec2tdi50087fkup328oj4hv"},{"post_id":"ckec2td3b000zfkupc2soz335","tag_id":"ckec2tdbp003efkupit2knvzx","_id":"ckec2tdi70089fkupx342y3cx"},{"post_id":"ckec2td3c0010fkup68b4uskn","tag_id":"ckec2tdcb0048fkupruehea7q","_id":"ckec2tdi7008bfkup3mo0b9nf"},{"post_id":"ckec2td3d0011fkupyfb39jks","tag_id":"ckec2tdbp003efkupit2knvzx","_id":"ckec2tdi8008dfkupy3m76rsb"},{"post_id":"ckec2td3d0011fkupyfb39jks","tag_id":"ckec2tdbo003cfkupswne2p09","_id":"ckec2tdi9008ffkupvgewit1d"},{"post_id":"ckec2td3e0012fkup44b16a5j","tag_id":"ckec2tdaz0028fkupnmetw8ek","_id":"ckec2tdi9008hfkupoqlnb0du"},{"post_id":"ckec2td3f0013fkupnl0mmgjm","tag_id":"ckec2tdaz0028fkupnmetw8ek","_id":"ckec2tdia008jfkupqcq3lukq"},{"post_id":"ckec2td3g0014fkupfj2p6xky","tag_id":"ckec2tdch004ifkupwn0yrqr5","_id":"ckec2tdib008lfkup7ucyatyz"},{"post_id":"ckec2td3g0014fkupfj2p6xky","tag_id":"ckec2tdbn003afkupogx40hz5","_id":"ckec2tdib008nfkup0zqrhdn6"},{"post_id":"ckec2td3j0017fkupyde1fd26","tag_id":"ckec2tdbo003cfkupswne2p09","_id":"ckec2tdic008pfkupllut9uu5"},{"post_id":"ckec2td3j0017fkupyde1fd26","tag_id":"ckec2tdbp003efkupit2knvzx","_id":"ckec2tdid008rfkuprshjqw5w"},{"post_id":"ckec2td3k0018fkupxt3fx5rz","tag_id":"ckec2tdcm004qfkup4a1tncug","_id":"ckec2tdid008tfkupfe1053w0"},{"post_id":"ckec2td3k0018fkupxt3fx5rz","tag_id":"ckec2tdcn004sfkupjwip6y8v","_id":"ckec2tdie008vfkup1ur8etep"},{"post_id":"ckec2td3m001afkupadwucidu","tag_id":"ckec2tdbk0034fkupzrw2npbz","_id":"ckec2tdif008xfkupiro2vtu1"},{"post_id":"ckec2td3m001afkupadwucidu","tag_id":"ckec2tdco004wfkupwu77rtgv","_id":"ckec2tdif008zfkup6grkhvsb"},{"post_id":"ckec2td3n001bfkuphmswtf02","tag_id":"ckec2tdcp004yfkup0nji6bns","_id":"ckec2tdig0091fkupbauxlct2"},{"post_id":"ckec2td3n001bfkuphmswtf02","tag_id":"ckec2tdcq0050fkup4nhjxubf","_id":"ckec2tdig0093fkupqia0sk2y"},{"post_id":"ckec2td3p001cfkupvdcttcmi","tag_id":"ckec2tdcr0052fkupy8eowhua","_id":"ckec2tdih0095fkupovdjv6k9"},{"post_id":"ckec2td3p001cfkupvdcttcmi","tag_id":"ckec2tdcs0054fkupgnfa5ve1","_id":"ckec2tdii0097fkupev2s7xk9"},{"post_id":"ckec2td3p001cfkupvdcttcmi","tag_id":"ckec2tdct0056fkup5rd021yf","_id":"ckec2tdij0099fkupiuirqqnp"},{"post_id":"ckec2td3q001dfkupp5nl7yka","tag_id":"ckec2tdb0002afkup0dpbmcco","_id":"ckec2tdij009bfkup44vdvw1i"},{"post_id":"ckec2td3q001dfkupp5nl7yka","tag_id":"ckec2tdav0024fkupjn4mep45","_id":"ckec2tdik009dfkupc2p4a54q"},{"post_id":"ckec2td3q001dfkupp5nl7yka","tag_id":"ckec2tdbk0034fkupzrw2npbz","_id":"ckec2tdik009efkuplo96gryd"},{"post_id":"ckec2td3r001efkuph6kf4mii","tag_id":"ckec2tdcr0052fkupy8eowhua","_id":"ckec2tdik009ffkupgc7zsw2f"},{"post_id":"ckec2td3r001efkuph6kf4mii","tag_id":"ckec2tdcs0054fkupgnfa5ve1","_id":"ckec2tdik009gfkupqdp7s091"},{"post_id":"ckec2td3r001efkuph6kf4mii","tag_id":"ckec2tdct0056fkup5rd021yf","_id":"ckec2tdil009hfkupwxunbaan"},{"post_id":"ckec2td3s001ffkupx73e919x","tag_id":"ckec2tdat0022fkuprshd4ecg","_id":"ckec2tdil009ifkupxykx6fs4"},{"post_id":"ckec2td3t001gfkupg9monokd","tag_id":"ckec2tdco004wfkupwu77rtgv","_id":"ckec2tdil009jfkupu0r2lmdv"},{"post_id":"ckec2td3t001hfkuptf09vhcf","tag_id":"ckec2tdcz005gfkupl0cbe62f","_id":"ckec2tdil009kfkupdnp0k9ei"},{"post_id":"ckec2td3t001hfkuptf09vhcf","tag_id":"ckec2tdd0005hfkupc80g2w7i","_id":"ckec2tdim009lfkup18v447lj"},{"post_id":"ckec2td3u001ifkup7rej5pmp","tag_id":"ckec2tdbn003afkupogx40hz5","_id":"ckec2tdim009mfkuprq3uuhws"},{"post_id":"ckec2td3u001ifkup7rej5pmp","tag_id":"ckec2tdch004ifkupwn0yrqr5","_id":"ckec2tdim009nfkup92rhbezc"},{"post_id":"ckec2td3v001jfkupi11td5pr","tag_id":"ckec2tdbn003afkupogx40hz5","_id":"ckec2tdim009ofkupxjqmfein"},{"post_id":"ckec2td3w001kfkupfmwo9cie","tag_id":"ckec2tdd2005lfkup7e2z5dja","_id":"ckec2tdim009pfkupjdwswb9b"},{"post_id":"ckec2td3w001lfkup1bx6ujg1","tag_id":"ckec2tdbn003afkupogx40hz5","_id":"ckec2tdin009qfkupgahl8xtt"},{"post_id":"ckec2td3x001mfkupjj1ziq3n","tag_id":"ckec2tdd2005lfkup7e2z5dja","_id":"ckec2tdin009rfkup7msux9p4"},{"post_id":"ckec2td3z001ofkupsr9zw27b","tag_id":"ckec2tdcq0050fkup4nhjxubf","_id":"ckec2tdin009sfkupw4ey4xtj"},{"post_id":"ckec2td3z001ofkupsr9zw27b","tag_id":"ckec2tdav0024fkupjn4mep45","_id":"ckec2tdin009tfkupz3cnohgs"},{"post_id":"ckec2td40001pfkupc13t8cs7","tag_id":"ckec2tdch004ifkupwn0yrqr5","_id":"ckec2tdin009ufkupjn7i7wbf"},{"post_id":"ckec2td40001pfkupc13t8cs7","tag_id":"ckec2tdbn003afkupogx40hz5","_id":"ckec2tdio009vfkupdi1ccump"},{"post_id":"ckec2td41001rfkupttpqa900","tag_id":"ckec2tdcq0050fkup4nhjxubf","_id":"ckec2tdio009wfkuppt9ciw7e"},{"post_id":"ckec2td42001sfkupebon9y4p","tag_id":"ckec2tdcq0050fkup4nhjxubf","_id":"ckec2tdio009xfkupdhtm2e1d"},{"post_id":"ckec2td42001sfkupebon9y4p","tag_id":"ckec2tdav0024fkupjn4mep45","_id":"ckec2tdio009yfkupyg1ua1m2"},{"post_id":"ckec2td43001tfkup4hk6kc9x","tag_id":"ckec2tdcq0050fkup4nhjxubf","_id":"ckec2tdio009zfkupkxkdq6ey"},{"post_id":"ckec2td43001tfkup4hk6kc9x","tag_id":"ckec2tdav0024fkupjn4mep45","_id":"ckec2tdio00a0fkuphqmyt4gd"},{"post_id":"ckec2td45001vfkup62eec3ss","tag_id":"ckec2tdd8005xfkup0cv1fs3p","_id":"ckec2tdip00a1fkupxsf34lqe"},{"post_id":"ckec2td45001vfkup62eec3ss","tag_id":"ckec2tdd9005yfkupxbuq8v6m","_id":"ckec2tdip00a2fkupy3w1ebo3"},{"post_id":"ckec2td46001xfkuptmy4dlai","tag_id":"ckec2tdd9005zfkup00ahlncd","_id":"ckec2tdip00a3fkupiwdwvqes"},{"post_id":"ckec2td46001xfkuptmy4dlai","tag_id":"ckec2tdbv003kfkupw7lwlfw3","_id":"ckec2tdip00a4fkuppfir6hkh"},{"post_id":"ckec2td49001zfkuphakfcicj","tag_id":"ckec2tdct0056fkup5rd021yf","_id":"ckec2tdip00a5fkuprg83lz8v"},{"post_id":"ckec2td49001zfkuphakfcicj","tag_id":"ckec2tdcr0052fkupy8eowhua","_id":"ckec2tdiq00a6fkupa97i0l0b"},{"post_id":"ckec2td49001zfkuphakfcicj","tag_id":"ckec2tdcs0054fkupgnfa5ve1","_id":"ckec2tdiq00a7fkupncyiem6j"},{"post_id":"ckec2td4a0020fkupyzj5ic2s","tag_id":"ckec2tdav0024fkupjn4mep45","_id":"ckec2tdiq00a8fkupjrt3ntip"}],"Tag":[{"name":"Android","_id":"ckec2tdat0022fkuprshd4ecg"},{"name":"学习","_id":"ckec2tdav0024fkupjn4mep45"},{"name":"hexo","_id":"ckec2tdaz0028fkupnmetw8ek"},{"name":"Java","_id":"ckec2tdb0002afkup0dpbmcco"},{"name":"Java开发工具","_id":"ckec2tdbd002ufkupx3nnflrv"},{"name":"MySQL","_id":"ckec2tdbf002yfkupez0tgmba"},{"name":"数据库","_id":"ckec2tdbh0030fkupv7cr2rvv"},{"name":"教程","_id":"ckec2tdbk0034fkupzrw2npbz"},{"name":"python","_id":"ckec2tdbn003afkupogx40hz5"},{"name":"Ubuntu","_id":"ckec2tdbo003cfkupswne2p09"},{"name":"Linux","_id":"ckec2tdbp003efkupit2knvzx"},{"name":"uefi","_id":"ckec2tdbr003gfkupt7divdaw"},{"name":"C/C++","_id":"ckec2tdbv003kfkupw7lwlfw3"},{"name":"Testing","_id":"ckec2tdbz003qfkupuciu7447"},{"name":"docker","_id":"ckec2tdc0003sfkup3cejwbgt"},{"name":"vps","_id":"ckec2tdcb0048fkupruehea7q"},{"name":"爬虫","_id":"ckec2tdch004ifkupwn0yrqr5"},{"name":"梦想","_id":"ckec2tdcm004qfkup4a1tncug"},{"name":"生活","_id":"ckec2tdcn004sfkupjwip6y8v"},{"name":"windows","_id":"ckec2tdco004wfkupwu77rtgv"},{"name":"免流","_id":"ckec2tdcp004yfkup0nji6bns"},{"name":"网络","_id":"ckec2tdcq0050fkup4nhjxubf"},{"name":"eNSP","_id":"ckec2tdcr0052fkupy8eowhua"},{"name":"ICT","_id":"ckec2tdcs0054fkupgnfa5ve1"},{"name":"数据通信","_id":"ckec2tdct0056fkup5rd021yf"},{"name":"励志","_id":"ckec2tdcz005gfkupl0cbe62f"},{"name":"情感","_id":"ckec2tdd0005hfkupc80g2w7i"},{"name":"汇编","_id":"ckec2tdd2005lfkup7e2z5dja"},{"name":"区块链","_id":"ckec2tdd8005xfkup0cv1fs3p"},{"name":"比特币","_id":"ckec2tdd9005yfkupxbuq8v6m"},{"name":"课程设计","_id":"ckec2tdd9005zfkup00ahlncd"}]}}